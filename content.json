{"meta":{"title":"우와팬더의 블로그","subtitle":null,"description":"데이터사이언스를 공부합니다","author":"우와팬더","url":"http://yoursite.com"},"pages":[{"title":"about","date":"2018-07-11T12:02:32.000Z","updated":"2018-07-11T12:04:28.000Z","comments":true,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":"데이터사이언스를 공부하고 있습니다."},{"title":"Categories","date":"2018-08-20T17:20:32.473Z","updated":"2018-06-26T16:32:24.000Z","comments":true,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""},{"title":"Tags","date":"2018-08-20T17:20:32.484Z","updated":"2018-06-26T16:32:24.000Z","comments":true,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"2018-08-23-TIL","slug":"2018-08-23-TIL","date":"2018-08-23T09:44:00.000Z","updated":"2018-08-23T14:55:02.910Z","comments":true,"path":"2018/08/23/2018-08-23-TIL/","link":"","permalink":"http://yoursite.com/2018/08/23/2018-08-23-TIL/","excerpt":"","text":"공부한 것 &amp; 리뷰 패스트캠퍼스 데이터사이언스스쿨 종강 4개월 간의 데이터사이언스스쿨 과정이 공식적으로 끝이 났다. 4개월동안 너무 빨리 많은 것을 배워서 복습해서 내것으로 만들어야될 것이 잔뜩 쌓였다. 페이스를 잃지 말고 계속 공부를 해나가야지. 개인 프로젝트: 사진 데이터 전처리 작업 데이터 전처리 시간이 길어서 남자 아이돌은 잠시 미뤄두고 여자 아이돌만으로 먼저 진행해보려고 한다. 여자 아이돌들의 사진에서 얼굴 부분을 crop하는 작업 완료.autocrop이라는 라이브러리를 이용했는데, 얼굴이 인식이 안되는 경우도 많고 해서 검수와 수정 작업이 꽤나 필요하다. 100장씩 검색 후에 train data로 못 쓰는 사진을 지우다보니 가수마다 사진 개수도 다른 상태인데, 일단은 가지고 있는 사진으로만 전처리를 해본 후 모델링을 시도해봐야겠다. 내일 공부할 것 개인 프로젝트: 여자아이돌 분류 모델링 이번 주에 공부할 것 개인 프로젝트: 아이돌 사진 이미지 전처리 이미지 분류 모델링 DSS: 수학 &lt;54절. 신경망 성능 개선&gt; 복습하기 DSS: 수학 &lt;55절. CNN&gt; 복습하기 DSS: 수학 &lt;57절. GAN&gt; 복습하기 인성면접 답안 대비 (개인 신상, 취미, 특기 관련 질문) 관심 기업 조사","categories":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/categories/TIL-Today-I-Learned/"}],"tags":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/tags/TIL-Today-I-Learned/"}]},{"title":"2018-08-20-TIL","slug":"2018-08-20-TIL","date":"2018-08-20T17:11:09.000Z","updated":"2018-08-23T12:07:18.890Z","comments":true,"path":"2018/08/21/2018-08-20-TIL/","link":"","permalink":"http://yoursite.com/2018/08/21/2018-08-20-TIL/","excerpt":"","text":"공부한 것 &amp; 리뷰 9/3 정도에나 픽업이 가능하다던 맥북이 갑자기 오늘 왔단다!!케이스나 보호 장비 준비도 아직 못했는데!!!!!! 왜 이렇게 빨리??ㅋㅋ조금 당황스럽지만 애플스토어로 달려가 픽업을 해왔다. 계속 세팅하고 이전 노트북 데이터 정리하고 하느라 정신이 없다 ㅎㅎ 개인 프로젝트: 사진 데이터 전처리 작업 사진을 보면서 여러 사람이 찍힌 사진, 정면이 아닌 사진, 선글라스 등으로 얼굴이 가려진 사진 등을 걸러내고 있는데 확실하긴 하지만 자동으로 하는 방법이 분명 있을 것 같다 ㅎㅎㅎ google vision API로 얼굴 각도가 돌아가 있는 사진은 걸러낼 수 있는 것 같던데 찾아봐야겠다. 빨리 모델링을 해보고 싶다 ㅜ 내일 공부할 것 개인 프로젝트: 사진 데이터 전처리 작업 이번 주에 공부할 것 분류 팀 프로젝트 &lt;블레이드앤소울 유저 이탈 예측&gt; feature engineering 발전시키기 개인 프로젝트: 아이돌 사진 이미지 전처리 이미지 분류 모델링 DSS: 프로그래밍 &lt;Database - SQL&gt; 복습하기 DSS: 프로그래밍 &lt;Database - noSQL&gt; 복습하기 DSS: 프로그래밍 &lt;웹 크롤링&gt; 복습하기 DSS: 수학 &lt;54절. 신경망 성능 개선&gt; 복습하기 DSS: 수학 &lt;55절. CNN&gt; 복습하기 DSS: 수학 &lt;57절. GAN&gt; 복습하기 인성면접 답안 대비 (개인 신상, 취미, 특기 관련 질문) 관심 기업 조사","categories":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/categories/TIL-Today-I-Learned/"}],"tags":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/tags/TIL-Today-I-Learned/"}]},{"title":"2018-08-19-TIL","slug":"2018-08-19-TIL","date":"2018-08-19T14:49:50.000Z","updated":"2018-08-21T02:20:41.803Z","comments":true,"path":"2018/08/19/2018-08-19-TIL/","link":"","permalink":"http://yoursite.com/2018/08/19/2018-08-19-TIL/","excerpt":"","text":"공부한 것 &amp; 리뷰 파이콘2018 컨퍼런스 오늘까지 3일동안 파이콘 2018에 참가했는데 재미있는 발표도 많았고 분위기도 즐겁고 좋은 경험이었던 것 같다. 궁금했던 네트워크 분석에 관한 발표도 있어서 흥미로웠고, 다양한 분야에 있는 사람들이 파이썬을 이용해서 문제를 해결한 이야기들이 재미있었던 것 같다 (self 사생활 침해, 뉴스 댓글은 정말 사람들의 목소리일까? 등) 파이콘 2018을 즐기느라 집에 오면 너무 피곤해서 개인프로젝트 진도를 못 나가고 있다 ㅜ 내일부터 달려야지 내일 공부할 것 개인 프로젝트: 사진 데이터 전처리 작업 이번 주에 공부할 것 파이콘 2018에 참여해서 여러가지 배워오기!! 분류 팀 프로젝트 &lt;블레이드앤소울 유저 이탈 예측&gt; 트러블슈팅까지의 내용으로 포트폴리오 만들기 개인 프로젝트: 아이돌 사진 크롤링 이미지 전처리 DSS: 프로그래밍 &lt;Database - SQL&gt; 복습하기 DSS: 프로그래밍 &lt;Database - noSQL&gt; 복습하기 DSS: 프로그래밍 &lt;웹 크롤링&gt; 복습하기 DSS: 수학 &lt;54절. 신경망 성능 개선&gt; 복습하기 DSS: 수학 &lt;55절. CNN&gt; 복습하기 DSS: 수학 &lt;57절. GAN&gt; 복습하기 인성면접 답안 대비 (개인 신상, 취미, 특기 관련 질문) 관심 기업 조사 이력서 정리","categories":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/categories/TIL-Today-I-Learned/"}],"tags":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/tags/TIL-Today-I-Learned/"}]},{"title":"2018-08-18-TIL","slug":"2018-08-18-TIL","date":"2018-08-18T14:10:46.000Z","updated":"2018-08-21T02:16:07.378Z","comments":true,"path":"2018/08/18/2018-08-18-TIL/","link":"","permalink":"http://yoursite.com/2018/08/18/2018-08-18-TIL/","excerpt":"","text":"공부한 것 &amp; 리뷰 파이콘2018 컨퍼런스 생각보다 규모가 굉장히 컸다. 파이썬 커뮤니티라는 것을 처음으로 체감할 수 있었던 것 같다. 발표들도 재미있었고, 후원기업들이 부스를 차려놓고 채용 정보를 알리는 경우도 많았는데, 준비가 부족하게 느껴져 적극적으로 물어보지 못해서 아쉽다. 내일 공부할 것 개인 프로젝트: 사진 데이터 전처리 작업 파이콘2018 참가 이번 주에 공부할 것 파이콘 2018에 참여해서 여러가지 배워오기!! 분류 팀 프로젝트 &lt;블레이드앤소울 유저 이탈 예측&gt; 트러블슈팅까지의 내용으로 포트폴리오 만들기 개인 프로젝트: 아이돌 사진 크롤링 이미지 전처리 DSS: 프로그래밍 &lt;Database - SQL&gt; 복습하기 DSS: 프로그래밍 &lt;Database - noSQL&gt; 복습하기 DSS: 프로그래밍 &lt;웹 크롤링&gt; 복습하기 DSS: 수학 &lt;54절. 신경망 성능 개선&gt; 복습하기 DSS: 수학 &lt;55절. CNN&gt; 복습하기 DSS: 수학 &lt;57절. GAN&gt; 복습하기 인성면접 답안 대비 (개인 신상, 취미, 특기 관련 질문) 관심 기업 조사 이력서 정리","categories":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/categories/TIL-Today-I-Learned/"}],"tags":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/tags/TIL-Today-I-Learned/"}]},{"title":"2018-08-17-TIL","slug":"2018-08-17-TIL","date":"2018-08-17T15:25:25.000Z","updated":"2018-08-17T15:34:55.000Z","comments":true,"path":"2018/08/18/2018-08-17-TIL/","link":"","permalink":"http://yoursite.com/2018/08/18/2018-08-17-TIL/","excerpt":"","text":"공부한 것 &amp; 리뷰 개인 프로젝트: 사진 데이터 웹크롤링 크롤링 후에 걸러야할 사진들, 수작업으로 확인하면서 처리할 부분들이 많군 파이콘2018 튜토리얼: 미운 우리 kaggle 참가 유용한 정보들을 건진 것 같다. Feature engineering에도 데이터 타입과 알고리즘에 따라 다양한 방법이 있다는 것을 알게 되었다. 새로 알게된 개념과 정보들에 대해 추가 학습이 필수! 빅콘테스트 팀프로젝트에 적용할 수 있는 부분도 꽤 있을 것 같다. 내일 공부할 것 개인 프로젝트: 사진 데이터 전처리 작업 파이콘2018 참가 이번 주에 공부할 것 파이콘 2018에 참여해서 여러가지 배워오기!! 분류 팀 프로젝트 &lt;블레이드앤소울 유저 이탈 예측&gt; 트러블슈팅까지의 내용으로 포트폴리오 만들기 개인 프로젝트: 아이돌 사진 크롤링 이미지 전처리 DSS: 프로그래밍 &lt;Database - SQL&gt; 복습하기 DSS: 프로그래밍 &lt;Database - noSQL&gt; 복습하기 DSS: 프로그래밍 &lt;웹 크롤링&gt; 복습하기 DSS: 수학 &lt;54절. 신경망 성능 개선&gt; 복습하기 DSS: 수학 &lt;55절. CNN&gt; 복습하기 DSS: 수학 &lt;57절. GAN&gt; 복습하기 인성면접 답안 대비 (개인 신상, 취미, 특기 관련 질문) 관심 기업 조사 이력서 정리","categories":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/categories/TIL-Today-I-Learned/"}],"tags":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/tags/TIL-Today-I-Learned/"}]},{"title":"2018-08-16-TIL","slug":"2018-08-16-TIL","date":"2018-08-16T15:21:49.000Z","updated":"2018-08-17T15:30:40.000Z","comments":true,"path":"2018/08/17/2018-08-16-TIL/","link":"","permalink":"http://yoursite.com/2018/08/17/2018-08-16-TIL/","excerpt":"","text":"공부한 것 &amp; 리뷰 개인 프로젝트: 사진 데이터 웹크롤링 모의 기술 면접 알고리즘 문제와 개념 질문으로 이루어진 모의 면접. 알고리즘은 쉬운 문제를 선택했는데 꼼꼼하게 챙기지 못한 부분이 있었고, 개념 문제는 대참사 ㅜ ㅋㅋ. 말로 설명할 수 있도록 프로그래밍과 데이터 분석 수업 내용들을 복습해야겠다. 내일 공부할 것 개인 프로젝트: 사진 데이터 웹크롤링 계속 파이콘2018 튜토리얼: 미운 우리 kaggle 참가 이번 주에 공부할 것 파이콘 2018에 참여해서 여러가지 배워오기!! 분류 팀 프로젝트 &lt;블레이드앤소울 유저 이탈 예측&gt; 트러블슈팅까지의 내용으로 포트폴리오 만들기 개인 프로젝트: 아이돌 사진 크롤링 &amp; 이미지 전처리 DSS: 프로그래밍 &lt;Database - SQL&gt; 복습하기 DSS: 프로그래밍 &lt;Database - noSQL&gt; 복습하기 DSS: 프로그래밍 &lt;웹 크롤링&gt; 복습하기 DSS: 수학 &lt;54절. 신경망 성능 개선&gt; 복습하기 DSS: 수학 &lt;55절. CNN&gt; 복습하기 DSS: 수학 &lt;57절. GAN&gt; 복습하기 인성면접 답안 대비 (개인 신상, 취미, 특기 관련 질문) 관심 기업 조사 이력서 정리","categories":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/categories/TIL-Today-I-Learned/"}],"tags":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/tags/TIL-Today-I-Learned/"}]},{"title":"2018-08-15-TIL","slug":"2018-08-15-TIL","date":"2018-08-15T16:04:02.000Z","updated":"2018-08-15T16:06:43.000Z","comments":true,"path":"2018/08/16/2018-08-15-TIL/","link":"","permalink":"http://yoursite.com/2018/08/16/2018-08-15-TIL/","excerpt":"","text":"공부한 것 &amp; 리뷰 분류 팀프로젝트의 포트폴리오 정리 이력서 정리 내일 공부할 것 개인 프로젝트: 사진 데이터 웹크롤링 알고리즘 공부 모의 기술 면접 이번 주에 공부할 것 파이콘 2018에 참여해서 여러가지 배워오기!! 분류 팀 프로젝트 &lt;블레이드앤소울 유저 이탈 예측&gt; activity에서 새로운 변수 만들어 분석하기 트러블슈팅까지의 내용으로 포트폴리오 만들기 DSS: 프로그래밍 &lt;Database - SQL&gt; 복습하기 DSS: 프로그래밍 &lt;Database - noSQL&gt; 복습하기 DSS: 프로그래밍 &lt;웹 크롤링&gt; 복습하기 DSS: 수학 &lt;54절. 신경망 성능 개선&gt; 복습하기 DSS: 수학 &lt;55절. CNN&gt; 복습하기 DSS: 수학 &lt;57절. GAN&gt; 복습하기 인성면접 답안 대비 (개인 신상, 취미, 특기 관련 질문) 관심 기업 조사 이력서 정리","categories":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/categories/TIL-Today-I-Learned/"}],"tags":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/tags/TIL-Today-I-Learned/"}]},{"title":"2018-08-14-TIL","slug":"2018-08-14-TIL","date":"2018-08-14T12:02:37.000Z","updated":"2018-08-14T12:10:28.000Z","comments":true,"path":"2018/08/14/2018-08-14-TIL/","link":"","permalink":"http://yoursite.com/2018/08/14/2018-08-14-TIL/","excerpt":"","text":"공부한 것 &amp; 리뷰 nbextension과 rise를 설치해서 jupyter notebook을 presentation에 적합하도록 slideshow를 만드는 방법을 실습했다. 손이 많이 가는 작업인 것 같긴 하지만 확실히 jupyter notebook 상에서 바로 presentation에 필요한 부분만 골라서 slide로 만들 수 있는 점은 좋은 것 같다. 다만 나는 몇 가지 더 편리한 점들이 있어서 주로 jupyter lab을 사용하고 있는데, 아직 jupyter lab에서는 rise를 이용한 live slideshow를 쓸 수 없는 것 같아 아쉽다! 분류 팀프로젝트의 포트폴리오 정리 작업 중 일단은 ppt로 documentation을 하고 작업 코드는 jupyter notebook 파일로 보충하는 식으로 포트폴리오를 작업하고 있다. google colab로 ipynb 파일을 열어 링크를 ppt에 걸어주면 ppt와 jupyter notebook 파일을 연결할 수 있어 유용할 것 같다! 내일 공부할 것 분류 팀프로젝트 포트폴리오 정리 이력서 정리 - 프로젝트 부분 등 개인 프로젝트: 사진 데이터 웹크롤링 알고리즘 공부 이번 주에 공부할 것 분류 팀 프로젝트 &lt;블레이드앤소울 유저 이탈 예측&gt; activity에서 새로운 변수 만들어 분석하기 DSS: 프로그래밍 &lt;Database - SQL&gt; 복습하기 DSS: 프로그래밍 &lt;Database - noSQL&gt; 복습하기 DSS: 프로그래밍 &lt;웹 크롤링&gt; 복습하기 DSS: 수학 &lt;54절. 신경망 성능 개선&gt; 복습하기 DSS: 수학 &lt;55절. CNN&gt; 복습하기 DSS: 수학 &lt;57절. GAN&gt; 복습하기 인성면접 답안 대비 (개인 신상, 취미, 특기 관련 질문) 관심 기업 조사","categories":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/categories/TIL-Today-I-Learned/"}],"tags":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/tags/TIL-Today-I-Learned/"}]},{"title":"2018-08-13-TIL","slug":"2018-08-13-TIL","date":"2018-08-13T15:10:30.000Z","updated":"2018-08-13T15:17:11.000Z","comments":true,"path":"2018/08/14/2018-08-13-TIL/","link":"","permalink":"http://yoursite.com/2018/08/14/2018-08-13-TIL/","excerpt":"","text":"공부한 것 &amp; 리뷰 DSS 수업: 수학 시계열분석 시계열 분석은 일단은 우선시 관심을 두고 있는 분야는 아니지만 종강 전에 마지막으로 수업을 들을 수 있는 부분은 좋은 것 같다. SQL syntax 복습 블로그 관리 포스팅을 정리해나가면서 markdown 사용법에 좀 더 익숙해짐 내일 공부할 것 개인 프로젝트: 사진 데이터 웹크롤링 알고리즘 공부 이번 주에 공부할 것 분류 팀 프로젝트 &lt;블레이드앤소울 유저 이탈 예측&gt; activity에서 새로운 변수 만들어 분석하기 DSS: 프로그래밍 &lt;Database - SQL&gt; 복습하기 DSS: 프로그래밍 &lt;Database - noSQL&gt; 복습하기 DSS: 프로그래밍 &lt;웹 크롤링&gt; 복습하기 DSS: 수학 &lt;54절. 신경망 성능 개선&gt; 복습하기 DSS: 수학 &lt;55절. CNN&gt; 복습하기 DSS: 수학 &lt;57절. GAN&gt; 복습하기 인성면접 답안 대비 (개인 신상, 취미, 특기 관련 질문) 관심 기업 조사","categories":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/categories/TIL-Today-I-Learned/"}],"tags":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/tags/TIL-Today-I-Learned/"}]},{"title":"Jupyter Notebook Tip - 여러 개 output을 한번에 보는 방법","slug":"Blog_jupyter_tip","date":"2018-08-13T09:02:35.000Z","updated":"2018-08-17T15:35:07.000Z","comments":true,"path":"2018/08/13/Blog_jupyter_tip/","link":"","permalink":"http://yoursite.com/2018/08/13/Blog_jupyter_tip/","excerpt":"","text":"Jupyter Notebook Tip: 여러 개의 output을 한 번에 보는 방법Jupyter notebook 파일을 hexo 블로그에 올리는 방법을 계속 googling 하던 중 괜찮은 팁을 발견하게 되었다. 그것은 바로 jupyter notebook의 한 cell안에서 여러 개의 output을 확인할 수 있는 방법이다. 1. jupyter notebook의 기본 settingjupyter notebook에서는 한 cell 안에서 결과값이 여러 번 나오게 될 경우 맨 마지막에 있는 output만 출력이 되게 된다. 여러 개의 output을 함께 출력해서 비교하고 싶다거나 하는 경우에도 별도의 cell로 써주어야 하기 때문에 이게 은근히 성가신 부분이다. 지금까지는 jupyter notebook에서 한 셀에서 여러 가지 결과값을 보고 싶다면 아래와 같이 두 가지 방법 중 하나를 취해야 했다. 1) 위쪽의 output은 print문을 이용해 출력 2) 마지막 줄에 한꺼번에 명령을 실행 2. jupyter notebook에서 여러 output을 한 번에 출력하기아래의 코드를 실행하면 이제 여러 줄의 output을 한 번에 출력할 수 있게 된다.12from IPython.core.interactiveshell import InteractiveShellInteractiveShell.ast_node_interactivity = \"all\" 짠! 아래와 같이 여러 개의 output을 한 번에 볼 수 있게 되었다. 요약 jupyter notebook에서는 한 cell에서 output을 마지막 하나만 출력할 수 있어 불편했다. 아래 코드로 패키지를 불러와 설정을 해주면 한 cell 내에서 여러 개의 결과값을 모두 출력할 수 있게 된다.12from IPython.core.interactiveshell import InteractiveShellInteractiveShell.ast_node_interactivity = \"all\"","categories":[{"name":"Blog","slug":"Blog","permalink":"http://yoursite.com/categories/Blog/"}],"tags":[{"name":"jupyter notebook","slug":"jupyter-notebook","permalink":"http://yoursite.com/tags/jupyter-notebook/"},{"name":"python","slug":"python","permalink":"http://yoursite.com/tags/python/"}]},{"title":"2018-08-11-TIL","slug":"2018-08-11-TIL","date":"2018-08-11T15:42:38.000Z","updated":"2018-08-12T15:44:44.000Z","comments":true,"path":"2018/08/12/2018-08-11-TIL/","link":"","permalink":"http://yoursite.com/2018/08/12/2018-08-11-TIL/","excerpt":"","text":"공부한 것 &amp; 리뷰 분류 팀 프로젝트 &lt;블레이드앤소울 유저 이탈 예측&gt; 트러블 슈팅 공모전은 아직 한달 이상 남았지만 트러블 슈팅 하고 나니 한 단계 넘은 듯한 느낌 지금 상태에서 performance를 끌어올리기 위해서는 역시 더 의미있는 변수를 찾아내는 것이 중요할 것 같다! 내일 공부할 것 이번 주에 공부할 것 분류 팀 프로젝트 &lt;블레이드앤소울 유저 이탈 예측&gt; 전체 변수 사용 random forest model, 신경망 모델 hierarchical model 자율평가 f1-score 0.80 찍기 - 0.70 찍음 발표 자료 트러블 슈팅 DSS: 프로그래밍 &lt;Database - SQL&gt; 복습하기 DSS: 프로그래밍 &lt;Database - noSQL&gt; 복습하기 DSS: 프로그래밍 &lt;웹 크롤링&gt; 복습하기 DSS: 수학 &lt;53절. 신경망 모형 기초&gt; 복습하기 DSS: 수학 &lt;54절. 신경망 성능 개선&gt; 복습하기 DSS: 수학 &lt;55절. CNN&gt; 복습하기 DSS: 수학 &lt;55절. 확률론적 언어모형과 RNN&gt; 복습하기 DSS: 수학 &lt;57절. GAN&gt; 복습하기 인성면접 답안 대비 (개인 신상, 취미, 특기 관련 질문) 관심 기업 조사","categories":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/categories/TIL-Today-I-Learned/"}],"tags":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/tags/TIL-Today-I-Learned/"}]},{"title":"2018-08-10-TIL","slug":"2018-08-10-TIL","date":"2018-08-10T15:16:38.000Z","updated":"2018-08-10T15:25:32.000Z","comments":true,"path":"2018/08/11/2018-08-10-TIL/","link":"","permalink":"http://yoursite.com/2018/08/11/2018-08-10-TIL/","excerpt":"","text":"공부한 것 &amp; 리뷰 분류 팀 프로젝트 &lt;블레이드앤소울 유저 이탈 예측&gt; 트러블 슈팅 발표자료 정리 내일 공부할 것 분류 팀 프로젝트 &lt;블레이드앤소울 유저 이탈 예측&gt; 트러블 슈팅 이번 주에 공부할 것 분류 팀 프로젝트 &lt;블레이드앤소울 유저 이탈 예측&gt; 전체 변수 사용 random forest model, 신경망 모델 hierarchical model 자율평가 f1-score 0.80 찍기 - 0.70 찍음 발표 자료 트러블 슈팅 DSS: 프로그래밍 &lt;Database - SQL&gt; 복습하기 DSS: 프로그래밍 &lt;Database - noSQL&gt; 복습하기 DSS: 프로그래밍 &lt;웹 크롤링&gt; 복습하기 DSS: 수학 &lt;53절. 신경망 모형 기초&gt; 복습하기 DSS: 수학 &lt;54절. 신경망 성능 개선&gt; 복습하기 DSS: 수학 &lt;55절. CNN&gt; 복습하기 DSS: 수학 &lt;55절. 확률론적 언어모형과 RNN&gt; 복습하기 DSS: 수학 &lt;57절. GAN&gt; 복습하기 인성면접 답안 대비 (개인 신상, 취미, 특기 관련 질문) 관심 기업 조사","categories":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/categories/TIL-Today-I-Learned/"}],"tags":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/tags/TIL-Today-I-Learned/"}]},{"title":"2018-08-09-TIL","slug":"2018-08-09-TIL","date":"2018-08-09T15:46:29.000Z","updated":"2018-08-10T15:22:00.000Z","comments":true,"path":"2018/08/10/2018-08-09-TIL/","link":"","permalink":"http://yoursite.com/2018/08/10/2018-08-09-TIL/","excerpt":"","text":"공부한 것 &amp; 리뷰 DSS 복습: 수학 &lt;53절. 신경망 모형 기초&gt; 분류 팀 프로젝트 &lt;블레이드앤소울 유저 이탈 예측&gt; 신경망 분류 모형 정리 DSS: 프로그래밍 마지막 수업 아직 익혀야 할 것이 많은데 벌써 마지막 수업이라니! 시간은 어찌 이리 빠른 것인가. 이제 점점 데이터 사이언스 스쿨 대장정의 끝이 보이는 것 같다. 개인 프로젝트도 서둘러야겠다. 내일 공부할 것 분류 팀 프로젝트 &lt;블레이드앤소울 유저 이탈 예측&gt; 트러블슈팅 준비 이번 주에 공부할 것 분류 팀 프로젝트 &lt;블레이드앤소울 유저 이탈 예측&gt; 전체 변수 사용 random forest model hierarchical model 자율평가 f1-score 0.80 찍기 발표 자료 트러블 슈팅 DSS: 프로그래밍 &lt;Database - SQL&gt; 복습하기 DSS: 프로그래밍 &lt;Database - noSQL&gt; 복습하기 DSS: 프로그래밍 &lt;웹 크롤링&gt; 복습하기 DSS: 수학 &lt;53절. 신경망 모형 기초&gt; 복습하기 DSS: 수학 &lt;54절. 신경망 성능 개선&gt; 복습하기 DSS: 수학 &lt;55절. CNN&gt; 복습하기 DSS: 수학 &lt;55절. 확률론적 언어모형과 RNN&gt; 복습하기 DSS: 수학 &lt;57절. GAN&gt; 복습하기 인성면접 답안 대비 (개인 신상, 취미, 특기 관련 질문) 관심 기업 조사","categories":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/categories/TIL-Today-I-Learned/"}],"tags":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/tags/TIL-Today-I-Learned/"}]},{"title":"2018-08-08-TIL","slug":"2018-08-08-TIL","date":"2018-08-08T16:59:24.000Z","updated":"2018-08-08T17:03:24.000Z","comments":true,"path":"2018/08/09/2018-08-08-TIL/","link":"","permalink":"http://yoursite.com/2018/08/09/2018-08-08-TIL/","excerpt":"","text":"공부한 것 &amp; 리뷰 분류 팀 프로젝트 &lt;블레이드앤소울 유저 이탈 예측&gt; 자율 평가 점수가 생각처럼 올라가지 않는다 ㅜ DSS: &lt;53절. 신경망 모형 기초&gt; 복습 중 신경망 기초 이론과 Theano 패키지 복습 내일 공부할 것 분류 팀 프로젝트 &lt;블레이드앤소울 유저 이탈 예측&gt; 트러블슈팅 준비 이번 주에 공부할 것 분류 팀 프로젝트 &lt;블레이드앤소울 유저 이탈 예측&gt; 전체 변수 사용 random forest model hierarchical model 자율평가 f1-score 0.80 찍기 발표 자료 트러블 슈팅 DSS: 프로그래밍 &lt;Database - SQL&gt; 복습하기 DSS: 프로그래밍 &lt;Database - noSQL&gt; 복습하기 DSS: 프로그래밍 &lt;웹 크롤링&gt; 복습하기 DSS: 수학 &lt;53절. 신경망 모형 기초&gt; 복습하기 DSS: 수학 &lt;54절. 신경망 성능 개선&gt; 복습하기 DSS: 수학 &lt;55절. CNN&gt; 복습하기 DSS: 수학 &lt;55절. 확률론적 언어모형과 RNN&gt; 복습하기 DSS: 수학 &lt;57절. GAN&gt; 복습하기 인성면접 답안 대비 (개인 신상, 취미, 특기 관련 질문) 관심 기업 조사","categories":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/categories/TIL-Today-I-Learned/"}],"tags":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/tags/TIL-Today-I-Learned/"}]},{"title":"2018-08-07-TIL","slug":"2018-08-07-TIL","date":"2018-08-07T14:54:36.000Z","updated":"2018-08-07T15:16:53.000Z","comments":true,"path":"2018/08/07/2018-08-07-TIL/","link":"","permalink":"http://yoursite.com/2018/08/07/2018-08-07-TIL/","excerpt":"","text":"공부한 것 &amp; 리뷰 어제부터 계속 블로그에 jupyter notebook 파일 올리기를 시도하는 중인데 정체를 알 수 없는 error에 막혀있다. 에러를 해결하고 싶다!!! 분류 팀 프로젝트 &lt;블레이드앤소울 유저 이탈 예측&gt; EDA 정리 DSS 수업: &lt;56절. 확률론적 언어모형과 RNN&gt;, &lt;57절. GAN&gt; 딥러닝까지의 진도가 끝나버렸다. 맙소사! 내일 공부할 것 분류 팀 프로젝트 &lt;블레이드앤소울 유저 이탈 예측&gt; class별 예측력 향상! 이번 주에 공부할 것 분류 팀 프로젝트 &lt;블레이드앤소울 유저 이탈 예측&gt; 전체 변수 사용 random forest model hierarchical model 자율평가 f1-score 0.80 찍기 발표 자료 트러블 슈팅 DSS: 프로그래밍 &lt;Database - SQL&gt; 복습하기 DSS: 프로그래밍 &lt;Database - noSQL&gt; 복습하기 DSS: 프로그래밍 &lt;웹 크롤링&gt; 복습하기 DSS: 수학 &lt;53절. 신경망 모형 기초&gt; 복습하기 DSS: 수학 &lt;54절. 신경망 성능 개선&gt; 복습하기 DSS: 수학 &lt;55절. CNN&gt; 복습하기 DSS: 수학 &lt;55절. 확률론적 언어모형과 RNN&gt; 복습하기 DSS: 수학 &lt;57절. GAN&gt; 복습하기 인성면접 답안 대비 (개인 신상, 취미, 특기 관련 질문) 관심 기업 조사","categories":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/categories/TIL-Today-I-Learned/"}],"tags":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/tags/TIL-Today-I-Learned/"}]},{"title":"2018-08-06-TIL","slug":"2018-08-06-TIL","date":"2018-08-05T14:40:26.000Z","updated":"2018-08-07T15:16:21.000Z","comments":true,"path":"2018/08/05/2018-08-06-TIL/","link":"","permalink":"http://yoursite.com/2018/08/05/2018-08-06-TIL/","excerpt":"","text":"공부한 것 &amp; 리뷰 분류 팀 프로젝트 &lt;블레이드앤소울 유저 이탈 예측&gt; 랜덤포레스트 모델링 python 기초 문법 복습, 정리해서 블로그에 포스팅 hexo-jupyter나 hexo-ipython이 잘 되지 않아 그냥 md파일로 변환해서 올렸다ㅜ 내일 공부할 것 DSS 수업: &lt;56절. 확률론적 언어모형과 RNN&gt; 분류 팀 프로젝트 &lt;블레이드앤소울 유저 이탈 예측&gt; class별 예측력 향상! 이번 주에 공부할 것 분류 팀 프로젝트 &lt;블레이드앤소울 유저 이탈 예측&gt; 전체 변수 사용 random forest model hierarchical model 자율평가 f1-score 0.80 찍기 발표 자료 트러블 슈팅 DSS: 프로그래밍 &lt;Database - SQL&gt; 복습하기 DSS: 프로그래밍 &lt;Database - noSQL&gt; 복습하기 DSS: 프로그래밍 &lt;웹 크롤링&gt; 복습하기 DSS: 수학 &lt;53절. 신경망 모형 기초&gt; 복습하기 DSS: 수학 &lt;54절. 신경망 성능 개선&gt; 복습하기 DSS: 수학 &lt;55절. CNN&gt; 복습하기 인성면접 답안 대비 (개인 신상, 취미, 특기 관련 질문) 관심 기업 조사","categories":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/categories/TIL-Today-I-Learned/"}],"tags":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/tags/TIL-Today-I-Learned/"}]},{"title":"2018-08-04-TIL","slug":"2018-08-04-TIL","date":"2018-08-05T03:40:26.000Z","updated":"2018-08-06T15:51:58.000Z","comments":true,"path":"2018/08/05/2018-08-04-TIL/","link":"","permalink":"http://yoursite.com/2018/08/05/2018-08-04-TIL/","excerpt":"","text":"공부한 것 &amp; 리뷰 DSS 수업: CNN RNN 소개 분류 팀 프로젝트 &lt;블레이드앤소울 유저 이탈 예측&gt; 랜덤포레스트 모델링 내일 공부할 것 분류 팀 프로젝트 &lt;블레이드앤소울 유저 이탈 예측&gt; 나이브 베이즈 모형 모델링 개인 프로젝트 3대 기획사 아이돌 사진 크롤링 이번 주에 공부할 것 분류 팀 프로젝트: 랜덤포레스트, XGBoost, LightGBM 돌려보기 DSS: 프로그래밍 &lt;Database - SQL&gt; 복습하기 DSS: 프로그래밍 &lt;Database - noSQL&gt; 복습하기 DSS: 프로그래밍 &lt;웹 크롤링&gt; 복습하기 DSS: 수학 &lt;45절. 로지스틱 회귀분석&gt; 복습하기 DSS: 수학 &lt;46절. QDA와 나이브 베이즈 모형&gt; 복습하기 DSS: 수학 &lt;50절. 커널 서포트 벡터 머신&gt; 복습하기 DSS: 수학 &lt;51절. 모형 최적화&gt; 복습하기 DSS: 수학 &lt;52절. 비대칭 데이터 문제&gt; 복습하기 DSS: 수학 &lt;53절. 신경망 모형 기초&gt; 복습하기 DSS: 수학 &lt;54절. 신경망 성능 개선&gt; 복습하기 인성면접 답안 대비 (개인 신상, 취미, 특기 관련 질문) 관심 기업 조사","categories":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/categories/TIL-Today-I-Learned/"}],"tags":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/tags/TIL-Today-I-Learned/"}]},{"title":"2018-08-03-TIL","slug":"2018-08-03-TIL","date":"2018-08-03T16:25:21.000Z","updated":"2018-08-03T16:27:46.000Z","comments":true,"path":"2018/08/04/2018-08-03-TIL/","link":"","permalink":"http://yoursite.com/2018/08/04/2018-08-03-TIL/","excerpt":"","text":"공부한 것 &amp; 리뷰 DSS 수업: 프로그래밍 - 네이버 기사 카테고리 분류 모형 flask로 서비스하기 분류 팀 프로젝트 &lt;블레이드앤소울 유저 이탈 예측&gt; party data에 대한 새로운 변수 생성 및 모델링 내일 공부할 것 DSS 수업 분류 팀 프로젝트 &lt;블레이드앤소울 유저 이탈 예측&gt; 나이브 베이즈 모형 모델링 이번 주에 공부할 것 분류 팀 프로젝트: 랜덤포레스트, XGBoost, LightGBM 돌려보기 DSS: 프로그래밍 &lt;Database - SQL&gt; 복습하기 DSS: 프로그래밍 &lt;Database - noSQL&gt; 복습하기 DSS: 프로그래밍 &lt;웹 크롤링&gt; 복습하기 DSS: 수학 &lt;45절. 로지스틱 회귀분석&gt; 복습하기 DSS: 수학 &lt;46절. QDA와 나이브 베이즈 모형&gt; 복습하기 DSS: 수학 &lt;50절. 커널 서포트 벡터 머신&gt; 복습하기 DSS: 수학 &lt;51절. 모형 최적화&gt; 복습하기 DSS: 수학 &lt;52절. 비대칭 데이터 문제&gt; 복습하기 DSS: 수학 &lt;53절. 신경망 모형 기초&gt; 복습하기 DSS: 수학 &lt;54절. 신경망 성능 개선&gt; 복습하기 인성면접 답안 대비 (개인 신상, 취미, 특기 관련 질문) 관심 기업 조사","categories":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/categories/TIL-Today-I-Learned/"}],"tags":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/tags/TIL-Today-I-Learned/"}]},{"title":"2018-08-02-TIL","slug":"2018-08-02-TIL","date":"2018-08-02T16:30:01.000Z","updated":"2018-08-02T16:33:47.000Z","comments":true,"path":"2018/08/03/2018-08-02-TIL/","link":"","permalink":"http://yoursite.com/2018/08/03/2018-08-02-TIL/","excerpt":"","text":"공부한 것 &amp; 리뷰 DSS 수업: 프로그래밍 ‘&lt;추천시스템&gt;’ DSS 졸업생 특강 분류 팀 프로젝트 &lt;블레이드앤소울 유저 이탈 예측&gt; party data에 대한 새로운 변수 생성에 대해 논의 DSS: &lt;46절&gt; - 나이브 베이즈 모형 복습 DSS: 졸업생 특강 - 현업 케이스 발표 내일 공부할 것 DSS 수업 분류 팀 프로젝트 &lt;블레이드앤소울 유저 이탈 예측&gt; party 관련 새로운 변수 생성하고 다시 모델링 복습을 하면서 보니 나이브 베이즈 모형을 써도 좋지 않을까 싶다! 이번 주에 공부할 것 분류 팀 프로젝트: 랜덤포레스트, XGBoost, LightGBM 돌려보기 DSS: 프로그래밍 &lt;Database - SQL&gt; 복습하기 DSS: 프로그래밍 &lt;Database - noSQL&gt; 복습하기 DSS: 프로그래밍 &lt;웹 크롤링&gt; 복습하기 DSS: 수학 &lt;45절. 로지스틱 회귀분석&gt; 복습하기 DSS: 수학 &lt;46절. QDA와 나이브 베이즈 모형&gt; 복습하기 DSS: 수학 &lt;50절. 커널 서포트 벡터 머신&gt; 복습하기 DSS: 수학 &lt;51절. 모형 최적화&gt; 복습하기 DSS: 수학 &lt;52절. 비대칭 데이터 문제&gt; 복습하기 DSS: 수학 &lt;53절. 신경망 모형 기초&gt; 복습하기 DSS: 수학 &lt;54절. 신경망 성능 개선&gt; 복습하기 인성면접 답안 대비 (개인 신상, 취미, 특기 관련 질문) 관심 기업 조사","categories":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/categories/TIL-Today-I-Learned/"}],"tags":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/tags/TIL-Today-I-Learned/"}]},{"title":"2018-08-01-TIL","slug":"2018-08-01-TIL","date":"2018-08-01T15:39:45.000Z","updated":"2018-08-01T17:05:25.000Z","comments":true,"path":"2018/08/02/2018-08-01-TIL/","link":"","permalink":"http://yoursite.com/2018/08/02/2018-08-01-TIL/","excerpt":"","text":"공부한 것 &amp; 리뷰 분류 팀 프로젝트 중간 크로스 체크: 다른 모든 팀들의 프로젝트 진행 상황에 대해서 들을 수 있었다. 우리 팀은 모델링 진도가 늦어 조급해지는 느낌! 빅콘테스트 측에서 자율평가를 위한 leader board를 오픈했다. 몇몇 팀이 제출해서 랭킹이 올라오기 시작했는데 f1 score 0.70 정도가 1등인 상황 DSS: &lt;46절&gt; - QDA &amp; LDA 복습 벌써 8월이 시작되었다. 날짜가 믿을 수 없이 빨리 흘러간다! 복습도 속도를 붙여야하고 개인 프로젝트도 빨리 결정을 해서 조금씩 시작해나가야겠다 내일 공부할 것 DSS 수업: 프로그래밍 ‘&lt;추천시스템&gt;’ DSS 졸업생 특강 이번 주에 공부할 것 분류 팀 프로젝트: 랜덤포레스트, XGBoost, LightGBM 돌려보기 DSS: 프로그래밍 &lt;Database - SQL&gt; 복습하기 DSS: 프로그래밍 &lt;Database - noSQL&gt; 복습하기 DSS: 프로그래밍 &lt;웹 크롤링&gt; 복습하기 DSS: 수학 &lt;45절. 로지스틱 회귀분석&gt; 복습하기 DSS: 수학 &lt;46절. QDA와 나이브 베이즈 모형&gt; 복습하기 DSS: 수학 &lt;50절. 커널 서포트 벡터 머신&gt; 복습하기 DSS: 수학 &lt;51절. 모형 최적화&gt; 복습하기 DSS: 수학 &lt;52절. 비대칭 데이터 문제&gt; 복습하기 DSS: 수학 &lt;53절. 신경망 모형 기초&gt; 복습하기 DSS: 수학 &lt;54절. 신경망 성능 개선&gt; 복습하기 인성면접 답안 대비 (개인 신상, 취미, 특기 관련 질문) 관심 기업 조사","categories":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/categories/TIL-Today-I-Learned/"}],"tags":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/tags/TIL-Today-I-Learned/"}]},{"title":"2018-07-31-TIL","slug":"2018-07-31-TIL","date":"2018-07-31T11:23:48.000Z","updated":"2018-07-31T17:53:22.000Z","comments":true,"path":"2018/07/31/2018-07-31-TIL/","link":"","permalink":"http://yoursite.com/2018/07/31/2018-07-31-TIL/","excerpt":"","text":"공부한 것 &amp; 리뷰 분류 팀 프로젝트 중간 크로스 체크 발표 자료 정리 DSS: 수학 &lt;50절. 커널 서포트 벡터 머신&gt; 복습 DSS: 수학 &lt;51절. 모형 최적화&gt; 복습 DSS: 수학 &lt;52절. 비대칭 데이터 문제&gt; 복습 DSS: 수학 &lt;45절. 로지스틱 회귀분석&gt; 복습 내일 공부할 것 DSS: 팀 프로젝트 중간 크로스 체크 DSS: 프로그래밍 &lt;Database - SQL&gt; 복습하기 DSS: 프로그래밍 &lt;웹 크롤링&gt; 복습하기 이번 주에 공부할 것 분류 팀 프로젝트: 랜덤포레스트, XGBoost, LightGBM 돌려보기 DSS: 프로그래밍 &lt;Database - SQL&gt; 복습하기 DSS: 프로그래밍 &lt;Database - noSQL&gt; 복습하기 DSS: 프로그래밍 &lt;웹 크롤링&gt; 복습하기 DSS: 수학 &lt;45절. 로지스틱 회귀분석&gt; 복습하기 DSS: 수학 &lt;46절. QDA와 나이브 베이즈 모형&gt; 복습하기 DSS: 수학 &lt;50절. 커널 서포트 벡터 머신&gt; 복습하기 DSS: 수학 &lt;51절. 모형 최적화&gt; 복습하기 DSS: 수학 &lt;52절. 비대칭 데이터 문제&gt; 복습하기 DSS: 수학 &lt;53절. 신경망 모형 기초&gt; 복습하기 DSS: 수학 &lt;54절. 신경망 성능 개선&gt; 복습하기 인성면접 답안 대비 (개인 신상, 취미, 특기 관련 질문) 관심 기업 조사","categories":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/categories/TIL-Today-I-Learned/"}],"tags":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/tags/TIL-Today-I-Learned/"}]},{"title":"2018-07-30-TIL","slug":"2018-07-30-TIL","date":"2018-07-30T15:44:15.000Z","updated":"2018-07-30T15:57:27.000Z","comments":true,"path":"2018/07/31/2018-07-30-TIL/","link":"","permalink":"http://yoursite.com/2018/07/31/2018-07-30-TIL/","excerpt":"","text":"공부한 것 &amp; 리뷰 DSS: 수학 &lt;53절&gt; - 신경망 기초 이론 복습 노트북 Anaconda 환경이 이유는 모르지만 꼬여버렸다. 난데없이 python 2.7로 모든 환경이 바뀌어버렸는데, 방법을 찾다가 결국에는 따로 깔려있던 python과 anaconda를 다 uninstall하고 새로 설치하느라 저녁 수업이 시작하기도 전에 진이 다 빠져버렸다. DSS 수업: 수학 &lt;53절&gt; - TensorFlow, Keras, &lt;54절&gt; - 신경망 성능 개선 Keras가 확실히 무척 간결하고 편한 것 같다. documentation도 더 보고 팀프로젝트에도 적용해보면서 연습을 더 해봐야겠다. 내일 공부할 것 분류 팀 프로젝트: 랜덤포레스트 돌려보기, 수요일 중간 발표 자료 정리 DSS: 수학 &lt;53절. 신경망 모형 기초&gt; 복습하기 DSS: 프로그래밍 &lt;Database - SQL&gt; 복습하기 이번 주에 공부할 것 분류 팀 프로젝트: 랜덤포레스트, XGBoost, LightGBM 돌려보기 DSS: 프로그래밍 &lt;Database - SQL&gt; 복습하기 DSS: 프로그래밍 &lt;Database - noSQL&gt; 복습하기 DSS: 프로그래밍 &lt;웹 크롤링&gt; 복습하기 DSS: 수학 &lt;45절. 로지스틱 회귀분석&gt; 복습하기 DSS: 수학 &lt;46절. QDA와 나이브 베이즈 모형&gt; 복습하기 DSS: 수학 &lt;50절. 커널 서포트 벡터 머신&gt; 복습하기 DSS: 수학 &lt;51절. 모형 최적화&gt; 복습하기 DSS: 수학 &lt;52절. 비대칭 데이터 문제&gt; 복습하기 DSS: 수학 &lt;53절. 신경망 모형 기초&gt; 복습하기 DSS: 수학 &lt;54절. 신경망 성능 개선&gt; 복습하기 인성면접 답안 대비 (개인 신상, 취미, 특기 관련 질문) 관심 기업 조사","categories":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/categories/TIL-Today-I-Learned/"}],"tags":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/tags/TIL-Today-I-Learned/"}]},{"title":"2018-07-28-TIL","slug":"2018-07-28-TIL","date":"2018-07-28T15:17:51.000Z","updated":"2018-07-28T15:25:31.000Z","comments":true,"path":"2018/07/29/2018-07-28-TIL/","link":"","permalink":"http://yoursite.com/2018/07/29/2018-07-28-TIL/","excerpt":"","text":"공부한 것 &amp; 리뷰 DSS: 수학 딥러닝 기초에 들어감. Theano를 배움 DSS: 수학 &lt;49절&gt; - 서포트벡터 머신 복습 내일 공부할 것 DSS: 수학 머신러닝 파트 복습 DSS: 53절 복습 DSS: 프로그래밍 &lt;웹 크롤링&gt; 복습하기 이번 주에 공부할 것 분류 팀 프로젝트: 데이터 형태 정리 DSS: 프로그래밍 &lt;Database 개념 및 기초&gt; 공부 DSS: 프로그래밍 &lt;Database - SQL&gt; 복습하기 DSS: 프로그래밍 &lt;Database - noSQL&gt; 복습하기 DSS: 프로그래밍 &lt;웹 크롤링&gt; 복습하기 DSS: 수학 &lt;45절. 로지스틱 회귀분석&gt; 복습하기 DSS: 수학 &lt;46절. QDA와 나이브 베이즈 모형&gt; 복습하기 DSS: 수학 &lt;47절. 의사 결정 나무&gt; 복습하기 DSS: 수학 &lt;48절. 앙상블 기법&gt; 복습하기 DSS: 수학 &lt;49절. 퍼셉트론과 서포트벡터 머신&gt; 복습하기 DSS: 수학 &lt;50절. 커널 서포트 벡터 머신&gt; 복습하기 DSS: 수학 &lt;51절. 모형 최적화&gt; 복습하기 DSS: 수학 &lt;52절. 비대칭 데이터 문제&gt; 복습하기 인성면접 답안 대비 (개인 신상, 취미, 특기 관련 질문) 관심 기업 조사","categories":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/categories/TIL-Today-I-Learned/"}],"tags":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/tags/TIL-Today-I-Learned/"}]},{"title":"2018-07-27-TIL","slug":"2018-07-27-TIL","date":"2018-07-27T15:59:37.000Z","updated":"2018-07-28T15:12:46.000Z","comments":true,"path":"2018/07/28/2018-07-27-TIL/","link":"","permalink":"http://yoursite.com/2018/07/28/2018-07-27-TIL/","excerpt":"","text":"공부한 것 &amp; 리뷰 팀 프로젝트: 2018 빅콘테스트 블레이드앤소울 이탈자 예측 문제 드디어 trade까지 변수 만드는 작업이 일단 완료되었는가 했더니 갑자기 다음주 월요일에 새롭게 수정된 데이터를 배포한다는 공지가 떠버렸다. 이게 무슨 일이람 ㄷㄷ DSS 수업: python ORM(SQLAlchemy), 추천시스템 오늘로써 데이터베이스 수업이 끝났다. SQL은 깔끔함이 마음에 들었고 mongodb는 아직 잘 모르겠지만 확실히 데이터베이스는 현업에서 필수적이고 중요한 기술이니 착실히 복습해두어야겠다. DSS: 수학 &lt;49절. 퍼셉트론과 서포트벡터 머신&gt; 복습 퍼셉트론 부분을 복습함 내일 공부할 것 DSS 수업: 내일부터 딥러닝에 들어간다! 이번 주에 공부할 것 분류 팀 프로젝트: 데이터 형태 정리 DSS: 프로그래밍 &lt;Database 개념 및 기초&gt; 공부 DSS: 프로그래밍 &lt;Database - SQL&gt; 복습하기 DSS: 프로그래밍 &lt;Database - noSQL&gt; 복습하기 DSS: 프로그래밍 &lt;웹 크롤링&gt; 복습하기 DSS: 수학 &lt;45절. 로지스틱 회귀분석&gt; 복습하기 DSS: 수학 &lt;46절. QDA와 나이브 베이즈 모형&gt; 복습하기 DSS: 수학 &lt;47절. 의사 결정 나무&gt; 복습하기 DSS: 수학 &lt;48절. 앙상블 기법&gt; 복습하기 DSS: 수학 &lt;49절. 퍼셉트론과 서포트벡터 머신&gt; 복습하기 DSS: 수학 &lt;50절. 커널 서포트 벡터 머신&gt; 복습하기 DSS: 수학 &lt;51절. 모형 최적화&gt; 복습하기 DSS: 수학 &lt;52절. 비대칭 데이터 문제&gt; 복습하기 인성면접 답안 대비 (개인 신상, 취미, 특기 관련 질문) 관심 기업 조사","categories":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/categories/TIL-Today-I-Learned/"}],"tags":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/tags/TIL-Today-I-Learned/"}]},{"title":"MySQL Basic Syntax","slug":"Database_04_mysql basic syntax","date":"2018-07-27T15:48:26.000Z","updated":"2018-08-12T15:51:40.000Z","comments":true,"path":"2018/07/28/Database_04_mysql basic syntax/","link":"","permalink":"http://yoursite.com/2018/07/28/Database_04_mysql basic syntax/","excerpt":"","text":"MySQL Basic Syntax본격적으로 RDBMS(나의 경우는 workbench)를 사용하여 MySQL 문법을 익혀보자 명령어는 대문자로 쓰는 것이 컨벤션이나 소문자로 써도 실행에는 문제가 없음 마지막에 세미콜론(;) 또한 쓰지 않아도 실행에는 문제가 없음 1. Create1) Create Database Database 생성 1CREATE DATABASE &lt;db_name&gt;; Database 선택 1USE &lt;db_name&gt;; 현재 database 확인 1SELECT DATABASE(); 2) Create TableTable을 생성할 때에는 컬럼이름, 데이터타입, 제약조건에 대한 내용이 들어감 Table 생성 12345CREATE TABLE &lt;table_name&gt;( column_name_1 column_datatype_1 column_constraint_1, column_name_2 column_datatype_2 column_constraint_2, ...) 제약조건이 없는 user1 Table 생성 1234567CREATE TABLE user1( user_id INT, name Varchar(20), email Varchar(30), age INT(3), rdate DATE) 제약조건이 있는 user2 Table 생성 1234567CREATE TABLE user2( user_id INT PRIMARY KEY AUTO_INCREMENT, name Varchar(20) NOT NULL, email Varchar(30) UNIQUE NOT NULL, age INT(3) DEFAULT '30', rdate TIMESTAMP) Database 선택 1USE &lt;db_name&gt;; 현재 database 확인 1SELECT DATABASE(); 2. Alter1) DatabaseALTER를 이용하여 database encoding 변경 현재 문자열 인코딩 확인 1show variables like \"character_set_database\"; test 데이터베이스의 문자열 인코딩을 utf8로 변경 12ALTER DATABASE test CHARACTER SET = utf8;ALTER DATABASE test CHARACTER SET = ascii; 문자열 encoding 변경 결과 확인 1show variables like \"character_set_database\"; 2) TableALTER를 이용하여 table의 column 추가, 삭제, 수정 ADD 12-- user2 테이블에 TEXT 데이터 타입을 갖는 tmp column 추가ALTER TABLE user2 ADD tmp TEXT; MODIFY 12-- user2 테이블에 tmp column을 INT(3) 데이터 타입으로 수정ALTER TABLE user2 MODIFY COLUMN tmp INT(3); DROP 12-- user2 테이블의 tmp column을 삭제ALTER TABLE user2 DROP tmp; 3. DROP1) Database Database 삭제1DROP DATABASE &lt;db_name&gt;; 2) Table Table 삭제1DROP TABLE &lt;table_name&gt;; 4. INSERT1) Syntax Table 뒤에 오는 column이름은 생략 가능, 대신 VALUES 뒤에 value값이 순서대로 와야 함 12INSERT INTO &lt;table_name&gt;(&lt;column_name_1&gt;, &lt;column_name_1&gt;, ...)VALUES(&lt;value_1&gt;, &lt;value_2&gt; ...) 여러 row를 한번에 insert하기 12345INSERT INTO &lt;table_name&gt;(&lt;column_name_1&gt;, &lt;column_name_1&gt;, ...)VALUES(&lt;value_1&gt;, &lt;value_2&gt; ...),(&lt;value_1&gt;, &lt;value_2&gt; ...),...(&lt;value_1&gt;, &lt;value_2&gt; ...); 2) Example user1 테이블에 user_id, name, email, age, rdate를 입력1234567INSERT INTO user1(user_id, name, email, age, rdate)VALUES(1, \"jane\", \"jane@gmail.com\", 30, now()),(2, \"peter\", \"peter@gmail.com\", 33, '2017-02-20'),(3, \"alice\", \"alice@gmail.com\", 23, '2018-01-15'),(4, \"po\", \"po@gmail.com\", 43, '2002-09-16'),(5, \"andy\", \"andy@gmail.com\", 17, '2016-04-28'),(6, \"jane\", \"jane1234@gmail.com\", 33, '2013-09-02'); 4. SELECT1) Basic basic syntax 12SELECT &lt;column_name_1&gt;, &lt;column)name_2&gt;, ...FROM &lt;table_name&gt; 전체 컬럼 데이터 조회하기 (table 전체) 12SELECT *FROM user1 일부 컬럼 조회하기 12SELECT user_id, name, rdateFROM user1 2) ALIASalias(as)를 이용하여 컬럼명을 변경해서 생략할 수 있음as는 생략 가능12SELECT user_id as \"아이디\", name as \"이름\", rdate as \"등록일\"FROM user1 3) DISTINCTDISTINCT를 이용하여 특정 컬럼의 중복 데이터를 제거 가능 name 컬럼을 중복 제거하여 조회12SELECT DISTINCT(name)FROM user1 4) WHEREWHERE절을 이용해서 검색 조건을 추가AND, OR, 연산자 등의 기능을 사용 나이가 30살 이상인 user를 조회 123SELECT *FROM user1WHERE age &gt;= 30 등록일이 2016-01-01일 이후의 user를 조회 123SELECT *FROM user1WHERE rdate &gt;= \"2016-01-01\" 등록일이 2010-01-01에서 2017-12-31 사이인 user를 조회 (AND는 둘다 true이면 true, OR도 사용가능) 123SELECT *FROM user1WHERE rdate &gt;= \"2010-01-01\" AND rdate &lt;= \"2017-12-13\" BETWEEN을 사용하여 기간 조회 (숫자데이터도 사용 가능) 123SELECT *FROM user1WHERE rdate BETWEEN \"2010-01-01\" AND \"2017-12-13\" 5) ORDER BYORDER BY를 이용하여 특정 컬럼으로 데이터 정렬 가능 age로 오름차순 정렬 (ASC는 생략이 가능) 123SELECT *FROM user1ORDER BY age ASC age로 내림차순 정렬 123SELECT *FROM user1ORDER BY age DESC age로 내림차순 정렬하고 rdate를 오름차순 정렬 123SELECT *FROM user1ORDER BY age DESC, rdate 6) CONCATCONCAT을 사용하여 select한 데이터를 합쳐서 새로운 컬럼으로 보여줄 수 있음 name과 age를 같이 보여주도록 조회12SELECT email, CONCAT(name, \"(\", age, \")\") AS \"name_age\"FROM user1 7) LIKELIKE를 이용하여 특정 문자열이 들어간 데이터 조회 가능%는 ‘어떤 문자나’와 같은 의미로 “%gmail” 은 gmail 문자열 앞에 아무 문자나 올수 있음을 의미NOT LIKE를 사용하여 특정 문자가 들어가지 않는 데이터 조회 가능 email에 gmail이 들어간 데이터 조회 123SELECT *FROM user1WHERE email LIKE \"%@gmail%\" email에 gmail이 들어가지 않는 데이터 조회 123SELECT *FROM user1WHERE email NOT LIKE \"%@gmail%\" 8) IN여러개의 조건을 만족하는 데이터를 조회하고 싶을때 사용WHERE 절의 조건을 여러개 사용하는것을 간단하게 만들 수 있음 name이 peter와 alice인 데이터 조회 123SELECT *FROM user1WHERE name=\"peter\" OR name=\"alice\" name이 peter와 alice인 데이터 조회 123SELECT *FROM user1WHERE name IN (\"peter\", \"alice\") 9) LIMITLIMIT은 조회하는 데이터의 수를 제한할 때 사용데이터가 너무 많은 경우에는 항상 limit을 사용하여 적은 데이터를 조회해야 조회 시간이나 업데이트시의 실수를 줄일수 있음 user1 테이블에서 3개의 데이터 조회 123SELECT *FROM user1LIMIT 3 user1 테이블에서 두번째에서 네번째까지의 3개의 데이터 조회 123SELECT *FROM user1LIMIT 1,3 6. UPDATE업데이트시에는 항상 select-where로 변경할 데이터를 확인하고 update 해줘야 실수를 줄일 수 있음limit도 함께 사용해주는 것이 좋음 1) syntax123UPDATE &lt;table_name&gt;SET &lt;column_name_1&gt; = &lt;value_1&gt;, &lt;column_name_2&gt; = &lt;value_2&gt;,WHERE &lt;condition&gt; 2) example jane 이름을 가지고 있는 사람의 나이를 20, 이메일을 jane000@daum.net으로 변경123UPDATE user1SET age=20, email=\"jane000@daum.net\"WHERE name=\"jane\" 7. DELETE1) syntax12DELETE FROM &lt;table_name&gt;WHERE &lt;condition&gt; 2) example 2016-01-01 이전 데이터 삭제12DELETE FROM user1WHERE rdate &lt; \"2016-01-01\" 8. GROUP BYGROUP BY는 여러개의 동일한 데이터를 가지는 특정 컬럼을 합쳐주는 역할을 하는 명령sql의 그룹함수: count, min, max, sum, avg world 데이터 베이스로 이동12-- world 데이터 베이스는 city, country, countrylanguage 테이블이 있는 데이터 베이스 use world 1) GROUP BY 함수(1) COUNT city 테이블의 CountryCode를 묶고 각 코드마다 몇개의 데이터가 있는지 확인 123SELECT CountryCode, COUNT(CountryCode)FROM cityGROUP BY CountryCode countrylanguage 테이블에서 전체 언어가 몇개 있는지 구하시오. 12SELECT COUNT(DISTINCT(Language)) as language_countFROM countrylanguage (2) MAX 대륙별 인구수와 GNP 최대 값을 조회123SELECT continent, MAX(Population) as Population, MAX(GNP) as GNPFROM countryGROUP BY continent (3) MIN 대륙별 인구수와 GNP 최소 값을 조회 (GNP와 인구수가 0이 아닌 데이터 중에서)1234SELECT continent, MIN(Population) as Population, MIN(GNP) as GNPFROM countryWHERE GNP != 0 AND Population != 0GROUP BY continent (4) SUM 대륙별 총 인구수와 총 GNP1234SELECT continent, SUM(Population) as Population, SUM(GNP) as GNPFROM countryWHERE GNP != 0 AND Population != 0GROUP BY continent (5) AVG 대륙별 평균 인구수와 평균 GNP 결과를 인구수로 내림차순 정렬12345SELECT continent, AVG(Population) as Population, AVG(GNP) as GNPFROM countryWHERE GNP != 0 AND Population != 0GROUP BY continentORDER BY Population DESCs 2) HAVINGGROUP BY에서 반환되는 결과에 조건을 줄 수 있음 대륙별 전체인구를 구하고 5억이상인 대륙만 조회 1234SELECT continent, SUM(Population) as PopulationFROM countryGROUP BY continentHAVING Population &gt; 500000000 대륙별 평균 인구수, 평균 GNP, 1인당 GNP한 결과를 1인당 GNP가 0.01 이상인 데이터를 조회하고 1인당 GNP를 내림차순으로 정렬 1234567SELECT continent, AVG(Population) as Population, AVG(GNP) as GNP,AVG(GNP) / AVG(Population) * 1000 as AVGFROM countryWHERE GNP != 0 AND Population != 0GROUP BY continentHAVING AVG &gt; 0.01ORDER BY AVG DESC ※ 참고 자료 패스트캠퍼스 ‘데이터 사이언스 스쿨 Python 8기’ 수업자료","categories":[{"name":"Programming 공부","slug":"Programming-공부","permalink":"http://yoursite.com/categories/Programming-공부/"},{"name":"Database","slug":"Programming-공부/Database","permalink":"http://yoursite.com/categories/Programming-공부/Database/"}],"tags":[{"name":"Database","slug":"Database","permalink":"http://yoursite.com/tags/Database/"},{"name":"MySQL","slug":"MySQL","permalink":"http://yoursite.com/tags/MySQL/"},{"name":"SQL","slug":"SQL","permalink":"http://yoursite.com/tags/SQL/"}]},{"title":"2018-07-26-TIL","slug":"2018-07-26-TIL","date":"2018-07-26T16:36:04.000Z","updated":"2018-07-30T12:50:09.000Z","comments":true,"path":"2018/07/27/2018-07-26-TIL/","link":"","permalink":"http://yoursite.com/2018/07/27/2018-07-26-TIL/","excerpt":"","text":"공부한 것 &amp; 리뷰 팀 프로젝트: 2018 빅콘테스트 블레이드앤소울 이탈자 예측 문제 드디어 제각각 형태이던 train 데이터셋을 예측 대상인 10만개 id에 맞게 변수로 만드는 작업이 어느 정도 완료. 내일부터는 merge해서 정리해보고 진도를 좀 나갈 수 있을 것 같다 DSS 수업: 데이터베이스 - NoSQL, mongodb with python jupyter notebook을 이용해서 MySQL과 mongoDB사이에서 데이터를 migration하는 내용은 익히면 현업에서도 유용할 것 같다. python dataframe에서 MySQL로 데이터를 보낼 때 한글 str을 보내는데 인코딩 관련해서 에러가 계속 발생했는데 내일 해결 방법을 찾아봐야겠다. DSS: 수학 &lt;48절. 앙상블 기법&gt; 복습 random forest와 XGBoost! 팀프로젝트에 lightGBM도 함께 사용해봐야겠다 DSS 현업자 특강: 우아한 형제들 데이터 서비스팀 직원 분의 커리어 특강 내일 공부할 것 DSS 수업: ORM 이번 주에 공부할 것 분류 팀 프로젝트: 데이터 형태 정리, EDA DSS: 프로그래밍 &lt;Database 개념 및 기초&gt; 공부 DSS: 프로그래밍 &lt;Database - SQL&gt; 복습하기 DSS: 프로그래밍 &lt;Database - noSQL&gt; 복습하기 DSS: 프로그래밍 &lt;웹 크롤링&gt; 복습하기 DSS: 수학 &lt;45절. 로지스틱 회귀분석&gt; 복습하기 DSS: 수학 &lt;46절. QDA와 나이브 베이즈 모형&gt; 복습하기 DSS: 수학 &lt;47절. 의사 결정 나무&gt; 복습하기 DSS: 수학 &lt;48절. 앙상블 기법&gt; 복습하기 DSS: 수학 &lt;49절. 퍼셉트론과 서포트벡터 머신&gt; 복습하기 DSS: 수학 &lt;50절. 커널 서포트 벡터 머신&gt; 복습하기 DSS: 수학 &lt;51절. 모형 최적화&gt; 복습하기 DSS: 수학 &lt;52절. 비대칭 데이터 문제&gt; 복습하기 인성면접 답안 대비 (개인 신상, 취미, 특기 관련 질문) 관심 기업 조사","categories":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/categories/TIL-Today-I-Learned/"}],"tags":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/tags/TIL-Today-I-Learned/"}]},{"title":"MySQL Basic - Data Type & Constraint","slug":"Database_03_mysql_basic","date":"2018-07-26T15:22:28.000Z","updated":"2018-08-13T06:49:31.000Z","comments":true,"path":"2018/07/27/Database_03_mysql_basic/","link":"","permalink":"http://yoursite.com/2018/07/27/Database_03_mysql_basic/","excerpt":"","text":"MySQL BasicMySQL 문법을 익히기 전에 데이터베이스에서 테이블을 생성할 때 알아야하는 데이터 타입과 제약조건에 대해 알아보자 1. Data Typereference 1) Numbericreference (1) 정수 타입(integer types) Type Storage (Bytes) Minimum Value Signed Minimum Value Unsigned Maximum Value Signed Maximum Value Unsigned TINYINT 1 -128 0 127 255 SMALLINT 2 -32,768 0 32,767 65,535 MEDIUMINT 3 -8,388,608 0 8,388,607 16,777,215 INT 4 -2,147,483,648 0 2,147,483,647 4,294,967,295 BIGINT 8 -263 0 263-1 264-1 (2) 고정 소수점 타입(fixed-point types) DECIMAL(M, D) M : 소수점을 포함한 전체 자리수 D : 소수 부분 자리수12ALTER TABLE user1ADD COLUMN deci DECIMAL(5,2) NUMERIC(M, D) (3) 실수 (floating-point types)소수점을 나타내기 위한 데이터 타입으로 아래의 두 타입이 있음(데이터 저장공간의 차이가 있음) FLOAT (4byte) DOUBLE (8byte) 아래와 같이 고정 소수점 타입으로도 사용 가능 FLOAT(M,D) DOUBLE(M,D) (4) 비트 값 타입 ( bit value type )0과 1로 구성이 되는 2진수(binary) 데이터 BIT(M) M: 비트의 범위 예) M을 5로 작성하면 00000(2) ~ 11111(2) 까지 표현 가능 2 Date &amp; Timereference 1) DATEDATE는 날짜를 저장하는 데이터 타입 기본 포맷: “년-월-일” 2) DATETIMEDATETIME은 날짜와 시간을 저장하는 데이터 타입 기본 포맷: “년-월-일 시:분:초” 3) TIMESTAMETIMESTAME는 날짜와 시간을 저장하는 데이터 타입DATETIME과 다르게 날짜를 입력하지 않으면 현재 날짜와 시간을 자동으로 저장 4) TIMETIME은 시간을 저장하는 데이터 타입 기본 포맷: “시:분:초” 5) YEARYEAR는 연도를 저장할수 있는 데이터 타입 YEAR(2)는 2자리의 연도를 저장 YEAR(4)는 4자리의 연도를 저장 3. Stringreference 1) CHAR &amp; VARCHAR CHAR: 고정형 문자열 VARCHAR: 가변형 문자열 CHAR &amp; VARCHAR의 저장형식과 저장용량 비교 Value CHAR(4) Storage Required VARCHAR(4) Storage Required ‘’ ‘ ‘ 4 bytes ‘’ 1 byte ‘ab’ ‘ab ‘ 4 bytes ‘ab’ 3 bytes ‘abcd’ ‘abcd’ 4 bytes ‘abcd’ 5 bytes ‘abcdefgh’ ‘abcd’ 4 bytes ‘abcd’ 5 bytes 2) TEXTCHAR와 VARCHAR는 대체로 크기가 작은 문자열을 저장할때 사용크기가 큰 문자열을 저장할 때는 TEXT를 사용 TEXT의 타입에 따른 데이터 크기 Type Maximum Length TINYTEXT 255(28-1) bytes TEXT 65,535(216-1) bytes = 64KB MEDIUMTEXT 16,777,215 (224-1) bytes = 16MB LONGTEXT 4,294,967,295 (232-1) bytes = 4GB 2. Constraint데이터 베이스의 테이블을 생성할때 각 컬럼은 각각의 제약조건을 가짐 1) NOT NULLNOT NULL 제약조건이 있는 컬럼에 NULL 값(비어있는 값)을 저장할수 없음 2) UNIQUEUNIQUE 제약조건이 있는 컬럼에 같은 값을 저장할 수 없음 3) PRIMARY KEY컬럼을 기본키로 설정하기 위해서는 NOT NULL과 UNIQUE 제약조건을 동시에 만족해야 함즉, 컬럼에 비어 있는 값, 중복되는 값을 저장할수 없음하나의 테이블에 하나의 컬럼에만 이 조건을 설정 가능 4) FOREIGN KEY다른 테이블과 연결되는 값이 저장됩니다. 5) DEFAULT데이터를 저장할때 해당 컬럼에 별도의 저장값이 없으면 DEFAULT로 설정된 값이 저장 6) AUTO_INCREMENT주로 테이블의 PRIMARY KEY 데이터를 저장할때 자동으로 숫자를 1씩 증가시켜 주는 기능으로 사용 ※ 참고 자료 패스트캠퍼스 ‘데이터 사이언스 스쿨 Python 8기’ 수업자료 이동명, 권오현, 고정국, 「컴퓨터 사이언스 개정판」","categories":[{"name":"Programming 공부","slug":"Programming-공부","permalink":"http://yoursite.com/categories/Programming-공부/"},{"name":"Database","slug":"Programming-공부/Database","permalink":"http://yoursite.com/categories/Programming-공부/Database/"}],"tags":[{"name":"Database","slug":"Database","permalink":"http://yoursite.com/tags/Database/"},{"name":"MySQL","slug":"MySQL","permalink":"http://yoursite.com/tags/MySQL/"},{"name":"SQL","slug":"SQL","permalink":"http://yoursite.com/tags/SQL/"}]},{"title":"MySQL","slug":"Database_02","date":"2018-07-25T13:13:26.000Z","updated":"2018-08-11T00:06:11.000Z","comments":true,"path":"2018/07/25/Database_02/","link":"","permalink":"http://yoursite.com/2018/07/25/Database_02/","excerpt":"","text":"MySQL1. SQL 소개SQL(Structured Query Language) 관계형 데이터베이스를 조작하고 관리할 때 사용하는 데이터베이스 질의용 언어 1970년대 IBM에서 개발하여 IBM의 관계형 DBMS에 처음으로 사용 1986년 미국표준협회(ANSI)가 SQL 표준으로 채택하면서 현재까지 다양한 DBMS의 구조화 질의어로 널리 사용되고 있음 비절차적 언어이기 때문에 절차적언어에 비해 배우기 쉬움 자연어에 가까운 구문을 사용해 query를 표현하며 관계형 대수나 관계형 해석에 비해 표현력이 우수함 SQL의 기능 데이터 정의 기능 데이터 정의어(DDL)를 이용하여 테이블 생성 및 제거, 속성의 추가 및 삭제, view의 생성 및 제거, index의 생성 및 제거 등의 작업 수행 테이블을 생성하면서 여러 가지 무결성 제약 조건 기술 데이터 조작 기능 데이터 조작어(DML)를 이용하여 데이터의 검색, 삽입, 삭제, 수정 등의 연산을 수행 데이터 제어 기능 데이터 제어어(DCL)를 이용하여 transaction의 시작, 철회, 완료 등을 명시하고 table에 대해 권한을 부여하거나 취소 2. MySQL Basic CommandMySQL shell을 이용한 기본 명령 1) Dabatase DB 목록 보기 1mysql&gt; show databases; DB 만들기 1mysql&gt; create databases db_name; DB 접속 1mysql&gt; use databases db_name; 현재 접속 중인 DB 확인 1mysql&gt; select database(); DB 삭제 1mysql&gt; drop databases db_name; 2) Table Table 만들기 12-- name(문자열 20자), age (숫자 3자) column이 있는 user 테이블 생성 mysql&gt; create table user(name char(20), age int(3)); Table 목록 확인 테이블 추가나 삭제 후 table 목록 확인1mysql&gt; show tables; Table 구조 확인 1234-- table name: usermysql&gt; desc table user;mysql&gt; describe table user;mysql&gt; explain table user; Table 이름 바꾸기 12-- user에서 user1로 이름 변경mysql&gt; rename table user to user1; Table에 데이터 추가 12mysql&gt; insert into user1(name, age) values(\"alice\", 23);mysql&gt; insert into user1(name, age) values(\"peter\", 30); 추가된 데이터 확인 1mysql&gt; select * from user1; Table 삭제 1mysql&gt; drop table user1; ※ 참고 자료 패스트캠퍼스 ‘데이터 사이언스 스쿨 Python 8기’ 수업자료 이동명, 권오현, 고정국, 「컴퓨터 사이언스 개정판」","categories":[{"name":"Programming 공부","slug":"Programming-공부","permalink":"http://yoursite.com/categories/Programming-공부/"},{"name":"Database","slug":"Programming-공부/Database","permalink":"http://yoursite.com/categories/Programming-공부/Database/"}],"tags":[{"name":"Database","slug":"Database","permalink":"http://yoursite.com/tags/Database/"},{"name":"MySQL","slug":"MySQL","permalink":"http://yoursite.com/tags/MySQL/"},{"name":"SQL","slug":"SQL","permalink":"http://yoursite.com/tags/SQL/"}]},{"title":"Database 개념 및 기초","slug":"Database_01","date":"2018-07-25T12:33:48.000Z","updated":"2018-08-10T15:36:04.000Z","comments":true,"path":"2018/07/25/Database_01/","link":"","permalink":"http://yoursite.com/2018/07/25/Database_01/","excerpt":"","text":"Database 개념 및 기초1. Database 개요1.1 데이터베이스의 개념DB(Database) 방대한 데이터를 효율적으로 관리하기 위해 컴퓨터에 통합·저장한 것 통합하여 관리되는 데이터들의 집합 DBMS(Database Management System) 데이터베이스를 관리하는 미들웨어 시스템 데이터베이스에 데이터를 저장하고, 효율적으로 검색하고 수정할 수 있는 환경을 제공 권한이 없는 사용자가 접근하거나 시스템에 장애가 생겼을 때에도 데이터를 안전하게 보호하며, 여러 사용자가 데이터베이스에 동시에 접근할 수 있도록 제어 대표적인 DBMS: Oracle, MySQL 등 1.2 데이터베이스의 특징 한 조직의 여러 응용 프로그램이 저장된 데이터를 공유할 수 있도록 데이터를 통합하여 관리 데이터베이스에 저장된 데이터의 특징 통합되어 저장됨 물리적인 기억장치에 보관됨 필요에 따라 삽입, 삭제, 변경됨 여러 사람이 사용함 데이터베이스의 특징 실시간으로 접근 가능 계속 변화함 동시 공유가 가능 내용에 따라 참조 1.3 데이터베이스 언어 데이터 정의어(DDL, Data Definition Language) 데이터 저장 구조, 데이터 접근 방법, 데이터 형식 등 데이터베이스를 구축하거나 수정할 때 사용하는 언어 데이터 조직어(DML, Data Manipulation Language) 데이터 베이스에 저장된 데이터를 검색, 수정, 삽입, 삭제할 때 사용하는 언어로, 사용자와 DBMS 사이의 인터페이스를 제공 대표적 데이터 조직어: query 절차적언어 &amp; 비절차적 언어로 구분 절차적 언어(procedural language): 필요한 데이터와 검색 방법까지 명시 비절차적 언어(non-procedural language): 필요한 데이터만 명시하고 검색 방법은 명시하지 않음 SQL이 대표적 비절차적 언어 데이터 제어어(DCL, Data Control Language) 데이터를 보호하고 관리할 때 사용하는 언어 데이터의 무결성 유지, 보안 및 접근 제어, 시스템 장애로부터의 복구, 병행 수행 제어 기능 등을 담당 1.4 데이터베이스 사용자DBMS 활용 형태에 따라 세 가지 유형으로 구분 응용프로그래머 일반 프로그래밍언어와 데이터조작어를 이용하여 프로그램을 만듦 최종 사용자 데이터의 검색, 삽입, 삭제, 갱신 등을 위해 DBMS를 사용하는 사람 데이터베이스 질의어를 사요아여 데이터베이스 시스템에 접근한 후 원하는 정보를 찾음 데이터베이스 관리자 데이터 정의어와 데이터 제어어를 사용하여 데이터베이스 스키마를 생성하고 관리 주요 업무: 데이터베이스 스키마의 생성과 변경, 무결성 제약 조건 명시, 보안 정책 수립(사용자의 권한 설정 및 역할 관리), 저장 구조 및 접근 방법 정의, 백업과 복구 절차 수립, 표준화 시행 등 1.5 데이터베이스의 구분 관계형 데이터베이스(RDBMS, Relational Database Management System) 관계형 데이터 모델을 기반으로 하며 가장 널리 사용되는 데이터베이스 Oracle, MySQL, Postgresql, Sqlite 등 데이터 테이블 사이에 키값으로 관계를 가지고 있는 데이터베이스 데이터 사이의 관계 설정으로 최적화된 스키마를 설계 가능 NoSQL Mongodb, Hvase, Cassandra 등 데이터 테이블 사이에 관계가 없이 저장하는 데이터베이스 데이터 사이의 관계가 없으므로 복잡성이 줄고 많은 데이터를 저장가능하고 데이터 수정도 용이 RDBMS와 달리 data가 중복되어 저장되므로 row수가 늘어나지만 insert 속도가 빨라 big data 처리와 관련해 최근 주목 받게 됨 2. RDBMS(관계형 데이터베이스)2.1 RDBMS의 개요특징 구조가 단순하고 데이터 분류, 정렬, 탐색속도가 빠름 오래 사용된 만큼 신뢰성이 높음 스키마 수정이 어려움 구조 Server &gt; Database &gt; Table &gt; Row &gt; Value 2.2 RDBMS의 구조 Table row와 column으로 이루어진 데이터베이스를 구성하는 기본 단위 python pandas의 DataFrame에 해당 Storage Engine 어떤 data를 쓸지에 따라 결정 (보통 InnoDB 많이 사용) MyISAM: full text index 지원, table 단위 lock(단점), select가 빠름, 구조 단순 InnoDB: transaction 지원, row 단위 lock(장점), 자원을 만이 사용, 구조 복잡 Row 테이블의 각 행, tuple 또는 record라고도 함 cardinality: row(tuple)의 개수 Column 데이터의 각 열, field 또는 attribute라고도 함 degree(차수): tuple을 구성하는 attribute의 개수 (column수) domain: attirube 하나가 가질 수 있는 값의 집합 Value row와 column에 포함되어 있는 데이터 Key row에서 unique한 값으로, row의 식별자로 사용 key의 종류 후보키(candidate key): 각 row를 구별할 수 있는 최소한의 속성으로 구성된 키 두 개 column의 조합이 후보 키가 될 수도 있음 (이 경우 어떤 한 속성을 제거하면 구별 능력을 상실) 기본키(primary key): 후보키 중 대표로 선정한 key 대체키(alternate key): 기본키가 아닌 후보키 외래키(foreign key): 다른 테이블의 기본키를 참조하며, 테이블 사이의 관계를 나타내는 키 Relation 두 개의 table은 일대일(1:1, one-to-one), 일대다(1:n, one-to-many), 다대다(n:n, many-to-many)의 관계를 가질 수 있음 2.3 Schema Schema Schema: 데이터베이스의 구조에 대한 디자인 무결성 제약 조건(integrity constraint) 데이터베이스 상태가 만족해야 하는 조건으로, 사용자가 데이터베이스를 갱신할 때 데이터베이스의 일관성을 손상하지 않도록 보장하는 수단 schema를 정의할 때 한 번만 명시하면 데이터베이스가 갱신될 때 DBMS가 자동으로 검사 무결성 제약조건의 구분 도메인 무결성 제약 조건 각 속성값은 반드시 도메인에 속한 값을 가져야 함 속성의 default, 가능한 값의 범위, null값 허용 여부 등을 지정 개체 무결성 제약 조건 기본키를 구성하는 속성은 null값을 가질 수 없음 참조 무결성 제약 조건 외래키 값은 참조된 테이블의 기본키와 도메인이 동일해야 함 3. NoSQL3.1 NoSQL의 개요NoSQL의 개념 NoSQL: Not Only SQL RDBMS의 한계(확장성이 낮음)를 극복하기 위해 만들어진 데이터베이스 NoSQL의 특징 확장성이 좋음 → 데이터의 분산처리 용이 데이터 저장이 유연: RDBMS와 다르게 구조의 변경이 불필요 Schema 및 join이 없음 collection 별로 관계가 없이 때문에 모든 데이터가 들어있어야 함 저장되는 데이터는 key-value 형태의 JSON 포맷 사용 select는 RDBMS보다 느리지만 Insert는 빨라 대용량 데이터베이스에 많이 사용됨 Transaction이 지원되지 않음(동시수정에 대한 신뢰성이 지원되지 않음) 금융권 같은 곳에서는 사용할 수 없음 3.2 MongodbMongodb C++로 작성된 오픈소스 데이터 베이스 뛰어난 확장성과 성능을 가짐 NoSQL에서는 인지도가 가장 높음 Mongodb의 구조 Server &gt; Database &gt; Collection &gt; Document &gt; key:value Collection: RDBMS의 Table과 같은 개념 Document: RDBMS의 Row와 같은 개념 Key: RDBMS의 Column과 같은 개념 ※ 참고 자료 패스트캠퍼스 ‘데이터 사이언스 스쿨 Python 8기’ 수업자료 이동명, 권오현, 고정국, 「컴퓨터 사이언스 개정판」","categories":[{"name":"Programming 공부","slug":"Programming-공부","permalink":"http://yoursite.com/categories/Programming-공부/"},{"name":"Database","slug":"Programming-공부/Database","permalink":"http://yoursite.com/categories/Programming-공부/Database/"}],"tags":[{"name":"Database","slug":"Database","permalink":"http://yoursite.com/tags/Database/"}]},{"title":"2018-07-25-TIL","slug":"2018-07-25-TIL","date":"2018-07-25T12:12:55.000Z","updated":"2018-07-25T14:20:59.000Z","comments":true,"path":"2018/07/25/2018-07-25-TIL/","link":"","permalink":"http://yoursite.com/2018/07/25/2018-07-25-TIL/","excerpt":"","text":"공부한 것 &amp; 리뷰 팀 프로젝트: 2018 빅콘테스트 블레이드앤소울 이탈자 예측 문제 train data 중 guild, party, activity, payment를 train id에 맞는 형태로 정리 각각 데이터마다 형태도 다르고 변수의 의미 파악도 어려웠지만 조금씩 길이 보이는 것 같다. 내일 trade 데이터를 정리하고 나면 어느 정도 틀이 나올 것 같다 데이터베이스 개념 및 기초 복습 &amp; 블로그 포스팅 처음으로 공부 내용을 정리해서 블로그에 올렸다. 앞으로 python과 알고리즘 공부도 계속하면서 포스팅을 해봐야겠다 내일 공부할 것 팀 프로젝트: 2018 빅콘테스트 블레이드앤소울 이탈자 예측 문제 DSS 수업: 데이터베이스 - ORM DSS 현업자 특강 이번 주에 공부할 것 분류 팀 프로젝트: 데이터 형태 정리, EDA DSS: 프로그래밍 &lt;Database 개념 및 기초&gt; 공부 DSS: 프로그래밍 &lt;Database - SQL&gt; 복습하기 DSS: 프로그래밍 &lt;Database - noSQL&gt; 복습하기 DSS: 프로그래밍 &lt;웹 크롤링&gt; 복습하기 DSS: 수학 &lt;45절. 로지스틱 회귀분석&gt; 복습하기 DSS: 수학 &lt;46절. QDA와 나이브 베이즈 모형&gt; 복습하기 DSS: 수학 &lt;47절. 의사 결정 나무&gt; 복습하기 DSS: 수학 &lt;48절. 앙상블 기법&gt; 복습하기 인성면접 답안 대비 (개인 신상, 취미, 특기 관련 질문) 관심 기업 조사","categories":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/categories/TIL-Today-I-Learned/"}],"tags":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/tags/TIL-Today-I-Learned/"}]},{"title":"2018-07-24-TIL","slug":"2018-07-24-TIL","date":"2018-07-24T14:15:23.000Z","updated":"2018-07-25T12:12:34.000Z","comments":true,"path":"2018/07/24/2018-07-24-TIL/","link":"","permalink":"http://yoursite.com/2018/07/24/2018-07-24-TIL/","excerpt":"","text":"공부한 것 &amp; 리뷰 DSS 복습: 엔트로피, 의사 결정 나무 복습 DSS 수업: 퍼셉트론과 서포트벡터 머신, 커널 서포트벡터 머신 등 내일 공부할 것 팀 프로젝트 이번 주에 공부할 것 DSS: 프로그래밍 복습하기 DSS: 프로그래밍 복습하기 DSS: 프로그래밍 &lt;웹 크롤링&gt; 복습하기 DSS: 수학 &lt;45절. 로지스틱 회귀분석&gt; 복습하기 DSS: 수학 &lt;46절. QDA와 나이브 베이즈 모형&gt; 복습하기 DSS: 수학 &lt;47절. 의사 결정 나무&gt; 복습하기 DSS: 수학 &lt;48절. 앙상블 기법&gt; 복습하기 인성면접 답안 대비 (개인 신상, 취미, 특기 관련 질문) 관심 기업 조사 DSS: 수학 &lt;11장. 검정과 추정&gt; 복습하기 DSS: 수학 &lt;34절. 선형회귀분석의 기초&gt; 복습하기 DSS: 수학 &lt;35절. 입력변수가 카테고리값인 경우&gt; 복습하기 DSS: 수학 &lt;36절. 예측성능의 진단과 비교&gt; 복습하기 DSS: 수학 &lt;37절. 과최적화와 교차 검증&gt; 복습하기 DSS: 수학 &lt;38절. 추천시스템&gt; 복습하기","categories":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/categories/TIL-Today-I-Learned/"}],"tags":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/tags/TIL-Today-I-Learned/"}]},{"title":"2018-07-23-TIL","slug":"2018-07-23-TIL","date":"2018-07-23T17:09:06.000Z","updated":"2018-07-23T17:17:54.000Z","comments":true,"path":"2018/07/24/2018-07-23-TIL/","link":"","permalink":"http://yoursite.com/2018/07/24/2018-07-23-TIL/","excerpt":"","text":"공부한 것 &amp; 리뷰 자소서 특강 3: 피드백 받고 수정한 부분과 궁금한 점 질문 DSS: Database 복습 및 quiz 3 풀기 팀프로젝트: payment data 정리 작업 내일 공부할 것 DSS 복습: 의사 결정 나무 복습 DSS 수업: 퍼셉트론과 서포트벡터 머신, 커널 서포트벡터 머신 등 팀 프로젝트: party data 로컬 mysql에 올리기, party data 정리 작업 이번 주에 공부할 것 DSS: 프로그래밍 복습하기 DSS: 프로그래밍 &lt;웹 크롤링&gt; 복습하기 DSS: 수학 &lt;45절. 로지스틱 회귀분석&gt; 복습하기 DSS: 수학 &lt;46절. QDA와 나이브 베이즈 모형&gt; 복습하기 DSS: 수학 &lt;47절. 의사 결정 나무&gt; 복습하기 DSS: 수학 &lt;48절. 앙상블 기법&gt; 복습하기 인성면접 답안 대비 (개인 신상, 취미, 특기 관련 질문) 관심 기업 조사 DSS: 수학 &lt;11장. 검정과 추정&gt; 복습하기 DSS: 수학 &lt;34절. 선형회귀분석의 기초&gt; 복습하기 DSS: 수학 &lt;35절. 입력변수가 카테고리값인 경우&gt; 복습하기 DSS: 수학 &lt;36절. 예측성능의 진단과 비교&gt; 복습하기 DSS: 수학 &lt;37절. 과최적화와 교차 검증&gt; 복습하기 DSS: 수학 &lt;38절. 추천시스템&gt; 복습하기","categories":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/categories/TIL-Today-I-Learned/"}],"tags":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/tags/TIL-Today-I-Learned/"}]},{"title":"2018-07-22-TIL","slug":"2018-07-22-TIL","date":"2018-07-22T16:29:26.000Z","updated":"2018-07-22T16:31:24.000Z","comments":true,"path":"2018/07/23/2018-07-22-TIL/","link":"","permalink":"http://yoursite.com/2018/07/23/2018-07-22-TIL/","excerpt":"","text":"공부한 것 &amp; 리뷰 자소서 피드백 받은 부분 수정 내일 공부할 것 DSS 복습: Classification DSS: 자소서 특강3 (개인 피드백) 이번 주에 공부할 것 DSS: 통계 &lt;11장. 검정과 추정&gt; 복습하기 DSS: 통계 &lt;34절. 선형회귀분석의 기초&gt; 복습하기 DSS: 통계 &lt;35절. 입력변수가 카테고리값인 경우&gt; 복습하기 DSS: 통계 &lt;36절. 예측성능의 진단과 비교&gt; 복습하기 DSS: 통계 &lt;37절. 과최적화와 교차 검증&gt; 복습하기 DSS: 통계 &lt;38절. 추천시스템&gt; 복습하기 DSS: 통계 &lt;43절. 클러스터링&gt; 복습하기 DSS: 통계 &lt;44절. 분류의 기초&gt; 복습하기 DSS: 통계 &lt;45절. 로지스틱 회귀분석&gt; 복습하기 DSS: 통계 &lt;46절. QDA와 나이브 베이즈 모형&gt; 복습하기 자소서 다듬기 인성면접 답안 대비 (개인 신상, 취미, 특기 관련 질문) 관심 기업 조사","categories":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/categories/TIL-Today-I-Learned/"}],"tags":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/tags/TIL-Today-I-Learned/"}]},{"title":"2018-07-21-TIL","slug":"2018-07-21-TIL","date":"2018-07-21T14:55:34.000Z","updated":"2018-07-21T15:00:43.000Z","comments":true,"path":"2018/07/21/2018-07-21-TIL/","link":"","permalink":"http://yoursite.com/2018/07/21/2018-07-21-TIL/","excerpt":"","text":"공부한 것 &amp; 리뷰 DSS: 통계 &lt;45절. 로지스틱 회귀분석&gt; 복습 (진행) DSS 수업: 의사결정나무, 앙상블기법 분류 팀 프로젝트 아이디당 주별로 여러 row의 데이터가 존재하는 데이터셋들을 pivot과 groupby 등의 방법으로 아이디 당 한 줄로 정리하는 작업 진행 내일 공부할 것 DSS 복습: Classification 월요일 자소서 피드백에 대비해 자소서 다듬기 이번 주에 공부할 것 DSS: 통계 &lt;11장. 검정과 추정&gt; 복습하기 DSS: 통계 &lt;34절. 선형회귀분석의 기초&gt; 복습하기 DSS: 통계 &lt;35절. 입력변수가 카테고리값인 경우&gt; 복습하기 DSS: 통계 &lt;36절. 예측성능의 진단과 비교&gt; 복습하기 DSS: 통계 &lt;37절. 과최적화와 교차 검증&gt; 복습하기 DSS: 통계 &lt;38절. 추천시스템&gt; 복습하기 DSS: 통계 &lt;43절. 클러스터링&gt; 복습하기 DSS: 통계 &lt;44절. 분류의 기초&gt; 복습하기 DSS: 통계 &lt;45절. 로지스틱 회귀분석&gt; 복습하기 DSS: 통계 &lt;46절. QDA와 나이브 베이즈 모형&gt; 복습하기 자소서 다듬기 인성면접 답안 대비 (개인 신상, 취미, 특기 관련 질문) 관심 기업 조사","categories":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/categories/TIL-Today-I-Learned/"}],"tags":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/tags/TIL-Today-I-Learned/"}]},{"title":"2018-07-20-TIL","slug":"2018-07-20-TIL","date":"2018-07-20T16:24:00.000Z","updated":"2018-07-20T16:27:33.000Z","comments":true,"path":"2018/07/21/2018-07-20-TIL/","link":"","permalink":"http://yoursite.com/2018/07/21/2018-07-20-TIL/","excerpt":"","text":"공부한 것 &amp; 리뷰 DSS: 통계 &lt;44절. 분류의 기초&gt; 복습 (완료) DSS 수업: sql w/ python, mongoDB 분류 팀 프로젝트 크기가 큰 csv를 다루기 위해 로컬에 mysql을 설치하고 train data들을 살펴봄 내일 공부할 것 DSS 수업: 의사결정나무 분류 팀 프로젝트 이번 주에 공부할 것 DSS: 통계 &lt;11장. 검정과 추정&gt; 복습하기 DSS: 통계 &lt;34절. 선형회귀분석의 기초&gt; 복습하기 DSS: 통계 &lt;35절. 입력변수가 카테고리값인 경우&gt; 복습하기 DSS: 통계 &lt;36절. 예측성능의 진단과 비교&gt; 복습하기 DSS: 통계 &lt;37절. 과최적화와 교차 검증&gt; 복습하기 DSS: 통계 &lt;38절. 추천시스템&gt; 복습하기 DSS: 통계 &lt;43절. 클러스터링&gt; 복습하기 DSS: 통계 &lt;44절. 분류의 기초&gt; 복습하기 DSS: 통계 &lt;45절. 로지스틱 회귀분석&gt; 복습하기 DSS: 통계 &lt;46절. QDA와 나이브 베이즈 모형&gt; 복습하기 DSS: 인성면접 답안 대비 (개인 신상, 취미, 특기 관련 질문) 관심 기업 조사","categories":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/categories/TIL-Today-I-Learned/"}],"tags":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/tags/TIL-Today-I-Learned/"}]},{"title":"2018-07-19-TIL","slug":"2018-07-19-TIL","date":"2018-07-19T02:18:44.000Z","updated":"2018-07-19T15:50:01.000Z","comments":true,"path":"2018/07/19/2018-07-19-TIL/","link":"","permalink":"http://yoursite.com/2018/07/19/2018-07-19-TIL/","excerpt":"","text":"공부한 것 &amp; 리뷰 DSS 통계: &lt;43절. 클러스터링&gt; 복습 (완료) DSS: 통계 &lt;44절. 분류의 기초&gt; 복습 (진행) DSS 수업: SQL syntax intermediate DSS: 졸업생 특강 내일 공부할 것 DSS 수업: noSQL 분류 팀 프로젝트 이번 주에 공부할 것 DSS: 통계 &lt;11장. 검정과 추정&gt; 복습하기 DSS: 통계 &lt;34절. 선형회귀분석의 기초&gt; 복습하기 DSS: 통계 &lt;35절. 입력변수가 카테고리값인 경우&gt; 복습하기 DSS: 통계 &lt;36절. 예측성능의 진단과 비교&gt; 복습하기 DSS: 통계 &lt;37절. 과최적화와 교차 검증&gt; 복습하기 DSS: 통계 &lt;38절. 추천시스템&gt; 복습하기 DSS: 통계 &lt;43절. 클러스터링&gt; 복습하기 DSS: 통계 &lt;44절. 분류의 기초&gt; 복습하기 DSS: 통계 &lt;45절. 로지스틱 회귀분석&gt; 복습하기 DSS: 통계 &lt;46절. QDA와 나이브 베이즈 모형&gt; 복습하기 DSS: 인성면접 답안 대비 (개인 신상, 취미, 특기 관련 질문) 관심 기업 조사","categories":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/categories/TIL-Today-I-Learned/"}],"tags":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/tags/TIL-Today-I-Learned/"}]},{"title":"2018-07-18-TIL","slug":"2018-07-18-TIL","date":"2018-07-18T15:41:44.000Z","updated":"2018-07-18T16:00:54.000Z","comments":true,"path":"2018/07/19/2018-07-18-TIL/","link":"","permalink":"http://yoursite.com/2018/07/19/2018-07-18-TIL/","excerpt":"","text":"공부한 것 &amp; 리뷰 빅콘테스트 2018 게임 이탈 유저 예측 문제의 도메인 지식을 쌓기 위해 게임을 체험해보았다. 일단 나같은 게임 초보자들에겐 너무 어려운걸ㅜ? 데이터셋의 크기도 엄청나다. 압축파일이 약 3기가에 압축을 푸니 7기가가 넘는 듯하다. 내 노트북으로 과연 이 과제를 할 수는 있는 걸까?! ㅋㅋ 내일 mmap을 활용해서 csv를 여는 것을 시도해봐야겠다. 데이터베이스 퀴즈 과제 SQL의 기초 문법은 수월한 편이다. 내일 join을 배우는 것 같은데 기대가 됨 내일 공부할 것 DSS 수업: SQL DSS 통계 복습 DSS: 졸업생 특강 이번 주에 공부할 것 DSS: 통계 &lt;11장. 검정과 추정&gt; 복습하기 DSS: 통계 &lt;34절. 선형회귀분석의 기초&gt; 복습하기 DSS: 통계 &lt;35절. 입력변수가 카테고리값인 경우&gt; 복습하기 DSS: 통계 &lt;36절. 예측성능의 진단과 비교&gt; 복습하기 DSS: 통계 &lt;37절. 과최적화와 교차 검증&gt; 복습하기 DSS: 통계 &lt;38절. 추천시스템&gt; 복습하기 DSS: 통계 &lt;43절. 클러스터링&gt; 복습하기 DSS: 통계 &lt;44절. 분류의 기초&gt; 복습하기 DSS: 통계 &lt;45절. 로지스틱 회귀분석&gt; 복습하기 DSS: 통계 &lt;46절. QDA와 나이브 베이즈 모형&gt; 복습하기 DSS: 인성면접 답안 대비 (개인 신상, 취미, 특기 관련 질문)","categories":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/categories/TIL-Today-I-Learned/"}],"tags":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/tags/TIL-Today-I-Learned/"}]},{"title":"2018-07-17-TIL","slug":"2018-07-17-TIL","date":"2018-07-17T15:07:53.000Z","updated":"2018-07-17T15:12:22.000Z","comments":true,"path":"2018/07/18/2018-07-17-TIL/","link":"","permalink":"http://yoursite.com/2018/07/18/2018-07-17-TIL/","excerpt":"","text":"공부한 것 &amp; 리뷰 빅콘테스트 2018 설명회 참가 게임 이탈 유저 예측 문제는 생각보다 데이터 양도 크고 challenging한 프로젝트가 될 것 같다. 데이터사이언스에서 좋은 팀프로젝트 결과를 낼 수 있는 마지막 기회고, 포트폴리오를 구성하기에도 좋은 과제일 것 같으니 열심히 해봐야겠다. 데이터베이스 개념 복습 내일 공부할 것 게임 이탈 유저 예측 문제 데이터 살펴보기, 게임 해보기 ㅎㅎ DSS: 데이터 베이스 과제 인성 면접 답안 3개 이상 작성해보기 이번 주에 공부할 것 DSS: 통계 &lt;11장. 검정과 추정&gt; 복습하기 DSS: 통계 &lt;34절. 선형회귀분석의 기초&gt; 복습하기 DSS: 통계 &lt;35절. 입력변수가 카테고리값인 경우&gt; 복습하기 DSS: 통계 &lt;36절. 예측성능의 진단과 비교&gt; 복습하기 DSS: 통계 &lt;37절. 과최적화와 교차 검증&gt; 복습하기 DSS: 통계 &lt;38절. 추천시스템&gt; 복습하기 DSS: 통계 &lt;43절. 클러스터링&gt; 복습하기 DSS: 통계 &lt;44절. 분류의 기초&gt; 복습하기 DSS: 통계 &lt;45절. 로지스틱 회귀분석&gt; 복습하기 DSS: 통계 &lt;46절. QDA와 나이브 베이즈 모형 복습하기 DSS: 인성면접 답안 대비 (개인 신상, 취미, 특기 관련 질문)","categories":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/categories/TIL-Today-I-Learned/"}],"tags":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/tags/TIL-Today-I-Learned/"}]},{"title":"2018-07-16-TIL","slug":"2018-07-16-TIL","date":"2018-07-16T15:34:13.000Z","updated":"2018-07-17T15:12:27.000Z","comments":true,"path":"2018/07/17/2018-07-16-TIL/","link":"","permalink":"http://yoursite.com/2018/07/17/2018-07-16-TIL/","excerpt":"","text":"공부한 것 &amp; 리뷰 DSS 모의 인성면접 역시 준비가 부족해서 깊이 있는 답변을 하지 못했다. 조금씩 면접 답변에 대한 준비를 해봐야겠다. 말하기의 연습도 필요하겠다. DSS 수업: 나이브 베이즈 분류 모형 내일 공부할 것 DSS: 데이터베이스 복습 빅콘테스트 2018 설명회 참가하기 이번 주에 공부할 것 DSS: 통계 &lt;11장. 검정과 추정&gt; 복습하기 DSS: 통계 &lt;34절. 선형회귀분석의 기초&gt; 복습하기 DSS: 통계 &lt;35절. 입력변수가 카테고리값인 경우&gt; 복습하기 DSS: 통계 &lt;36절. 예측성능의 진단과 비교&gt; 복습하기 DSS: 통계 &lt;37절. 과최적화와 교차 검증&gt; 복습하기 DSS: 통계 &lt;38절. 추천시스템&gt; 복습하기 DSS: 통계 &lt;43절. 클러스터링&gt; 복습하기 DSS: 통계 &lt;44절. 분류의 기초&gt; 복습하기 DSS: 통계 &lt;45절. 로지스틱 회귀분석&gt; 복습하기 DSS: 통계 &lt;46절. QDA와 나이브 베이즈 모형 복습하기 DSS: 인성면접 답안 대비 (개인 신상, 취미, 특기 관련 질문)","categories":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/categories/TIL-Today-I-Learned/"}],"tags":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/tags/TIL-Today-I-Learned/"}]},{"title":"2018-07-15-TIL","slug":"2018-07-15-TIL","date":"2018-07-15T15:13:23.000Z","updated":"2018-07-16T15:41:57.000Z","comments":true,"path":"2018/07/16/2018-07-15-TIL/","link":"","permalink":"http://yoursite.com/2018/07/16/2018-07-15-TIL/","excerpt":"","text":"공부한 것 &amp; 리뷰 DSS 분류 팀프로젝트 주제 선정 2018빅콘테스트의 게임 이탈자 예측 문제에 도전하기로 일단 의견을 모았다. 학원 매니저님들이 검토해보고 괜찮다고 하시면 재미있게 도전해볼 수 있을 것 같다. 화요일에 있을 공모전 설명회에 참가 신청도 해두었다. 내일 모의 인성면접을 별로 준비하지 못했다. 1분 자기소개만이라도 조금 다듬어 보았는데, 다른 문제를 물어보면 어버버할 것 같아 걱정이다. 내일 공부할 것 DSS 모의 인성면접 DSS 수업: 분류 이번 주에 공부할 것 DSS: 통계 &lt;11장. 검정과 추정&gt; 복습하기 DSS: 통계 &lt;34절. 선형회귀분석의 기초&gt; 복습하기 DSS: 통계 &lt;35절. 입력변수가 카테고리값인 경우&gt; 복습하기 DSS: 통계 &lt;36절. 예측성능의 진단과 비교&gt; 복습하기 DSS: 통계 &lt;37절. 과최적화와 교차 검증&gt; 복습하기 DSS: 통계 &lt;38절. 추천시스템&gt; 복습하기 DSS: 통계 &lt;43절. 클러스터링&gt; 복습하기 DSS: 통계 &lt;44절. 분류의 기초&gt; 복습하기","categories":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/categories/TIL-Today-I-Learned/"}],"tags":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/tags/TIL-Today-I-Learned/"}]},{"title":"2018-07-14-TIL","slug":"2018-07-14-TIL","date":"2018-07-14T03:48:24.000Z","updated":"2018-07-15T02:23:39.000Z","comments":true,"path":"2018/07/14/2018-07-14-TIL/","link":"","permalink":"http://yoursite.com/2018/07/14/2018-07-14-TIL/","excerpt":"","text":"공부한 것 &amp; 리뷰 DSS 수업: 분류성능평가, 로지스틱회귀분석, QDA &amp; LDA 대학원에서 방법론으로 로짓회귀를 배웠을 때는 “이해는 제대로 못해도 논문 쓸때 분석 돌려서 사용할 수만 있으면 되지 뭐”하는 생각으로 했었는데, 기초가 되는 수학부터 제대로 배우고 나서 로짓회귀를 배우니 이해도 잘 되고 좋다 DSS 수업: 파이썬을 사용한 문서 프로세싱 내일 공부할 것 분류 프로젝트 주제 선정 이번 주에 공부할 것 DSS: CSS selector 수업 내용 복습하기 DSS: javascript 수업 내용 복습하기 DSS: Server cloud(AWS), pyenv/virtualenv/autoenv 복습 DSS: crontab, rest API, flask 복습, slack 챗봇 만들기 DSS: 통계 &lt;11장. 검정과 추정&gt; 복습하기 DSS: 통계 &lt;34절. 선형회귀분석의 기초&gt; 복습하기 DSS: 통계 &lt;35절. 입력변수가 카테고리값인 경우&gt; 복습하기 DSS: 통계 &lt;36절. 예측성능의 진단과 비교&gt; 복습하기 DSS: 통계 &lt;37절. 과최적화와 교차 검증&gt; 복습하기 DSS: 통계 &lt;38절. 추천시스템&gt; 복습하기 DSS: 통계 &lt;43절. 클러스터링&gt; 복습하기 DSS: 통계 &lt;44절. 분류의 기초&gt; 복습하기 블로그에 about 페이지 만들기","categories":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/categories/TIL-Today-I-Learned/"}],"tags":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/tags/TIL-Today-I-Learned/"}]},{"title":"2018-07-13-TIL","slug":"2018-07-13-TIL","date":"2018-07-13T13:16:49.000Z","updated":"2018-07-14T04:11:04.000Z","comments":true,"path":"2018/07/13/2018-07-13-TIL/","link":"","permalink":"http://yoursite.com/2018/07/13/2018-07-13-TIL/","excerpt":"","text":"공부한 것 &amp; 리뷰 DSS 수업: database sql basic syntax workbench를 이용하여 sql의 기본 문법을 학습함 내일 공부할 것 DSS 수업: classification DSS: classification project 주제 정하기 이번 주에 공부할 것 DSS: CSS selector 수업 내용 복습하기 DSS: javascript 수업 내용 복습하기 DSS: Server cloud(AWS), pyenv/virtualenv/autoenv 복습 DSS: crontab, rest API, flask 복습, slack 챗봇 만들기 DSS: 통계 &lt;11장. 검정과 추정&gt; 복습하기 DSS: 통계 &lt;34절. 선형회귀분석의 기초&gt; 복습하기 DSS: 통계 &lt;35절. 입력변수가 카테고리값인 경우&gt; 복습하기 DSS: 통계 &lt;36절. 예측성능의 진단과 비교&gt; 복습하기 DSS: 통계 &lt;37절. 과최적화와 교차 검증&gt; 복습하기 DSS: 통계 &lt;38절. 추천시스템&gt; 복습하기 DSS: 통계 &lt;43절. 클러스터링&gt; 복습하기 DSS: 통계 &lt;44절. 분류의 기초&gt; 복습하기 블로그에 about 페이지 만들기","categories":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/categories/TIL-Today-I-Learned/"}],"tags":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/tags/TIL-Today-I-Learned/"}]},{"title":"2018-07-12-TIL","slug":"2018-07-12-TIL","date":"2018-07-12T01:49:22.000Z","updated":"2018-07-12T14:15:47.000Z","comments":true,"path":"2018/07/12/2018-07-12-TIL/","link":"","permalink":"http://yoursite.com/2018/07/12/2018-07-12-TIL/","excerpt":"","text":"공부한 것 &amp; 리뷰 DSS 수업: database 기초 데이터베이스에 대한 기초 개념을 배우고 mySQL을 깔고 실행해보았다. 새로운 내용을 배우니 흥미롭군 DSS: 현업자 특강 from 카카오뱅크 CRM 데이터분석 현업의 데이터 분석 업무 환경에 대해 설명해주신 부분이 좋았다. 마침 데이터베이스 수업을 듣고 이 특강을 들으니 참으로 적절하지 아니한가. 카카오뱅크도 참 일하기 좋은 회사 같아 보였다. DSS: crontab 복습하기 DSS: rest API, flask 복습, slack 챗봇 만들기 내일 공부할 것 DSS: 수업 &lt;데이터베이스&gt; DSS: 통계 &lt;43절. 클러스터링&gt; 복습하기 DSS: 통계 &lt;44절. 분류의 기초&gt; 복습하기 이번 주에 공부할 것 DSS: CSS selector 수업 내용 복습하기 DSS: javascript 수업 내용 복습하기 DSS: Server cloud(AWS), pyenv/virtualenv/autoenv 복습 DSS: crontab, rest API, flask 복습, slack 챗봇 만들기 DSS: 통계 &lt;11장. 검정과 추정&gt; 복습하기 DSS: 통계 &lt;34절. 선형회귀분석의 기초&gt; 복습하기 DSS: 통계 &lt;35절. 입력변수가 카테고리값인 경우&gt; 복습하기 DSS: 통계 &lt;36절. 예측성능의 진단과 비교&gt; 복습하기 DSS: 통계 &lt;37절. 과최적화와 교차 검증&gt; 복습하기 DSS: 통계 &lt;38절. 추천시스템&gt; 복습하기 DSS: 통계 &lt;43절. 클러스터링&gt; 복습하기 DSS: 통계 &lt;44절. 분류의 기초&gt; 복습하기 블로그에 about 페이지 만들기","categories":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/categories/TIL-Today-I-Learned/"}],"tags":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/tags/TIL-Today-I-Learned/"}]},{"title":"2018-07-11-TIL","slug":"2018-07-11-TIL","date":"2018-07-11T05:14:00.000Z","updated":"2018-07-11T16:38:16.000Z","comments":true,"path":"2018/07/11/2018-07-11-TIL/","link":"","permalink":"http://yoursite.com/2018/07/11/2018-07-11-TIL/","excerpt":"","text":"공부한 것 &amp; 리뷰 DSS: javascript 수업 내용 복습 즉시실행함수, 익명함수와 callback 함수의 개념은 다시 보아도 좀 어려운 것 같다. javascript는 데이터사이언스스쿨 과정 중에는 쓸 일이 적기 때문에 필요시 나중에 더 공부를 해야할 것 같다. DSS: python으로 email 보내기 복습 python에는 참 편리한 패키지도 많기도 하지 블로그에 about 페이지 만들기 DSS: Server cloud(AWS), pyenv/virtualenv/autoenv 복습 내일 공부할 것이번 주에 공부할 것 DSS: CSS selector 수업 내용 복습하기 DSS: javascript 수업 내용 복습하기 DSS: Server cloud(AWS), pyenv/virtualenv/autoenv 복습 DSS: 통계 &lt;11장. 검정과 추정&gt; 복습하기 DSS: 통계 &lt;34절. 선형회귀분석의 기초&gt; 복습하기 DSS: 통계 &lt;35절. 입력변수가 카테고리값인 경우&gt; 복습하기 DSS: 통계 &lt;36절. 예측성능의 진단과 비교&gt; 복습하기 DSS: 통계 &lt;37절. 과최적화와 교차 검증&gt; 복습하기 DSS: 통계 &lt;38절. 추천시스템&gt; 복습하기 DSS: 통계 &lt;43절. 클러스터링&gt; 복습하기 DSS: 통계 &lt;44절. 분류의 기초&gt; 복습하기 블로그에 about 페이지 만들기","categories":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/categories/TIL-Today-I-Learned/"}],"tags":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/tags/TIL-Today-I-Learned/"}]},{"title":"2018-07-10-TIL","slug":"2018-07-10-TIL","date":"2018-07-10T06:50:16.000Z","updated":"2018-07-11T05:12:49.000Z","comments":true,"path":"2018/07/10/2018-07-10-TIL/","link":"","permalink":"http://yoursite.com/2018/07/10/2018-07-10-TIL/","excerpt":"","text":"공부한 것 &amp; 리뷰 DSS: CSS selector 수업 내용 복습 내일 공부할 것 DSS: javascript 수업 내용 복습하기 블로그에 about 페이지 만들기 이번 주에 공부할 것 DSS: CSS selector 수업 내용 복습하기 DSS: javascript 수업 내용 복습하기 DSS: 통계 &lt;11장. 검정과 추정&gt; 복습하기 DSS: 통계 &lt;34절. 선형회귀분석의 기초&gt; 복습하기 DSS: 통계 &lt;35절. 입력변수가 카테고리값인 경우&gt; 복습하기 DSS: 통계 &lt;36절. 예측성능의 진단과 비교&gt; 복습하기 DSS: 통계 &lt;37절. 과최적화와 교차 검증&gt; 복습하기 DSS: 통계 &lt;38절. 추천시스템&gt; 복습하기 DSS: 통계 &lt;43절. 클러스터링&gt; 복습하기 DSS: 통계 &lt;44절. 분류의 기초&gt; 복습하기 블로그에 about 페이지 만들기","categories":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/categories/TIL-Today-I-Learned/"}],"tags":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/tags/TIL-Today-I-Learned/"}]},{"title":"2018-07-09-TIL","slug":"2018-07-09-TIL","date":"2018-07-09T06:24:51.000Z","updated":"2018-07-10T07:00:06.000Z","comments":true,"path":"2018/07/09/2018-07-09-TIL/","link":"","permalink":"http://yoursite.com/2018/07/09/2018-07-09-TIL/","excerpt":"","text":"공부한 것 &amp; 리뷰 DSS 수업: &lt;44절. 분류의 기초&gt; 지난주 토요일 프로젝트 트러블 슈팅 후 일요일에 휴식을 잘 취하고 다시 시작하는 기분! 다시 열심히 해보자 내일 공부할 것 DSS: CSS selector 수업 내용 복습하기 DSS: javascript 수업 내용 복습하기 블로그에 about 페이지 만들기 이번 주에 공부할 것 DSS: CSS selector 수업 내용 복습하기 DSS: javascript 수업 내용 복습하기 DSS: 통계 &lt;11장. 검정과 추정&gt; 복습하기 DSS: 통계 &lt;34절. 선형회귀분석의 기초&gt; 복습하기 DSS: 통계 &lt;35절. 입력변수가 카테고리값인 경우&gt; 복습하기 DSS: 통계 &lt;36절. 예측성능의 진단과 비교&gt; 복습하기 DSS: 통계 &lt;37절. 과최적화와 교차 검증&gt; 복습하기 DSS: 통계 &lt;38절. 추천시스템&gt; 복습하기 DSS: 통계 &lt;43절. 클러스터링&gt; 복습하기 DSS: 통계 &lt;44절. 분류의 기초&gt; 복습하기 블로그에 about 페이지 만들기","categories":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/categories/TIL-Today-I-Learned/"}],"tags":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/tags/TIL-Today-I-Learned/"}]},{"title":"python 02. Python Condition & Loop (조건문과 반복문)","slug":"python_02_condition, loop","date":"2018-07-07T15:55:21.000Z","updated":"2018-08-14T12:18:22.000Z","comments":true,"path":"2018/07/08/python_02_condition, loop/","link":"","permalink":"http://yoursite.com/2018/07/08/python_02_condition, loop/","excerpt":"","text":"Python Condition &amp; Loop (조건문과 반복문)1. 입력 (Input)1.1 문자열 입력12value = input(\"Insert string:\")print(value, type(value)) Insert string:hello hello &lt;class &apos;str&apos;&gt; 1.2 숫자 입력int()와 같은 방법으로 숫자형으로 변환해주어야 함 1n = int(input(\"insert integer: \")) insert integer: 3 1.3 여러 개의 값 입력123ls = input(\"insert list (sep=' '): \")ls = ls.split(\" \")print(type(ls), ls) insert list (sep=&apos; &apos;): data science &lt;class &apos;list&apos;&gt; [&apos;data&apos;, &apos;science&apos;] 1.4 입력 받은 숫자 활용 반복문123n = int(input(\"number : \"))for number in range(n): print(number, end = \" \") number : 5 0 1 2 3 4 2. 출력 (print)2.1 print1print(\"test\", \"page\") # 한 칸 띄워 출력됨 test page 2.2 pprint 딕셔너리와 같은 데이터 복잡할 때 가독성을 위해 정렬, 줄바꿈하여 출력 1234from pprint import pprintdic = &#123;\"A\":90, \"B\":70, \"C\":100, \"D\":90, \"E\":70, \"F\":100, \"G\":90, \"H\":70, \"I\":100&#125;pprint(dic) {&apos;A&apos;: 90, &apos;B&apos;: 70, &apos;C&apos;: 100, &apos;D&apos;: 90, &apos;E&apos;: 70, &apos;F&apos;: 100, &apos;G&apos;: 90, &apos;H&apos;: 70, &apos;I&apos;: 100} 3. 조건 : if, elif, else3.1 if3.1.1 문법condition이 True이면 code_1이 실행12if &lt;condition&gt;: &lt;code_1&gt; 123flag = Trueif flag: print(\":)\") :) 3.2 else123456flag = Trueif flag: print(\"dss\")else: print(\"data\")print(\"done\") 3.3 elif 조건을 여러 개 줄 때 123456789101112# 10-8:A / 7-4:B / 3-0: Cpoint = 3result = \"\"if point &gt;= 8: result = \"A\"elif point &gt;= 4: result = \"B\"else: result = \"C\" print(result)print(\"done\") C done 3.3.3 Quiz123456# 숫자를 하나 입력 받아서 홀수이면 \"odd\", 짝수이면 \"even\"을 출력하는 코드 만들기user_number = int(input(\"숫자를 입력해주세요: \"))if user_number % 2 == 0: print(\"even\")else: print(\"odd\") 숫자를 입력해주세요: 4 even 3.4 삼항연산간단한 조건문은 한 줄로 쓸 수 있어 편리하다.문법: (True) if (condition) else (False) 123user_number = int(input(\"숫자를 입력해주세요: \"))result = \"even\" if user_number % 2 == 0 else \"odd\"print(result) 숫자를 입력해주세요: 3 odd 4. 반복 (loop) while, for, list comprehension 반복문 break, continue 4.1 while12345a = 3while a &gt; 0: print(a) a -= 1a 3 2 1 0 4.1.3 break break 코드를 만나면 강제로 반복문이 종료 1234567a = 3while a &gt; 0: print(a) if a == 2: break a -= 1a 3 2 2 4.1.4 continue continue 코드를 만나면 바로 반복문 구문으로 이동 continue 아래 구문이 실행되지 않음 12345678a = 3while a &gt; 0: print(a) if a == 2: a = 0 continue a -= 1a 3 2 0 1234567891011a = [1,2,3,4,\"q\"]idx = 0while True: data = a[idx] idx += 1 if data == 'q': break elif data % 2 == 0: continue print(data)idx 1 3 5 4.2 for문 range, zip, enumerate 4.2.1 문법1234'''for &lt;value&gt; in &lt;list&gt;: &lt;code&gt;''' &apos;\\nfor &lt;value&gt; in &lt;list&gt;:\\n &lt;code&gt;\\n&apos; 4.2.2 활용123ls = [0, 1, 2, 3, 4]for i in ls: print(i) 0 1 2 3 4 4.2.3 rangelist를 간편하게 생성하기 위한 함수 12ls = [0, 1, 2, 3, 4, 5]ls [0, 1, 2, 3, 4, 5] 1234# 0~5 리스트를 만들고 싶을 때, 범위를 리스트 형태로 만들어 줄 수 있음print(range(6))print(list(range(6)))print(list(range(2, 6))) range(0, 6) [0, 1, 2, 3, 4, 5] [2, 3, 4, 5] 1list(range(0,6,2)), list(range(6, 0, -1)) ([0, 2, 4], [6, 5, 4, 3, 2, 1]) 12for i in range(5): print(\"dss\") dss dss dss dss dss 12for num in range(5): print(\"dss\", num) dss 0 dss 1 dss 2 dss 3 dss 4 123ls = [\"data\", \"science\", \"school\"]for idx in range(len(ls)): print(ls[idx]) data science school 123ls = [\"data\", \"science\", \"school\"]for i in ls: print(i) data science school 4.2.4 zip2개의 리스트를 key, value (dictionary)형태로 묶어주는 함수 1234567subs = [\"korean\", \"english\", \"math\", \"science\"]points = [100, 80, 90, 60]result = &#123;&#125;for k, v in zip(subs, points): result[k] = v # dict type으로 저장될 수 있다result {&apos;english&apos;: 80, &apos;korean&apos;: 100, &apos;math&apos;: 90, &apos;science&apos;: 60} 12345# zip을 쓰지 않으면 이렇게 해야 함result = &#123;&#125;for idx in range(len(subs)): result[subs[idx]] = points[idx]result {&apos;english&apos;: 80, &apos;korean&apos;: 100, &apos;math&apos;: 90, &apos;science&apos;: 60} 123456# 가장 좋은 방법subs = [\"korean\", \"english\", \"math\", \"science\"]points = [100, 80, 90, 60]print(tuple(zip(subs, points)))print(dict(zip(subs, points))) ((&apos;korean&apos;, 100), (&apos;english&apos;, 80), (&apos;math&apos;, 90), (&apos;science&apos;, 60)) {&apos;korean&apos;: 100, &apos;english&apos;: 80, &apos;math&apos;: 90, &apos;science&apos;: 60} 4.2.5 enumerate리스트 형태의 데이터를 index와 value 값을 동시에 사용할수 있는 함수 123ls = [\"math\", \"science\", \"korean\"]for value in ls: print(value) math science korean 123456ls = [\"math\", \"science\", \"korean\"]num = 0for value in ls: print(num, value) num += 1 0 math 1 science 2 korean 123ls = [\"math\", \"science\", \"korean\"]for num, value in enumerate(ls): print(num, value) 0 math 1 science 2 korean 1234567ls = [\"math\", \"science\", \"korean\"]filtered_ls = []for num, value in enumerate(ls): if value ==\"science\": filtered_ls.append(num) print(num, value)filtered_ls 0 math 1 science 2 korean [1] 4.2.6 퀴즈: for문123456# numbers 안에 있는 숫자를 모두 더해서 result로 반환numbers = [1, 3, 5, 7, 9]result = 0for i in numbers: result += iresult 25 4.3 list comprehension 반복되어 출력되는 리스트 형태의 데이터를 만들어주는 문법 for문보다 속도가 빠름 (갈수록 굉장히 중요한 부분!) ls = [&lt;vlaue&gt; for &lt;value&gt; in &lt;list&gt; (if &lt;condition&gt;)] 간단한 형태만 가능하지만 가능한 한 많이 쓰면 좋은 문법 4.3.2 활용12ls = [i for i in range(1, 6)]ls [1, 2, 3, 4, 5] 1234567891011121314# 다른방법 1ls = [1, 2, 3, 4, 5]ls = []ls.append(1)ls.append(2)ls.append(3)ls.append(4)ls.append(5)# 다른방법 2ls = []for num in range(1,6): ls.append(num) [1, 2, 3, 4, 5] 4.3.3 list comprehension과 for문의 속도 비교12345%%timeitls = []for num in range(1, 10001): ls.append(num)len(ls) 1.12 ms ± 40.3 µs per loop (mean ± std. dev. of 7 runs, 1000 loops each) 123%%timeitls = [num for num in range(1, 10001)]len(ls) 503 µs ± 29.5 µs per loop (mean ± std. dev. of 7 runs, 1000 loops each) 4.3.4 삼항연산과 함께 사용1234# 0 - 10까지 숫자를 출력하고 해당 수가 짝수인지 홀수 인지를 판별해서 odd / even 문자열을 추가하는 코드ls = [str(num)+\": even\" if num % 2 == 0 else str(num)+\": odd\" for num in range(4)]ls [&apos;0: even&apos;, &apos;1: odd&apos;, &apos;2: even&apos;, &apos;3: odd&apos;] 12ls = [str(num) + \": even\" if num % 2 == 0 else str(num) + \": odd\" for num in range(1, 11)]ls [&apos;1: odd&apos;, &apos;2: even&apos;, &apos;3: odd&apos;, &apos;4: even&apos;, &apos;5: odd&apos;, &apos;6: even&apos;, &apos;7: odd&apos;, &apos;8: even&apos;, &apos;9: odd&apos;, &apos;10: even&apos;] 4.3.5 조건문을 함께 사용123# 홀수만 출력되게 함ls = [num for num in range(11) if num % 2 == 1]ls [1, 3, 5, 7, 9] 4.3.6 quiz1234567891011121314# 성이 lee인 사람의 성을 삭제하는 코드를 작성하세요names = [\"kim dss\", \"lee python\", \"park data\", \"lee macpro\"]result = [name.replace(\"lee \", \"\") for name in names]# result = [name.split()[1] if name.split(\"\")[0] = \"lee\" else name for name in names]print(result)result = [name for name in result if \"park \" not in name] # result = [name for name in result if name.startswith(\"park \") != True] # if name.split()[0] != \"park\"print(result)# result 1: [\"kim dss\", \"python\", \"park data\", \"macpro\"]# result 2: [\"kim dss\", \"python\", \"macpro\"] - park 씨의 데이터 제거 [&apos;kim dss&apos;, &apos;python&apos;, &apos;park data&apos;, &apos;macpro&apos;] [&apos;kim dss&apos;, &apos;python&apos;, &apos;macpro&apos;]","categories":[{"name":"Programming 공부","slug":"Programming-공부","permalink":"http://yoursite.com/categories/Programming-공부/"},{"name":"Python","slug":"Programming-공부/Python","permalink":"http://yoursite.com/categories/Programming-공부/Python/"}],"tags":[{"name":"python","slug":"python","permalink":"http://yoursite.com/tags/python/"},{"name":"programming","slug":"programming","permalink":"http://yoursite.com/tags/programming/"}]},{"title":"2018-07-07-TIL","slug":"2018-07-07-TIL","date":"2018-07-07T08:19:00.000Z","updated":"2018-07-09T13:03:42.000Z","comments":true,"path":"2018/07/07/2018-07-07-TIL/","link":"","permalink":"http://yoursite.com/2018/07/07/2018-07-07-TIL/","excerpt":"","text":"공부한 것 &amp; 리뷰 Zillow 회귀분석 팀프로젝트 트러블 슈팅 문제 자체가 y값이 아니라 잔차를 예측하는 문제였다는 점에서 선형회귀로 풀기에는 한계가 있었던 프로젝트였음 핵심부터 파악해서 다시 정리를 해야겠다, 적절한 문제로 다시 분석을 해보고 싶다 내일 공부할 것 블로그에 about 페이지 만들기 이번 주에 공부할 것 DSS: CSS selector 수업 내용 복습하기 DSS: javascript 수업 내용 복습하기 DSS: 수학 &lt;11장. 검정과 추정&gt; 복습하기 DSS: 수학 &lt;13장&gt; 복습하기 - 34절 DSS: Kaggle 팀프로젝트 커리어서비스: 1분 자기소개 피드백 받기 (~7/3) 블로그에 disqus 적용하기 블로그에 about 페이지 만들기","categories":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/categories/TIL-Today-I-Learned/"}],"tags":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/tags/TIL-Today-I-Learned/"}]},{"title":"python 01. Python Basic Syntax","slug":"python_01","date":"2018-07-06T15:37:29.000Z","updated":"2018-08-14T02:23:28.000Z","comments":true,"path":"2018/07/07/python_01/","link":"","permalink":"http://yoursite.com/2018/07/07/python_01/","excerpt":"","text":"Python Basic Syntax파이썬의 기본적인 문법 복습 내용입니다. 다루는 내용 기본(comment, print) 식별자 변수 데이터 타입 데이터 형변화 연산자 1. Comment &amp; Print1.1 comment 프로그래밍에서 comment(주석)이란 코드가 실행되지 않는 라인을 의미 코드에 대한 설명을 적거나 잠시 실행시키고 싶지 않은 코드에 주석처리 #를 문장 앞에 붙여주거나 문장 내에 포인터를 둔 채로 ctrl + /를 눌러 사용 1234# a와 b변수를 선언a = 1b = 2a, b (1, 2) 1.2 printprint 명령어를 사용해 화면에 괄호 안의 내용을 출력 1print(\"python\") python end 인수를 지정해주면 줄바꿈 등을 설정 가능디폴트는 줄바꿈(개행)인 end=&quot;\\n&quot; 1234567891011# 줄바꿈print(\"python\", end=\"\\n\") print(\"python\")# tabprint(\"python\\tbasic\\tsyntax\")print(\"python\", end=\"\\t\"), print(\"programming\")# 구분하기print(\"subject\", end=\" : \"), print(\"python\")print(\"python\", end=\", \"), print(\"python\") python python python basic syntax python programming subject : python python, python (None, None) Format%-format과 str.format()을 사용해서 print문의 형태를 쉽게 꾸밀 수 있음(개인적으로 .format()이 좀 더 편리) 1234s = \"data\"n = 1print(\"&#123;&#125;. &#123;&#125; science\".format(n, s))print(\"&#123;number&#125;. &#123;st&#125; science\".format(number=n, st=s)) 1. data science 1. data science 1234print('%s %s' % ('one', 'two'))print(\"&#123;&#125; &#123;&#125;\".format('one', 'two'))print('%d %d' % (1, 2))print('&#123;&#125; &#123;&#125;'.format(1, 2)) one two one two 1 2 1 2 123456print(\"I eat %d apples\" % 3)print(\"I eat %s apples\" % 'three')number = 3; day = \"three\"print(\"I ate %d apples. I was sick for %s days.\" % (number, day))print(\"Product: %s, Price per unit: %f\" % (\"apple\", 5.243)) I eat 3 apples I eat three apples I ate 3 apples. I was sick for three days. Product: apple, Price per unit: 5.243000 123print(\"Art: %5d\\nPrice per unit: %8.2f\" % (453, 59.058))# %5d: 다섯자리 digit# %8.2f: 총 여덟자리. 소수점 두자리 float Art: 453 Price per unit: 59.06 1234567891011121314print(\"-----------------------------------\")print(\"Product: %5s, Price per unit: %.5f\" % (\"Apple\", 5.243))print(\"Product: &#123;0:5s&#125;, Price per unit: &#123;1:.5f&#125;\".format(\"Apple\", 5.243))print(\"-----------------------------------\")# %-10s -&gt; 좌측정렬 (default는 우측정렬)print(\"Product: %10s, Price per unit: %10.3f\" % (\"Apple\", 5.243))print(\"Product: %-10s, Price per unit: %10.3f\" % (\"Apple\", 5.243)) # &#123;&gt;10s&#125; -&gt; 우측정렬 (default는 좌측정렬)print(\"Product: &#123;0:10s&#125;, Price per unit: &#123;1:10.3f&#125;\".format(\"Apple\", 5.243))print(\"Product: &#123;0:&gt;10s&#125;, Price per unit: &#123;1:10.3f&#125;\".format(\"Apple\", 5.243)) print(\"Product: %(name)10s, Price per unit: %(price)10.5f\" % &#123;\"name\":\"Apple\", \"price\":5.243&#125;)print(\"Product: &#123;name:&gt;10s&#125;, Price per unit: &#123;price:10.5f&#125;\".format(name=\"Apple\", price=5.243)) ----------------------------------- Product: Apple, Price per unit: 5.24300 Product: Apple, Price per unit: 5.24300 ----------------------------------- Product: Apple, Price per unit: 5.243 Product: Apple , Price per unit: 5.243 Product: Apple , Price per unit: 5.243 Product: Apple, Price per unit: 5.243 Product: Apple, Price per unit: 5.24300 Product: Apple, Price per unit: 5.24300 참고로 코드를 작성하다가 한 줄이 너무 길어져 보기 좋게 다음줄로 이어서 작성하고 싶을 때는 \\를 이용이 때 \\ 다음에 공백이 들어가지 않도록 주의 1234567print(\"this is good data science school!\\ this is good data science school!\\ this is good data science school!\")print(\"---------------------------------\")print('''this is good data science school!this is good data science school!this is good data science school!''') this is good data science school! this is good data science school! this is good data science school! --------------------------------- this is good data science school! this is good data science school! this is good data science school! 2. 식별자(Identifiers) 변수, 함수, 클래스, 모듈, 패키지 등을 구분하기 위해서 사용되는 이름 규칙 대소문자 구분 사용가능 문자: 소문자(a~z)/대문자(A~Z)/숫자/특수기호(_) 맨 앞에 __ 사용 지양 맨 앞에 숫자 사용불가 예약어 사용불가: print, def, class, True, False… 123A = 1a = 2A, a (1, 2) 3. 변수 - Variable3.1 변수 선언123a = 1b = \"python\"a, b (1, &apos;python&apos;) 3.2 식별자의 규칙에 맞지 않는 변수 할당식별자의 규칙에 맞지 않는 변수를 할당하여 에러가 발생하는 코드 예시 1abc~1 = 1 File &quot;&lt;ipython-input-2-bdcfaa2fb650&gt;&quot;, line 1 abc~1 = 1 # error ^ SyntaxError: invalid syntax 11abc = 2 File &quot;&lt;ipython-input-3-524b5278a8db&gt;&quot;, line 1 1abc = 2 # error ^ SyntaxError: invalid syntax 1class = 2 File &quot;&lt;ipython-input-11-88339d10fcb4&gt;&quot;, line 1 class = 2 # error ^ SyntaxError: invalid syntax 3.3 다중할당아래와 같이 여러 개의 변수를 한 번에 할당할 수 있음 1c, d = 5, \"dss\" 1c, d (5, &apos;dss&apos;) 12c = d = e = 3d, c, e (3, 3, 3) 이 때 c, d, e는 그 값만 같은 변수들로 c를 5로 바꾸더라도 e의 값은 변하지 않음 12c = 5e 3 4. 자료형 (Data type) number: int, float, complex(복소수) boolean: True, False string: str collection List Tuple Dictionary Set 4.1 Number4.1.1 int 정수인 숫자 데이터 타입 파이썬의 버전에 따라 가능한 범위에 차이가 있음 python 2.x: -2**31-1 ~ 2**31 python 3.x: (무제한) 123# 선언a, b, c, d = 0, 1234, -3, +2345a, b, c, d (0, 1234, -3, 2345) 1type(a), type(b), type(c), type(d) (int, int, int, int) 4.1.2 float (실수)1234# 선언a, b, c, d = 0.0, 123.45, -692.66, +7921.4print(a, b, c, d)print(type(a), type(b), type(c), type(d)) 0.0 123.45 -692.66 7921.4 &lt;class &apos;float&apos;&gt; &lt;class &apos;float&apos;&gt; &lt;class &apos;float&apos;&gt; &lt;class &apos;float&apos;&gt; 4.1.3 complex (복소수)1234# 선언a = 2+ 3jb = complex(5, -2)type(a), a, type(b), b (complex, (2+3j), complex, (5-2j)) 1a.real, a.imag, type(a.real), type(a.imag) (2.0, 3.0, float, float) 1a + b, a * b, a / b ((7+1j), (16+11j), (0.1379310344827586+0.6551724137931034j)) 12# 켤레복소수a.conjugate(), b.conjugate() ((2-3j), (5+2j)) 1abs(a), abs(b) (3.605551275463989, 5.385164807134504) 4.2 BooleanTrue &amp; False의 값을 갖는 데이터타입 12a, b = True, Falsea, type(a), b, type(b) (True, bool, False, bool) 4.3 String4.3.1 문자열 선언12a, b = 'data', 'science'a, b (&apos;data&apos;, &apos;science&apos;) 123456# multilinems = \"\"\"datascienceschool\"\"\"print(ms) data science school 1234567# docstring을 작성할 때 많이 사용def test(a, b, c): \"\"\" a: flaot b: string c: integer \"\"\" 123# 연산자 이용 - 문자열 반복a = \"data \" * 10a &apos;data data data data data data data data data data &apos; 4.3.2 문자열 offset123s = \"abcdef\"d = \"2018-04-24\"s[3], s[-2], s[1:3], d[:4], d[5:7] (&apos;d&apos;, &apos;e&apos;, &apos;bc&apos;, &apos;2018&apos;, &apos;04&apos;) 12# step - reverse가 가능s[::2], s[::-1], s[::-2] (&apos;ace&apos;, &apos;fedcba&apos;, &apos;fdb&apos;) 4.3.3 String Method12s = \"data science\"s &apos;data science&apos; 대소문자 바꾸기 (저장 x)123s1 = s.upper()s2 = s.lower()s1, s2, s (&apos;DATA SCIENCE&apos;, &apos;data science&apos;, &apos;data science&apos;) String의 첫 단어의 첫 글자만 대문자로 바꾸는 경우 - str.capitalize()String의 각 단어의 첫글자만 대문자로 바꾸는 경우 - title() → 더 보완된 것이 string.capwords() 123456s3 = \"John. They're Bill's Friends From The Uk\"print(s3.capitalize())print(s3.title())import stringprint(string.capwords(s3)) John. they&apos;re bill&apos;s friends from the uk John. They&apos;Re Bill&apos;S Friends From The Uk John. They&apos;re Bill&apos;s Friends From The Uk 문자열의 길이1len(s) 12 1s[:len(s)], s[:] (&apos;data science&apos;, &apos;data science&apos;) 함수 chaining1s.upper().lower() &apos;data science&apos; 1s.find(\"a\"), s.find(\"test\") (1, -1) 1s.index(\"a\") 1 12s.index(\"test\")# find는 찾는 문자열이 없으면 -1을 반환하고, index는 error 메세지 출력 --------------------------------------------------------------------------- ValueError Traceback (most recent call last) &lt;ipython-input-87-613440e29f20&gt; in &lt;module&gt;() ----&gt; 1 s.index(&quot;test&quot;) ValueError: substring not found 1s.count(\"a\"), s.count(\"A\"), s.count(\"data\") (2, 0, 1) replace (대체하고 나서 저장되지는 않음)1s.replace(\"a\", \"e\") &apos;dete&apos; 1s.split(\" \") [&apos;data&apos;, &apos;science&apos;] 1s.split() [&apos;data&apos;, &apos;science&apos;] 123s = \"data, science\"k = \"data,science\"s.split(\",\"), k.split(\",\") ([&apos;data&apos;, &apos; science&apos;], [&apos;data&apos;, &apos;science&apos;]) 4.4 List4.4.1 List 선언1234a = ['data', 'science', 'python', 'programming']b = [1, 2, [3, 4]] # 2중 리스트c = [1, \"python\", True]print(type(a), type(b), type(c)) &lt;class &apos;list&apos;&gt; &lt;class &apos;list&apos;&gt; &lt;class &apos;list&apos;&gt; 4.4.2 List offset1a[1], a[-2], a[:], a[::-1] (&apos;campus&apos;, &apos;data&apos;, [&apos;fast&apos;, &apos;campus&apos;, &apos;data&apos;, &apos;science&apos;], [&apos;science&apos;, &apos;data&apos;, &apos;campus&apos;, &apos;fast&apos;]) 4.4.3 List Mehtod12a.append(\"jupyter notebook\")a [&apos;data&apos;, &apos;science&apos;, &apos;python&apos;, &apos;programming&apos;, &apos;jupyter notebook&apos;] 12a.sort()a [&apos;data&apos;, &apos;jupyter notebook&apos;, &apos;programming&apos;, &apos;python&apos;, &apos;science&apos;] 1a[::-1] [&apos;science&apos;, &apos;python&apos;, &apos;programming&apos;, &apos;jupyter notebook&apos;, &apos;data&apos;] 12a.reverse()a [&apos;science&apos;, &apos;python&apos;, &apos;programming&apos;, &apos;jupyter notebook&apos;, &apos;data&apos;] 1a.index(\"data\") 4 12a.remove(\"jupyter notebook\")a [&apos;science&apos;, &apos;python&apos;, &apos;programming&apos;, &apos;data&apos;] 12a.insert(1, \"basic syntax\")a [&apos;science&apos;, &apos;basic syntax&apos;, &apos;python&apos;, &apos;programming&apos;, &apos;data&apos;] 1a.pop(), a (&apos;data&apos;, [&apos;science&apos;, &apos;basic syntax&apos;, &apos;python&apos;, &apos;programming&apos;]) 4.4.5 List Copy list와 dictionary에서는 copy를 통해 복사해야 함 숫자, 문자열 데이터는 b=a로 복사해도 값만 복사 123a = [1, 2, 3]b = aa, b ([1, 2, 3], [1, 2, 3]) 12a[2] = 10a, b ([1, 2, 10], [1, 2, 10]) 12c = a.copy()a, b, c ([1, 2, 10], [1, 2, 10], [1, 2, 10]) 12b[2] = 100a, b, c ([1, 2, 100], [1, 2, 100], [1, 2, 10]) 12d = e = [1,2,3]d, e ([1, 2, 3], [1, 2, 3]) 12d[1] = 10d, e ([1, 10, 3], [1, 10, 3]) 4.5 Tuple 리스트와 같이 순서가 있는 데이터 타입. 하지만 변경이 불가능 리스트보다 메모리를 적게 사용함 4.5.1 선언12a = 1,2,3,4a (1, 2, 3, 4) 12b = (1, 2, 3, 4)b, type(b) ((1, 2, 3, 4), tuple) 12# tuple data는 수정이 불가능b[1] = 5 --------------------------------------------------------------------------- TypeError Traceback (most recent call last) &lt;ipython-input-36-3222a658762b&gt; in &lt;module&gt;() 1 # tuple data는 수정이 불가능 ----&gt; 2 b[1] = 5 TypeError: &apos;tuple&apos; object does not support item assignment 123456import sysls = [1, 2, 3, 4, 5]tu = (1, 2, 3, 4, 5)print(sys.getsizeof(ls), sys.getsizeof(tu)) # byte 단위 104 88 4.6 Dictionary 데이터의 순서가 없음 여러 개의 (key: value) 쌍으로 이루어진 데이터 타입 value에 list나 dictionary가 들어갈 수도 있음 4.6.1 선언1234567dic = &#123; 1:\"one\", 2:\"two\", \"A\":[\"data\", \"science\"], \"숫자\":1234,&#125;type(dic), dic (dict, {1: &apos;one&apos;, 2: &apos;two&apos;, &apos;A&apos;: [&apos;data&apos;, &apos;science&apos;], &apos;숫자&apos;: 1234}) 4.6.2 데이터 수정12dic[1] = \"하나\"dic {1: &apos;하나&apos;, 2: &apos;two&apos;, &apos;A&apos;: [&apos;data&apos;, &apos;science&apos;], &apos;숫자&apos;: 1234} 1dic[\"A\"] [&apos;data&apos;, &apos;science&apos;] 123# dic element deletedel dic[1]dic {2: &apos;two&apos;, &apos;A&apos;: [&apos;data&apos;, &apos;science&apos;], &apos;숫자&apos;: 1234} 4.6.3 Dictionary Method keys, values, items, clear, get, copy, update 1dic, dic.keys(), dic.values() output: ({2: &apos;two&apos;, &apos;A&apos;: [&apos;data&apos;, &apos;science&apos;], &apos;숫자&apos;: 1234}, dict_keys([2, &apos;A&apos;, &apos;숫자&apos;]), dict_values([&apos;two&apos;, [&apos;data&apos;, &apos;science&apos;], 1234])) 1dic.items() dict_items([(2, &apos;two&apos;), (&apos;A&apos;, [&apos;data&apos;, &apos;science&apos;]), (&apos;숫자&apos;, 1234)]) 12for key, value in dic.items(): print(key, value) 2 two A [&apos;data&apos;, &apos;science&apos;] 숫자 1234 12dic.clear()dic {} 1234# 다시 dic을 만든 후에print(dic)print(dic.get(1))print(dic.get(2)) {1: &apos;one&apos;, 2: &apos;two&apos;, &apos;A&apos;: [&apos;data&apos;, &apos;science&apos;], &apos;숫자&apos;: 1234} one two 1dic.get(3, \"no data\") # 값이 없을 때 no data\"를 출력 &apos;no data&apos; 12dic2 = dicdic, dic2 ({1: &apos;one&apos;, 2: &apos;two&apos;, &apos;A&apos;: [&apos;data&apos;, &apos;science&apos;], &apos;숫자&apos;: 1234}, {1: &apos;one&apos;, 2: &apos;two&apos;, &apos;A&apos;: [&apos;data&apos;, &apos;science&apos;], &apos;숫자&apos;: 1234}) 12dic[1] = \"하나\"dic, dic2 ({1: &apos;하나&apos;, 2: &apos;two&apos;, &apos;A&apos;: [&apos;data&apos;, &apos;science&apos;], &apos;숫자&apos;: 1234}, {1: &apos;하나&apos;, 2: &apos;two&apos;, &apos;A&apos;: [&apos;data&apos;, &apos;science&apos;], &apos;숫자&apos;: 1234}) 12dic3 = dic.copy()dic, dic2, dic3 ({1: &apos;하나&apos;, 2: &apos;two&apos;, &apos;A&apos;: [&apos;data&apos;, &apos;science&apos;], &apos;숫자&apos;: 1234}, {1: &apos;하나&apos;, 2: &apos;two&apos;, &apos;A&apos;: [&apos;data&apos;, &apos;science&apos;], &apos;숫자&apos;: 1234}, {1: &apos;하나&apos;, 2: &apos;two&apos;, &apos;A&apos;: [&apos;data&apos;, &apos;science&apos;], &apos;숫자&apos;: 1234}) 12dic[1] = \"one\"dic, dic3 ({1: &apos;one&apos;, 2: &apos;two&apos;, &apos;A&apos;: [&apos;data&apos;, &apos;science&apos;], &apos;숫자&apos;: 1234}, {1: &apos;하나&apos;, 2: &apos;two&apos;, &apos;A&apos;: [&apos;data&apos;, &apos;science&apos;], &apos;숫자&apos;: 1234}) 1234# update: 존재하는 key값은 value 수정, 없는 키 값은 key &amp; value 추가a = &#123;1:\"a\", 2:\"b\"&#125;b = &#123;2:\"c\", 3:\"d\"&#125;a, b ({1: &apos;a&apos;, 2: &apos;b&apos;}, {2: &apos;c&apos;, 3: &apos;d&apos;}) 12a.update(b)a {1: &apos;a&apos;, 2: &apos;c&apos;, 3: &apos;d&apos;} 4.7 Set 중복되는 데이터가 없는 형태의 데이터 타입 교집합, 합집합, 차집합과 같은 연산 가능 list data에서 중복을 제거할 때 많이 사용 순서가 있는 데이터 타입은 아님 4.7.1 선언12s = set([1, 2, 3, 4, 5, 1, 3, 5])s, type(s) ({1, 2, 3, 4, 5}, set) 4.7.2 연산123456s1 = set([1, 2, 3, 4])s2 = set([3, 4, 5, 6])# 교집합print(s1 &amp; s2)print(s1.intersection(s2)) {3, 4} {3, 4} 123# 합집합print(s1 | s2)print(s1.union(s2)) {1, 2, 3, 4, 5, 6} {1, 2, 3, 4, 5, 6} 123# 차집합print(s1 - s2)print(s1.difference(s2)) {1, 2} {1, 2} 4.7.3 수정12345# list로 바꾼 후에 수정하고 sets = list(s)s[0] = 10s = set(s)s {2, 3, 4, 5, 10} 5. 데이터 형변환 데이터 타입을 다른 데이터 타입으로 바꾸는 것 바꾸려는 데이터 타입에 따라서 형변환 가능 여부가 다름 5.1 문자열과 숫자123s = \"1234\"n = int(s)type(s), type(n) (str, int) 1int(s) + 1 1235 1\"1234\" + \"5\" &apos;12345&apos; 1s + str(n) &apos;12341234&apos; 5.2 boolean 형변환1bool([]), bool([1, 2, 3]) (False, True) 1bool(-1), bool(0) (True, False) 1bool(\"\"), bool(\"asdf\") (False, True) 123456a, b = \"\", \"a\"print(bool(a), bool(b))if a: print(\"a is data\")if b: print(\"b is data\") False True b is data 5.3 문자열의 리스트 형변환12s = \"data\"list(s) [&apos;d&apos;, &apos;a&apos;, &apos;t&apos;, &apos;a&apos;] 5.4 튜플과 딕셔너리 형변환5.4.1 튜플의 딕셔너리 형변환 튜플은 key value 형태로 되어 있는 딕셔너리로 형변환이 가능 123t = ((\"1\", \"one\"), (2, \"둘\"))d = dict(t)d, d.items() ({‘1’: ‘one’, 2: ‘둘’}, dict_items([(‘1’, ‘one’), (2, ‘둘’)])) 1tuple(d.items()) ((&apos;1&apos;, &apos;one&apos;), (2, &apos;둘&apos;)) 123tu = ((2, \"a\"), (3, \"b\"))tu2 = dict(tu)tu, tu2 (((2, &apos;a&apos;), (3, &apos;b&apos;)), {2: &apos;a&apos;, 3: &apos;b&apos;}) 6. 연산자 산술연산자, 비교연산자, 할당연산자, 비트연산자, 논리연산자, 멤버연산자, 식별연산자 6.1 산술연산자: , -, *, /, //(몫), %(나머지), **(제곱)1234print(2 + 4)print(2 - 4)print(2 * 4)print(5 / 2) 6 -2 8 2.5 1234print(10 // 3) # 몫print(10 % 3) # 나머지print(3 ** 4)print(2 ** 0.5) 3 1 81 1.4142135623730951 6.2 비교연산자: ==, !=, &gt;, &gt;, =&gt;, =&lt;1234567a, b = 10, 20print(a == b) print(a != b)print(a &gt; b)print(a &lt; b)print(a &gt;= b)print(a &lt;= b) False True False True False True 6.3 할당연산자: =, +=, -=, *=, /=, %=, //=, **=12345678a = 5print(a)a += 10 # a = a+ 10과 같음print(a)a -= 5print(a) 5 15 10 1234a = 0for _ in range(5): a += 1 a 5 1234567891011121314a *= 10print(a)a /= 5print(a)a %= 6print(a)a //= 2 # 몫print(a)a **= 3print(a) 50 10.0 4.0 2.0 8.0 1234a = 0for num in range(1, 6): a += numprint(a) 15 6.4 비트연산자: &amp;, |, ^, ~, &lt;&lt;, &gt;&gt; 사용할 일은 거의 없음 123456a = 3 # 011b = 5 # 101print(a &amp; b, bin(a &amp; b)) # 결과 1: 둘다 1이어야 1 (자릿수별로) / 0b: 2진수라는 표시print(a | b, bin(a | b)) # 결과 7 / 0b111: 둘 중 하나가 1이면 1print(a^b, bin(a^b)) # 결과 6: XOR 연산 - 둘다 1이면 0 / OR의 반대 1 0b1 7 0b111 6 0b110 123# 보수연산: 보수는 0 기준으로 반대되는 수 (-1과 0 사이)print(~a, bin(~a)) # 보수 연산 : 3의 보수는 -4print(~b, bin(~b)) # 보수 연산 : 5의 보수는 -6 -4 -0b100 -6 -0b110 123# shift 연산print(a&lt;&lt;2, bin(a&lt;&lt;2)) # (* 2**n) . 두 자리를 왼쪽으로 이동print(b&gt;&gt;1, bin(b&gt;&gt;1)) # (/ 2**n) 두 자리를 오른쪽으로 이동 12 0b1100 2 0b10 6.5 논리 연산자 (Logical Operators) and, or, not 1234print( True and True ) # 결과: True 둘다 True이므로print( True and False ) # 결과: False - 둘다 True가 아니므로print( True or True ) # 결과: True - True가 둘 중에 있으므로print( True or False ) # 결과: True - True가 둘 중에 있으므로 True False True True 12# 이런 식으로 비교연산자와 많이 사용print(a &lt; b or c &gt; d) True 12print(not(True and True)) print(not(True and False)) False True 6.6 멤버 연산자 (Membership Operators) in, not in 1234a = [1,2,3,4]print(1 in a)print(5 in a)print(1 not in a) True False False 6.7 식별 연산자 (Identity Operators) is, is not 숫자나 문자열의 경우는 값을 비교 컬렉션 데이터의 경우에는 주소값을 비교 123456a = \"a\"b = aprint( a is b )c = \"a\"print( a is c )print( a is not c ) True True False 12345678a = [1,2,3]b = aprint( a is b ) # 데이터가 저장되어 있는 주소가 같은지 확인합니다a = [1,2,3]c = a.copy()print( a is c )print( a is not c ) True False True 1234# 리스트의 값을 비교하려면? '==' 사용lst = [1, 2, 3, 4]lst1 = [1, 2, 3, 4]lst == lst1, lst is lst1 (True, False)","categories":[{"name":"Programming 공부","slug":"Programming-공부","permalink":"http://yoursite.com/categories/Programming-공부/"},{"name":"Python","slug":"Programming-공부/Python","permalink":"http://yoursite.com/categories/Programming-공부/Python/"}],"tags":[{"name":"python","slug":"python","permalink":"http://yoursite.com/tags/python/"},{"name":"programming","slug":"programming","permalink":"http://yoursite.com/tags/programming/"}]},{"title":"2018-07-06-TIL","slug":"2018-07-06-TIL","date":"2018-07-06T06:16:00.000Z","updated":"2018-07-07T07:34:59.000Z","comments":true,"path":"2018/07/06/2018-07-06-TIL/","link":"","permalink":"http://yoursite.com/2018/07/06/2018-07-06-TIL/","excerpt":"","text":"공부한 것 &amp; 리뷰 Zillow 회귀분석 팀프로젝트 겨우 겨우 kaggle에 제출 한번은 하게 됨 프로젝트 결과가 너무 불만족스럽다, 트러블 슈팅 후에도 다시 부족한 부분을 보완해야겠다 내일 공부할 것 Zillow 팀프로젝트 트러블 슈팅 이번 주에 공부할 것 DSS: CSS selector 수업 내용 복습하기 DSS: javascript 수업 내용 복습하기 DSS: 수학 &lt;9장. 확률변수&gt; 복습하기 DSS: 수학 &lt;10장. 확률변수의 상관관계&gt; 복습하기 DSS: 수학 &lt;11장. 검정과 추정&gt; 복습하기 DSS: 수학 &lt;13장&gt; 복습하기 - 34절 DSS: Kaggle 팀프로젝트 커리어서비스: 1분 자기소개 피드백 받기 (~7/3) 블로그에 disqus 적용하기 블로그에 about 페이지 만들기","categories":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/categories/TIL-Today-I-Learned/"}],"tags":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/tags/TIL-Today-I-Learned/"}]},{"title":"2018-07-05-TIL","slug":"2018-07-05-TIL","date":"2018-07-05T03:16:00.000Z","updated":"2018-07-07T06:36:26.000Z","comments":true,"path":"2018/07/05/2018-07-05-TIL/","link":"","permalink":"http://yoursite.com/2018/07/05/2018-07-05-TIL/","excerpt":"","text":"공부한 것 &amp; 리뷰 Zillow 회귀분석 팀프로젝트 제대로된 선형회귀 모델 만들자 EDA 부분 발표파일 정리하자 내일 공부할 것 Zillow 팀프로젝트 (발표 파일 제출 ~6시) 이번 주에 공부할 것 DSS: CSS selector 수업 내용 복습하기 DSS: javascript 수업 내용 복습하기 DSS: 수학 &lt;9장. 확률변수&gt; 복습하기 DSS: 수학 &lt;10장. 확률변수의 상관관계&gt; 복습하기 DSS: 수학 &lt;11장. 검정과 추정&gt; 복습하기 DSS: 수학 &lt;13장&gt; 복습하기 - 34절 DSS: Kaggle 팀프로젝트 커리어서비스: 1분 자기소개 피드백 받기 (~7/3) 블로그에 disqus 적용하기 블로그에 about 페이지 만들기","categories":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/categories/TIL-Today-I-Learned/"}],"tags":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/tags/TIL-Today-I-Learned/"}]},{"title":"2018-07-04-TIL","slug":"2018-07-04-TIL","date":"2018-07-04T02:00:50.000Z","updated":"2018-07-05T03:13:07.000Z","comments":true,"path":"2018/07/04/2018-07-04-TIL/","link":"","permalink":"http://yoursite.com/2018/07/04/2018-07-04-TIL/","excerpt":"","text":"공부한 것 &amp; 리뷰 Zillow 회귀분석 팀프로젝트 선형회귀로는 도저히 쓸만한 모델이 만들어지지 않아서 멘붕. 선형회귀로 풀리는 문제인지부터 의문이 든다ㅜ 내일 공부할 것 Zillow 팀프로젝트 이번 주에 공부할 것 DSS: CSS selector 수업 내용 복습하기 DSS: javascript 수업 내용 복습하기 DSS: 수학 &lt;9장. 확률변수&gt; 복습하기 DSS: 수학 &lt;10장. 확률변수의 상관관계&gt; 복습하기 DSS: 수학 &lt;11장. 검정과 추정&gt; 복습하기 DSS: 수학 &lt;13장&gt; 복습하기 - 34절 DSS: Kaggle 팀프로젝트 커리어서비스: 1분 자기소개 피드백 받기 (~7/3) 블로그에 disqus 적용하기 블로그에 about 페이지 만들기","categories":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/categories/TIL-Today-I-Learned/"}],"tags":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/tags/TIL-Today-I-Learned/"}]},{"title":"2018-07-03-TIL","slug":"2018-07-03-TIL","date":"2018-07-03T02:36:50.000Z","updated":"2018-07-05T03:11:15.000Z","comments":true,"path":"2018/07/03/2018-07-03-TIL/","link":"","permalink":"http://yoursite.com/2018/07/03/2018-07-03-TIL/","excerpt":"","text":"공부한 것 &amp; 리뷰 Zillow 회귀분석 팀프로젝트 DSS 수업: 회귀분석 마무리와 클러스터링 약간 블로그에 disqus 적용 커리어서비스: 1분 자기소개 피드백 받기 너무 길어서 내용을 줄이기! 내일 공부할 것 Zillow 팀프로젝트 이번 주에 공부할 것 DSS: CSS selector 수업 내용 복습하기 DSS: javascript 수업 내용 복습하기 DSS: requests 수업 내용 복습하기 DSS: selenium 수업 내용 복습하기 DSS: slack 챗봇 시험해보기 DSS: 수학 &lt;9장. 확률변수&gt; 복습하기 DSS: 수학 &lt;10장. 확률변수의 상관관계&gt; 복습하기 DSS: 수학 &lt;11장. 검정과 추정&gt; 복습하기 DSS: 수학 &lt;13장&gt; 복습하기 - 34절 DSS: Kaggle 팀프로젝트 커리어서비스: 1분 자기소개 피드백 받기 (~7/3) 블로그에 disqus 적용하기 블로그에 about 페이지 만들기","categories":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/categories/TIL-Today-I-Learned/"}],"tags":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/tags/TIL-Today-I-Learned/"}]},{"title":"2018-07-02-TIL","slug":"2018-07-02-TIL","date":"2018-07-03T02:23:35.000Z","updated":"2018-07-03T02:33:46.000Z","comments":true,"path":"2018/07/03/2018-07-02-TIL/","link":"","permalink":"http://yoursite.com/2018/07/03/2018-07-02-TIL/","excerpt":"","text":"공부한 것 &amp; 리뷰 DSS: 인성 면접 특강 Zillow 회귀분석 팀프로젝트 밤을 하얗게 불태워서 팀원들의 EDA를 모아 보충하고 정리 matplotlib과 seaborn을 이용한 그래프 그리기가 마음처럼 되지 않는다. 수업 내용과 박사님 강의 자료를 공부할 것 내일 공부할 것 Zillow 팀프로젝트 이번 주에 공부할 것 DSS: CSS selector 수업 내용 복습하기 DSS: javascript 수업 내용 복습하기 DSS: 수학 &lt;9장. 확률변수&gt; 복습하기 DSS: 수학 &lt;10장. 확률변수의 상관관계&gt; 복습하기 DSS: 수학 &lt;11장. 검정과 추정&gt; 복습하기 DSS: 수학 &lt;13장&gt; 복습하기 - 34절 DSS: Kaggle 팀프로젝트 커리어서비스: 1분 자기소개 피드백 받기 (~7/3)","categories":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/categories/TIL-Today-I-Learned/"}],"tags":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/tags/TIL-Today-I-Learned/"}]},{"title":"2018-07-01-TIL","slug":"2018-07-01-TIL","date":"2018-07-01T12:35:13.000Z","updated":"2018-07-03T02:28:40.000Z","comments":true,"path":"2018/07/01/2018-07-01-TIL/","link":"","permalink":"http://yoursite.com/2018/07/01/2018-07-01-TIL/","excerpt":"","text":"공부한 것 &amp; 리뷰 DSS: 34절. 선형회귀분석의 기초다시 보니 정리가 되는 것 같다 굳굳 벌써 2018년 하반기가 시작. DSS도 이제 반정도 남았는데 더 힘내서 과정도 잘 마치고 커리어 전환까지 성공해야지! 내일 공부할 것 DSS: 인성 면접 특강 Zillow 팀프로젝트 이번 주에 공부할 것 DSS: CSS selector 수업 내용 복습하기 DSS: javascript 수업 내용 복습하기 DSS: 수학 &lt;9장. 확률변수&gt; 복습하기 DSS: 수학 &lt;10장. 확률변수의 상관관계&gt; 복습하기 DSS: 수학 &lt;11장. 검정과 추정&gt; 복습하기 DSS: 수학 &lt;13장&gt; 복습하기 - 34절 DSS: Kaggle 팀프로젝트: EDA정리하고 분석 방법 계획을 세울 것","categories":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/categories/TIL-Today-I-Learned/"}],"tags":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/tags/TIL-Today-I-Learned/"}]},{"title":"2018-06-30-TIL","slug":"2018-06-30-TIL","date":"2018-06-30T00:22:49.000Z","updated":"2018-06-30T15:59:58.000Z","comments":true,"path":"2018/06/30/2018-06-30-TIL/","link":"","permalink":"http://yoursite.com/2018/06/30/2018-06-30-TIL/","excerpt":"","text":"공부한 것 &amp; 리뷰 수업: 회귀분석, 분산분석 카테고리 IV 처리방법 statsmodels의 from_formula method를 사용하면 R이나 stata처럼 DV, IV 변수명만 사용해 분석을 돌릴 수 있군! 익숙하면서 편리한 방법 고등학교부터 석사 과정까지 계속 반복해서 배웠지만 끊임없이 헷갈렸던 통계가 이제는 좀 정리가 되는 느낌! Kaggle zillow 회귀분석 프로젝트 EDA 어느 정도 마무리. 통계분석 수업을 복습한 후 이제 feature engineering과 회귀분석으로 들어가야겠다 내일 공부할 것 CSS Selector 복습, 가능하면 javascript 복습 수학 복습 많이 많이!!!! python folium의 기능을 좀 더 파악하면서 zillow 프로젝트 위도 경도 data exploring 이번 주에 공부할 것 DSS: github 블로그 setup하기 DSS: html 수업 내용 복습하기 DSS: CSS selector 수업 내용 복습하기 DSS: javascript 수업 내용 복습하기 DSS: 수학 &lt;9장. 확률변수&gt; 복습하기 DSS: 수학 &lt;10장. 확률변수의 상관관계&gt; 복습하기 DSS: 수학 &lt;11장. 검정과 추정&gt; 복습하기 DSS: 수학 &lt;12장. StatsModels로 공부하는 회귀분석&gt; 복습하기 DSS: 수학 &lt;13장&gt; 복습하기 DSS: Kaggle 팀프로젝트: EDA정리하고 분석 방법 계획을 세울 것","categories":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/categories/TIL-Today-I-Learned/"}],"tags":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/tags/TIL-Today-I-Learned/"}]},{"title":"2018-06-29 TIL","slug":"2018-06-29-TIL","date":"2018-06-29T02:13:13.000Z","updated":"2018-06-29T17:31:36.000Z","comments":true,"path":"2018/06/29/2018-06-29-TIL/","link":"","permalink":"http://yoursite.com/2018/06/29/2018-06-29-TIL/","excerpt":"","text":"공부한 것 &amp; 리뷰 수업: Flask web쪽을 엄청난 속도로 나가고 있어 어지럽다ㅋㅋ 이 모든 것들을 복습할 시간이 필요하다!! Kaggle zillow 회귀분석 프로젝트 folium 패키지를 이용해 집의 위치를 지도로 찍어보는 시도 중 계속 EDA를하고 있다 data visualization을 원하는대로 구현하기가 어렵다 왜 벌써 금요일 밤이지?!!! 하루가 너무 짧아. 일주일도 너무 짧아. 내일 공부할 것 수업: &lt;36절. 예측성능의 진단과 비교&gt;를 나갈 듯 팀원들의 EDA 결과를 하나로 통합하기 수학 복습 많이 많이!!!! 이번 주에 공부할 것 DSS: github 블로그 setup하기 DSS: html 수업 내용 복습하기 DSS: CSS selector 수업 내용 복습하기 DSS: javascript 수업 내용 복습하기 DSS: 수학 &lt;9장. 확률변수&gt; 복습하기 DSS: 수학 &lt;10장. 확률변수의 상관관계&gt; 복습하기 DSS: 수학 &lt;11장. 검정과 추정&gt; 복습하기 DSS: 수학 &lt;12장. StatsModels로 공부하는 회귀분석&gt; 복습하기 DSS: 수학 &lt;13장&gt; 복습하기 DSS: Kaggle 팀프로젝트: EDA정리하고 분석 방법 계획을 세울 것","categories":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/categories/TIL-Today-I-Learned/"}],"tags":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/tags/TIL-Today-I-Learned/"}]},{"title":"2018-06-28 TIL","slug":"2018-06-28-TIL","date":"2018-06-28T02:29:39.000Z","updated":"2018-06-28T14:29:36.000Z","comments":true,"path":"2018/06/28/2018-06-28-TIL/","link":"","permalink":"http://yoursite.com/2018/06/28/2018-06-28-TIL/","excerpt":"","text":"공부한 것 &amp; 리뷰 html 수업 복습 html과 css selector 복습을 제대로 하지 못해서 웹크롤링하는데 어려운 부분이 있었는데 드디어 미루던 html 수업 내용 복습을 했다. 속이 시원하다. css selector도 빨리 복습을 해야 한다. 오늘의 수업: AWS 새로운 내용이라 설치와 설정 과정을 따라가느라 정신없었다. 폭풍이 지나간듯하다ㅋㅋ jupyter notebook을 서버에 띄워 사용할 수 있게 되었다! Kaggle zillow 회귀분석 프로젝트 새벽까지 kaggle 팀프로젝트 EDA를 더 보다 자야할 것 같다. 집의 위도 경도를 이용한 EDA 마무리하는 것이 목표 갈수록 학원 수업 복습에 허덕이고 있지만 드디어 생각만 하고 있던 github 블로그도 세팅했고,이번 주는 왠지 마음만은 의욕이 충전되는 느낌의 한 주랄까. 일단 복습을 빠르게 하고 싶다!!! 내일 공부할 것 AWS 수업이 내일도 이어짐 팀원들의 EDA 결과를 하나로 통합하기 수학 복습 많이 많이!!!! 이번 주에 공부할 것 DSS: github 블로그 setup하기 DSS: html 수업 내용 복습하기 DSS: CSS selector 수업 내용 복습하기 DSS: javascript 수업 내용 복습하기 DSS: 수학 &lt;9장. 확률변수&gt; 복습하기 DSS: 수학 &lt;10장. 확률변수의 상관관계&gt; 복습하기 DSS: 수학 &lt;11장. 검정과 추정&gt; 복습하기 DSS: 수학 &lt;12장. StatsModels로 공부하는 회귀분석 복습 DSS: Kaggle 팀프로젝트: EDA정리하고 분석 방법 계획을 세울 것","categories":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/categories/TIL-Today-I-Learned/"}],"tags":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/tags/TIL-Today-I-Learned/"}]},{"title":"2018-06-27 TIL(Today I learned) 시작","slug":"2018-06-27-TIL","date":"2018-06-27T16:48:39.000Z","updated":"2018-06-27T16:56:29.000Z","comments":true,"path":"2018/06/28/2018-06-27-TIL/","link":"","permalink":"http://yoursite.com/2018/06/28/2018-06-27-TIL/","excerpt":"","text":"그날 그날 공부 내용과 느낀 점을 이제부터 블로그에 정리해보려고 한다.미루지 않고 꾸준히 하는 것이 목표!","categories":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/categories/TIL-Today-I-Learned/"}],"tags":[{"name":"TIL(Today I Learned)","slug":"TIL-Today-I-Learned","permalink":"http://yoursite.com/tags/TIL-Today-I-Learned/"}]}]}