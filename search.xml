<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>책리뷰. 스티브 앤더슨 ⟪베조스 레터⟫</title>
      <link href="/2020/03/13/book_20200312_bezos_letter/"/>
      <url>/2020/03/13/book_20200312_bezos_letter/</url>
      
        <content type="html"><![CDATA[<h2 id="리뷰"><a href="#리뷰" class="headerlink" title="리뷰"></a>리뷰</h2><hr><img src="/2020/03/13/book_20200312_bezos_letter/book_cover.jpg"><p><code>공룡기업 아마존을 만든 제프 베조스의 14가지 성장원칙</code></p><p>애플, 구글, 페이스북과 어깨를 나란히하면서도 뭔가 결이 다른 느낌에 아마존이란 회사는 왠지 궁금한 곳이었는데, 이 책 한 권을 통해 아마존의 핵심을 전수받은 듯 하다. 이만하면 썩 훌륭한 책 한 권에의 투자가 아닌가.</p><p>경영 컨설턴트인 저자는 1997년부터 2018년까지 22년간 제프 베조스가 주주들에게 보낸 주주 서한을 분석하여 제프 베조스의 일과 성공의 14가지 원칙을 분석하였다. (14가지 원칙 전체 리스트를 아래에 덧붙인다.) 철저한 외부자의 시각에서 제프 베조스의 믿음, 신념, 경영원칙의 정수를 담았다고 할 수 있는 주주 서한을 메인 자료로 분석해서 통찰력 있는 결론을 끌어냈다는 점이 흥미롭다. 해서 다음으로 읽어볼 책은 아마존에서 무려 12년을 근무했던 저자 박정준씨가 철저한 내부자의 시점에서 아마존과 자신의 이야기를 풀어낸 ⟨나는 아마존에서 미래를 다녔다⟩로 정했다.</p><h3 id="제프-베조스의-14가지-성장원칙"><a href="#제프-베조스의-14가지-성장원칙" class="headerlink" title="제프 베조스의 14가지 성장원칙"></a>제프 베조스의 14가지 성장원칙</h3><p>14가지 성장원칙은 반복 가능한 성장 사이클, 즉 ‘테스트, 구축, 가속화, 확장’이라는 성장사이클에 적용됨</p><ul><li>Test. 전략적 테스트를 통해 아마존이 성장하는 데 기여한 세 가지 원칙<ul><li>PRINCIPLE 1. 성공적인 실패를 장려하라</li><li>PRINCIPLE 2. 큰 아이디어에 베팅하라</li><li>PRINCIPLE 3. 역동적인 발명과 혁신을 실행하라</li></ul></li><li>Build. 아마존이 미래를 구축하는 데 기여한 세 가지 원칙<ul><li>PRINCIPLE 4. 고객에게 집착하라</li><li>PRINCIPLE 5. 장기적 사고를 적용하라</li><li>PRINCIPLE 6. 플라이휠을 이해하라</li></ul></li><li>Accelerate. 아마존이 성장을 가속화하는 데 기여한 네 가지 원칙<ul><li>PRINCIPLE 7. 의사결정 속도를 높여라</li><li>PRINCIPLE 8. 복잡한 것을 단순화하라</li><li>PRINCIPLE 9. 기술로 시간을 단축하라</li><li>PRINCIPLE 10. 주인의식을 고취하라</li></ul></li><li>Scale. 아마존의 확장에 기여한 네 가지 원칙<ul><li>PRINCIPLE 11. 기업문화를 유지하라</li><li>PRINCIPLE 12. 높은 기준에 집중하라</li><li>PRINCIPLE 13. 중요한 것을 측정하고, 측정한 것을 의심하고, 직감을 신뢰하라</li><li>PRINCIPLE 14. 항상 ‘데이원’이라고 믿어라</li></ul></li></ul><p>😄경영경제서 중에서도 읽기 어렵지 않고, 메시지가 명확함</p><p>🙁130 페이지 아마존 플라이휠 그림에서 화살표 방향이 잘못된 듯하다? 중요한 그림인데 이런 실수를??</p><h2 id="나의-형광펜"><a href="#나의-형광펜" class="headerlink" title="나의 형광펜"></a>나의 형광펜</h2><hr><h3 id="서문-위험과-성장"><a href="#서문-위험과-성장" class="headerlink" title="서문 | 위험과 성장"></a>서문 | 위험과 성장</h3><ul><li>아마존이 급속도로 성장할 수 있었던 비결은 과연 무엇일까? 그 비결은 의도적으로 위험을 감수하고 활용하는 아마존의 독특한 접근방식, 실험과 발명을 장려하는 기업문화라고 나는 확신한다. 그리고 이 모든 것은 성공과 실패를 ‘위험’이라는 새로운 관점에서 바라보는 제프 베조스의 경영 철학에 기초하고 있다. <br> - 19 p.</li></ul><h3 id="PART-1-성장-사이클-테스트"><a href="#PART-1-성장-사이클-테스트" class="headerlink" title="PART 1 성장 사이클. 테스트"></a>PART 1 성장 사이클. 테스트</h3><p><strong>PRINCIPLE 1. 성공적인 실패를 장려하라</strong></p><ul><li>제프 베조스는 위험에 대해 다른 관점을 보여줬다. 위험을 감수하고 위험에 투자하면서 의도적으로 ‘실패’할 기회를 만들지 않는다면, 크게 성장하거나 생각할 수 없다는 것을 일찌감치 깨달았다. <br> - 53 p.</li><li>실패가 항상 나쁜 것이 아니라면 실패를 ‘성공적으로’ 만드는 것은 무엇일까? 그것은 실패에서 ‘무엇을 배우고 배운 것을 어떻게 적용하느냐’에 달려 있다. 그것이 모든 차이를 만들어낸다. <br> - 54 p.</li><li>베조스 레터와 여러 가지 자료에서 볼 때, 베조스는 ‘성공적인 실패’라는 개념을 신뢰한다. 그 학습 과정이 매우 중요하기 때문에 그는 자신의 비즈니스 모델에 의도적으로 실패를 도입한다. <br> - 61 p.</li><li>아마존은 예산에 ‘실패’ 항목을 배정함으로써 실패가 예견되는 많은 일에 자원을 배분할 수 있는 유연성을 발휘한다. <br> - 63 p.</li><li>분명히 말하지만 실패는 무능이나 게으름의 결과가 아니다. 아마존은 ‘무능’을 용납하지 않는다. 아마존은 새로운 아이디어나 서비스를 시도할 때 실패를 예상하고 이를 감내한다. 하지만 최선을 다하지 않는 것은 절대로 용납하지 않는다. <br> - 66~67 p.</li></ul><p><strong>PRINCIPLE 2. 큰 아이디어에 배팅하라</strong></p><ul><li><p>베조스는 아마존이 새로운 비즈니스 시장에 진입하기 위해 통과해야 하는 기준을 항상 세워놓고 있었다. 2014년에 그는 이렇게 말했다.<br>  이상적인 비즈니스는 적어도 네 가지 특성을 갖고 있습니다.<br>  - 고객들에게 사랑받고<br>  - 매우 큰 규모로 성장할 수 있고<br>  - 자본수익률이 높고<br>  수십 년 동안 지속 가능한 잠재력을 가질 것 <br> - 75 p.</p></li><li><p>아마존이 큰 아이디어에 베팅할 때는 나름의 방식이 있다. 그 방식의 가장 핵심적인 특징은 아이디어가 큰 잠재력을 갖고 있을 때에도 작은 베팅부터 시작한다는 것이다. <br> - 78 p.</p></li></ul><p><strong>PRINCIPLE 3. 역동적인 발명과 혁신을 실행하라</strong></p><ul><li>아마존의 핵심 가치는 모든 직원들이 뭔가를 개선하려고 할 때 역동적인 발명과 혁신이 이루어진다는 것이다. 이는 기업문화에 깊이 배어 있다. 최근에 새로 채용된 대학 졸업자든, 노련한 영업사원이든 상관없다. 베조스는 모든 직원이 자기가 맡은 일을 더 효과적으로 해낼 수 있는 방법을 찾아내기를 기대한다. “이렇게 하면 더 좋은 결과를 얻을 수 있지 않을까요?” 아마존은 이런 질문을 하는 사람을 원한다. 아마존은 모든 직원들에게 새로운 것을 시도하고 의문을 제기하고 프로세스를 다른 관점에서 바라보도록 격려한다. <br> - 86 p.</li><li>거의 모든 회사들이 경쟁에서 살아남기 위해 창의적이고 혁신적인 아이디어가 필요하다는 걸 알고 있다. 그 회사들이 아마존처럼 발명을 하지 못하는 이유는 지식이 부족해서가 아니다. 의욕이 부족해서도 아니다. 그 이유는 조직의 모든 곳에서 발명과 혁신이 이루어질 수 있는 기업문화와 기업구조를 만들지 못했기 때문이다. <br> - 89 p.</li><li>직원들이 역동적으로 발명에 도전하기 위해서는 실험을 권장하는 것뿐만 아니라 실패해도 치명적이지 않다는 것을 확실히 보장해주어야 한다. <br> - 89 p.</li><li>아마존은 실험에 실패한 직원(경영진 포함)에게 자신의 생각과 결과를 팀장, 팀원, 동료들과 공유하도록 권장한다. 직원이 개선하려했던 일과 가장 밀접히 관련된 사람들의 집단 지성이, 무엇이 잘못되었는지 확인하는 데 도움을 줄 수 있기 때문이다. <br> - 90 p.</li><li>직원들이 현명한 위험을 감수하도록 권장해야 한다. 왜냐하면 오늘날 대부분의 기업들이 처한 가장 큰 위험은 위험을 충분히 감수하지 않는 것이기 때문이다. <br> - 90 p.</li></ul><h3 id="PART-2-성장-사이클-구축"><a href="#PART-2-성장-사이클-구축" class="headerlink" title="PART 2 성장 사이클. 구축"></a>PART 2 성장 사이클. 구축</h3><p><strong>PRINCIPLE 4. 고객에게 집착하라</strong></p><ul><li>“아마존은 고객의 행복에 집착한다. 다른 기업과 달리 아마존은 단기적 수익에 연연하지 않고 장기적 고객 충성도를 높일 수 있는 기회를 적극 활용한다.” <br> - 109 p.</li></ul><p><strong>PRINCIPLE 5. 장기적 사고를 적용하라</strong></p><ul><li>“미래는 상상할 수 없지만 저는 미래에 신경 씁니다. 저는 제가 기억할 수 있는 시간보다 훨씬 전에 시작되었고, 누군가 저를 기억할 수 있는 시간보다 훨씬 더 오래 계속될 이야기의 일부라는 것을 알고 있습니다. 중요한 변화의 시기에 살고 있음을 느낍니다. 그 변화가 긍정적인 것이 되도록 해야 한다는 책임감을 갖게 됩니다. 저는 결코 거대한 떡갈나무를 볼 때까지 살지 못할 것임을 알면서도 도토리를 심으려 합니다.” <br> - 114 p.</li><li>‘핵심은 장기적 사고’라는 제목의 문단에서 그는 장기적으로 기업 가치를 키우는 것이 아마존 성공의 ‘근본적인 척도’가 되어야 한다고 강조했다. <br> - 117 p.</li><li>장기적 사고는 아마존이 중요한 지표에 집중할 수 있도록 해준다. 그 지표는 바로 고객과 수익 증대다. <br> - 119 p.</li></ul><p><strong>PRINCIPLE 6. 플라이휠을 이해하라</strong></p><ul><li>비즈니스에서 ‘플라이휠’은 주변에 바퀴살이 잔뜩 달린 기어를 연상하면 된다. 기어에 연결된 각각의 바퀴살은 플라이휠이 잘 회전할 수 있도록 힘을 더해주는 것, 즉 원하는 방향으로 비즈니스를 진행할 때 추진력을 더해주는 핵심 활동이다. 그런 활동을 더 많이 할수록 플라이휠에 힘이 가해져 결국 회전하기 시작할 것이며, 당신의 일에 추진력을 제공할 것이다. <br> - 129 p.</li><li>플라이휠 개념의 또 다른 장점은 플라이휠이 ‘의사결정 기준’ 역할을 할 수 있으며, 이를 통해 한정된 자원을 어디에 어떻게 집중할 것인지 판단하도록 돕는다는 점이다. <br> - 133 p.</li><li>플라이휠 개념은 비즈니스의 목표를 명확하게 해주고 회사에 추진력을 제공해준다. 플라이휠 개념을 이해하면 어떤 기회를 취하고 어떤 위험을 피해야 하는지 파악할 수 있다. 플라이휠을 통해 의사결정을 하고 비즈니스 목표에 맞게 플라이휠이 회전하도록 자원을 집중하라. 그러면 당신도, 당신 회사도 추진력을 얻어 아마존처럼 성장하게 될 것이다. <br> - 136~137 p.</li></ul><h3 id="PART-3-성장-사이클-가속화"><a href="#PART-3-성장-사이클-가속화" class="headerlink" title="PART 3 성장 사이클. 가속화"></a>PART 3 성장 사이클. 가속화</h3><p><strong>PRINCIPLE 9. 기술로 시간을 단축하라</strong></p><ul><li>아마존은 사내에서 사용할 목적으로 구축한 독점적 인프라를 확장시켜서 어떤 외부 개발자라도 자신의 목적에 맞게 사용할 수 있는 서비스로 만들었다. AWS는 시장을 장악하는 데 시간이 좀 걸렸지만 오늘날 아마존에게 큰 수익을 안겨주는 매우 성공적인 사업이 되었다. <br> - 184 p.</li></ul><h3 id="PART-4-성장-사이클-확장"><a href="#PART-4-성장-사이클-확장" class="headerlink" title="PART 4 성장 사이클. 확장"></a>PART 4 성장 사이클. 확장</h3><p><strong>PRINCIPLE 11. 기업문화를 유지하라</strong></p><ul><li>아마존은 기업문화를 유지하기 위해 많은 일을 했지만 크게 두 가지가 두드러진다. 개인적 리더십에 초점을 맞추는 것, 그리고 비즈니스의 지속적인 성장에 초점을 맞추는 것이다. <br> - 205 p.</li><li>제가 정말로 고민하는 것은 “어떻게 하면 데이원 기업문화를 유지할 수 있을까?”입니다. - 2018년 베조스 스피치 (리더십 포럼 ‘제프 베조스와의 마무리 대화’) <br> - 206 p.</li></ul><p><strong>PRINCIPLE 12. 높은 기준에 집중하라</strong></p><ul><li>직원 채용 회의에서 우리는 면접관들에게 최종 결정을 내리기 전에 세 가지 사항을 고려하라고 요청합니다.<br>첫째, 이 지원자는 존경할 만한 사람인가?  (중략)<br>둘째, 이 지원자가 자신이 속할 집단의 평균적인 성취도를 올려줄 것인가? (중략)<br>셋째, 이 지원자는 어떤 분야에서 슈퍼스타가 될 수 있을까?<br>_1998년 베조스 레터 <br> - 222~223 p.</li><li>아마존은 까다로운 근무환경으로 잘 알려져 있다. 최고의 직원들도 힘들어하는 곳이다. 때로는 A급 인재들마저도 큰 부담을 느낄 수 있다. 그러나 A급 인재로 이루어진 팀은 까다로운 환경을 덜 까다롭게 만든다. A급 인재는 자신의 업무에 집중할 수 있고 일을 잘 수행하는 다른 A급 인재들에게서 지원을 받을 수 있다. 베조스가 경영을 맡고 있는 한 높은 기준은 언제나 아마존의 핵심이 될 것이다. <br> - 225 p.</li><li>채용 면접은 단순히 개방형 질문이나 도발적인 질문을 던지는 데 목적이 있지 않다. 어떤 지원자가 당신의 비즈니스나 조직의 최고 자리에 오를 만큼 뛰어난지를 찾아내는 것이 핵심 목적이다. <br> - 227 p.</li><li>회사는, 자신들이 유지하는 기준만큼만 성공한다. 만약 고객 경험이 일관되지 않으면 당신의 회사는 결코 규모를 확장할 수 없다. 고객 경험이 부실하고, 이런 사례가 자주 발생하는 회사는 결코 규모를 확장할 수 없다. 고객 경험이 지속적으로 좋을 때에만 규모의 확장이 가능하다. <br> - 232 p.</li><li>높은 기준의 기업문화를 창조하는 회사는 지속적으로 스타트업처럼 행동할 수 있게 된다. 하지만 높은 기준에서 벗어나기 시작하면 회사는 데이투로 접어드는 느리고 괴로운 과정을 시작하게 된다. <br> - 233 p.</li></ul><p><strong>PRINCIPLE 13. 중요한 것을 측정하고, 측정한 것을 의심하고, 직감을 신뢰하라</strong></p><ul><li>데이터는 아마존의 모든 것을 주도한다. 사실상 모든 의사결정이 아마존 시스템 내에서 포착된 데이터를 통해 이루어진다. <br> - 235 p.</li><li>아마존 웹사이트에서는 최적의 색상, 사용하기에 가장 좋은 버튼, 리뷰를 배열할 최적의 위치 등 수천가지 항목을 결정하기 위한 실험이 끊임없이 진행된다. ‘A/B테스트’라고 불리는 실험은 어떤 변화가 고객 경험과 구매 패턴에 가장 긍정적인 영향을 미치는지를 결정하는 표준적인 방법이다. 분할 실험이라고도 불리는 A/B 테스트는 간단히 말해 실험 대상을 두 그룹으로 나누고 각각에 서로 다른 옵션을 준 다음, 어떤 옵션이 더 잘 작동하는지 확인하는 것이다. <br> - 236 p.</li><li>아마존의 모든 직원들은 웹사이트 운영에 관한 방대한 정보를 제공하는 공용 데이터베이스에 접속할 수 있다. 아마존이 고객에게 필요한 발명을 장려하는 방법 중 한 가지는 이러한 데이터에서 고객 경험 개선에 도움이 될 수 있는 새로운 사항을 발견한 직원에게 보상하는 것이다. <br> - 237 p.</li><li>A/B 테스트는 아마존의 DNA에 있으며 우리는 아마존 혁신의 핵심입니다. 아마존의 실험 및 최적화팀은 역동적으로 성장하는 아마존 비즈니스에 힘을 실어주는 핵심 기술을 구축합니다.<br>우리는 아마존 리더들이 데이터에 근거해 합리적인 결정을 내릴 수 있도록 도와주는 공학과 과학을 연구하고 있습니다. 그리고 인과추론, 의사결정 연구, 실험, 예측을 수행하는 팀을 운영하고 있습니다. 우리는 아마존과 그 자회사의 거의 모든 비즈니스와 조직이 사용하는 분산 시스템에서 실행되는, 실용적인 과학 도구를 만들고 사용합니다. 또 이 팀은 아마존 직원들이 자신의 업무가 아마존, 고객, 공급자, 파트너 및 기타 관계자들에게 가져다주는 장기적 가치를 이해할 수 있도록 돕습니다. <br> - 238 p.</li><li>‘잉여현금흐름’이라는 용어는 기업이 임대료, 필요 장비, 유지보수 또는 업그레이드, 기술 등 고정비용과 부채를 지불한 후 남은 현금흐름의 양이다. 잉여현금흐름은 기본적으로 기업의 재량소득, 즉 ‘쓸 수 있는 돈’을 의미하는 ‘현금흐름’과는 다르다. 왜냐하면 잉여현금흐름은 회사가 좋은 환경에서 운영을 계속하기 위해 반드시 지불해야 하는 지출을 고려하기 때문이다.  <br> - 239 p.</li><li>베조스는 2004년 편지에서 많은 부분을 할애하여 주당순이익보다 잉여현금흐름이 중요한 이유를 설명했으며, 이를 아마존 재무 전략 중 하나로 계속 사용하겠다고 밝혔다. 하지만 수백만명의 투자자들은 여전히 수익, 주당순이익, 그리고 수익성 증가에 초점을 맞추고 있다.<br>투자자들이 베조스의 관점을 거부하는 것일까? 아니면 주류 주식시장이 수십 년 동안 홍보한 지표에 의존하는 것이 더 쉽기 때문일까? 수익 대신 잉여현금흐름을 극대화하여 아마존을 성공적으로 운영하는 베조스의 사례는, 우리가 정말 비즈니스에서 중요한 지표를 측정하고 있는지 의문을 제기한다. 기업 건전성을 나타내는 가장 좋은 척도로 당신이 잉여현금흐름과 수익 중에 어떤 것을 더 중시하든 상관없이 말이다. <br> - 240 p.</li><li>궁극적 지표가 결정되면 당신 회사가 올바른 방향으로 가고 있는지 알려주는 보다 상세한 데이터 포인트를 파악하기 위해 리더들과 함께 노력해야 한다. 임원진, 부서, 팀 새로운 프로젝트 팀 등 당신의 조직 전체가 이 작업을 수행해야 한다. <br> - 241 p.</li><li>우리는 매출 총이익을 항상 플러스로 유지하고 있습니다. 아마존은 고정비 비즈니스입니다. 제가 내부 지표에서 확인할 수 있었던 것은 회사가 일정 규모에 도달하면 고정비용을 감당하면서 이익을 낼 수 있다는 사실입니다.  _2018년 베조스 인터뷰(블룸버그 ⟨데이비드 루벤스타인 쇼⟩) <br> - 243 p.</li></ul><p><strong>PRINCIPLE 14. 항상 ‘데이원’이라고 믿어라</strong></p><ul><li>기업이 집중해야 할 요소는 다양할 수 있습니다. 경쟁업체에 집중할 수도 있고 제품, 기술, 비즈니스 모델에 초점을 맞출 수도 있습니다. 그러나 제 생각에는 창업 첫날의 열정으로 고객에게 집중하는 것이야말로 기업이 지켜야 할 가장 소중한 가치입니다.  _2016년 베조스 레터 <br> - 248 p.</li><li>아마존 데이원 철학의 핵심은 베조스가 ‘프록시 저항’이라고 부르는 것과 직결된다. 프록시란 간단히 말해 바람직하지 않은 자신의 행동이나 결정에 대한 책임을 돌리기 위해 사용하는 핑곗거리를 의미한다.<br>(중략)<br>“프록시에 저항하라”는 베조스의 말은 “고객을 위해 옳은 일을 할 때는 정책과 절차에서 벗어나도 괜찮다”라는 뜻이다. 정책 및 절차는 의사결정을 내리기 위한 것이지 고객의 요구를 무시하기 위한 것이 아니기 때문이다.<br>아마존처럼 데이원 마인드를 유지한 채 성장하는 회사가 되려면 당신 팀이 하는 일을 프록시가 좌우하지 못하도록 해야 한다.  <br> - 249 p.</li><li>만약 결정을 잘못 내렸다면 어떻게 해야 할까? 걱정할 필요 없다. 당신이 어떤 결정을 내렸는데 그것이 잘못된 것으로 판명된다면, 실수로부터 얻은 정보를 활용하여 신속하게 새로운 결정을 하면 된다. <br> - 252 p.</li><li>첫날의 마음가짐을 지키기 위한 핵심적인 요소들을 소개해드리지요. 고객의 소중함을 항상 기억할 것, 핑곗거리를 찾지 말 것, 트렌드를 놓치지 말 것, 그리고 의사결정을 가속화할 것.  _2016년 베조스 레터 <br> - 255 p.</li></ul><h3 id="나가는-글-위험과-성장의-마인드"><a href="#나가는-글-위험과-성장의-마인드" class="headerlink" title="나가는 글 | 위험과 성장의 마인드"></a>나가는 글 | 위험과 성장의 마인드</h3><ul><li>아마존 웹서비스: AWS는 원래 아마존만을 위한 내부 운영체제로 설계되었다. 그러나 베조스는 아마존 독점 플랫폼을 다른 개발자들에게 개방하기로 결정했다. 그 당시 어떤 회사도 소프트웨어를 서비스로 제공하지 않았고 아마존이 그런 서비스를 시작할 거라고도 예상하지 못했다. 이는 아마존이 7년 동안 선두를 유지한 이유이기도 하다. 그는 역발상적인 접근을 시도했다. <br> - 258 p.</li><li>물론 무모한 실험은 하지 않을 것이며, 좋은 결실을 맺도록 최선을 다해 노력하겠습니다. 가치 있는 실험이 항상 궁극적인 성과로 이어지지는 않겠지만, 이런 대규모 위험 감수는 우리가 대기업으로서 고객과 사회에 기여할 수 있는 활동의 일부분입니다. 여러 실험 중 하나만 크게 성공해도 많은 실패의 비용을 감당하고도 남기 때문에 주주 여러분께도 좋은 뉴스를 전해드릴 수 있을 것입니다.  _2018년 베조스 레터 <br> - 260 p.</li></ul><h3 id="2018년-베조스-레터"><a href="#2018년-베조스-레터" class="headerlink" title="2018년 베조스 레터"></a>2018년 베조스 레터</h3><ul><li>아마존은 창업 초기부터 도전적이고 창의적인 <strong>기업문화</strong>를 만들고 싶었습니다. 도전자들은 발명하기를 좋아합니다. 전문가가 된 후에도 초심을 잃지 않습니다. 도전자의 사고방식은 반복을 통해 성공할 수 있다는 겸손한 확신이며 크고 해결하기 어려운 기회에 접근하는 데 도움을 줍니다. 도전자들은 발명하고 출시하고 다시 발명하고 다시 출시하고 다듬고 개선하기를 반복합니다. <strong>그들은 성공이 단번에 오지 않는다는 것을 잘 알고 있습니다.</strong> <br> - 284 p.</li></ul>]]></content>
      
      
      <categories>
          
          <category> Life </category>
          
          <category> 리뷰 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 책리뷰 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>책리뷰. 엄태웅, 최윤섭, 권창현, ⟪대학원생 때 알았더라면 좋았을 것들⟫</title>
      <link href="/2020/01/14/book_20200114/"/>
      <url>/2020/01/14/book_20200114/</url>
      
        <content type="html"><![CDATA[<h2 id="리뷰"><a href="#리뷰" class="headerlink" title="리뷰"></a>리뷰</h2><p>데이터사이언스/인공지능 분야의 커뮤니티에서 활발한 활동으로 유명하신 엄태웅(Terry Taewoong Um)님의 글을 통해 알게된 책으로, 엄태웅, 최윤섭, 권창현 세 분이 참여하신 동명의 블로그 <a href="http://gradschoolstory.net/" target="_blank" rel="noopener">대학원생 때 알았더라면 좋았을 것들</a>의 내용을 다듬어 책으로 나온 것이라고 한다.</p><p>나는 경영학과 전공으로 학부를 졸업한 뒤 평범한 회사원으로 2년을 지내다가 경영학을 전공으로 대학원에 진학하여 석사 학위를 받았다. 석사 과정에 들어갈 당시 꿈꿨던 것처럼 졸업 후에 미국으로 박사 유학을 떠나진 않았고, 대기업 내 경영경제연구소에서 RA로 근무했다. 그리고 어쩐지 약간 방향을 틀어 데이터사이언스를 공부해서 현재는 데이터 분석 쪽 일을 하고 있다. </p><p>데이터사이언스는 매우 흥미롭고도 도전적인 분야이고 지금까지 경험해온 바 적성에도 잘 맞아 나는 나의 전직에 꽤 만족한다. (물론 앞으로 갈 길이 멀고 더 분발해야 한다는 것을 잘 알고 있다.) 하지만 상술한 내 커리어를 돌아보면 불필요한 detour를 많이 한 것 처럼 보이기도 하고, 또래보다 한 다섯걸음 쯤?은 뒤쳐져 있다는 생각에 불안할 때도 많다. 하지만 맘 속 깊이에서는 본능적으로 알고 있다. 남이 보기엔 방황처럼 보일 수도 있는 대학원 과정이 데이터사이언스 분야로 오기 위한 밑받침이 되어줬다는 것을. (그렇다. 나 자신은 알고 있음에도 불구하고 불안감을 느끼는 것이다.) 이번에 이 책을 읽고 대학원 경험이 나에게 어떤 의미인지를 다시 정리하고 되새기는 시간을 가질 수 있었다. </p><p><strong>Key Takeaway: 대학원에서 배울 수 있는 중요한 것</strong></p><ul><li>지식을 얻는 과학적 방법론</li><li>논리적인 사고 방식과 문제해결 능력</li><li>본인이 주도하는 삶</li></ul><p>😀</p><ul><li>엄태웅님의 ‘취업이냐 진학이냐, 그것이 문제로다’, 그리고 최윤섭 박사님의 ‘박사학위라는 것의 의미’ 장이 기억에 남는다.</li><li>과연 책 제목대로 내가 대학원생 때 이 책을 알았더라면 감사하게 생각했을 만 한 알찬 팁들이 많다.</li><li>대학원 생이 아니더라도 도움이 될 만한 내용도 많다. 대학원생이 아니더라도 논문을 꾸준히 읽으면서 공부를 해야하는 직업을 가진 사람이라면 유용한 팁을 얻을 수 있음은 물론이고, 시간관리 방법이나 기본적인 업무 매너, 삶에 대한 태도 등 모두에게 적용될 수 있는 제너럴한 팁들도 가득하다.</li></ul><p>🤔 : 아쉬운 점 없음!</p><h2 id="나의-형광펜"><a href="#나의-형광펜" class="headerlink" title="나의 형광펜"></a>나의 형광펜</h2><hr><h3 id="1부-박사과정-대학원생의-이야기-엄태웅-박사과정생편"><a href="#1부-박사과정-대학원생의-이야기-엄태웅-박사과정생편" class="headerlink" title="1부. 박사과정 대학원생의 이야기 - 엄태웅 박사과정생편 -"></a>1부. 박사과정 대학원생의 이야기 - 엄태웅 박사과정생편 -</h3><p><strong>프롤로그: 거창한 이야기의 시작</strong></p><ul><li>나는 어른이 되기 위해, 독립적으로 자신의 인생을 책임지고 이끌어갈 주체가 되기 위해 우리들이 얻어야 할 대학원 속에서의 배움에 대해 이야기해보고자 한다.</li><li>하지만 인생을 헤쳐가며 거창한 질문의 무게와 한 번도 정면으로 맞서지 않는다면 우리의 인생은 남들이 세워놓은 ‘통과의례’에만 허덕이다 끝나는 인생이 될지도 모른다.</li><li>가장 중요한 부분은 ‘어떤 문제를 풀 것인가?’이고 ‘왜 풀어야 하는가?’이다.</li></ul><p><strong>1. 박사를 꿈꿔도 되나요</strong></p><ul><li>대학원 과정은 타인과의 경쟁이 아닌 철저히 자기와의 싸움이요, 넘치는 자유 혹은 부족한 시간 속에서 피어나는 자기관리의 결과물이다.</li><li>그렇다면 ‘공부하는 능력’ 말고 진학을 고려할 때 가장 중요하게 점검해봐야 할 점은 무엇일까? 그것은 바로 ‘지적 호기심’과 이를 탐구하는 ‘끈기’이다. 만약 당신이 해결하고 싶은 문제가 있고, 그 문제는 일정 수준 이상의 기술적 난이도를 가지고 있으며, 당신이 그것을 과학적 방법론으로 차근차근 풀어가보고자 하는 의지가 있다면 당신은 대학원에 매우 적합한 사람이다.</li></ul><p><strong>3. 취업이냐 진학이냐, 그것이 문제로다 (하)</strong></p><ul><li>이상적인 경우, 회사는 개인으로서는 이루지 못할 큰 꿈을 실현시켜 줄 키다리 아저씨가 되어줄 수 있다. 회사가 나를 착취하는 것이 아닌 내가 나의 자아실현을 위해 회사의 자원을 이용한다고 생각하면 즐겁고 발전적인 회사생활을 할 수 있을 것이다. 중요한 것은 회사의 목표가 본인의 성장 방향과 일치하여 일이 곧 본인의 자아실현과 연결되게 만드는 것이다. 그러려면 배울 점이 많은 훌륭한 동료들이 있고, 본인의 가치와 비슷한 가치를 추구하는 회사를 만나야 할 것이다. 첨언한다면 이렇게 좋은 곳에 가는 방법은 단 한 가지, 본인 역시 그들과 어울릴 만한 훌륭한 사람이 되는 것이라는 점을 잊지 말도록 하자.</li><li>대학원 생활로부터 배울 수 있는 가장 큰 이점은 아마도 논문을 통해 지식을 얻는 습관과 과학적 방법론으로 문제를 해결하는 경험</li><li>대학원 과정을 마칠 때쯤이면 학문적인 호기심이 생겼을 때 논문을 검색해보고 이를 통해 지식을 습득하는 것이 자연스러워질 수 있다. 물론 현실적으로는 위키피디아를 검색하는 일이 많겠지만, 적어도 본인의 전문 분야에서만큼은 ‘마음만 먹으면 논문을 통해 최신 기술을 탐색할 수 있다’ 정도의 자신감은 가질 수 있을 것이다.</li><li>대학원에서의 또 다른 배움은 지식 그 자체가 아닌 ‘지식을 얻는 과학적 방법론’을 경험하는 것에 있다. 이제까지의 지식이 책이나 강의로부터의 일방적인 주입에 기초했다면, 대학원에서는 스스로 문제를 정의하고 조사하고 탐구하여 새로운 방법에 대한 검증까지 마치는 일련의 과정을 경험할 수 있다. 이것은 매우 값진 경험이다. 대학원에서 논문을 읽고 써본 사람은 새로운 지식에 대한 무조건적인 수용이나 배격이 아닌 과학적 검증 체계를 통한 지식 습득 습관을 갖출 수 있을 것이다.</li><li>대학원 생활에서 배울 점을 하나 더 꼽는다면 ‘본인이 주도하는 삶’을 이야기하고 싶다. 이 역시 개인 차가 있고 환경 차가 있겠지만, 일반적으로 회사보다 대학원이 조금 더 큰 자유가 주어지는 것이 보통이다. 시간관리부터 연구에 대한 실행까지 스스로 규율을 세우고 스스로 탐색해 나아가는 것이 대학원 생활이다. 이러한 환경 속에서 때론 나태함에 빠지기도 하고 때론 무너진 워크-라이프 밸런스에 일 중독에 빠질 수도 있겠지만, 그러한 자율성을 주도해보는 경험 역시 대학원 생활에서 얻는 큰 배움 중 하나이다.</li></ul><p><strong>4. 전공을 바꾸 대학원에 가고 싶어요</strong></p><ul><li>우리의 인생에선 생각지도 못했던 A와 B가 만나고 이를 C가 도와주는 일들이 비일비재하게 일어난다. 그리고 이 모든 것이 가능해지려면 A, B, C 모두를 진지하게 내 것으로 소화해야 한다. 지금 버리려고 하는 자신의 전공이 미래에 소중하게 쓰일 A, B, C 중 하나일 수 있다. 그러니 현재의 전공을 너무 쉽게 무시해버리거나 불성실한 태도로 낭비해버리지 말고 잘 갈무리해서 미래의 무기로 가지고 있었으면 좋겠다. 당신의 홀대하는 지금의 전공이 스티브 잡스의 ‘캘리그래피’가 될 수도 있기 때문이다.</li><li>특정 지식보다는 새로운 지식에 대한 빠른 학습 속도learning curve를 가진 사람이 되는 것이 중요하다.</li></ul><p><strong>6. 나의 유학 도전 성공 이야기</strong></p><ul><li>“학교 이름이 뭐가 중요해? 이름 없는 학교라도 내가 하고 싶은 연구를 할 수 있다면, 이름 있는 학교에서 하기 싫은 연구를 하는 것보다 100배 더 좋을 것 같아. 그게 하버드이든 MIT이든 말이야.”</li></ul><p><strong>8. 영어 못해도 영어 논문 잘 읽는 법</strong></p><ul><li>수식이 어려워 못 읽겠다는 분도 있는데, 수식은 문장으로는 명확히 이해되지 않을 때 혹은 그 논문을 직접 재현해야 할 때 필요한 것이다. 대부분의 논문들은 그 수식의 의의와 역할 정도만 알아도 전체 논문을 이해하는 데는 큰 지장이 없다.</li><li>처음 연구 분야를 접하는 분들이라면 ‘review’ ‘overview’ ‘survey’ ‘tutorial’과 같은 검색어를 함께 넣어 검색해보면 좋은 리뷰 논문들을 발견할 수 있을 것이다.</li><li>리뷰 논문이란 특정 문제의 해결책을 제시하기보다 이제까지 제안되었던 관련 연구들을 검토하거나review, 훑어보거나overview, 조사하거나survey, 쉽게 설명하고 있는tutorial 논문들을 말한다.</li><li>논문을 고를 때는 출판 연도, 논문 인용 수, 그리고 저자를 확인해보면 좀 더 믿을 만한 논문을 골라 읽을 수 있다. 논문 인용수가 많더라도 너무 옛날 논문이라면 조금 더 최신의 논문부터 읽어보길 권한다. 논문을 읽다가 좀 더 배경지식이 필요하다고 느낀다면 그때 옛날 논문을 읽어도 늦지 않기 때문이다.</li><li>논문은 꼭 순서대로 읽을 필요가 없다. 나 같은 경우엔 내가 초록을 통해 ‘다루는 문제와 이 논문의 기여’를 파악한 후 내가 제대로 이해했는지 확인하기 위해 결론을 먼저 읽어본다. 결론은 초록과 매우 유사한 내용을 담고 있지만 실험 과정, 결과, 의의가 좀 더 자세하게 적혀 있는 경우가 많다.</li><li>논문 읽기를 어려워하는 분들에겐 수식도 영어 못지않은 큰 장벽일 것이다. 중요한 건 그 수식의 역할이다. 수식이 무엇을 입력값으로 받아 무엇을 결과물로 내놓는지 보고, 이렇게 하는 이유가 무엇인지, 즉 그 수식의 역할을 파악하는 것이 중요하다. 하지만 만약 그 논문이 본인에게 정말 중요한 논문이라면 관련 교과서들을 공부하며 수식까지 이해하는 것이 좋다. 대학원 공부는 이렇게 하는 것이다. 수업에서 가르쳐주는 내용만 배우는 것이 아니라 논문을 이해하기 위해 스스로 찾아서 하는 공부가 대학원 공부이다.</li></ul><p><strong>9. 영어 못해도 영어 논문 잘 쓰는 법</strong></p><ul><li>논문은 연구를 다 하고 쓰는 순차적 과정이 아닌, 쓰기와 연구가 오가는 상호 보완적 과정임을 인지하자.</li><li>초록은 문제 제기와 연구의 중요성에 조금 더 큰 방점을 두고 결론은 실험을 통해 얻은 지식과 의의에 대해 조금 더 큰 방점을 두고 풀어내는 것이 좋다.</li><li>우선 영어 공부를 할 때부터 동사와 전치사의 궁합collocation을 같이 알아두는 것이 전치사 실수를 줄이는 한 가지 방법</li><li>관사에 대해서는 기본적인 용법 습득은 물론이고 상황에 따라 그것이 전체 카테고리를 이야기하는 것인지, 특정한 하나의 개체를 끄집어내 이야기하는 것인지 구분하며 사용할 필요가 있다. 어쩔 수 없이 많은 예문을 통해 감을 익혀야 하는 문제인 것 같다(원어민에게 물어봐도 왜 ‘a, the’를 썼는지 잘 설명하지 못하는 경우도 많다).</li></ul><p><strong>10. 자기관리가 대학원 생활의 전부다</strong></p><ul><li>대학원 생활에서 중요한 것은 ‘이렇게 늘어난 자율을 어떻게 관리하는가’이다. 가방끈이 늘어나며 여러분이 얻어야 하는 것은 지식이 아니라 자율을 관리하는 방법이다. 구체적으로는 목표를 위해 주어진 자원을 분배하고 시간을 관리하며 스스로 동기부여를 통해 목표를 이뤄가는 과정을 배운다.</li><li>대학원은 학생을 지식 주입의 대상에서 벗어나 독립적인 연구의 주체로 변화시켜주는 교육의 꽃이다.</li><li>연구의 주인은 지도 교수가 아니라 본인이다. 그리고 본인이 호기심을 갖고 스스로 질문을 던져야 한다. 이제까지의 삶은 남이 내주는 문제를 푸는 데 허덕이며 살았는지도 모른다. 하지만 대학원 생활, 아니 앞으로 남은 인생에선 스스로 의미 있는 질문을 하고 그것에 성실히 답해가는 삶을 살아야 할 것이다. 다시 말해 이제까진 남이 내준 문제를 풀어 남이 채점해주는 삶을 살았겠지만, 앞으론 내가 낸 문제를 내가 풀어 내가 채점하는 삶을 살게 된다는 것이다. 그 변화의 첫걸음이 바로 대학원 생활이다.</li><li>나 자신을 당근과 채찍으로 잘 다독이며 원하는 목표를 이루는 법</li><li>나는 무엇을 궁금해하는 사람인가? 무엇을 하면 내 삶이 만족스러울 수 있을까? 그러한 목표를 위해 나의 시간은 어떻게 분배해야 할까?</li><li>성공적인 대학원 생활을 이끄는 요인들은 성공적인 인생을 이끄는 지혜들과 그 조건이 크게 다르지 않다. 인생의 지혜를 통해 대학원 생활을 주도하고 대학원 생활을 통해 인생의 지혜를 배우도록 하자.</li></ul><p><strong>11. 대학원생이 갖추어야 할 의외의 덕목들 4가지</strong></p><ul><li>개인이 할 수 있는 브랜딩은 그리 거창한 것이 아니다. 그저 자신의 전문성을 무기로 꾸준히 자신의 실력을 세상에 노출하고 논문, 블로그, 깃허브, 트위터 등을 통해 다른 연구자들과 소통하며 지내는 것이다. 그러다 보면 자연스럽게 ‘○○○ 전문가’로서의 개인 브랜드도 생길 것이며 본인 논문의 영향력도 덩달아 커질 것이다.*</li><li>박사과정은 곧 20대 중후반과 30대 초중반의 삶을 의미한다. 연구를 잘하려면 연구 외적인 부분에서의 인생의 과정들도 순탄하게 진행해가는 것이 중요하다. 그리고 그중 하나는 순탄하게 연애하고 결혼을 하는 일일 것이다. 따라서 연구능력 못지않게 연인을 만나 아끼고 사랑하는 법을 미리 배워두는 것이 좋을 것이다.</li></ul><p><strong>12. 내게 뒤처질 수 있는 행복을 허하라</strong></p><ul><li>“더 뛰어난 사람이란 건 존재하지 않아요.”라고 말하는 것은 아니다. 다만 더 뛰어난 사람이 많다는 건 그냥 “이 세상에 사람 많아요.”와 크게 다르지 않은 말이다. 세상에 사람이 많기에 나보다 더 뛰어난 사람이 존재한다는 건 매우 당연한 일이다. 어떤 사람들은 이러한 열등감과 오기가 자신을 이끌어줄 동력이라 생각하는지 모르겠다. 하지만 우리의 동력은 우리 자신을 사랑할 때 나오는 것이지 자신을 쓰레기로 매도한다고 초능력이 생기진 않는다고 나는 믿는다.*</li><li>삶에서 속력보다 방향이 중요하단 건 너무나 잘 알려진 격언이다. 하지만 우리의 채찍질이 정말 ‘방향’을 위해 쓰이고 있는지를 생각해보자면 지금까진 대부분이 ‘속력’에 관계되어 있음을 깨달을 것이다. 다시 말해 우리는 ‘속력’에 대한 채찍질이 과한 반면 ‘방향’에 대한 채찍질은 그만큼 적게 가하고 있다.</li><li>그저 최대한 즐기시라. 사람은 경주마가 아니다. 채찍을 맞아 수동적으로 달리는 존재가 아니라는 말씀이다. 그리고 우리는 채찍 맞는 말은 오래 달릴 수 없다는 것을 잘 알고 있다. 나는 열심히 쥐어짜내며 점프해야 더 높이 올라갈 수 있다고 믿지 않는다. 오히려 주변 풍경을 천천히 즐기면서 걸어야 더 높이 오를 수 있다고 믿는다.</li><li>그러니 모든 것을 당신의 즐거움 안에서 찾아가시기 바란다. 너무 괴로워하며 하루하루를 쥐어짜지 마시고, 너무 자신의 못남을 부각하며 채찍질하지 마시고, 그저 오늘을 즐기시고, 조금은 게으름을 허락해주시고, 주변 사람들과 행복을 만끽하시며 즐거운 여행처럼 하루를 사셨으면 하는 바람이다. 오늘의 즐거움을 내일의 발전과 자연스럽게 연결해가는 것, 그것이 어쩌면 내 미래를 위한 지속 가능한 발전의 길이 아닐까 싶다. 너무 자책하지 마시라. 그대는 충분히 잘하고 있으니까.</li></ul><h3 id="2부-대학원을-졸업한-연구자의-이야기-최윤섭-박사편"><a href="#2부-대학원을-졸업한-연구자의-이야기-최윤섭-박사편" class="headerlink" title="2부. 대학원을 졸업한 연구자의 이야기 - 최윤섭 박사편 -"></a>2부. 대학원을 졸업한 연구자의 이야기 - 최윤섭 박사편 -</h3><p><strong>에필로그: 안정적인 삶, 그런 거 없다</strong></p><ul><li>그런데 생각해보면 이렇게 한심하고 답답한 상태가 인생의 본성nature이고 기본 모드default mode가 아닌가 싶다. 그리고 우리가 불행한 이유는 어쩌면 이런 지극히도 자연스러운 인생의 본성을 받아들이지 못한 채, 이룰 수 없는 환상만 좇다 보니 이리 불행한 건 아닌가 싶다.</li><li>하지만 그 어떤 것도 내 인생에 영원한 안정을 가져다주진 않는다. 왜냐하면 불안정이 인생의 본성이고 기본 모드이기 때문이다.</li><li>안정은 환상이다. 불안정이 디폴트다. 술술 풀리는 인생은 환상이고, 뭐든 턱턱 막히는 인생이 디폴트다. 그러니 지금 삶이 불안정하다고, 지금 삶이 하나도 뜻대로 되지 않는다고 너무 좌절하지 않으셨으면 좋겠다.</li><li>중요한 건 탈출이 아니라 그 안에서 행복을 찾는 일이다. 행복한 삶은 안정된 삶, 모든 일이 술술 풀리는 삶이 아니라, 불행과 함께 공존할 줄 아는 삶이다. 그러한 삶을 만들 줄 아는 사람을 우리는 현명한 사람이라고 이야기한다.</li></ul><p><strong>1. 나는 과연 대학원에 가야 하는 걸까</strong></p><ul><li>당신이 궁극적으로 원하는 것이 무엇인지를 잘 생각해보자. 내가 이루고자 하는 직업적인 목표는 무엇인가? 이 질문에 대한 답을 누구도 대신해줄 수는 없다. 이 질문을 진지하게 고민하지 않는다면 어떤 결정을 내려도 후회할 가능성이 높다.</li><li>사실 대학원생은 사회 전반의 시각에서 보더라도 매우 특수하고도 어정쩡한 역할을 하는 중간인과 같다. 학생도 아니고, 사회인도 아니며, 교수도 아니고, 정식 연구원이라고 할 수도 없다. 대기업처럼 잘 만들어진 시스템 속에서 체계적으로 배우면서 일하는 것도 아니고, (잘은 몰라도) 노동법에 의해서 보호받는다는 이야기도 들어본 적이 없다. 인권의 사각지대에 있는 경우도 많으며, 역할 자체가 명확하지 않아서 어떤 역할이라도 필요하다면 해야 하는 경우가 많다.</li><li>우리 지도 교수님이 실험이 잘 풀리지 않아서 좌절하고 있는 나를 위로하시면서 하신 말씀이 있다. “실험은 원래 디폴트가 꽝(원하는 결과가 나오지 않는 것)이고, 긍정적인 결과가 나오는 경우가 오히려 예외적”이라는 것이다. 그만큼 연구라고 하는 것은 결코 내가 계획한 대로 흘러가지 않는다. 연구 과정에는 반드시 문제가 발생하며, 내가 예상했던 것보다 항상 더 많은 시간이 (보통 두 배 이상) 들어간다.</li></ul><p><strong>2. 박사학위라는 것의 의미</strong></p><ul><li>“윤섭, 네가 왜 박사를 받을 자격이 된다고 생각하나?”</li><li>그 질문에 대해서 순간적으로 ‘내가 정말 박사를 받을 자격이 없어서 이런 질문을 하신 것이 아닐 것이다’는 생각과 함께 ‘이건 박사학위라는 것의 가치에 대한 내 철학을 묻는 질문이다’는 생각이 머릿속을 스쳐 지나갔다.</li><li>전문성을 유지한다는 것은 급류를 거슬러 헤엄치는 것과 비슷하다. 열심히 발버둥을 치면 겨우 제자리에 머물 수는 있을지도 모른다. 하지만 조금 쉬려고 하면 금세 휩쓸려 떠내려가고 만다.</li><li>안타깝게도 논문은 우유와 같다. 유통기한이 있다는 말이다. 논문의 유통기한은 대개 5년 정도라서, 새로운 직장에 지원하거나 과제 지원서를 쓸 때는 ‘최근 5년 이내의 연구 업적’을 쓰게 된다</li><li>우리가 대학원에서 주제를 잡고, 가설을 세우고, 실험하는 내용은 교과서의 마지막 페이지 그 이후의 내용이다. 만약 내가 하는 연구가 아주 성공적으로 마무리되고 학계에서 중요하게 받아들여진다면, 그 내용이 이제 교과서에 한두 줄로 실리게 될지도 모른다. 우리가 그동안 배웠던 교과서라는 것도 그렇게 조금씩 쓰여온 것이었다. 태초부터 존재하던 것이 아니라 말이다.</li><li>이제 교과서 대신에 우리는 논문을 읽어야 한다. 하지만 누구도 내가 어떤 논문을 어떤 순서로 어떻게 읽어야 할지 알려주지 않는다. 내 연구주제에 대한 지식의 체계는 이제 나 스스로가 만들어가야 한다. 몇몇 논문은 다른 동료 혹은 교수님과 함께 읽고 토론할 수도 있겠지만, 절대다수의 논문은 나 스스로 읽고 이해하고 내 것으로 만들어야 한다. 이러한 과정은 지금까지 우리가 초-중-고-대학교를 거치며 해왔던 ‘공부’와는 완전히 다른 것이다</li><li>박사과정 말년 차이던 어느 날, 나는 재미있는 사실을 깨닫게 되었다. 내가 연구하는 주제에 대해서 궁금한 것이 생겼는데, 논문을 아무리 찾아봐도 그 의문에 대한 답을 알 수 없었다. 그런데 곰곰이 다시 생각해보니 그 질문에 대한 답은 나뿐만이 아니라 누구도 가지고 있지 않았던 것이다. 여기서 ‘누구도’라는 말은 우리 연구실이나 학교뿐만이 아니라, 현재 지구상에 살고 있는 전 인류의 누구도······라는 말이다. 이제 이 주제에 대해 내가 궁금한 것에 대한 해답은 교과서에도, 논문에도, 세상 어디에도 없었다. 그 순간 나는 ‘이제 적어도 지엽적인 나의 연구주제에 관해서는 인류가 가진 지식의 최전방에 도달했구나.’ 하는 것을 느꼈다.</li><li>연구를 한다는 것은 그렇게 인류가 가진 지식의 경계 너머에 있는 미지의 세계를 조금씩, 아주 조금씩 개척해나가는 것과 같다. 이제 내가 가진 질문에 대한 답은 다름 아닌 내가 만들어야 하는 것이다. 내 질문에 대한 ‘정답’이라는 것이 존재하는지는 모르겠지만, 그 문제에 대해서 가설과 실험을 거쳐서 논리적으로 결론을 내리고, 이것이 학계에서도 받아들여진다면 그것이 논문이 되고, 결국에는 인류의 새로운 지식이 될 것이다. 그것을 깨닫고 나는 소름이 돋았다. 그 경계를 넓혀간다는 것은 내게 아주 숭고한 일처럼 느껴졌기 때문이다. 나는 인류 지식의 경계를 미증유의 세계로 넓혀가는 탐험가였다. 아마 평생을 다 바쳐도 인류 전체의 입장에서 내가 넓혀갈 수 있는 영역이라는 것은 정말 미미한 것일 테다. 하지만 나에게는 그것이 세상의 전부이자, 내 인생을 바칠만큼 가치있는 것이었다.</li><li>사실 우리가 박사학위를 받고, 평생 연구를 한다는 것은 결국 인류 전체의 지식을 미지의 세계로 조금씩 넓혀가는 일이다.</li><li>이런 의미를 알게 된다면 아래의 우스갯소리도 약간 다르게 느껴질 것이다.<br>학사: 나는 이제 모든 것을 안다.<br>석사: 나는 아는 것이 아무 것도 없구나.<br>박사: 나만 모르는 게 아니었구나.</li><li>특히 나는 박사학위가 가지는 큰 의미 중의 하나가 논리적인 사고 방식과 문제해결 능력을 갖추게 되는 것이라고 생각한다.</li><li>박사학위를 취득하는 과정에서 피땀을 흘려가면서 갈고닦은 그 논리적, 비판적 사고능력, 문제해결 능력, 커뮤니케이션 스킬은 결코 사라지지 않는다.</li></ul><p><strong>3. 지도 교수를 어떻게 선택해야 할까</strong></p><ul><li>최근에 각광받고 있는 주제 중의 하나인 인공지능과 같은 분야도 흔히 ‘인공지능 겨울AI winter’이라고 불리는 오랜 암흑기를 겪었다. 지금 인공지능 전문가로서 이름을 날리는 사람들은 그 인공지능의 암흑기에도 묵묵하게 자신의 열정에 따라서 연구를 지속했던 사람들이다. 지금 인공지능 혹은 딥러닝 분야의 호황만을 보고 진학한 사람이라면, 10년 뒤에 이 분야가 어떻게 될지에 대해서 고민해봐야 할 것이다.</li><li>또 한 가지 잊지 말아야 할 것은 내가 특정 분야에 몸담은 이후라면, 그 분야의 흥망성쇠에 대한 책임은 나에게도 일부분 생긴다는 것이다. 내가 세계적인 천재라서 그 분야를 혼자서 이끌어가는 사람들은 많지 않겠지만, 적어도 해당 분야의 발전에 대한 n분의 1의 책임은 나에게 있다. 대학원에서 혹은 졸업한 이후에 내가 좋은 연구를 하고, 의미 있는 성과를 낸다면 나라고 그 분야의 분위기를 바꾸지 못하리라는 법은 없다. 내가 바로 그 선도적인 연구자와 오피니언 리더가 될 수 있다. 뜻을 품은 연구자라면 이 정도의 자각과 자신감은 필요하다.</li></ul><p><strong>4. 대학원에 들어왔는데…… 이제 어떡하지?</strong></p><ul><li>특히 연구라고 하는 것은 (대부분의 다른 지적인 작업과 마찬가지로) 연속적인 시간의 확보가 아주 중요하다. 필자는 이에 관해 피터 드러커가 『프로페셔널의 조건』에서 했던 이야기를 매우 좋아한다. 지식근로자에게는 30분씩 따로 6번 일하는 것은 소용없고, 3시간의 연속으로 일할 수 있는 시간을 확보하는 것이 필요하다는 식의 이야기였다.</li></ul><p><strong>8. 생각해라, 생각해라, 생각해라</strong></p><ul><li>연구를 진행한다는 것은 대개 공통적으로 다음과 같은 과정을 거친다. 내가 풀고자 하는 문제를 선정하고, 가설을 세운다. 이 가설을 검증하기 위한 논리를 만들고, 논리를 위한 데이터와 근거를 만들어낸다. 이 데이터를 분석하여 가설을 검증하고, 이를 토대로 새로운 결론이나 발견을 하고, 혹은 새로운 가설을 세운다. 이 전체 과정에서 새로운 인사이트를 이끌어낸다. 이 모든 것이 우리의 깊은 사고와 통찰이 필요한 과정이다. 예를 들어서, 내 가설을 검증하기 위해서 어떠한 논리와 방향으로 이 데이터를 분석해야 가장 효과적일까. 내가 얻은 이 데이터가 의미하는 것이 무엇인가? 표면적으로 쉽게 드러나는 것 이외에 내가 무엇인가 놓치고 있는 매우 중요한 그 어떤 것이 있지 않은가? 이 데이터에서 얻은 결론을 바탕으로 그다음에 내가 해야 할 것은 무엇인가.</li><li>사람은 동일한 데이터를 보고서도 다른 생각을 할 수 있다. ‘대가’ 가 따로 있는 것이 아니다. 동일한 데이터와 현상을 보면서도 그 이면에 숨겨진 의미를 파악하고 의미를 부여할 수 있으면 좋은 과학을 할 수 있다. 좋은 데이터를 얻고서도 충분한 의미부여와 (좋은 의미로) 포장을 제대로 하지 못해서 그 연구 결과가 주목받지 못한다면 인류 전체의 입장에서도 애석한 일이 아닐 수 없다.</li><li>이 모든 것을 오늘부터 한 번에 시작하기는 어려울 것이다. 조금씩 실천해보자. 가장 좋은 출발점은 하루의 일과를 생각으로 시작하는 것이다. 최소한 아침에 일어난 순간부터 샤워하고, 출근을 준비하고, 출근하는 동안만 계속 생각에 집중해보자. 여기서 중요한 것은 아침에 출근해서 자리에 앉는 순간, 내가 진행하는 연구의 전체 흐름에서 내가 어디에 있는지, 어느 방향으로 가고 있는지, 그래서 그 맥락 속에 오늘 내가 할 일은 무엇인지가 이미 결정되어 있어야 한다는 것이다. 절대로 아무 생각 없이 관성으로 출근해서, 연구실 책상에 앉은 후에 ‘자, 이제부터 뭐 할지를 생각해볼까?’ 해서는 안 된다.</li></ul><p><strong>9. 절대로 혼자 일하지 마라</strong></p><ul><li>좋은 공동연구자가 되기 위해서는 우선 자신 스스로가 전문가가 되어야 할 뿐만 아니라, 여러모로 사려 깊은 프로페셔널이 되어야 하기 때문이다.</li><li>우선 좋은 공동연구자가 되기 위해서 가장 먼저 필요한 것은 바로 나 스스로가 전문가가 되는 것이다. 왜냐하면 공동연구라는 것은 서로가 상대방이 가지지 않은 전문성이 있어야만 성립하는 것이기 때문이다. 나 혼자 하는 것보다 상대방과 함께하는 것에서 무엇인가 나은 부분이 있어야 한다. 즉 내가 전문성이나 특기를 가지고 연구팀에 기여할 수 있어야만 공동연구라는 것 자체가 성립한다.</li><li>통나무집에서 맥주를 마시면서 나는 맥키넌 박사님께 연구에 대한 여러 가지를 여쭤보았다. 특히 그중에 지금도 기억에 남는 것은 “위대한 과학great science을 하려면 어떻게 해야 하나요?”라는 질문이었다. 박사님은 나의 우문에 현답을 주셨다. “위대한 문제great problem를 찾아야 한다”는 것이었다. 본인은 자신의 흥미를 찾아서 그 위대한 문제를 찾으셨다고. 내가 “박사님은 지금도 연구가 즐거우세요?”라고 물었더니 반짝거리는 눈빛으로 이렇게 말씀하셨다. “지금도 매일 아침 연구실에 가고 싶어서 견딜 수가 없다.”</li><li>필자는 공동연구에 있어서 한 가지 원칙을 강조하고 싶다. 바로 “상대에게 어떻게 내가 도움이 될 수 있을지를 먼저 고민해라”는 것이다. 그러면 결국 그것이 나에게도 도움이 될 것이다. 이러한 이타적인 자세가, 결국 나 자신에게도 더 큰 혜택으로 되돌아올 것이다.</li><li>내가 이해하고 있는 ‘기브 앤 테이크’란 상대방에게 먼저, “혹시 뭐 필요한 것 없니? 내가 기여할 수 있는 부분이 있으면 기꺼이 도와줄게.” 하고 ‘먼저’ 다가가는 것을 말한다. 즉 향후에 테이크할 것을 바라지 않고, 우선적으로 먼저 기브하는 것이 프로페셔널의 ‘기브 앤 테이크’이다.</li><li>학회 등 외부 발표에서 뿐만이 아니라, 랩미팅 등 연구실 내부 발표 등 결과 공유를 하는 자리에서 공동연구자 등 내가 조금이라도 도움을 받은 분들을 명시적으로 밝히고, 이러한 도움과 기여에 대한 감사를 표해야 한다는 것이다. 이러한 부분을 흔히 어크날리지먼트acknowledgement라고 한다.</li></ul><p><strong>에필로그: 좋은 연구자란 무엇인가(+ 몇 가지 사소한 팁)</strong></p><ul><li>기본 원칙은 이것이다. 랩미팅에 들어가기 전에 교수님이 내 발표 내용에 대해서 대략적으로라도 이미 파악하고 있는 상태여야 한다. 이 조건만 충족시키더라도 무작정 심하게 갈굼을 당할 가능성이 줄어든다. 필자는 이 부분에 대한 팁을 『맥킨지는 일하는 방식이 다르다』라는 책에서 처음 얻었다. 그 책에 보면 ‘임원들은 깜짝 쇼를 싫어한다’는 문구가 등장한다. 영화에 보면 회사에서 주인공이 중요한 의사결정을 앞두고 감동적인 한 번의 프레젠테이션으로 참석한 임원들을 그 자리에서 설득하는 장면이 나온다. 하지만 이렇게 하면 절대 안 된다. 실제로 현실에서 일은 결코 이런 방식으로 돌아가지 않는다. 회사에서 중요한 의사결정의 경우, 회의에 들어가기 전에 이미 사전 조율을 통해서 관련 부서와 참석자들의 공감대를 미리 형성해놓는 것이 중요하다. 개별적으로 참석자에게 미리 세부 사항을 설명하고, 피드백을 받고, 부서 간 이견을 조율하는 과정을 거쳐서, 사실상 이미 거의 결론이 난 상태에서 최종적으로 회의라는 형식을 거쳐서 의사결정을 받는 것이다. 만약 중요한 의사결정 사항에 대해서 사전에 아무런 공감대도 없고, 피드백도 없고, 이견 조율도 없는 상태에서 그냥 무작정 회의 소집해서 발표자가 해당 이슈에 대해서 처음 설명한다면, 의도했던 반응을 이끌어내기란 극히 어렵다. 처음 듣는 것, 잘 모르는 것에 대해서 사람들은 일단 거부반응을 보이기 쉽기 때문이다.</li></ul><h3 id="3부-대학원생을-지도하는-교수의-이야기-권창현-교수편"><a href="#3부-대학원생을-지도하는-교수의-이야기-권창현-교수편" class="headerlink" title="3부. 대학원생을 지도하는 교수의 이야기 - 권창현 교수편 -"></a>3부. 대학원생을 지도하는 교수의 이야기 - 권창현 교수편 -</h3><p><strong>2. 내 연구하기</strong></p><ul><li>교수라는 직업을 가진 사람들은 뭔가 질문이 들어오면 대체로 대답을 해준다. 학생의 질문에 답을 주려고 노력하는 것이 직업이기 때문이다. 문제는 박사 수준의 연구에서 교수의 대답이라는 건 별로 믿을 게 못 된다. 교수도 잘 모르기 때문이다.</li></ul><p><strong>4. 지금 하고 있는 게 연구인가, 아닌가?</strong></p><ul><li>조지 헤이즐리그George Hazelrigg의 「제안서 작성기술을 연마하라Honing Your Proposal Writing Skills」라는 글</li></ul><p><strong>6. 대학원생의 이메일 커뮤니케이션</strong></p><ul><li>교수에게 질문하고 요구할 때 만족스러운 대답과 반응을 원한다면 교수가 대답하는 데 필요한 시간을 줄여줘야 한다.</li></ul><p><strong>8. 연구의 실제</strong></p><ul><li>이화여대 오욱환 교수님이 쓰신 글 「학문을 직업으로 삼으려는 젊은 학자들을 위하여」</li></ul>]]></content>
      
      
      <categories>
          
          <category> Life </category>
          
          <category> 리뷰 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 책리뷰 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>파이콘 2019 (PyCon Korea 2019) 후기</title>
      <link href="/2019/08/22/2019-08-18_pycon2019/"/>
      <url>/2019/08/22/2019-08-18_pycon2019/</url>
      
        <content type="html"><![CDATA[<h2 id="파이콘-2019"><a href="#파이콘-2019" class="headerlink" title="파이콘 2019"></a>파이콘 2019</h2><p>올해로 두번째 참여하게된 파이콘! 다양한 분야의 파이썬 사용자들이 모이는 축제와도 같은 컨퍼런스이다. 토일 모두 참여하려니까 다음 날 출근해서 굉장히 엄청나게 피곤했지만 그 정도는 감수할만큼 재미있었고 데이터사이언스 공부에 대해 동기부여를 잔뜩 받고 왔다. 사실 발표야 나중에 영상으로도 많이 볼 수 있다지만 현장에서만 느껴지는 바이브 같은 것들이 즐거운 행사다. 앞으로도 쭉 참석해야지-! 언젠간.. 발표도?! ㅋㅋ </p><p>자세한 정보는 <a href="https://www.pycon.kr/?&amp;lang=ko-KR" target="_blank" rel="noopener">PyCon Korea 2019 웹사이트</a>를 통해 살펴보자.</p><h2 id="키노트-amp-발표-세션"><a href="#키노트-amp-발표-세션" class="headerlink" title="키노트 &amp; 발표 세션"></a>키노트 &amp; 발표 세션</h2><p>주로 초급 레벨의 데이터사이언스 카테고리의 세션들을 많이 들었고, 특히 다양한 분야에서 파이썬을 활용한 사례가 있다면 우선적으로 선택했다. 작년에 들었던 발표와 연결성을 갖는 발표들이 몇가지 있어서 재밌는 포인트들이 있었다 😁</p><h3 id="2019-08-17-1일차-발표"><a href="#2019-08-17-1일차-발표" class="headerlink" title="2019-08-17 1일차 발표"></a>2019-08-17 1일차 발표</h3><h4 id="키노트-반병현"><a href="#키노트-반병현" class="headerlink" title="키노트: 반병현"></a>키노트: 반병현</h4><ul><li><a href="https://www.pycon.kr/program/talk-detail?id=152" target="_blank" rel="noopener">발표소개 링크</a></li><li>카이스트에서 인공지능 전공으로 석사를 마치시고 사회복무요원(aka 공익) 근무를 하시는 발표자님이 비효율적인 관공서 업무에 업무 자동화프로그램 도입을 시도하면서 겪은 일들에 대한 이야기</li></ul><img src="/2019/08/22/2019-08-18_pycon2019/IMG_5601.jpeg"><ul><li>워낙 흥미로운 얘기다보니 브런치(‘코딩하는공익’)에 이에 대한 글을 연재하면서 화제가 되어 언론 인터뷰 같은 것도 많이 하시고 책도 출간할 예정이신 것 같다</li><li>공무원 조직의 민낯(관공서의 비효율적인 업무 프로세스)과 희망(그래도 혁신을 해나가려는 움직임들이 보인다고)을 동시에 볼 수 있었음</li></ul><h4 id="키노트-캐롤-나슬룬드-윌링"><a href="#키노트-캐롤-나슬룬드-윌링" class="headerlink" title="키노트: 캐롤 나슬룬드 윌링"></a>키노트: 캐롤 나슬룬드 윌링</h4><ul><li><a href="https://www.pycon.kr/program/talk-detail?id=153" target="_blank" rel="noopener">발표소개 링크</a></li><li>Python Software Foundation 회원, Project Jupyter 운영위원회 활동, JupyterHub와 mybinder.org 핵심개발자 등 엄청난 역할들을 하고 계시는 발표자님께서 새로운 파이썬 3.8, Jupyter, nteract, Binder 등에 대해 다양한 이야기를 해주심</li></ul><h4 id="데이터-분석-사례-지하철역-환기실-공조기-고장-감지"><a href="#데이터-분석-사례-지하철역-환기실-공조기-고장-감지" class="headerlink" title="데이터 분석 사례(지하철역 환기실 공조기 고장 감지)"></a>데이터 분석 사례(지하철역 환기실 공조기 고장 감지)</h4><ul><li>발표자: 김민중</li><li><a href="https://mjgim.me/slides/pycon_korea_2019.pdf" target="_blank" rel="noopener">발표자료 링크</a></li><li>국가수리과학연구소에서 근무하시는 발표자분께서 서울교통공사에서 개발하여 운영중인 SAMBA(지하철 기계설비 자동제어 빅데이터 분석시스템) 고도화 프로젝트를 진행함</li><li>문제: 지하철 역사 내 기계설비 고장을 감지하거나 사전 예측하는 모델 개발<ul><li>공조기(Air handling unit)를 대상으로 함 </li></ul></li><li>공조기 모터에서 수집된 전류 데이터를 이용해서 공조기 모터의 이상을 감지<ul><li>스케줄에 의해 자동으로 on/off 되는데, 켜질 때 전류값이 크게 뛰는 점 이용 </li></ul></li><li>공조기 V벨트 탈락 및 슬립 감지 알고리즘 연구는 실제로 V벨트를 한줄 한줄 제거하면서 만들어낸 데이터를 이용</li><li>공조기 모터 주요 부품의 이상(상태) 감지(교체시기 감지) 알고리즘은 샘플 장비 데이터를 통해서 universal한 모델 생성 가능    </li><li>결과 정확도는 95% 이상이라고 발표하셨는데 정확도 metric이 무엇인지 명시가 되어있지 않아 좀 궁금했고, test 정확도가 맞는건지 불분명했다. 이 내용 질문하신 분이 있었던 것 같은데 마지막에 잘 듣지 못했ㅎㅎ</li></ul><h4 id="뚱뚱하고-굼뜬-판다스-Pandas-를-위한-효과적인-다이어트-전략"><a href="#뚱뚱하고-굼뜬-판다스-Pandas-를-위한-효과적인-다이어트-전략" class="headerlink" title="뚱뚱하고 굼뜬 판다스(Pandas)를 위한 효과적인 다이어트 전략"></a>뚱뚱하고 굼뜬 판다스(Pandas)를 위한 효과적인 다이어트 전략</h4><p>실용적인 측면에서 나에게 가장 유용한 발표가 아니었나 싶다. 당장 내일부터 적용해볼 수 있는 꿀팁들이 많았다. </p><ul><li>발표자: 오성우</li><li><a href="https://drive.google.com/file/d/12faqaslFIF-Sg_sU3jeGyauW5ClRqS8D/view" target="_blank" rel="noopener">발표자료 링크</a></li><li>pandas는 정말 편리하지만 쓰다보면 데이터를 읽지못하거나, 너무 느리거나 하는 문제가 발생한다. </li><li>그 원인은 여러가지<ul><li>memory mapping issue</li><li>auto garbage collecting</li><li>data processing in memory at once</li><li>single CPU process </li><li>등등 </li></ul></li><li>판다(pandas)의 다이어트를 위한 pandas way!<ol><li>식사량 조절 (Memory Optimization)<ul><li>코드화</li><li>데이터 형식변환: 가능하면 크기가 작은 데이터 형식을 사용!</li><li>category type 사용: 마치 R처럼. 속도가 빨라지지만 범주가 많은 경우는 object보다 비효율적일 수 있음</li><li>파일 저장 포맷 변경: pickle, feather, hdf5, parquet 추천     </li></ul></li><li>식이요법 (Enhancing Performance)<ul><li>Vectorization</li><li>효율적인 algorithm고려: method/attribute마다 성능이 천차만별이므로 효율적인 알고리즘을 찾아서 적용해야한다!    </li><li>pd.apply()는 만능키가 아니다! <ul><li>custom 함수를 쓸 때도 찾아보면 apply보다 빠른 built-in 함수가 있을 수 있다!</li><li>많은 분들이 일부 데이터를 추출하는데 merge(how=’inner’)를 쓰면 가장 빠르게 할 수 있다는 부분에서 감탄하신 듯!     </li></ul></li></ul></li><li>생활습관 (Adopting Convention)         <ul><li>Method Chaining<ul><li>장점: readability, performance</li><li>한계: DataFrame 중간체크가 어려움, 성능향상에 대한 회의     </li></ul></li><li>inplace parameter<ul><li>쓰는게 좋은 건줄 알고 있었는데 오히려 실행 후에도 메모리에 데이터가 남아있는 등 문제가 있어 inplace parameter 자체의 삭제가 논의되고 있다니!     </li></ul></li></ul></li></ol></li></ul><h4 id="from-banksalad-import-python"><a href="#from-banksalad-import-python" class="headerlink" title="from banksalad import python"></a>from banksalad import python</h4><ul><li>발표자: 황성현</li><li><a href="https://speakerdeck.com/sunghyunzz/from-banksalad-import-python" target="_blank" rel="noopener">발표자료 링크</a></li><li>작년 파이콘 발표 “학습하는 조직”에 대한 얘기도 재미있게 들었는데, 이번 발표도 역시 재미있었다. </li><li>2015년부터 지금까지 뱅크샐러드의 서비스가 어떻게 만들어지고 업그레이드되어 왔는지 대장정을 되짚어가면서 이야기해줌</li><li>일단 모범답안은 아니어도 시도해보고, 안될 경우에 빨리 다른 길로 틀자!라는 마인드로 한 걸음 한 걸음 나아가는 모습이 되게 바람직한 스타트업 같다고 느껴졌당 </li></ul><h4 id="라이트닝-토크-1일차"><a href="#라이트닝-토크-1일차" class="headerlink" title="라이트닝 토크 1일차"></a>라이트닝 토크 1일차</h4><ul><li>박조은님의 발표가 기억에 남는다. 워킹맘으로서 치열하게 시간을 쪼개서 공부하고, 유튜브까지 하시는 모습 응원하고 싶다! 동기부여 뿜뿜</li></ul><h3 id="2019-08-18-2일차-발표"><a href="#2019-08-18-2일차-발표" class="headerlink" title="2019-08-18 2일차 발표"></a>2019-08-18 2일차 발표</h3><h4 id="100억건의-카카오톡-데이터로-똑똑한-일상대화-인공지능-만들기"><a href="#100억건의-카카오톡-데이터로-똑똑한-일상대화-인공지능-만들기" class="headerlink" title="100억건의 카카오톡 데이터로 똑똑한 일상대화 인공지능 만들기"></a>100억건의 카카오톡 데이터로 똑똑한 일상대화 인공지능 만들기</h4><p>스캐터랩 후원사 부스에서도 굉장히 좋은 느낌 받았는데, 역시 이 회사 NLP 맛집이었나보다! 앞으로 어떻게, 얼마나 발전해나갈지가 궁금한 핑퐁이었다!     </p><ul><li>발표자: 김준성 (스캐터랩)</li><li><a href="https://www.pycon.kr/program/talk-detail?id=71" target="_blank" rel="noopener">발표소개 링크</a></li><li><a href="https://speakerdeck.com/codertimo/paikon-2019-100eoggeonyi-kakaotog-deiteoro-ddogddoghan-ilsangdaehwa-ingongjineung-mandeulgi" target="_blank" rel="noopener">발표자료 링크</a></li><li>일단 회사의 다른 서비스로부터 얻은 100억건의 카톡 데이터라는 엄청난 자산이 👍</li><li>일상대화 인공지능은 기능대화에 비해 예측가능성이 낮음 (무한의 context) </li><li>일상대화 인공지능의 모델은 다음의 두 부분으로 나누어 볼 수 있음<ul><li>대화를 이해하는 모델</li><li>대답할 수 있는 모델</li></ul></li><li>대화 이해 모델: BERT로 학습 → 대화의 문맥을 이해할 수 있음</li><li>대답 모델: 리액션 모델을 통해 query coverage를 늘림</li><li>실제 성능 예시를 보면 사회적인 개념, 긴문장이나 이전 대화의 맥락을 이해하는 답변이 가능함</li></ul><h4 id="꼬마-모차르트가-되어보자-Feat-Magenta"><a href="#꼬마-모차르트가-되어보자-Feat-Magenta" class="headerlink" title="꼬마 모차르트가 되어보자(Feat. Magenta)"></a>꼬마 모차르트가 되어보자(Feat. Magenta)</h4><ul><li>발표자: 김준우/한상곤</li><li><a href="https://www.pycon.kr/program/talk-detail?id=97" target="_blank" rel="noopener">발표소개 링크</a></li><li><a href="https://drive.google.com/file/d/1nm-EoLO8y2g2LDNWwi-JMISPEZ4xy2iZ/view" target="_blank" rel="noopener">발표자료 링크</a></li><li>Magenta project는 머신러닝으로 예술작품을 생성할 수 있게 하는 도구를 제공하는 오픈소스 인프라라고. 이번에 처음 들어봤는데 꽤 흥미로웠다. </li><li>이 magenta 라이브러리를 이용해서 피아노 연주를 미디 파일로 만들어주는 모델을 만듦 </li></ul><h4 id="집에서-만든-머신러닝-기반-자동번역기-NO-딥러닝"><a href="#집에서-만든-머신러닝-기반-자동번역기-NO-딥러닝" class="headerlink" title="집에서 만든 머신러닝 기반 자동번역기 (NO 딥러닝)"></a>집에서 만든 머신러닝 기반 자동번역기 (NO 딥러닝)</h4><ul><li>발표자: 이홍주</li><li><a href="https://www.pycon.kr/timetable/talks" target="_blank" rel="noopener">발표소개 링크</a></li><li><a href="https://www.slideshare.net/hongjoo/koreanizer-statistical-machine-translation-based-roko-transliterator-164610918" target="_blank" rel="noopener">발표자료 링크</a></li><li>Koreanizer라는 이름으로 로마자로 표기된 우리말을 한글로 변환해주는 Ro-Ko Transliterator를 개발하신 이야기. 진지하게 생각해본 적이 없는 문제인데, 은근히 쓰임새가 있을 것 같다고 생각된다.</li><li>우선 이 모델의 기반이 되는 Statistical Machine Translation의 구성 요소 - language model, translation model, decoder에 대해 잘 설명해주심</li><li>외국어를 로마자로 변환하는 것은 Romanization, 반대로 로마자를 외국어로 변환하는 것을 Back-romanization이라고 한다. 이 중 Ro-Ko Transliteration은 Korean Back-romanization에 해당하는 것. </li><li>Ro-Ko trnasliteration은 가능한 로마자-한글의 매칭이 꼭 1:1이 아니라는 점, 음절 구분이 애매하다는 점에서 쉽지 않은 문제</li><li>training data를 구한 아이디어가 괜찮았던 것 같은데, 유튜브에 외국인을 대상으로 올려주는 k-pop 가사의 로마자 독음 데이터를 수집해서 사용하셨다고 👏     </li><li><a href="http://koreanizer.herokuapp.com" target="_blank" rel="noopener">http://koreanizer.herokuapp.com</a> 여기에서 당분간 직접 결과물을 테스트해볼 수 있다고 한다!</li></ul><h4 id="온라인-뉴스-댓글은-정말-사람들의-목소리일까-PART2"><a href="#온라인-뉴스-댓글은-정말-사람들의-목소리일까-PART2" class="headerlink" title="온라인 뉴스 댓글은 정말 사람들의 목소리일까? - PART2"></a>온라인 뉴스 댓글은 정말 사람들의 목소리일까? - PART2</h4><p>작년에 이 발표를 재미있게 들었던터라 이번 PART2 발표도 망설임 없이 선택! 파이썬을 활용해서 데이터를 통해 세상을 분석하는 아주 흥미로운 사례!!! </p><ul><li>발표자: 이준범(Beomi)</li><li><a href="https://www.pycon.kr/program/talk-detail?id=39" target="_blank" rel="noopener">발표소개 링크</a></li><li><a href="https://speakerdeck.com/beomi/pyconkr-2019-onrain-nyuseu-daesgeuleun-jeongmal-saramdeulyi-mogsoriilgga-part2" target="_blank" rel="noopener">발표자료 링크</a></li><li>네이버 뉴스의 댓글 데이터를 엄청난 양으로 크롤링해서 다양한 통계분석을 하신 프로젝트 이야기</li><li>사람이 볼 수 있는 규모의 데이터라면 자동으로 볼 수 있게 하고, 사람이 볼 수 없는 규모라면 그동안 보지 못하던 새로운 것을 찾아보자는 접근</li><li>AWS에서 서버리스로 데이터 크롤링</li><li>총 38283개 기사에서 170만명 이상 유저의 5천만개 이상의 댓글을 수집</li><li>뉴스 댓글엔 생각보다 다양한 데이터가 담겨 있다.<ul><li>숫자로 표현 가능한 좋아요/싫어요 수, 답글 수 같은 numeric data</li><li>작성시간, 기사 게시시간과 댓글 작성시간의 차이 등 time data</li><li>댓글의 내용 그 자체의 text data</li><li>안타깝지만 User data는 7월부로 식별화하는 방법이 완전히 사라졌다고.</li></ul></li><li>수집한 댓글에서 outlier를 찾아보기 + political lean 쪼개보기 두 가지 방향으로 접근</li><li>아웃라이어를 찾는 아이디어<ul><li>댓글에 URL을 많이 쓰는 경우: 확실한 아웃라이어들이 존재. 청와대 청원 게시글이나 특정 기사/매체로 유입을 유도</li><li>댓글의 text 길이: 300자 한도에 가득 채워 쓰는 아웃라이어가 보이고, 정치적 내용이 많음</li><li>사용하는 어구/어휘의 다양성<ul><li>계속해서 비슷한 댓글을 달고다니는 유저가 존재</li><li>올 해에는 여러 유저가 같은 말을 많이 하는 경우도 분석했는데, 비슷한 말을 하는 유저들을 네트워크 그래프로 그렸을 때 아주 도드라지게 중심에 묶이는 그룹이 강다니엘 응원 그룹이었더라는 데에서 모두 빵터졌다ㅋㅋ. 강다니엘 정말 대단쓰 👍👍👍</li></ul></li><li>뉴스에 얼마나 빨리 댓글을 다는가<ul><li>뉴스가 올라오자마자 댓글을 다는 경우, 한 사람이 댓글을 다는 간격이 너무 짧은 경우 존재</li></ul></li></ul></li><li>political lean 쪼개보기의 경우, 크롤링한 데이터 전부에 보수/진보 라벨링을 하는 것이 불가능하기 때문에 일부 샘플 유저를 라벨링해서 그 유저의 데이터를 가져와 분석했으며, 보수와 진보의 댓글 수 비율이 거의 10:1 정도였기 때문에 undesrsampling 필요<ul><li>웹에서 유저들이 interactive하게 정치성향을 태깅할 수 있는 웹서비스 개발 중!</li></ul></li></ul><h4 id="법률을-디버깅하다-Debugging-law"><a href="#법률을-디버깅하다-Debugging-law" class="headerlink" title="법률을 디버깅하다(Debugging law)"></a>법률을 디버깅하다(Debugging law)</h4><p>이 발표도 작년에 같은 분이 발표하신 세션의 후속편이라고 볼 수 있을 것 같다. 나에겐 이렇게 다양한 분야에서 파이썬과 데이터 과학이 쓰인 사례에 대한 발표가 역시 흥미로운 것 같다!</p><ul><li>발표자: 김재윤</li><li><a href="https://www.pycon.kr/program/talk-detail?id=75" target="_blank" rel="noopener">발표소개 링크</a></li><li><a href="https://drive.google.com/open?id=1HfJU-Qo2h-Y0Kn85LuiQPKcO8K_iqxb6" target="_blank" rel="noopener">발표자료 링크</a></li><li>‘법률’을 하나의 개발 프로젝트로 보고 에러를 디버깅한다는 컨셉으로 세 가지 연구를 수행</li><li>분석1: 법률간 충돌 자동 검사<ul><li>특례제한법의 별표와 개별법 조문이 정확히 매칭되지 않는 경우를 검출. 정말 훌륭한 파이썬 활용 데이터 분석 사례가 아닌가!! </li></ul></li><li>분석2: 형벌 규정 전수조사<ul><li>과잉범죄화(형벌규정이 증가하는 것)와 과잉형벌화(처벌의 강도가 상향되는 것)에 대한 첫번째 전수조사라고.</li></ul></li><li>분석3: 법률 네트워크 분석2 (2018 PyCon 후속편)<ul><li>작년 발표에서 하셨던 30년간 우리나라 법률간 인용관계 네트워크 분석 결과를 네트워크 그래프로 시각화</li></ul></li><li>일찍이 귀도 반 로썸은 “Computer Programming for Everybody”(1999)라고 말했다! 법률의 복잡성은 나날이 커져가고 있으므로, 파이썬과는 아무 관련이 없을 것 같은 법률가들에게도 파이썬은 훌륭한 도구가 될 수 있는 것이다!   </li></ul><h3 id="듣진-못했는데-ㅡ-영상올라오면-보고-싶은-발표"><a href="#듣진-못했는데-ㅡ-영상올라오면-보고-싶은-발표" class="headerlink" title="듣진 못했는데 ㅡ 영상올라오면 보고 싶은 발표!!"></a>듣진 못했는데 ㅡ 영상올라오면 보고 싶은 발표!!</h3><h4 id="추천시스템-이제는-돈이-되어야-한다"><a href="#추천시스템-이제는-돈이-되어야-한다" class="headerlink" title="추천시스템, 이제는 돈이 되어야 한다."></a>추천시스템, 이제는 돈이 되어야 한다.</h4><ul><li>발표자: 최규민</li><li><a href="https://www.pycon.kr/program/talk-detail?id=136" target="_blank" rel="noopener">발표소개 링크</a></li><li><a href="https://www.slideshare.net/ssuser2fe594/ss-164511610" target="_blank" rel="noopener">발표자료 링크</a></li></ul><h4 id="한국어-띄어쓰기-프로그램-도전기"><a href="#한국어-띄어쓰기-프로그램-도전기" class="headerlink" title="한국어 띄어쓰기 프로그램 도전기"></a>한국어 띄어쓰기 프로그램 도전기</h4><ul><li>발표자: 최태균</li><li><a href="https://www.pycon.kr/program/talk-detail?id=36" target="_blank" rel="noopener">발표소개 링크</a></li><li><a href="https://www.slideshare.net/TaekyoonChoi/taekyoon-choi-pycon" target="_blank" rel="noopener">발표자료 링크</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 데이터사이언스 </tag>
            
            <tag> python </tag>
            
            <tag> 파이썬 </tag>
            
            <tag> 파이콘2019 </tag>
            
            <tag> 파이콘 2019 </tag>
            
            <tag> PyCon 2019 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2019-08-15-TIL</title>
      <link href="/2019/08/15/2019-08-15-TIL/"/>
      <url>/2019/08/15/2019-08-15-TIL/</url>
      
        <content type="html"><![CDATA[<h4 id="공부한-것-amp-리뷰"><a href="#공부한-것-amp-리뷰" class="headerlink" title="공부한 것 &amp; 리뷰"></a>공부한 것 &amp; 리뷰</h4><ul><li>hexo 블로그 theme 변경 &amp; 상단 메뉴 customize<ul><li>기존에 사용하던 블로그 theme은 왠지 본문이 들어가는 width가 너무 좁아 보기에 불편하다는 생각을 갖고 있던 차에, 아예 좀 더 심플한 theme으로 변경을 해보자 싶어 cactus라는 theme으로 변경을 해보게 되었다. </li><li>상단 메뉴바에 내가 지정한 카테고리 분류(Diary, Data Science, Life)를 설정해보았다. 카테고리에 언더바(<code>_</code>)가 들어가면 오류가 발생해서 Data Science 메뉴를 연결시킬 때 애를 좀 먹었다 ㅎㅎ 이 내용도 포스팅으로 정리해봐야겟군</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2019-04-07-TIL</title>
      <link href="/2019/04/07/2019-04-07-TIL/"/>
      <url>/2019/04/07/2019-04-07-TIL/</url>
      
        <content type="html"><![CDATA[<h4 id="이번-주에-공부한-것-amp-리뷰"><a href="#이번-주에-공부한-것-amp-리뷰" class="headerlink" title="이번 주에 공부한 것 &amp; 리뷰"></a>이번 주에 공부한 것 &amp; 리뷰</h4><ul><li>pandas 복습 정리하고 포스팅<ul><li>일하면서 매일 쓰고 있는 부분이다보니 이제 굉장히 익숙해지긴했지만, 학원에서 공부할 때 배웠던 기초적인 내용을 한 번 정리하고 github과 블로그에 업데이트함</li></ul></li><li>패캠 Tensorflow로 시작하는 딥러닝 입문 CAMP 5주차 (조교)    </li></ul><h4 id="다음-주에-공부할-것"><a href="#다음-주에-공부할-것" class="headerlink" title="다음 주에 공부할 것"></a>다음 주에 공부할 것</h4><ul><li>dask.dataframe 기초적인 내용 공부하고 정리해서 포스팅하기</li><li>패캠 Tensorflow로 시작하는 딥러닝 입문 CAMP 6주차 (조교)</li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python 17. Pandas - pivot &amp; pivot_table</title>
      <link href="/2019/04/07/python_17_pandas_pivot/"/>
      <url>/2019/04/07/python_17_pandas_pivot/</url>
      
        <content type="html"><![CDATA[<p><a href="https://nbviewer.jupyter.org/github/hyeshinoh/Study_Python/blob/master/python_26_pandas_pivot.ipynb" target="_blank" rel="noopener">jupyternotebook으로 보기</a></p><p>피봇테이블(pivot table)이란, 데이터에서 두 개의 컬럼을 행/열 인덱스로 써서 데이터를 reshape한 테이블을 말한다. 기존의 데이터를 새로운 기준으로 집계해서 정리할 수 있는 방법이라고 이해하면 좋을 것 같다! 아래에서 실제 피봇테이블의 결과물을 보면 무슨 말인지 쉽게 이해가 될 수 있을 것이다. <br><br>여기에서는 간단한 실제 데이터를 이용해서 pandas에서 제공하는 <code>pivot</code>과 <code>pivot_table</code> 메서드를 통해 데이터를 새롭게 집계하는 방법을 알아보자.</p><a id="more"></a><h2 id="1-Pivot"><a href="#1-Pivot" class="headerlink" title="1. Pivot"></a><strong>1. Pivot</strong></h2><ul><li>데이터 프레임의 컬럼 데이터에서 index, columns, values를 선택하여 데이터 프레임을 만드는 방법</li><li>syntax: <code>df.pivot(index, columns, values)</code></li><li>유의할 점: 지정한 index와 columns를 기준으로 선택되는 데이터(values 파라미터에 해당)가 유일해야 한다! values가 2개 이상이면 에러 발생 <br> → 따라서 pivot을 하기 전에 index와 column으로 사용할 컬럼을 기준으로 groupby를 먼저 해주어야 한다.</li></ul><p>무엇이든 실제 사용 예를 보아야 이해가 쉽다! kaggle에서 제공하는 타이타닉 데이터를 사용해 간단하게 pivot을 실습해보자.</p><ul><li>타이타닉 데이터: 타이타닉 승객 정보를 담은 데이터로, 생존여부를 예측하는 문제가 kaggle에 올라와 있음</li><li>예측 대상인 생존여부는 Survived 컬럼 (생존=1, 사망=0) </li><li><a href="https://www.kaggle.com/c/titanic/data" target="_blank" rel="noopener">데이터 다운로드</a><ul><li>아래에서는 제공되는 데이터셋 중에서 train.csv만 사용한다.</li></ul></li></ul><script src="https://gist.github.com/hyeshinoh/f62f50f7bc38d365ba1497d9d8f7de00.js"></script><h3 id="1-1-성별과-객실등급에-따라-승객-수-집계하기"><a href="#1-1-성별과-객실등급에-따라-승객-수-집계하기" class="headerlink" title="1.1 성별과 객실등급에 따라 승객 수 집계하기"></a>1.1 성별과 객실등급에 따라 승객 수 집계하기</h3><script src="https://gist.github.com/hyeshinoh/63b13dc406694239b70306aa144424e5.js"></script><h3 id="1-2-성별과-생존여부에-따라-승객-수-집계하기"><a href="#1-2-성별과-생존여부에-따라-승객-수-집계하기" class="headerlink" title="1.2 성별과 생존여부에 따라 승객 수 집계하기"></a>1.2 성별과 생존여부에 따라 승객 수 집계하기</h3><script src="https://gist.github.com/hyeshinoh/f67721319b272249c6138610a346dd3e.js"></script><h2 id="2-Pivot-table"><a href="#2-Pivot-table" class="headerlink" title="2. Pivot table"></a><strong>2. Pivot table</strong></h2><p>pivot_table 메서드를 이용하면 한번에 groupby를 한 후에 pivot을 하는 것과 같은 결과를 얻을 수 있다.</p><ul><li>syntax: <code>pivot_table(values, index, columns, aggfunc=&#39;mean&#39;, fill_value=None, dropna=True, margins=False, margins_name=&#39;All&#39;)</code><ul><li><code>pivot</code> 메서드와 달리 <code>values</code> 파라미터가 먼저 들어간다는 점에 유의!</li><li><code>aggfunc</code>: index와 columns로 선택되는 데이터가 유일하지 않으면 인수로 넣어주는 함수를 수행하여 대표값을 계산함</li><li><code>fill_value</code>: NaN을 대체할 값</li><li><code>dropna</code>: values가 전부 NaN인 행/열의 삭제 여부</li><li><code>margins</code>: 모든 데이터를 분석한 결과(=마진)를 마지막 행/열에 붙일지 여부</li><li><code>margins_name</code>: 마진 행/열의 이름</li></ul></li></ul><h3 id="2-1-성별과-객실등급에-따라-승객-수-집계하기"><a href="#2-1-성별과-객실등급에-따라-승객-수-집계하기" class="headerlink" title="2.1 성별과 객실등급에 따라 승객 수 집계하기"></a>2.1 성별과 객실등급에 따라 승객 수 집계하기</h3><script src="https://gist.github.com/hyeshinoh/99f48ef15dab99e2bd8f806f5fdf89b3.js"></script><h3 id="2-2-성별과-생존여부에-따라-승객-수-집계하기"><a href="#2-2-성별과-생존여부에-따라-승객-수-집계하기" class="headerlink" title="2.2 성별과 생존여부에 따라 승객 수 집계하기"></a>2.2 성별과 생존여부에 따라 승객 수 집계하기</h3><script src="https://gist.github.com/hyeshinoh/7fe4577b584aa2e13de79054d9293100.js"></script><h3 id="2-3-다중-index-다중-columns-사용하기"><a href="#2-3-다중-index-다중-columns-사용하기" class="headerlink" title="2.3 다중 index, 다중 columns 사용하기"></a>2.3 다중 index, 다중 columns 사용하기</h3><script src="https://gist.github.com/hyeshinoh/89afa15da673f815c4d377fdbc2ae75f.js"></script><h3 id="2-4-pivot-table의-행-열을-집계하는-Margin-컬럼-만들기"><a href="#2-4-pivot-table의-행-열을-집계하는-Margin-컬럼-만들기" class="headerlink" title="2.4 pivot table의 행/열을 집계하는 Margin 컬럼 만들기"></a>2.4 pivot table의 행/열을 집계하는 Margin 컬럼 만들기</h3><script src="https://gist.github.com/hyeshinoh/e6d537567a61b06f77295d5729c9fab2.js"></script><h3 id="2-5-결측값의-처리-fill-value-dropna"><a href="#2-5-결측값의-처리-fill-value-dropna" class="headerlink" title="2.5 결측값의 처리 - fill_value / dropna"></a>2.5 결측값의 처리 - fill_value / dropna</h3><script src="https://gist.github.com/hyeshinoh/dae0145bff5302fa2eca87e6bd3aae00.js"></script><h4 id="참고자료"><a href="#참고자료" class="headerlink" title="참고자료"></a>참고자료</h4><ul><li>패스트캠퍼스, ⟪데이터사이언스스쿨 8기⟫ 수업자료</li><li>pandas 0.25.0 documentation <ul><li><a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.pivot.html" target="_blank" rel="noopener">pandas.DataFrame.pivot</a></li><li><a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.pivot_table.html" target="_blank" rel="noopener">pandas.pivot_table</a></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> DataScience </category>
          
          <category> Python 파이썬 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 파이썬 </tag>
            
            <tag> programming </tag>
            
            <tag> pandas </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python 16. Pandas - basic(2)</title>
      <link href="/2019/04/05/python_16_pandas_basic_2/"/>
      <url>/2019/04/05/python_16_pandas_basic_2/</url>
      
        <content type="html"><![CDATA[<p><a href="https://nbviewer.jupyter.org/github/hyeshinoh/Study_Python/blob/master/python_25_pandas_basic_2.ipynb" target="_blank" rel="noopener">jupyternotebook으로 보기</a></p><p>기본적으로 Series와 DataFrame을 만드는 법을 줄 살펴본 지난 포스팅 Pandas - Basic (1)에 이어 이번에는 Basic (2)편을 준비해보았다.<br>우선 실제로 데이터를 다룰 때 많이 사용하게 되는 groupby, select, merge에 대해 정리해보고, 이어서 csv나 excel 파일로부터 데이터를 불러오고 내보내는 방법에 대해 다루어보자.</p><h2 id="1-groupby"><a href="#1-groupby" class="headerlink" title="1. groupby"></a>1. <strong>groupby</strong></h2><ul><li>DataFrame에서 특정 column의 unique 값만 가지고 새로운 DataFrame을 생성 </li><li>size 방법: <code>dfname.groupby(&quot;column_name&quot;).size()</code></li><li>agg 방법: <code>dfname.groupby(&quot;column_name&quot;).agg(&#39;min&#39;|&#39;max&#39;|&#39;mean&#39; 등)</code></li></ul><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">import pandas as pd</span><br></pre></td></tr></table></figure><script src="https://gist.github.com/hyeshinoh/451360c61b58352487410510259b7477.js"></script><h3 id="1-1-groupby-size"><a href="#1-1-groupby-size" class="headerlink" title="1.1 groupby - size"></a>1.1 groupby - size</h3><ul><li>각 이름별이 몇 번 나왔는지 counts 컬럼이 추가된 데이터프레임 만들기</li><li>syntax: <code>dfname.groupby(&quot;column_name&quot;).size()</code><ul><li>data가 몇 번 나오는지 count</li></ul></li><li>Series로 출력됨</li></ul><script src="https://gist.github.com/hyeshinoh/52e5b0ff3e4a88037b7364f68fd606aa.js"></script><h3 id="1-2-groupby-agg"><a href="#1-2-groupby-agg" class="headerlink" title="1.2 groupby - agg"></a>1.2 groupby - agg</h3><ul><li>각 이름별 age의 최소값/최대값/평균 등을 나타내는 column을 나타내기</li><li>syntax: <code>dfname.groupby(&quot;column_name&quot;).agg(&#39;min&#39;|&#39;max&#39;|&#39;mean&#39; 등)</code></li></ul><script src="https://gist.github.com/hyeshinoh/e76e29c1eca81bb112c1d0e369c0ca4e.js"></script><h2 id="2-select"><a href="#2-select" class="headerlink" title="2. select"></a><strong>2. select</strong></h2><h3 id="2-1-head-tail"><a href="#2-1-head-tail" class="headerlink" title="2.1 head, tail"></a>2.1 head, tail</h3><ul><li>head: dataframe 상단 n개 row를 보여줌 (default 5줄)<ul><li>syntax: <code>df.head(n=5)</code></li></ul></li><li>tail: dataframe 하단 n개 row를 보여줌 (default 5줄)<ul><li>syntax: <code>df.tail(n=5)</code></li></ul></li></ul><script src="https://gist.github.com/hyeshinoh/566e1d3eecac6e8a124408fd3e8547a3.js"></script><h3 id="2-2-indexing-slicing"><a href="#2-2-indexing-slicing" class="headerlink" title="2.2 indexing, slicing"></a>2.2 indexing, slicing</h3><script src="https://gist.github.com/hyeshinoh/b383443cfa00ff8fce6e4cccd7eccf6b.js"></script><h3 id="2-3-index-column으로-데이터-호출"><a href="#2-3-index-column으로-데이터-호출" class="headerlink" title="2.3 index, column으로 데이터 호출"></a>2.3 index, column으로 데이터 호출</h3><ul><li><code>df[index][column]</code>으로 자료 호출 (two-level column도 가능)</li></ul><script src="https://gist.github.com/hyeshinoh/d0640d28ca08558b2af533eeea4b808d.js"></script><h2 id="3-merge"><a href="#3-merge" class="headerlink" title="3. merge"></a><strong>3. merge</strong></h2><ul><li>merge란 sql의 join과 같은 개념</li><li>두 개의 데이터 프레임을 하나로 합쳐서 데이터를 보여줄 수 있음</li></ul><p>그럼, 아래와 같이 두 개의 데이터프레임을 만들어서 merge를 해보자.</p><ul><li>user_df: 아이디, 이름, 나이 데이터 프레임 생성</li><li>money_df: 아이디, 돈으로 데이터 프레임 생성</li></ul><script src="https://gist.github.com/hyeshinoh/1ae3646de878578d84edd7cbe7035b10.js"></script><h2 id="4-input-output"><a href="#4-input-output" class="headerlink" title="4. input / output"></a><strong>4. input / output</strong></h2><ul><li>csv 파일: 쉼표<code>(,)</code>로 값을 구분하는 파일 타입</li><li>엑셀 파일: <ul><li>인코딩 타입이 UTF-8이 아님</li><li>영어가 아닌 다른 언어를 저장하거나 로드할 때 인코딩을 주의해야 함</li></ul></li></ul><h3 id="4-1-csv-파일-읽고-내보내기"><a href="#4-1-csv-파일-읽고-내보내기" class="headerlink" title="4.1 csv 파일 읽고 내보내기"></a>4.1 csv 파일 읽고 내보내기</h3><script src="https://gist.github.com/hyeshinoh/914c2bd16b24ba9dd8b9aab71920c554.js"></script><h3 id="4-2-excel-파일-읽고-내보내기"><a href="#4-2-excel-파일-읽고-내보내기" class="headerlink" title="4.2 excel 파일 읽고 내보내기"></a>4.2 excel 파일 읽고 내보내기</h3><ul><li>우선 다음의 패키지를 설치한다.</li><li><code>$ pip install xlrd</code> </li><li><code>$ pip install openpyxl</code></li></ul><script src="https://gist.github.com/hyeshinoh/08e64238370537d324ad36bab977872f.js"></script><p><a href="https://nbviewer.jupyter.org/github/hyeshinoh/Study_Python/blob/master/python_25_pandas_basic_2.ipynb" target="_blank" rel="noopener">jupyternotebook으로 보기</a></p><h4 id="참고자료"><a href="#참고자료" class="headerlink" title="참고자료"></a>참고자료</h4><ul><li>패스트캠퍼스, ⟪데이터사이언스스쿨 8기⟫ 수업자료</li></ul>]]></content>
      
      
      <categories>
          
          <category> DataScience </category>
          
          <category> Python 파이썬 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 파이썬 </tag>
            
            <tag> programming </tag>
            
            <tag> pandas </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2019-03-31-TIL</title>
      <link href="/2019/03/31/2019-03-31-TIL/"/>
      <url>/2019/03/31/2019-03-31-TIL/</url>
      
        <content type="html"><![CDATA[<h4 id="이번-주에-공부한-것-amp-리뷰"><a href="#이번-주에-공부한-것-amp-리뷰" class="headerlink" title="이번 주에 공부한 것 &amp; 리뷰"></a>이번 주에 공부한 것 &amp; 리뷰</h4><ul><li>NumPy 복습해서 정리 완료 / pandas 복습해서 github &amp; 블로그 업데이트 진행 중</li><li>패캠 Tensorflow로 시작하는 딥러닝 입문 CAMP 4주차    </li></ul><h4 id="다음-주에-공부할-것"><a href="#다음-주에-공부할-것" class="headerlink" title="다음 주에 공부할 것"></a>다음 주에 공부할 것</h4><ul><li>패캠 Tensorflow로 시작하는 딥러닝 입문 CAMP 5주차</li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python 15. Pandas - basic(1)</title>
      <link href="/2019/03/30/python_15_pandas_basic_1/"/>
      <url>/2019/03/30/python_15_pandas_basic_1/</url>
      
        <content type="html"><![CDATA[<p><a href="https://nbviewer.jupyter.org/github/hyeshinoh/Study_Python/blob/master/python_24_pandas_basic_1.ipynb" target="_blank" rel="noopener">jupyternotebook으로 보기</a></p><h1 id="Pandas란"><a href="#Pandas란" class="headerlink" title="Pandas란"></a>Pandas란</h1><ul><li>NumPy를 기반으로 개발된 데이터 분석을 위한 쉽고 성능 좋은 오픈소스 python 라이브러리</li><li>많은 사람들에게 익숙한 행x열로 이뤄진 테이블 형태로 데이터를 다룰 수 있게 한다.</li><li>R과 비슷하게 데이터를 다룰 수 있게 되는데, R에 비해서는 속도가 훨씬 빠르다.</li><li>공식문서: <a href="http://pandas.pydata.org" target="_blank" rel="noopener">http://pandas.pydata.org</a></li></ul><a id="more"></a><h2 id="Pandas의-data-type"><a href="#Pandas의-data-type" class="headerlink" title="Pandas의 data type"></a>Pandas의 data type</h2><ol><li><p>Series </p><ul><li>하나의 변수에 대한 데이터가 모인 1차원 데이터타입</li><li>index, value로 이루어짐</li></ul></li><li><p>DataFrame </p><ul><li>여러 변수에 대한 series 여러 개가 모인 2차원 데이터타입, ‘표’라고 생각하면 된다.</li><li>index, column, value로 이루어짐</li><li>각 column은 series로 구성됨</li><li>DataFrame은 여러개의 Series가 column을 구성하는 모양으로 만들어짐</li></ul></li></ol><h2 id="다룰-내용"><a href="#다룰-내용" class="headerlink" title="다룰 내용"></a>다룰 내용</h2><p>Series와 DataFrame을 다루는 기초에 관해 두 편으로 나누어 정리해보자. 우선 여기서는 아래의 내용을 정리한다.</p><ol><li>Series<ul><li>Series 만들기</li><li>Series 데이터 보기</li><li>indexing과 slicing</li><li>Series 데이터 연산 및 Series 다루기</li></ul></li><li>DataFrame<ul><li>Create</li><li>Insert</li><li>append</li><li>concat</li></ul></li></ol><h1 id="0-설치와-import"><a href="#0-설치와-import" class="headerlink" title="0. 설치와 import"></a><strong>0. 설치와 import</strong></h1><ul><li>설치: <code>$ pip install pandas</code></li><li>import: numpy와 함께, alias를 <code>pd</code>로 import하는 것이 컨벤션</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br></pre></td></tr></table></figure><h1 id="1-Series"><a href="#1-Series" class="headerlink" title="1. Series"></a><strong>1. Series</strong></h1><ul><li>index와 value로 되어 있는 데이터 형태 (index는 각 샘플에 붙는 번호라고 생각)</li><li>series에는 하나의 데이터타입만 사용 가능 (하나의 column은 같은 데이터타입을 가짐)</li><li>한 변수에 대한 데이터 값들이라고 생각하면 된다.</li></ul><h2 id="1-1-Series-만들기"><a href="#1-1-Series-만들기" class="headerlink" title="1.1 Series 만들기"></a>1.1 Series 만들기</h2><script src="https://gist.github.com/hyeshinoh/19747cceb84b4a4fb98bda7963db67d1.js"></script><h2 id="1-2-Series-데이터-보기"><a href="#1-2-Series-데이터-보기" class="headerlink" title="1.2 Series 데이터 보기"></a>1.2 Series 데이터 보기</h2><script src="https://gist.github.com/hyeshinoh/e1b5a67364187bd684757c545444d521.js"></script><h2 id="1-3-indexing과-slicing"><a href="#1-3-indexing과-slicing" class="headerlink" title="1.3 indexing과 slicing"></a>1.3 indexing과 slicing</h2><script src="https://gist.github.com/hyeshinoh/3f2eaece0ee779f39275a4391618186c.js"></script><h2 id="1-4-Series-데이터-연산-및-Series-다루기"><a href="#1-4-Series-데이터-연산-및-Series-다루기" class="headerlink" title="1.4 Series 데이터 연산 및 Series 다루기"></a>1.4 Series 데이터 연산 및 Series 다루기</h2><script src="https://gist.github.com/hyeshinoh/9743123b202406d0c58533a382189c99.js"></script><h1 id="2-DataFrame"><a href="#2-DataFrame" class="headerlink" title="2. DataFrame"></a><strong>2. DataFrame</strong></h1><ul><li>series(index, value), column으로 이루어진 데이터 타입</li><li>table 모양으로 구성 (row와 column이 있음)</li></ul><h2 id="2-1-create"><a href="#2-1-create" class="headerlink" title="2.1 create"></a>2.1 create</h2><ul><li><code>pd.DataFrame(data)</code></li></ul><script src="https://gist.github.com/hyeshinoh/8fcad330d00b8b4f1fd87a3aef906531.js"></script><h2 id="2-2-insert"><a href="#2-2-insert" class="headerlink" title="2.2 insert"></a>2.2 insert</h2><script src="https://gist.github.com/hyeshinoh/3fb702d4e3f428122ac879520a3e438d.js"></script><h2 id="2-3-append"><a href="#2-3-append" class="headerlink" title="2.3 append"></a>2.3 append</h2><ul><li>두 개의 DataFrame을 이어 붙일 수 있음</li><li>데이터를 붙이는 여러 방법(e.g. <code>concat</code>) 중 한 가지</li></ul><script src="https://gist.github.com/hyeshinoh/3a51df193e78b3b63e9b14219bb033b7.js"></script><h2 id="2-4-concat"><a href="#2-4-concat" class="headerlink" title="2.4 concat"></a>2.4 concat</h2><ul><li><code>pd.concat([*DataFrame])</code></li></ul><script src="https://gist.github.com/hyeshinoh/38edb2d6d02a89e6a06ccac293ac6ed7.js"></script><h4 id="참고자료"><a href="#참고자료" class="headerlink" title="참고자료"></a>참고자료</h4><ul><li>패스트캠퍼스, ⟪데이터사이언스스쿨 8기⟫ 수업자료</li></ul>]]></content>
      
      
      <categories>
          
          <category> DataScience </category>
          
          <category> Python 파이썬 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 파이썬 </tag>
            
            <tag> programming </tag>
            
            <tag> pandas </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python 14. NumPy의 연산</title>
      <link href="/2019/03/26/python_14_NumPy_calculate/"/>
      <url>/2019/03/26/python_14_NumPy_calculate/</url>
      
        <content type="html"><![CDATA[<p><a href="https://nbviewer.jupyter.org/github/hyeshinoh/Study_Python/blob/master/python_23_NumPy_calculate.ipynb" target="_blank" rel="noopener">jupyter notebook으로 보기</a></p><p>NumPy를 이용해 배열의 연산을 하는 기본적인 방법에 대해 알아보자. 면면이 파고들어가면 공부할 내용이 많은 부분이지만 여기서는 우선 기초적인 내용만을 다뤄보자! </p><h4 id="다룰-내용"><a href="#다룰-내용" class="headerlink" title="다룰 내용"></a>다룰 내용</h4><ol><li>Basic calculate</li><li>Broadcasting</li><li>Functions</li><li>Performance 비교</li></ol><a id="more"></a> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br></pre></td></tr></table></figure><h2 id="1-Basic-calculation"><a href="#1-Basic-calculation" class="headerlink" title="1. Basic calculation"></a><strong>1. Basic calculation</strong></h2><h3 id="1-1-사칙연산"><a href="#1-1-사칙연산" class="headerlink" title="1.1 사칙연산"></a>1.1 사칙연산</h3><hr><p>먼저 간단하게 list와 numpy에서 계산이 어떻게 다른지 비교해보자. <br><br>list 자료형에서는 더하기(<code>+</code>)는 2개의 리스트를 합치는 기능을 하고, 곱하기(<code>*</code>)를 사용하면 곱한 수만큼 element를 반복해서 연결한 list를 만들어낸다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ls = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">print(ls + ls)</span><br><span class="line">print(ls * <span class="number">3</span>)</span><br></pre></td></tr></table></figure><pre><code>[1, 2, 3, 1, 2, 3][1, 2, 3, 1, 2, 3, 1, 2, 3]</code></pre><p>반면, NumPy에서 <code>*</code>, <code>+</code>, <code>-</code> 등 연산자는 ndarray에 있는 magic method로, list와는 달리 각 element에 해당 계산을 해준다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">na1 = np.array([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])</span><br><span class="line">na1 * <span class="number">3</span></span><br></pre></td></tr></table></figure><pre><code>array([3, 6, 9])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">na1 - <span class="number">1</span></span><br></pre></td></tr></table></figure><pre><code>array([0, 1, 2])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">na2 = np.array([<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>])</span><br><span class="line">na1 + na2</span><br></pre></td></tr></table></figure><pre><code>array([5, 7, 9])</code></pre><p>NumPy에서 vector나 matrix간에 사칙연산을 하면, 같은 위치의 원소끼리 계산이 이뤄진다. 이렇게 되려면 당연하게도 계산하려는 vector나 matrix가 형태가 같아야 한다. </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">na3 = np.arange(<span class="number">6</span>).reshape(<span class="number">2</span>,<span class="number">3</span>)</span><br><span class="line">na4 = np.arange(<span class="number">6</span>, <span class="number">12</span>).reshape(<span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line">print(<span class="string">"array3 : \n&#123;&#125;"</span>.format(na3))</span><br><span class="line">print(<span class="string">"array3 : \n&#123;&#125;"</span>.format(na4)) </span><br><span class="line">print(<span class="string">"multiplied : \n&#123;&#125;"</span>.format(na3*na4))</span><br></pre></td></tr></table></figure><pre><code>array3 : [[0 1 2] [3 4 5]]array3 : [[ 6  7  8] [ 9 10 11]]multiplied : [[ 0  7 16] [27 40 55]]</code></pre><h3 id="1-2-비교연산"><a href="#1-2-비교연산" class="headerlink" title="1.2 비교연산"></a>1.2 비교연산</h3><p>NumPy에서는 다음과 같이 비교연산이 가능하다.</p><h4 id="1-array-내의-원소-비교연산"><a href="#1-array-내의-원소-비교연산" class="headerlink" title="(1) array 내의 원소 비교연산"></a>(1) array 내의 원소 비교연산</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">"na1:"</span>, na1)</span><br><span class="line">print(<span class="string">"na2:"</span>, na2)</span><br><span class="line"></span><br><span class="line">print(na1 == <span class="number">2</span>)</span><br><span class="line">print(na2 &gt; <span class="number">4</span>)</span><br></pre></td></tr></table></figure><pre><code>na1: [1 2 3 4 5]na2: [1 3 3 4 4][False  True False False False][False False False False False]</code></pre><h4 id="2-all-전체리스트-비교하기-원소별이-아니라-array-전체의-비교-연산"><a href="#2-all-전체리스트-비교하기-원소별이-아니라-array-전체의-비교-연산" class="headerlink" title="(2) all: 전체리스트 비교하기 (원소별이 아니라 array 전체의 비교 연산)"></a>(2) <code>all</code>: 전체리스트 비교하기 (원소별이 아니라 array 전체의 비교 연산)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">na1 = np.array([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>])</span><br><span class="line">na2 = np.array([<span class="number">1</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">4</span>])</span><br><span class="line">na3 = np.array([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>])</span><br><span class="line"></span><br><span class="line">print(np.all(na1 == na2))</span><br><span class="line">print(np.all(na1 == na3))</span><br></pre></td></tr></table></figure><pre><code>FalseTrue</code></pre><h3 id="1-3-필터링"><a href="#1-3-필터링" class="headerlink" title="1.3 필터링"></a>1.3 필터링</h3><p>비교연산 등을 통한 True / False 리스트를 offset으로 넣어주면 True인 데이터만 필터링할 수 있다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">"na1:"</span>, na1)</span><br><span class="line">print(<span class="string">"na2:"</span>, na2)</span><br><span class="line"></span><br><span class="line">print(na1[na1 == <span class="number">2</span>])</span><br><span class="line">print(na2[na2 &gt; <span class="number">4</span>])</span><br></pre></td></tr></table></figure><pre><code>na1: [1 2 3 4 5]na2: [1 3 3 4 4][2][]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 3의 배수만 출력하기</span></span><br><span class="line">na3 = np.arange(<span class="number">10</span>)</span><br><span class="line">print(na3)</span><br><span class="line">print(na3[na3 % <span class="number">3</span> == <span class="number">0</span>])</span><br></pre></td></tr></table></figure><pre><code>[0 1 2 3 4 5 6 7 8 9][0 3 6 9]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 두 array를 위치별로 비교하여 필터링</span></span><br><span class="line">ls1 = np.array([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>])</span><br><span class="line">ls2 = np.array([<span class="number">0</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">0</span>, <span class="number">5</span>])</span><br><span class="line">ls1[ls1 == ls2]</span><br></pre></td></tr></table></figure><pre><code>array([3, 5])</code></pre><h2 id="2-Broadcasting"><a href="#2-Broadcasting" class="headerlink" title="2. Broadcasting"></a><strong>2. Broadcasting</strong></h2><h3 id="2-1-vector-matrix와-scalar의-사칙연산"><a href="#2-1-vector-matrix와-scalar의-사칙연산" class="headerlink" title="2.1 vector/matrix와 scalar의 사칙연산"></a>2.1 vector/matrix와 scalar의 사칙연산</h3><p>vector/matrix의 각 element에 해당 연산을 수행한다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">na = np.array([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])</span><br><span class="line">na * <span class="number">2</span></span><br></pre></td></tr></table></figure><pre><code>array([2, 4, 6])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">na = np.array(range(<span class="number">12</span>)).reshape(<span class="number">3</span>, <span class="number">4</span>)</span><br><span class="line">print(<span class="string">"na: \n&#123;&#125; \n"</span>.format(na))</span><br><span class="line">print(<span class="string">"na에 + 1을 하면: \n&#123;&#125;"</span>.format(na + <span class="number">1</span>))</span><br></pre></td></tr></table></figure><pre><code>na: [[ 0  1  2  3] [ 4  5  6  7] [ 8  9 10 11]] na에 + 1을 하면: [[ 1  2  3  4] [ 5  6  7  8] [ 9 10 11 12]]</code></pre><h3 id="2-2-matrix와-vector의-사칙연산"><a href="#2-2-matrix와-vector의-사칙연산" class="headerlink" title="2.2 matrix와 vector의 사칙연산"></a>2.2 matrix와 vector의 사칙연산</h3><p>행/열 vector를 matrix의 각 행/열에 연산한다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">na1 = np.array(range(<span class="number">4</span>))</span><br><span class="line">print(<span class="string">"na: \n&#123;&#125;\n"</span>.format(na))</span><br><span class="line">print(<span class="string">"na1: \n&#123;&#125;\n"</span>.format(na1))</span><br><span class="line">print(<span class="string">"na + na1: \n&#123;&#125;"</span>.format(na + na1))</span><br></pre></td></tr></table></figure><pre><code>na: [[ 0  1  2  3] [ 4  5  6  7] [ 8  9 10 11]]na1: [0 1 2 3]na + na1: [[ 0  2  4  6] [ 4  6  8 10] [ 8 10 12 14]]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">na2 = np.array(range(<span class="number">3</span>))[:, np.newaxis]  <span class="comment"># `np.newaxis` 행/렬을 바꿔줌</span></span><br><span class="line">print(<span class="string">"na: \n&#123;&#125;\n"</span>.format(na))</span><br><span class="line">print(<span class="string">"na2: \n&#123;&#125;\n"</span>.format(na2))</span><br><span class="line">print(<span class="string">"na + na2: \n&#123;&#125;"</span>.format(na + na2))</span><br></pre></td></tr></table></figure><pre><code>na: [[ 0  1  2  3] [ 4  5  6  7] [ 8  9 10 11]]na2: [[0] [1] [2]]na + na2: [[ 0  1  2  3] [ 5  6  7  8] [10 11 12 13]]</code></pre><h2 id="3-Function"><a href="#3-Function" class="headerlink" title="3. Function"></a><strong>3. Function</strong></h2><h3 id="3-1-min-max-argmin-argmax"><a href="#3-1-min-max-argmin-argmax" class="headerlink" title="3.1 min, max, argmin, argmax"></a>3.1 min, max, argmin, argmax</h3><ul><li>min, max: 최소값, 최대값</li><li>argmin, argmax: 최소값, 최대값의 위치 index</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">na = np.random.randint(<span class="number">10</span>, size=(<span class="number">2</span>, <span class="number">3</span>))</span><br><span class="line">na</span><br></pre></td></tr></table></figure><pre><code>array([[2, 1, 3],       [6, 0, 7]])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">"최소값, 최대값: &#123;&#125;, &#123;&#125;"</span>.format(na.min(), na.max()))</span><br></pre></td></tr></table></figure><pre><code>최소값, 최대값: 0, 7</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">"최소값 index, 최대값 index: &#123;&#125;, &#123;&#125;"</span>.format(na.argmin(), na.argmax()))</span><br></pre></td></tr></table></figure><pre><code>최소값 index, 최대값 index: 4, 5</code></pre><h3 id="3-2-sum-mean-median-std-var"><a href="#3-2-sum-mean-median-std-var" class="headerlink" title="3.2 sum, mean, median, std, var"></a>3.2 sum, mean, median, std, var</h3><h4 id="1-sum"><a href="#1-sum" class="headerlink" title="(1) sum"></a>(1) sum</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">na</span><br></pre></td></tr></table></figure><pre><code>array([[2, 1, 3],       [6, 0, 7]])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">print(np.sum(na))          <span class="comment"># 모든 요소의 값을 더함</span></span><br><span class="line">print(np.sum(na, axis=<span class="number">0</span>))  <span class="comment"># 컬럼끼리 더해짐 (0번째 축인 행 방향으로 더함)</span></span><br><span class="line">print(np.sum(na, axis=<span class="number">1</span>))  <span class="comment"># 로우끼리 더해짐 (1번째 축인 열 방향으로 더함)</span></span><br></pre></td></tr></table></figure><pre><code>19[ 8  1 10][ 6 13]</code></pre><h4 id="2-mean-median"><a href="#2-mean-median" class="headerlink" title="(2) mean, median"></a>(2) mean, median</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">print(np.mean(na))</span><br><span class="line">print(np.median(na))</span><br></pre></td></tr></table></figure><pre><code>3.16666666666666652.5</code></pre><h3 id="3-3-all-any"><a href="#3-3-all-any" class="headerlink" title="3.3 all, any"></a>3.3 all, any</h3><ul><li>단순 비교연산: array의 각 요소끼리(같은 위치) 비교함</li><li><code>all</code>: 하나라도 false이면 false (and 와 유사)  (값만 비교함, not 주소값)</li><li><code>any</code>: 하나라도 true이면 true (or 와 유사)</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">na1 = np.array([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])</span><br><span class="line">na2 = na1</span><br><span class="line">na3 = np.array([<span class="number">1</span>, <span class="number">0</span>, <span class="number">3</span>])</span><br><span class="line">print(<span class="string">"na1: &#123;&#125;"</span>.format(na1))</span><br><span class="line">print(<span class="string">"na2: &#123;&#125;"</span>.format(na2))</span><br><span class="line">print(<span class="string">"na3: &#123;&#125;"</span>.format(na3))</span><br></pre></td></tr></table></figure><pre><code>na1: [1 2 3]na2: [1 2 3]na3: [1 0 3]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 단순 비교연산</span></span><br><span class="line">print(na1 == na2)</span><br><span class="line">print(na2 == na3)</span><br></pre></td></tr></table></figure><pre><code>[ True  True  True][ True False  True]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># all</span></span><br><span class="line">print(np.all(na1 == na2))</span><br><span class="line">print(np.all(na1 == na3))</span><br></pre></td></tr></table></figure><pre><code>TrueFalse</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># any</span></span><br><span class="line">print(np.any(na == na2))</span><br><span class="line">print(np.any(na == na3))</span><br></pre></td></tr></table></figure><pre><code>FalseFalse</code></pre><h3 id="3-4-분위수"><a href="#3-4-분위수" class="headerlink" title="3.4 분위수"></a>3.4 분위수</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 100등분을 해야하기 때문에 1이 아니라 0부터 시작되어야 함</span></span><br><span class="line">na = np.arange(<span class="number">0</span>, <span class="number">101</span>)     </span><br><span class="line">na</span><br></pre></td></tr></table></figure><pre><code>array([  0,   1,   2,   3,   4,   5,   6,   7,   8,   9,  10,  11,  12,        13,  14,  15,  16,  17,  18,  19,  20,  21,  22,  23,  24,  25,        26,  27,  28,  29,  30,  31,  32,  33,  34,  35,  36,  37,  38,        39,  40,  41,  42,  43,  44,  45,  46,  47,  48,  49,  50,  51,        52,  53,  54,  55,  56,  57,  58,  59,  60,  61,  62,  63,  64,        65,  66,  67,  68,  69,  70,  71,  72,  73,  74,  75,  76,  77,        78,  79,  80,  81,  82,  83,  84,  85,  86,  87,  88,  89,  90,        91,  92,  93,  94,  95,  96,  97,  98,  99, 100])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.percentile(na, <span class="number">25</span>)    <span class="comment"># 4분위수</span></span><br></pre></td></tr></table></figure><pre><code>25.0</code></pre><h3 id="3-5-지수함수와-로그함수"><a href="#3-5-지수함수와-로그함수" class="headerlink" title="3.5 지수함수와 로그함수"></a>3.5 지수함수와 로그함수</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">na = np.arange(<span class="number">1</span>, <span class="number">6</span>)</span><br><span class="line">na</span><br></pre></td></tr></table></figure><pre><code>array([1, 2, 3, 4, 5])</code></pre><h4 id="1-지수함수-exponential-function-scale-up"><a href="#1-지수함수-exponential-function-scale-up" class="headerlink" title="(1) 지수함수(exponential function) - scale up"></a>(1) 지수함수(exponential function) - scale up</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 밑이 e(오일러 넘버)인 지수함수</span></span><br><span class="line">np.exp(na)</span><br></pre></td></tr></table></figure><pre><code>array([  2.71828183,   7.3890561 ,  20.08553692,  54.59815003,       148.4131591 ])</code></pre><h4 id="2-로그함수-log-function-scale-down"><a href="#2-로그함수-log-function-scale-down" class="headerlink" title="(2) 로그함수(log function) - scale down"></a>(2) 로그함수(log function) - scale down</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 밑이 e(오일러 넘버)인 로그함수</span></span><br><span class="line">np.log(na)</span><br></pre></td></tr></table></figure><pre><code>array([0.        , 0.69314718, 1.09861229, 1.38629436, 1.60943791])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 밑이 다른 로그함수는 다른 함수를 사용</span></span><br><span class="line">np.log10(<span class="number">10</span>), np.log2(<span class="number">2</span>)</span><br></pre></td></tr></table></figure><pre><code>(1.0, 1.0)</code></pre><h2 id="4-Performance-비교"><a href="#4-Performance-비교" class="headerlink" title="4. Performance 비교"></a><strong>4. Performance 비교</strong></h2><p>list에 비해 numpy array의 연산 속도가 정말 더 빠른지, 10**7 까지의 리스트에서 3과 5의 배수의 개수를 찾는 연산에 걸리는 시간을 비교해보자</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ls = []</span><br><span class="line">size = int(<span class="number">1E7</span>) <span class="comment"># (10의 7제곱)</span></span><br><span class="line">ls = [num <span class="keyword">for</span> num <span class="keyword">in</span> range(size)]</span><br><span class="line">len(ls)</span><br></pre></td></tr></table></figure><pre><code>10000000</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">na = np.arange(size)</span><br><span class="line">len(na)</span><br></pre></td></tr></table></figure><pre><code>10000000</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">%%time</span><br><span class="line">count = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> idx <span class="keyword">in</span> ls:</span><br><span class="line">    <span class="keyword">if</span> (ls[idx] % <span class="number">3</span> ==<span class="number">0</span>) <span class="keyword">or</span> (ls[idx] % <span class="number">5</span> == <span class="number">0</span>):</span><br><span class="line">        count += <span class="number">1</span></span><br><span class="line">count</span><br></pre></td></tr></table></figure><pre><code>Wall time: 3.3 s</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">%%time</span><br><span class="line">count = len(na[(na % <span class="number">3</span> ==<span class="number">0</span>) | (na % <span class="number">5</span> ==<span class="number">0</span>)])   <span class="comment"># array를 필터링해서 요소의 개수 구함</span></span><br><span class="line">count</span><br></pre></td></tr></table></figure><pre><code>Wall time: 295 ms</code></pre><p>테스트 결과 list에서 3과 5의 배수 개수를 찾는데는 3.3초, numpy array에서는 295 ms가 걸렸다. 단순 비교했을 때 numpy 연산이 10배 이상 빨랐던 것!</p><h4 id="참고자료"><a href="#참고자료" class="headerlink" title="참고자료"></a>참고자료</h4><ul><li>NumPy v1.16 Manual <a href="https://docs.scipy.org/doc/numpy/index.html" target="_blank" rel="noopener">(https://docs.scipy.org/doc/numpy/index.html)</a></li><li>패스트캠퍼스, ⟪데이터사이언스스쿨 8기⟫ 수업자료</li></ul>]]></content>
      
      
      <categories>
          
          <category> DataScience </category>
          
          <category> Python 파이썬 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 파이썬 </tag>
            
            <tag> programming </tag>
            
            <tag> numpy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2019-03-24-TIL</title>
      <link href="/2019/03/24/2019-03-24-TIL/"/>
      <url>/2019/03/24/2019-03-24-TIL/</url>
      
        <content type="html"><![CDATA[<h4 id="이번-주에-공부한-것-amp-리뷰"><a href="#이번-주에-공부한-것-amp-리뷰" class="headerlink" title="이번 주에 공부한 것 &amp; 리뷰"></a>이번 주에 공부한 것 &amp; 리뷰</h4><ul><li>NumPy 복습해서 정리한 내용 github &amp; 블로그 업데이트 진행 중</li><li>패캠 Tensorflow로 시작하는 딥러닝 입문 CAMP 3주차    </li></ul><h4 id="다음-주에-공부할-것"><a href="#다음-주에-공부할-것" class="headerlink" title="다음 주에 공부할 것"></a>다음 주에 공부할 것</h4><ul><li>패캠 Tensorflow로 시작하는 딥러닝 입문 CAMP 4주차</li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python 13. NumPy의 기초 (2)</title>
      <link href="/2019/03/19/python_13_NumPy_basic_2/"/>
      <url>/2019/03/19/python_13_NumPy_basic_2/</url>
      
        <content type="html"><![CDATA[<p><a href="https://nbviewer.jupyter.org/github/hyeshinoh/Study_Python/blob/master/python_22_NumPy_basic_2.ipynb" target="_blank" rel="noopener">jupyter notebook으로 보기</a></p><h4 id="다룰-내용"><a href="#다룰-내용" class="headerlink" title="다룰 내용"></a><strong>다룰 내용</strong></h4><ol><li>array에 데이터 넣기<ul><li>arange</li><li>linspace, logspace</li><li>random: seed, rand, randn, randint, shuffle, choice</li></ul></li><li>unique</li><li>stack &amp; concatente<ul><li>stack</li><li>concatenate</li><li>column/row 결합</li></ul></li><li>split</li><li>sort</li></ol><a id="more"></a> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br></pre></td></tr></table></figure><h2 id="1-array에-데이터-넣기"><a href="#1-array에-데이터-넣기" class="headerlink" title="1. array에 데이터 넣기"></a><strong>1. array에 데이터 넣기</strong></h2><h3 id="1-1-arange"><a href="#1-1-arange" class="headerlink" title="1.1 arange"></a>1.1 arange</h3><ul><li>range와 사용 방법이 같음</li><li>하지만 range보다 속도가 빠름</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.arange(<span class="number">10</span>)</span><br></pre></td></tr></table></figure><pre><code>array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.arange(<span class="number">5</span>, <span class="number">10</span>)</span><br></pre></td></tr></table></figure><pre><code>array([5, 6, 7, 8, 9])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.arange(<span class="number">5</span>, <span class="number">10</span>, <span class="number">2</span>)  <span class="comment"># step 지정</span></span><br></pre></td></tr></table></figure><pre><code>array([5, 7, 9])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 속도 비교</span></span><br><span class="line">size = <span class="number">10</span> ** <span class="number">6</span></span><br><span class="line"><span class="comment"># size = int(1E6)</span></span><br><span class="line">size</span><br></pre></td></tr></table></figure><pre><code>1000000</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># range보다 arange를 사용하는 것이 더 빠르다!</span></span><br><span class="line">%time <span class="keyword">for</span> x <span class="keyword">in</span> range(size): x**<span class="number">2</span></span><br><span class="line">%time <span class="keyword">for</span> x <span class="keyword">in</span> np.arange(size): x**<span class="number">2</span></span><br></pre></td></tr></table></figure><pre><code>Wall time: 270 msWall time: 169 ms</code></pre><h3 id="1-2-linspace-logspace"><a href="#1-2-linspace-logspace" class="headerlink" title="1.2 linspace, logspace"></a>1.2 linspace, logspace</h3><h4 id="1-linspace"><a href="#1-linspace" class="headerlink" title="(1) linspace"></a>(1) linspace</h4><ul><li>범위 사이를 n-1 등분(point는 n개가 됨) (선형적으로 공간을 나눔)</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 0과 100 사이를 3점으로 나눔</span></span><br><span class="line">np.linspace(<span class="number">0</span>, <span class="number">100</span>, <span class="number">3</span>)</span><br></pre></td></tr></table></figure><pre><code>array([  0.,  50., 100.])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 0과 100 사이를 5점으로 나눔</span></span><br><span class="line">np.linspace(<span class="number">0</span>, <span class="number">100</span>, <span class="number">5</span>)</span><br></pre></td></tr></table></figure><pre><code>array([  0.,  25.,  50.,  75., 100.])</code></pre><h4 id="2-logspace"><a href="#2-logspace" class="headerlink" title="(2) logspace"></a>(2) logspace</h4><ul><li>log 범위 사이를 n-1 등분(point는 n개가 됨)</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># log10(x1)=2, log10(x2)=3, log10(x3)=4</span></span><br><span class="line"><span class="comment"># x1=100, x2=1000, x3=10000</span></span><br><span class="line">np.logspace(<span class="number">2</span>, <span class="number">4</span>, <span class="number">3</span>)</span><br></pre></td></tr></table></figure><pre><code>array([  100.,  1000., 10000.])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 2, 2.5, 3</span></span><br><span class="line"><span class="comment"># log10(x1)=2, log10(x2)=2.5, log10(x3)=4</span></span><br><span class="line">np.logspace(<span class="number">2</span>, <span class="number">3</span>, <span class="number">3</span>)</span><br></pre></td></tr></table></figure><pre><code>array([ 100.        ,  316.22776602, 1000.        ])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">10</span>**<span class="number">2</span>, <span class="number">10</span>**<span class="number">2.5</span>, <span class="number">10</span>**<span class="number">3</span></span><br></pre></td></tr></table></figure><pre><code>(100, 316.22776601683796, 1000)</code></pre><h3 id="1-3-random"><a href="#1-3-random" class="headerlink" title="1.3 random"></a>1.3 random</h3><p>array에 랜덤하게 수를 발생시켜 넣어주는 방법을 알아보자.</p><ul><li>seed: 랜덤변수의 설정값<ul><li>seed 값을 동일하게 주면 같은 동일한 결과를 반복해서 얻을 수 있음 </li></ul></li><li>rand: 균등분포(uniform)로 난수를 발생시킴</li><li>randn: 정규분포(Gaussian)로 난수를 발생시킴</li><li>randint: 정수로 난수를 발생시킴 (균등분포)</li><li>suffle: 행렬 데이터를 섞어줌</li><li>choice: 특정 범위의 숫자를 선택해줌 (확률 설정이 가능)</li></ul><h4 id="1-seed-rand-randn"><a href="#1-seed-rand-randn" class="headerlink" title="(1) seed, rand, randn"></a>(1) seed, rand, randn</h4><ul><li><code>np.random.rand(size)</code>  <br></li><li><code>np.random.randn(size)</code></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">np.random.seed(<span class="number">0</span>)</span><br><span class="line">rd = np.random.rand(<span class="number">2</span>, <span class="number">5</span>)       <span class="comment"># uniform 으로 난수 발생 (균등분포)</span></span><br><span class="line">rdn = np.random.randn(<span class="number">2</span>, <span class="number">5</span>)     <span class="comment"># Gaussian 으로 난수 발생 (정규분포 - 0에 가까운수가 많이 나옴)</span></span><br><span class="line">print(rd)</span><br><span class="line">print(rdn)</span><br></pre></td></tr></table></figure><pre><code>[[0.5488135  0.71518937 0.60276338 0.54488318 0.4236548 ] [0.64589411 0.43758721 0.891773   0.96366276 0.38344152]][[ 0.14404357  1.45427351  0.76103773  0.12167502  0.44386323] [ 0.33367433  1.49407907 -0.20515826  0.3130677  -0.85409574]]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># seed 값을 바꾸면 다른 값이 나온다.</span></span><br><span class="line">np.random.seed(<span class="number">1</span>)</span><br><span class="line">rd = np.random.rand(<span class="number">2</span>, <span class="number">5</span>) </span><br><span class="line">rdn = np.random.randn(<span class="number">2</span>, <span class="number">5</span>) </span><br><span class="line">print(rd)</span><br><span class="line">print(rdn)</span><br></pre></td></tr></table></figure><pre><code>[[4.17022005e-01 7.20324493e-01 1.14374817e-04 3.02332573e-01  1.46755891e-01] [9.23385948e-02 1.86260211e-01 3.45560727e-01 3.96767474e-01  5.38816734e-01]][[ 1.74481176 -0.7612069   0.3190391  -0.24937038  1.46210794] [-2.06014071 -0.3224172  -0.38405435  1.13376944 -1.09989127]]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">np.random.seed(<span class="number">1</span>)</span><br><span class="line">rd = np.random.rand(<span class="number">4</span>)</span><br><span class="line">rdn = np.random.randn(<span class="number">4</span>)</span><br><span class="line">print(rd)</span><br><span class="line">print(rdn)</span><br></pre></td></tr></table></figure><pre><code>[4.17022005e-01 7.20324493e-01 1.14374817e-04 3.02332573e-01][-0.52817175 -1.07296862  0.86540763 -2.3015387 ]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rand로 3차원 행렬 만들기</span></span><br><span class="line">r = np.random.rand(<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>)</span><br><span class="line">r</span><br></pre></td></tr></table></figure><pre><code>array([[[0.41919451, 0.6852195 , 0.20445225, 0.87811744],        [0.02738759, 0.67046751, 0.4173048 , 0.55868983],        [0.14038694, 0.19810149, 0.80074457, 0.96826158]],       [[0.31342418, 0.69232262, 0.87638915, 0.89460666],        [0.08504421, 0.03905478, 0.16983042, 0.8781425 ],        [0.09834683, 0.42110763, 0.95788953, 0.53316528]]])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rand로 2차원 행렬 만들기</span></span><br><span class="line">r = np.random.rand(<span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line">r</span><br></pre></td></tr></table></figure><pre><code>array([[0.69187711, 0.31551563, 0.68650093],       [0.83462567, 0.01828828, 0.75014431]])</code></pre><h4 id="2-randint"><a href="#2-randint" class="headerlink" title="(2) randint"></a>(2) randint</h4><ul><li><code>np.random.randint(from, to, size)</code></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">r = np.random.randint(<span class="number">5</span>, <span class="number">10</span>, (<span class="number">3</span>, <span class="number">3</span>))</span><br><span class="line">r</span><br></pre></td></tr></table></figure><pre><code>array([[5, 9, 6],       [7, 7, 6],       [5, 6, 8]])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">r = np.random.randint(<span class="number">5</span>, size=(<span class="number">3</span>, <span class="number">3</span>))</span><br><span class="line">r</span><br></pre></td></tr></table></figure><pre><code>array([[4, 3, 1],       [3, 0, 0],       [2, 2, 1]])</code></pre><h4 id="3-shuffle"><a href="#3-shuffle" class="headerlink" title="(3) shuffle"></a>(3) shuffle</h4><ul><li>데이터의 순서를 바꿀수 있음</li><li>행의 순서만 바뀜 (행 안의 데이터는 바뀌지 않음)</li><li>데이터를 다 바꾸려면? 1열로 reshape 후 shuffle, 그 후 다시 reshape</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">r</span><br></pre></td></tr></table></figure><pre><code>array([[4, 3, 1],       [3, 0, 0],       [2, 2, 1]])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">np.random.shuffle(r)</span><br><span class="line">r</span><br></pre></td></tr></table></figure><pre><code>array([[3, 0, 0],       [2, 2, 1],       [4, 3, 1]])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 데이터를 전부 뒤섞기</span></span><br><span class="line">r = r.reshape(<span class="number">9</span> ,<span class="number">1</span>)</span><br><span class="line">np.random.shuffle(r)</span><br><span class="line">r = r.reshape(<span class="number">3</span>,<span class="number">3</span>)</span><br><span class="line">r</span><br></pre></td></tr></table></figure><pre><code>array([[0, 1, 2],       [3, 2, 4],       [0, 1, 3]])</code></pre><h4 id="4-choice"><a href="#4-choice" class="headerlink" title="(4) choice"></a>(4) choice</h4><ul><li><code>numpy.random.choice(a, size=None, replace=True, p=None)</code><ul><li>a: 1-D array-like or int</li><li>size: int or tuple of int, optional</li><li>replace: boolen, optional (False: equivalent to permutation - 비복원추출!)</li><li>p: 1-D array-like, optional (입력하지 않으면 a에 대해 uniform distribution)</li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.random.choice(<span class="number">5</span>, <span class="number">3</span>)</span><br></pre></td></tr></table></figure><pre><code>array([1, 0, 2])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># p의 확률로 range(5)를 10개 추출</span></span><br><span class="line">a = list(range(<span class="number">5</span>))</span><br><span class="line">p = [<span class="number">0.1</span>, <span class="number">0</span>, <span class="number">0.4</span>, <span class="number">0.2</span>, <span class="number">0.3</span>]     <span class="comment"># p= 0 나올 확률, 1 나올 확률, 2 나올 확률, 3 나올 확률, 4 나올 확률</span></span><br><span class="line">print(a)</span><br><span class="line">print(p)</span><br></pre></td></tr></table></figure><pre><code>[0, 1, 2, 3, 4][0.1, 0, 0.4, 0.2, 0.3]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.random.choice(a, <span class="number">10</span>, p)</span><br></pre></td></tr></table></figure><pre><code>array([1, 2, 1, 4, 2, 0, 0, 1, 0, 1])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.random.choice(range(<span class="number">5</span>, <span class="number">10</span>), (<span class="number">2</span>, <span class="number">2</span>), replace=<span class="keyword">False</span>, p=p)</span><br></pre></td></tr></table></figure><pre><code>array([[7, 9],       [5, 8]])</code></pre><h2 id="2-unique"><a href="#2-unique" class="headerlink" title="2. unique"></a><strong>2. unique</strong></h2><ul><li>행렬 데이터에서 유일값(중복없는 list)과 유일값의 개수를 확인할 수 있음</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">r</span><br></pre></td></tr></table></figure><pre><code>array([[0, 1, 2],       [3, 2, 4],       [0, 1, 3]])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">index, counts = np.unique(r, return_counts=<span class="keyword">True</span>)</span><br><span class="line">print(index, type(index))</span><br><span class="line">print(counts, type(counts))</span><br></pre></td></tr></table></figure><pre><code>[0 1 2 3 4] &lt;class &apos;numpy.ndarray&apos;&gt;[2 2 2 2 1] &lt;class &apos;numpy.ndarray&apos;&gt;</code></pre><h2 id="3-stack-amp-concatenate"><a href="#3-stack-amp-concatenate" class="headerlink" title="3. stack &amp; concatenate"></a><strong>3. stack &amp; concatenate</strong></h2><h3 id="3-1-stack"><a href="#3-1-stack" class="headerlink" title="3.1 stack"></a>3.1 stack</h3><ul><li>행렬을 쌓는 것과 같이 합치는 방법</li><li><code>numpy.stack(arrays, axis=0, out=None)</code><ul><li>arrays: sequence of array_like (각 array는 같은 shape여야 함!)</li><li>axis: The axis in the result array along which the input arrays are stacked (몇번째 차원의 방향으로 쌓는가)</li></ul></li></ul><h4 id="1-1차원-행렬의-stack"><a href="#1-1차원-행렬의-stack" class="headerlink" title="(1) 1차원 행렬의 stack"></a>(1) 1차원 행렬의 stack</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">na1 = np.arange(<span class="number">1</span>, <span class="number">6</span>)</span><br><span class="line">na2 = np.arange(<span class="number">6</span>, <span class="number">11</span>)</span><br><span class="line">print(na1)</span><br><span class="line">print(na2)</span><br></pre></td></tr></table></figure><pre><code>[1 2 3 4 5][ 6  7  8  9 10]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">na3 = np.stack([na1, na2])   </span><br><span class="line"><span class="comment"># na3 = np.stack((na1, na2)) </span></span><br><span class="line">print(na3)</span><br></pre></td></tr></table></figure><pre><code>[[ 1  2  3  4  5] [ 6  7  8  9 10]]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">na3 = np.stack((na1, na2), axis = <span class="number">1</span>)   <span class="comment"># axis=1: 각 행렬의 shape인 (1, 5)에서 1번째인 '5'가 나타내는 열방향으로 쌓음)</span></span><br><span class="line">print(na3)</span><br></pre></td></tr></table></figure><pre><code>[[ 1  6] [ 2  7] [ 3  8] [ 4  9] [ 5 10]]</code></pre><h4 id="2-2차원-행렬의-stack"><a href="#2-2차원-행렬의-stack" class="headerlink" title="(2) 2차원 행렬의 stack"></a>(2) 2차원 행렬의 stack</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">na1 = np.arange(<span class="number">1</span>, <span class="number">7</span>).reshape(<span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line">na2 = np.arange(<span class="number">7</span>, <span class="number">13</span>).reshape(<span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line">print(na1)</span><br><span class="line">print(na2)</span><br><span class="line">print(<span class="string">"shape of na1:"</span>, na1.shape)</span><br><span class="line">print(<span class="string">"shape of na2:"</span>, na2.shape)</span><br></pre></td></tr></table></figure><pre><code>[[1 2 3] [4 5 6]][[ 7  8  9] [10 11 12]]shape of na1: (2, 3)shape of na2: (2, 3)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">na3 = np.stack((na1, na2))   </span><br><span class="line">print(na3)</span><br></pre></td></tr></table></figure><pre><code>[[[ 1  2  3]  [ 4  5  6]] [[ 7  8  9]  [10 11 12]]]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">"shape of 'na3':"</span>, na3.shape)</span><br></pre></td></tr></table></figure><pre><code>shape of &apos;na3&apos;: (2, 2, 3)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">na3 = np.stack((na1, na2), axis = <span class="number">1</span>)   <span class="comment"># 한 차원 안으로 들어가서 행끼리 짝지어 쌓음</span></span><br><span class="line">print(na3)</span><br></pre></td></tr></table></figure><pre><code>[[[ 1  2  3]  [ 7  8  9]] [[ 4  5  6]  [10 11 12]]]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">na3 = np.stack((na1, na2), axis = <span class="number">2</span>)  <span class="comment"># 한 차원 더 들어가서 원소들을 짝지어 쌓음</span></span><br><span class="line">print(na3)</span><br></pre></td></tr></table></figure><pre><code>[[[ 1  7]  [ 2  8]  [ 3  9]] [[ 4 10]  [ 5 11]  [ 6 12]]]</code></pre><h3 id="3-2-concatenate-결합"><a href="#3-2-concatenate-결합" class="headerlink" title="3.2 concatenate (결합)"></a>3.2 concatenate (결합)</h3><ul><li>세로 결합(axis=0, default)은 열의 갯수가 같아야 함</li><li>가로 결합(axis=1)은 행의 갯수가 같아야 함</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">na1 = np.random.randint(<span class="number">10</span>, size=(<span class="number">2</span>, <span class="number">3</span>))</span><br><span class="line">na1</span><br></pre></td></tr></table></figure><pre><code>array([[8, 9, 2],       [7, 5, 5]])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">na2 = np.random.randint(<span class="number">10</span>, size=(<span class="number">3</span>, <span class="number">2</span>))</span><br><span class="line">na2</span><br></pre></td></tr></table></figure><pre><code>array([[4, 5],       [8, 5],       [8, 1]])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">na3 = np.random.randint(<span class="number">10</span>, size=(<span class="number">3</span>, <span class="number">3</span>))</span><br><span class="line">na3</span><br></pre></td></tr></table></figure><pre><code>array([[1, 8, 7],       [0, 3, 4],       [2, 0, 3]])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.concatenate((na1, na3))           <span class="comment"># axis=0이 default: 세로결합</span></span><br></pre></td></tr></table></figure><pre><code>array([[8, 9, 2],       [7, 5, 5],       [1, 8, 7],       [0, 3, 4],       [2, 0, 3]])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.concatenate((na2, na3), axis=<span class="number">1</span>)   <span class="comment"># axix=1: 가로 결합</span></span><br></pre></td></tr></table></figure><pre><code>array([[4, 5, 1, 8, 7],       [8, 5, 0, 3, 4],       [8, 1, 2, 0, 3]])</code></pre><h3 id="3-3-column-row-결합"><a href="#3-3-column-row-결합" class="headerlink" title="3.3 column/row 결합"></a>3.3 column/row 결합</h3><ul><li><code>c_[array1, array2]</code>: column 결합</li><li><code>r_[array1, array2]</code>: row 결합 → 결과가 1행 행렬이 됨</li><li>stack이나 concatenate이 더 빠름</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.c_[np.array([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]), np.array([<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]) ]</span><br></pre></td></tr></table></figure><pre><code>array([[1, 4],       [2, 5],       [3, 6]])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.r_[np.array([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]), np.array([<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]) ]</span><br></pre></td></tr></table></figure><pre><code>array([1, 2, 3, 4, 5, 6])</code></pre><h2 id="4-split"><a href="#4-split" class="headerlink" title="4. split"></a><strong>4. split</strong></h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ab = np.arange(<span class="number">0</span>, <span class="number">10</span>)</span><br><span class="line">ab</span><br></pre></td></tr></table></figure><pre><code>array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.split(ab, [<span class="number">5</span>])     <span class="comment"># 앞에서 5번째를 기준으로 나눈다</span></span><br></pre></td></tr></table></figure><pre><code>[array([0, 1, 2, 3, 4]), array([5, 6, 7, 8, 9])]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># split 해서 여러개의 array로 받을 수 있음</span></span><br><span class="line">r1, r2 = np.split(ab, [<span class="number">5</span>])  </span><br><span class="line">r1, r2</span><br></pre></td></tr></table></figure><pre><code>(array([0, 1, 2, 3, 4]), array([5, 6, 7, 8, 9]))</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># split 기준을 여러개 둘 수 있음: 2, 4, 6, 8 번째 원소 기준으로 5개로 나눈다</span></span><br><span class="line">np.split(ab, [<span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">8</span>])</span><br></pre></td></tr></table></figure><pre><code>[array([0, 1]), array([2, 3]), array([4, 5]), array([6, 7]), array([8, 9])]</code></pre><h4 id="vsplit-hsplit"><a href="#vsplit-hsplit" class="headerlink" title="vsplit / hsplit"></a>vsplit / hsplit</h4><ul><li>행렬을 수직, 수평으로 나눈다</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">r = np.random.randint(<span class="number">10</span>, size=(<span class="number">4</span>, <span class="number">6</span>))</span><br><span class="line">r</span><br></pre></td></tr></table></figure><pre><code>array([[5, 1, 2, 4, 3, 0],       [6, 0, 7, 2, 8, 3],       [0, 8, 4, 2, 9, 0],       [3, 8, 1, 4, 3, 3]])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vsplit: 위 아래 각각의 행렬로 분리함</span></span><br><span class="line">r1, r2 = np.vsplit(r, [<span class="number">2</span>])     <span class="comment"># 2번째 행 기준으로</span></span><br><span class="line">print(r1)</span><br><span class="line">print(r2)</span><br></pre></td></tr></table></figure><pre><code>[[5 1 2 4 3 0] [6 0 7 2 8 3]][[0 8 4 2 9 0] [3 8 1 4 3 3]]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># hsplit: 좌 우 행렬로 분리함, 수직을 자름</span></span><br><span class="line">n1, n2 = np.hsplit(r, [<span class="number">3</span>])    <span class="comment"># 3번째 열 기준으로</span></span><br><span class="line">print(n1)</span><br><span class="line">print(n2)</span><br></pre></td></tr></table></figure><pre><code>[[5 1 2] [6 0 7] [0 8 4] [3 8 1]][[4 3 0] [2 8 3] [2 9 0] [4 3 3]]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">n1, n2, n3 = np.hsplit(r, [<span class="number">2</span>, <span class="number">4</span>])</span><br><span class="line">print(n1)</span><br><span class="line">print(n2)</span><br><span class="line">print(n3)</span><br></pre></td></tr></table></figure><pre><code>[[5 1] [6 0] [0 8] [3 8]][[2 4] [7 2] [4 2] [1 4]][[3 0] [8 3] [9 0] [3 3]]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">n1, n2, n3 = np.hsplit(r, <span class="number">3</span>)      <span class="comment"># int를 넣으면 n등분을 함</span></span><br><span class="line">print(n1)</span><br><span class="line">print(n2)</span><br><span class="line">print(n3)</span><br></pre></td></tr></table></figure><pre><code>[[5 1] [6 0] [0 8] [3 8]][[2 4] [7 2] [4 2] [1 4]][[3 0] [8 3] [9 0] [3 3]]</code></pre><h2 id="5-sort"><a href="#5-sort" class="headerlink" title="5. sort"></a><strong>5. sort</strong></h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">r1 = np.random.randint(<span class="number">10</span>, size=(<span class="number">3</span>,<span class="number">3</span>))</span><br><span class="line">print(r1)</span><br></pre></td></tr></table></figure><pre><code>[[6 7 3] [5 3 2] [4 4 0]]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 가로로 sorting</span></span><br><span class="line">r1.sort()          <span class="comment"># axis -1과 1은 같은 동작을 한다   sort는 r1에 바로 반영됨</span></span><br><span class="line">r1</span><br></pre></td></tr></table></figure><pre><code>array([[3, 6, 7],       [2, 3, 5],       [0, 4, 4]])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 세로로 sorting : axis=0 (각 열이 독립적으로 정렬됨)</span></span><br><span class="line">r1.sort(axis=<span class="number">0</span>)</span><br><span class="line">r1</span><br></pre></td></tr></table></figure><pre><code>array([[0, 3, 4],       [2, 4, 5],       [3, 6, 7]])</code></pre><h4 id="참고자료"><a href="#참고자료" class="headerlink" title="참고자료"></a>참고자료</h4><ul><li>NumPy v1.16 Manual <a href="https://docs.scipy.org/doc/numpy/index.html" target="_blank" rel="noopener">(https://docs.scipy.org/doc/numpy/index.html)</a></li><li>패스트캠퍼스, ⟪데이터사이언스스쿨 8기⟫ 수업자료</li></ul>]]></content>
      
      
      <categories>
          
          <category> DataScience </category>
          
          <category> Python 파이썬 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 파이썬 </tag>
            
            <tag> programming </tag>
            
            <tag> numpy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2019-03-16-TIL</title>
      <link href="/2019/03/16/2019-03-16-TIL/"/>
      <url>/2019/03/16/2019-03-16-TIL/</url>
      
        <content type="html"><![CDATA[<h4 id="배운-것-amp-리뷰"><a href="#배운-것-amp-리뷰" class="headerlink" title="배운 것 &amp; 리뷰"></a>배운 것 &amp; 리뷰</h4><ul><li>패캠 Tensorflow로 시작하는 딥러닝 입문 CAMP 2주차</li></ul><h4 id="다음에-배울-것"><a href="#다음에-배울-것" class="headerlink" title="다음에 배울 것"></a>다음에 배울 것</h4>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2019-03-09-TIL</title>
      <link href="/2019/03/09/2019-03-09-TIL/"/>
      <url>/2019/03/09/2019-03-09-TIL/</url>
      
        <content type="html"><![CDATA[<h4 id="배운-것-amp-리뷰"><a href="#배운-것-amp-리뷰" class="headerlink" title="배운 것 &amp; 리뷰"></a>배운 것 &amp; 리뷰</h4><ul><li>패캠 Tensorflow로 시작하는 딥러닝 입문 CAMP 개강!<ul><li>무려 10주차 과정에 중간에 휴강도 있어서 3개월의 대장정에 덜컥 조교로 들어왔는데, 힘들기야 하겠지만 데이터사이언스스쿨에서 잘 다루지 않았던 텐서플로를 잘 배울 수 있을 것 같다. 기본적으로 강사님 강의력이 좋으신 것 같아 기대가 된다.</li><li>Tensorflow 2.0에도 쉽게 적용할 수 있도록 실습이 진행될 예정이라고 하니 유용할 것 같다.</li><li>오늘은 Deeplearning Introduction과 실습(Google Colab 이용) 세팅 진행. 첫날이니만큼 무겁지 않은 내용이었다.</li></ul></li></ul><h4 id="다음에-배울-것"><a href="#다음에-배울-것" class="headerlink" title="다음에 배울 것"></a>다음에 배울 것</h4><ul><li>어려운 내용을 배우진 않았지만 그래도 수업내용은 복습해야지!</li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python 12. NumPy의 기초 (1)</title>
      <link href="/2019/03/01/python_12_NumPy_basic_1/"/>
      <url>/2019/03/01/python_12_NumPy_basic_1/</url>
      
        <content type="html"><![CDATA[<p><a href="https://nbviewer.jupyter.org/github/hyeshinoh/Study_Python/blob/master/python_21_NumPy_basic_1.ipynb" target="_blank" rel="noopener">jupyter notebook으로 보기</a></p><h4 id="NumPy-소개"><a href="#NumPy-소개" class="headerlink" title="NumPy 소개"></a><strong>NumPy 소개</strong></h4><ul><li>Numpy는 Pandas와 함께 데이터사이언스에서 수치 배열 데이터를 다루는데 필수적으로 사용되는 핵심 패키지이다.</li><li>데이터사이언스에서 데이터는 보통 배열로 나타내는데 numpy를 사용해 vector/matrix/고차원 배열의 연산을 효율적이고 빠르게 할 수 있다. <br> (내부적으로 C로 구현되어 있기 때문에 python 반복문을 사용하는 것에 비해 연산이 빠르다.)</li></ul><h4 id="다룰-내용"><a href="#다룰-내용" class="headerlink" title="다룰 내용"></a><strong>다룰 내용</strong></h4><p>먼저 여기에서는 array를 만들고 수정하는 기본적인 방법들을 다뤄보자.</p><ol><li>배열 만들기: Make, array</li><li>reshape</li><li>index</li><li>데이터 수정</li><li>특수 행렬 만들기: zeros, ones, eye, like, empty</li></ol><a id="more"></a> <h2 id="0-설치하기-amp-불러오기"><a href="#0-설치하기-amp-불러오기" class="headerlink" title="0. 설치하기 &amp; 불러오기"></a><strong>0. 설치하기 &amp; 불러오기</strong></h2><ul><li>설치하기: <code>$ pip3 install numpy</code></li><li>불러올때는 아래와 같이 alias로 ‘np’를 사용하는 것이 컨벤션</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br></pre></td></tr></table></figure><h2 id="1-배열-만들기"><a href="#1-배열-만들기" class="headerlink" title="1. 배열 만들기"></a><strong>1. 배열 만들기</strong></h2><h3 id="1-1-배열-ndarray"><a href="#1-1-배열-ndarray" class="headerlink" title="1.1 배열(ndarray)"></a>1.1 배열(ndarray)</h3><ul><li><code>ndarray</code>: NumPy의 array class (alias: <code>array</code>)</li><li>중요 속성<ul><li><code>ndarray.ndim</code> : array의 차원 수</li><li><code>ndarray.shape</code> : array 각 차원의 사이즈</li></ul></li></ul><h3 id="1-2-array-만들기"><a href="#1-2-array-만들기" class="headerlink" title="1.2 array 만들기"></a>1.2 array 만들기</h3><h4 id="1-1차원-배열-vector-행벡터"><a href="#1-1차원-배열-vector-행벡터" class="headerlink" title="(1) 1차원 배열 (vector, 행벡터)"></a>(1) 1차원 배열 (vector, 행벡터)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">array = np.array([<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>])</span><br><span class="line"><span class="comment"># array = np.array(range(6))      # 같은 결과가 나옴</span></span><br><span class="line">print(type(array))</span><br><span class="line">print(array)</span><br></pre></td></tr></table></figure><pre><code>&lt;class &apos;numpy.ndarray&apos;&gt;[0 1 2 3 4 5]</code></pre><h4 id="2-2차원-배열-matrix"><a href="#2-2차원-배열-matrix" class="headerlink" title="(2) 2차원 배열 (matrix)"></a>(2) 2차원 배열 (matrix)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 열벡터 (n*1 matrix)</span></span><br><span class="line">array = np.array([[<span class="number">0</span>],[<span class="number">1</span>],[<span class="number">2</span>]])</span><br><span class="line">print(array)</span><br></pre></td></tr></table></figure><pre><code>[[0] [1] [2]]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># `n*m` matrix</span></span><br><span class="line">array = np.array([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>],</span><br><span class="line">                  [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]])</span><br><span class="line">print(array)</span><br><span class="line">print(<span class="string">"array의 ndim(차원 수):"</span>, array.ndim)</span><br><span class="line">print(<span class="string">"array의 shape:"</span>, array.shape)</span><br></pre></td></tr></table></figure><pre><code>[[1 2 3] [4 5 6]]array의 차원 수: 2array의 shape: (2, 3)</code></pre><h4 id="3-3차원-배열-n-m-o-matrix"><a href="#3-3차원-배열-n-m-o-matrix" class="headerlink" title="(3) 3차원 배열 (n*m*o matrix)"></a>(3) 3차원 배열 (<code>n*m*o</code> matrix)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">array = np.array([[[<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>],</span><br><span class="line">                   [<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>],</span><br><span class="line">                   [<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>]],</span><br><span class="line">                  [[<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>],</span><br><span class="line">                   [<span class="number">4</span>,<span class="number">5</span>,<span class="number">100</span>,<span class="number">7</span>],</span><br><span class="line">                   [<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>]]])</span><br><span class="line">print(array)</span><br><span class="line">print(<span class="string">"array의 ndim(차원 수):"</span>, array.ndim)</span><br><span class="line">print(<span class="string">"array의 shape:"</span>, array.shape)   <span class="comment"># 바깥에서 안(상위에서 하위로)으로 모양을 나타낸다고 생각하면 편함</span></span><br></pre></td></tr></table></figure><pre><code>[[[  0   1   2   3]  [  4   5   6   7]  [  8   9  10  11]] [[  0   1   2   3]  [  4   5 100   7]  [  8   9  10  11]]]array의 ndim(차원 수): 3array의 shape: (2, 3, 4)</code></pre><h2 id="2-reshape"><a href="#2-reshape" class="headerlink" title="2. reshape"></a><strong>2. reshape</strong></h2><ul><li>행렬의 모양을 바꿀수 있다.</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">na = np.array([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>])</span><br><span class="line">na</span><br></pre></td></tr></table></figure><pre><code>array([1, 2, 3, 4, 5, 6, 7, 8])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rna = na.reshape(<span class="number">2</span>, <span class="number">4</span>)          <span class="comment"># 아래보다는 이렇게 쓰는게 좀 더 편한 방법</span></span><br><span class="line">rna</span><br></pre></td></tr></table></figure><pre><code>array([[1, 2, 3, 4],       [5, 6, 7, 8]])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rna = np.reshape(na, (<span class="number">4</span>, <span class="number">2</span>))    <span class="comment"># np의 함수 reshape을 사용</span></span><br><span class="line">rna</span><br></pre></td></tr></table></figure><pre><code>array([[1, 2],       [3, 4],       [5, 6],       [7, 8]])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 전치행렬 (.T는 속성)</span></span><br><span class="line">rna.T</span><br></pre></td></tr></table></figure><pre><code>array([[1, 3, 5, 7],       [2, 4, 6, 8]])</code></pre><h2 id="3-index"><a href="#3-index" class="headerlink" title="3. index"></a><strong>3. index</strong></h2><ul><li>행렬 데이터를 수정하거나, 가져오거나, 자를 때 사용</li><li>행렬의 특정 위치 데이터 값 가져오기</li><li>행렬 자르기</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">array</span><br></pre></td></tr></table></figure><pre><code>array([[[  0,   1,   2,   3],        [  4,   5,   6,   7],        [  8,   9,  10,  11]],       [[  0,   1,   2,   3],        [  4,   5, 100,   7],        [  8,   9,  10,  11]]])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">print(array[<span class="number">1</span>][<span class="number">1</span>][<span class="number">2</span>])  <span class="comment"># 바깥차원부터 indexing</span></span><br><span class="line">print(array[<span class="number">1</span>,<span class="number">1</span>,<span class="number">2</span>])    <span class="comment"># 이렇게 줄여서 써도 OK</span></span><br></pre></td></tr></table></figure><pre><code>100100</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># indexing 이용한 slicing</span></span><br><span class="line">result = array[<span class="number">1</span>:,<span class="number">1</span>:,<span class="number">2</span>:]</span><br><span class="line">print(result)</span><br><span class="line">print(result.ndim, result.shape)    <span class="comment"># 3차원이라는 점!</span></span><br></pre></td></tr></table></figure><pre><code>[[[100   7]  [ 10  11]]]3 (1, 2, 2)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">print(result[<span class="number">0</span>])</span><br><span class="line">result[<span class="number">0</span>].ndim</span><br></pre></td></tr></table></figure><pre><code>[[100   7] [ 10  11]]2</code></pre><h2 id="4-데이터-수정"><a href="#4-데이터-수정" class="headerlink" title="4. 데이터 수정"></a><strong>4. 데이터 수정</strong></h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ls = np.array(range(<span class="number">5</span>))</span><br><span class="line">ls</span><br></pre></td></tr></table></figure><pre><code>array([0, 1, 2, 3, 4])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ls[<span class="number">2</span>] = <span class="number">0</span></span><br><span class="line">ls</span><br></pre></td></tr></table></figure><pre><code>array([0, 1, 0, 3, 4])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ls[<span class="number">3</span>:] = <span class="number">0</span></span><br><span class="line">ls</span><br></pre></td></tr></table></figure><pre><code>array([0, 1, 0, 0, 0])</code></pre><h2 id="5-특수-행렬-만들기"><a href="#5-특수-행렬-만들기" class="headerlink" title="5. 특수 행렬 만들기"></a><strong>5. 특수 행렬 만들기</strong></h2><h3 id="5-1-zeros"><a href="#5-1-zeros" class="headerlink" title="5.1 zeros"></a>5.1 zeros</h3><ul><li>행렬을 만들고 0을 채움</li><li>dtype으로 데이터 타입 설정 가능 (default는 float)</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">z = np.zeros(<span class="number">5</span>)</span><br><span class="line">z</span><br></pre></td></tr></table></figure><pre><code>array([0., 0., 0., 0., 0.])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## data type을 parameter로 넣어주기</span></span><br><span class="line">zz = np.zeros((<span class="number">2</span> ,<span class="number">3</span>), dtype=int)  </span><br><span class="line">zz</span><br></pre></td></tr></table></figure><pre><code>array([[0, 0, 0],       [0, 0, 0]])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zz.ndim</span><br></pre></td></tr></table></figure><pre><code>2</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 고차원도 만들 수 있음 (모양을 상상할 수는 없지만)</span></span><br><span class="line">z5 = np.zeros((<span class="number">2</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">2</span>), dtype=int)</span><br><span class="line">z5.ndim, z5.shape</span><br></pre></td></tr></table></figure><pre><code>(5, (2, 3, 2, 3, 2))</code></pre><h3 id="5-2-ones"><a href="#5-2-ones" class="headerlink" title="5.2 ones"></a>5.2 ones</h3><ul><li>행렬을 만들고 1을 채움</li><li>dtype으로 데이터 타입 설정 가능 (default는 float)</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">one = np.ones((<span class="number">2</span>, <span class="number">3</span>), dtype=int)</span><br><span class="line">one</span><br></pre></td></tr></table></figure><pre><code>array([[1, 1, 1],       [1, 1, 1]])</code></pre><h3 id="5-3-eye"><a href="#5-3-eye" class="headerlink" title="5.3 eye"></a>5.3 eye</h3><ul><li>단위 행렬 데이터를 만듦</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">print(np.eye(<span class="number">5</span>))</span><br><span class="line">print(np.identity(<span class="number">5</span>))</span><br></pre></td></tr></table></figure><pre><code>[[1. 0. 0. 0. 0.] [0. 1. 0. 0. 0.] [0. 0. 1. 0. 0.] [0. 0. 0. 1. 0.] [0. 0. 0. 0. 1.]][[1. 0. 0. 0. 0.] [0. 1. 0. 0. 0.] [0. 0. 1. 0. 0.] [0. 0. 0. 1. 0.] [0. 0. 0. 0. 1.]]</code></pre><h3 id="5-4-like"><a href="#5-4-like" class="headerlink" title="5.4 like"></a>5.4 like</h3><ul><li>행렬 안에 있는 모든 데이터를 0이나 1로 바꿀수 있음</li><li><code>np.zeros_like(matrix)</code>: 0으로 바꾸기</li><li><code>np.ones_like(matrix)</code>: 1로 바꾸기</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">z = np.zeros(<span class="number">5</span>)</span><br><span class="line">z</span><br></pre></td></tr></table></figure><pre><code>array([0., 0., 0., 0., 0.])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ls = np.ones_like(z)</span><br><span class="line">ls</span><br></pre></td></tr></table></figure><pre><code>array([1., 1., 1., 1., 1.])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.zeros_like(one)</span><br></pre></td></tr></table></figure><pre><code>array([[0, 0, 0],       [0, 0, 0]])</code></pre><h3 id="5-5-empty"><a href="#5-5-empty" class="headerlink" title="5.5 empty"></a>5.5 empty</h3><ul><li>빈 행렬을 만듦</li><li>실제로는 빈데이터가 아니라 dummy 데이터가 들어감</li><li>보통 empty보다는 zeros나 ones를 많이 사용</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.empty((<span class="number">5</span>, <span class="number">3</span>))</span><br></pre></td></tr></table></figure><pre><code>array([[0., 0., 0.],       [0., 0., 0.],       [0., 0., 0.],       [0., 0., 0.],       [0., 0., 0.]])</code></pre><h4 id="참고자료"><a href="#참고자료" class="headerlink" title="참고자료"></a>참고자료</h4><ul><li>NumPy v1.16 Manual <a href="https://docs.scipy.org/doc/numpy/index.html" target="_blank" rel="noopener">(https://docs.scipy.org/doc/numpy/index.html)</a></li><li>패스트캠퍼스, ⟪데이터사이언스스쿨 8기⟫ 수업자료</li></ul>]]></content>
      
      
      <categories>
          
          <category> DataScience </category>
          
          <category> Python 파이썬 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 파이썬 </tag>
            
            <tag> programming </tag>
            
            <tag> numpy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2019-02-28-TIL</title>
      <link href="/2019/02/28/2019-02-28-TIL/"/>
      <url>/2019/02/28/2019-02-28-TIL/</url>
      
        <content type="html"><![CDATA[<h4 id="배운-것-amp-리뷰"><a href="#배운-것-amp-리뷰" class="headerlink" title="배운 것 &amp; 리뷰"></a>배운 것 &amp; 리뷰</h4><ul><li>파이썬 os와 shutil 라이브러리 내용을 더 보충하여 github &amp; 블로그 포스팅 내용을 보강함</li></ul><h4 id="다음에-배울-것"><a href="#다음에-배울-것" class="headerlink" title="다음에 배울 것"></a>다음에 배울 것</h4><ul><li>hexo 블로그에 facebook 댓글 기능 달기</li><li>R 기본 문법</li><li>SQL 기본 문법 복습</li><li>확률 통계 복습</li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Jupyter Notebook Tip - 항상 쓰는 라이브러리 자동으로 import하기!</title>
      <link href="/2019/02/28/Jupyter_tip_002/"/>
      <url>/2019/02/28/Jupyter_tip_002/</url>
      
        <content type="html"><![CDATA[<p>오늘도 Jupyter notebook을 켜고 데이터를 만져보려는 당신. 첫번째 셀에 입력하는 코드는 무엇인가?</p><p>아마도 pandas나 numpy, 그리고 scikit-learn 같은 늘상 사용하는 다양한 라이브러리들을 불러오기 위해 길고 긴 <code>import ***</code>의 리스트를 작성하고 있지 않은가?  </p><p>주피터노트북을 실행할때마다 거의 매번 반복적으로 불러오는 라이브러리들이 많이 있다면, 다음의 방법으로 매번 <code>(from ***) import ***</code>을 번거롭게 작성할 필요없이 주피터노트북 실행시 지정한 라이브러리를 자동으로 불러올 수 있도록 설정해보자.<br><a id="more"></a> </p><h3 id="1-프로필-생성"><a href="#1-프로필-생성" class="headerlink" title="1. 프로필 생성"></a>1. 프로필 생성</h3><ul><li>아래와 같이 iPython 프로필을 생성하면 설정파일이 만들어짐</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ipython profile create</span><br></pre></td></tr></table></figure><h3 id="2-startup-파일-수정"><a href="#2-startup-파일-수정" class="headerlink" title="2. startup 파일 수정"></a>2. startup 파일 수정</h3><ul><li>아래와 같이 startup 폴더에 00-first.py 파일을 만들어 python 코드를 작성함</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~/.ipython/profile_default/startup$ vi 00-first.py</span><br></pre></td></tr></table></figure><ul><li>ipython(jupyter notebook)이 실행되기 전 이 파일이 먼저 실행되어 노트북을 생성할 때마다 라이브러리를 불러오지 않아도 됨</li><li>00-first.py 코드 예시<ul><li><em>자주쓰는 라이브러리를 자유롭게 추가해주면 된다!</em></li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> matplotlib <span class="keyword">as</span> mpl</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sns</span><br><span class="line"></span><br><span class="line">sns.set()</span><br></pre></td></tr></table></figure><h3 id="3-inline-backend-configuration"><a href="#3-inline-backend-configuration" class="headerlink" title="3. inline backend configuration"></a>3. inline backend configuration</h3><p>다음 파일의 가장 하단에 아래의 설정도 추가한다.</p><ul><li><code>~/.ipython/profile_default/ipython_kernel_config.py</code> </li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">c.IPKernelApp.matplotlib = <span class="string">'notebook'</span></span><br><span class="line">c.InlineBackend.figure_format = <span class="string">'retina'</span></span><br></pre></td></tr></table></figure><h3 id="덤"><a href="#덤" class="headerlink" title="덤"></a>덤</h3><p>필요에 따라 다음의 코드도 함께 넣기를 추천한다!</p><ul><li>관련 포스트: <a href="/2018/08/13/Jupyter_tip_001/" title="Jupyter Notebook Tip - 여러 개 output을 한번에 보는 방법">Jupyter Notebook Tip - 여러 개 output을 한번에 보는 방법</a> </li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> IPython.core.interactiveshell <span class="keyword">import</span> InteractiveShell</span><br><span class="line">InteractiveShell.ast_node_interactivity = <span class="string">"all"</span></span><br></pre></td></tr></table></figure><h4 id="참고자료"><a href="#참고자료" class="headerlink" title="참고자료"></a>참고자료</h4><ul><li>패스트캠퍼스, ⟪데이터사이언스스쿨 8기⟫ 수업자료</li></ul>]]></content>
      
      
      <categories>
          
          <category> DataScience </category>
          
          <category> Python 파이썬 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 파이썬 </tag>
            
            <tag> jupyter notebook </tag>
            
            <tag> 주피터노트북 </tag>
            
            <tag> 귀찮은건 싫어 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>리눅스(Linux) - 연속적으로 명령 실행시키기 (;과 &amp;와 &amp;&amp;의 차이)</title>
      <link href="/2019/02/27/linux_011/"/>
      <url>/2019/02/27/linux_011/</url>
      
        <content type="html"><![CDATA[<p>생활코딩 생활코딩 <code>리눅스</code> 강좌 내용을 들으면서 정리하는 노트</p><ul><li>강의 듣기 (같은 강의이니 편한 곳을 선택해서 공부하면 된다!)<ul><li><a href="https://opentutorials.org/course/2598" target="_blank" rel="noopener">리눅스 @생활코딩</a></li><li><a href="https://www.inflearn.com/course/생활코딩-리눅스-강좌" target="_blank" rel="noopener">생활코딩 리눅스 강좌 @인프런</a></li></ul></li></ul><h2 id="1-성공여부와-상관없이-다음-명령어-실행"><a href="#1-성공여부와-상관없이-다음-명령어-실행" class="headerlink" title="1. ;: 성공여부와 상관없이 다음 명령어 실행"></a>1. <code>;</code>: 성공여부와 상관없이 다음 명령어 실행</h2><ul><li><code>$ mkdir test; cd test</code>: test 디렉토리를 만든 후 test 디렉토리로 이동</li></ul><h2 id="2-amp-amp-성공한-경우에-다음-명령어-실행"><a href="#2-amp-amp-성공한-경우에-다음-명령어-실행" class="headerlink" title="2. &amp;&amp;: 성공한 경우에 다음 명령어 실행"></a>2. <code>&amp;&amp;</code>: 성공한 경우에 다음 명령어 실행</h2><ul><li>앞의 명령어가 실행되어 성공한 경우에 다음 명령어 실행</li><li><code>$ mkdir test &amp;&amp; cd test</code>: test 디렉토리를 만든 후 test 디렉토리로 이동</li></ul><h2 id="3-amp-명령어를-백그라운드로-동작시킬-때-사용"><a href="#3-amp-명령어를-백그라운드로-동작시킬-때-사용" class="headerlink" title="3. &amp;: 명령어를 백그라운드로 동작시킬 때 사용"></a>3. <code>&amp;</code>: 명령어를 백그라운드로 동작시킬 때 사용</h2><ul><li><code>mkdir test &amp; cd test</code><ul><li>결과: 에러 (test 디렉토리를 백그라운드로 생성함과 동시에 test 디렉토리로 이동하려고 했기 때문에 cd test는 존재하지 않는 디렉토리로 진입하려고 시도한 것. 한편 test 디렉토리는 생성됨)<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">   [1] 19989</span><br><span class="line">cd: no such file or directory: test</span><br><span class="line">[1]  + 19989 done       mkdir test</span><br></pre></td></tr></table></figure></li></ul></li></ul><h2 id="4-명령어의-그룹핑"><a href="#4-명령어의-그룹핑" class="headerlink" title="4. {}: 명령어의 그룹핑"></a>4. <code>{}</code>: 명령어의 그룹핑</h2><ul><li><code>mkdir test3 &amp;&amp; { cd test3; touch abc; echo &#39;success!!&#39; } || echo &#39;There is no dir&#39;</code><ul><li>mkdir test3 성공시 cd test2; touch abc를 실행하고 success!!를 출력</li><li>mkdir test3 실패시 echo ‘There is no dir’ 실행  </li></ul></li></ul><h2 id="참고자료"><a href="#참고자료" class="headerlink" title="참고자료"></a>참고자료</h2><ul><li><a href="https://opentutorials.org/course/2598" target="_blank" rel="noopener">생활코딩 <code>리눅스</code> 강좌</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> DataScience </category>
          
          <category> Linux 리눅스 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 리눅스 </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>리눅스(Linux) - 로그인 없이 로그인하기 (ssh key)</title>
      <link href="/2019/02/27/linux_010/"/>
      <url>/2019/02/27/linux_010/</url>
      
        <content type="html"><![CDATA[<p>생활코딩 생활코딩 <code>리눅스</code> 강좌 내용을 들으면서 정리하는 노트</p><ul><li>강의 듣기 (같은 강의이니 편한 곳을 선택해서 공부하면 된다!)<ul><li><a href="https://opentutorials.org/course/2598" target="_blank" rel="noopener">리눅스 @생활코딩</a></li><li><a href="https://www.inflearn.com/course/생활코딩-리눅스-강좌" target="_blank" rel="noopener">생활코딩 리눅스 강좌 @인프런</a></li></ul></li></ul><h2 id="1-ssh-공개키를-이용한-자동-로그인"><a href="#1-ssh-공개키를-이용한-자동-로그인" class="headerlink" title="1. ssh 공개키를 이용한 자동 로그인"></a>1. ssh 공개키를 이용한 자동 로그인</h2><ul><li>ssh 키 생성: <code>$ ssh-keygen</code><ul><li>랜덤하게 생성된 비밀번호가 파일 형태로 저장됨</li><li><code>~/.ssh/</code> 경로에 <code>id_rsa</code>(private key), <code>id_rsa.pub</code>(public key) 파일로 생성 </li></ul></li><li>접속할 컴퓨터에 public key 저장<ul><li><code>~/.ssh/authorized_keys</code>에 public key를 추가하면 됨</li><li>command: <code>$ ssh-copy-id [id@ip addr]</code> </li></ul></li><li>로그인하기: <code>$ ssh [id@ip addr]</code> </li></ul><h2 id="2-활용-rsync"><a href="#2-활용-rsync" class="headerlink" title="2. 활용: rsync"></a>2. 활용: rsync</h2><ul><li>ssh를 이용해서 자동로그인을 해두면 로그인 없이 동기화 가능</li><li><code>$ rsync -avz ~/rsync/src/ [id@ip adress]:~/rsync/dest</code></li></ul><h2 id="참고자료"><a href="#참고자료" class="headerlink" title="참고자료"></a>참고자료</h2><ul><li><a href="https://opentutorials.org/course/2598" target="_blank" rel="noopener">생활코딩 <code>리눅스</code> 강좌</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> DataScience </category>
          
          <category> Linux 리눅스 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 리눅스 </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>리눅스(Linux) - 인터넷을 통한 서버간 동기화 (rsync)</title>
      <link href="/2019/02/27/linux_009/"/>
      <url>/2019/02/27/linux_009/</url>
      
        <content type="html"><![CDATA[<p>생활코딩 생활코딩 <code>리눅스</code> 강좌 내용을 들으면서 정리하는 노트</p><ul><li>강의 듣기 (같은 강의이니 편한 곳을 선택해서 공부하면 된다!)<ul><li><a href="https://opentutorials.org/course/2598" target="_blank" rel="noopener">리눅스 @생활코딩</a></li><li><a href="https://www.inflearn.com/course/생활코딩-리눅스-강좌" target="_blank" rel="noopener">생활코딩 리눅스 강좌 @인프런</a></li></ul></li></ul><h2 id="1-rsync-기본동작"><a href="#1-rsync-기본동작" class="headerlink" title="1. rsync 기본동작"></a>1. rsync 기본동작</h2><ul><li><code>src</code> 디렉토리의 파일들을 <code>dest</code> 디렉토리로 동기화: <code>$ rsync -a src/ dest</code> <ul><li><code>rsync -a src dest</code>: dest 폴더 안에 src 폴더가 생길 것</li><li><code>-a</code></li></ul></li><li>증분동기화   </li></ul><h2 id="2-Remote-sync-네트워크를-통한-동기화"><a href="#2-Remote-sync-네트워크를-통한-동기화" class="headerlink" title="2. Remote sync: 네트워크를 통한 동기화"></a>2. Remote sync: 네트워크를 통한 동기화</h2><ul><li><code>$ rsync -azP ~/rsync/src/ [id@ip adress]:~/rsync/dest</code><ul><li><code>-z</code>: 압축해서 전송  </li><li><code>-P</code>: 전송상황을 progress bar로 보여줌</li></ul></li></ul><h2 id="참고자료"><a href="#참고자료" class="headerlink" title="참고자료"></a>참고자료</h2><ul><li><a href="https://opentutorials.org/course/2598" target="_blank" rel="noopener">생활코딩 <code>리눅스</code> 강좌</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> DataScience </category>
          
          <category> Linux 리눅스 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 리눅스 </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2019-02-25-TIL</title>
      <link href="/2019/02/25/2019-02-25-TIL/"/>
      <url>/2019/02/25/2019-02-25-TIL/</url>
      
        <content type="html"><![CDATA[<h4 id="배운-것-amp-리뷰"><a href="#배운-것-amp-리뷰" class="headerlink" title="배운 것 &amp; 리뷰"></a>배운 것 &amp; 리뷰</h4><ul><li>파이썬 os 복습</li><li>hexo 블로그에 facebook comment 플러그인 설치하는 법 진짜 모르겟다ㅜ!!!</li></ul><h4 id="다음에-배울-것"><a href="#다음에-배울-것" class="headerlink" title="다음에 배울 것"></a>다음에 배울 것</h4><ul><li>hexo 블로그에 facebook 댓글 기능 달기</li><li>R 기본 문법</li><li>SQL 기본 문법 복습</li><li>확률 통계 복습</li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python 11. 정규표현식(regex)</title>
      <link href="/2019/02/21/python_11_regex/"/>
      <url>/2019/02/21/python_11_regex/</url>
      
        <content type="html"><![CDATA[<p><a href="https://nbviewer.jupyter.org/github/hyeshinoh/Study_Python/blob/master/python_11_regex.ipynb" target="_blank" rel="noopener">jupyter notebook으로 보기</a></p><a id="more"></a> <h2 id="정규표현식"><a href="#정규표현식" class="headerlink" title="정규표현식"></a><strong>정규표현식</strong></h2><ul><li>특정 패턴을 이용해 문자열을 처리하는 방법</li><li>호불호가 있지만 강사님은 필요시에만 사용하는 것이 좋다고 생각함<ul><li>작성하면서 실수하기도 쉽고, 이해하는데도 가독성이 떨어짐</li><li>문자열 함수를 쓰는 것이 가독성이 더 좋음</li></ul></li></ul><h2 id="다룰-내용"><a href="#다룰-내용" class="headerlink" title="다룰 내용"></a>다룰 내용</h2><ol><li>정규표현식 함수<ul><li>match: 문자열의 가장 앞에서 일치하는 패턴을 찾기</li><li>search: 문자열에서 가장 첫번째로 일치하는 패턴 찾기</li><li>findall: 일치하는 패턴을 모두 찾기</li><li>split: 문자열을 특정 패턴으로 나누기</li><li>sub: 특정 패턴에 맞는 문자열을 대체하기</li></ul></li><li>Pattern</li><li>Examples</li></ol><!-- more --> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br></pre></td></tr></table></figure><h2 id="1-함수"><a href="#1-함수" class="headerlink" title="1. 함수"></a><strong>1. 함수</strong></h2><h3 id="1-1-match"><a href="#1-1-match" class="headerlink" title="1.1 match"></a>1.1 match</h3><ul><li>문자열의 <strong>가장 앞</strong>(시작)에서부터 일치하는 패턴 찾기</li><li><code>re.match(패턴, 문자열)</code></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="string">"fast campus datascience fighitng. datascience fighting. fast campus fighting."</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">result1 = re.match(<span class="string">"fast"</span>, s)       </span><br><span class="line">result2 = re.match(<span class="string">"campus"</span>, s)     </span><br><span class="line">print(<span class="string">"result1:"</span>, result1)</span><br><span class="line">print(<span class="string">"result2:"</span>, result2)</span><br></pre></td></tr></table></figure><pre><code>result1: &lt;_sre.SRE_Match object; span=(0, 4), match=&apos;fast&apos;&gt;result2: None</code></pre><h3 id="1-2-search"><a href="#1-2-search" class="headerlink" title="1.2 search"></a>1.2 search</h3><ul><li>문자열에서 <strong>가장 첫번째로</strong> 일치하는 패턴 찾기 (일치하는 것 중 첫번째만)</li><li><code>re.search(패턴, 문자열)</code></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">result3 = re.search(<span class="string">"fast"</span>, s)  </span><br><span class="line">result4 = re.search(<span class="string">"campus"</span>, s) </span><br><span class="line">print(<span class="string">"result3:"</span>, result3)</span><br><span class="line">print(<span class="string">"result4:"</span>, result4)</span><br></pre></td></tr></table></figure><pre><code>result3: &lt;_sre.SRE_Match object; span=(0, 4), match=&apos;fast&apos;&gt;result4: &lt;_sre.SRE_Match object; span=(5, 11), match=&apos;campus&apos;&gt;</code></pre><h3 id="1-3-findall"><a href="#1-3-findall" class="headerlink" title="1.3 findall"></a>1.3 findall</h3><ul><li>일치하는 패턴을 모두 찾아서 리스트로 돌려줌</li><li>가장 많이 사용하게됨</li><li><code>re.findall(패턴, 문자열)</code></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">result5 = re.findall(<span class="string">"fast"</span>, s)    </span><br><span class="line">result6 = re.findall(<span class="string">"campus"</span>, s)     </span><br><span class="line">print(<span class="string">"result5:"</span>, result5, len(result5))</span><br><span class="line">print(<span class="string">"result6:"</span>, result6, len(result6))</span><br></pre></td></tr></table></figure><pre><code>result5: [&apos;fast&apos;, &apos;fast&apos;] 2result6: [&apos;campus&apos;, &apos;campus&apos;] 2</code></pre><h3 id="1-4-split"><a href="#1-4-split" class="headerlink" title="1.4 split"></a>1.4 split</h3><ul><li>패턴을 기준으로 문자열을 나눠서 리스트로 만들어 줌</li><li><code>re.split(패턴, 문자열)</code></li><li>여러가지 문자로 나누고 싶을 때<ul><li><code>string.split()</code>은 chaining을 이용해 여러 번 함수를 호출해야함</li><li>regex는 패턴을 이용해서 함수를 한번만 호출해도 됨</li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">s1 = <span class="string">"fast campus datascience fighting!"</span></span><br><span class="line">result = re.split(<span class="string">"i"</span>, s1)</span><br><span class="line">result</span><br></pre></td></tr></table></figure><pre><code>[&apos;fast campus datasc&apos;, &apos;ence f&apos;, &apos;ght&apos;, &apos;ng!&apos;]</code></pre><h3 id="1-5-sub"><a href="#1-5-sub" class="headerlink" title="1.5 sub"></a>1.5 sub</h3><ul><li>일치하는 패턴을 대체</li><li><code>re.sub(패턴, 바꿀 문자, (전체)문자열)</code></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">print(s)</span><br><span class="line">re.sub(<span class="string">"fast"</span>,<span class="string">"slow"</span>, s)</span><br></pre></td></tr></table></figure><pre><code>fast campus datascience fighitng. datascience fighting. fast campus fighting.&apos;slow campus datascience fighitng. datascience fighting. slow campus fighting.&apos;</code></pre><h2 id="2-Pattern"><a href="#2-Pattern" class="headerlink" title="2. Pattern"></a><strong>2. Pattern</strong></h2><ul><li>문자: 숫자인지 문자인지 특수문자인지 등을 구분</li><li>지정자: ‘범위가 몇회 반복’ 같은 패턴을 구분</li></ul><h3 id="2-1-문자"><a href="#2-1-문자" class="headerlink" title="2.1 문자"></a>2.1 문자</h3><ul><li><code>\d</code> &amp; <code>\D</code>: 숫자와 비숫자를 찾는 패턴</li><li><code>\w</code> &amp; <code>\W</code> : 숫자, 문자, _  &amp; 숫자, 문자, _ 제외</li><li><code>\s</code> &amp; <code>\S</code>: 공백문자 &amp; 비공백문자 </li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> string</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># string.printable: 사용가능한 모든 문자</span></span><br><span class="line">pt = string.printable</span><br><span class="line">print(len(pt))</span><br><span class="line">pt</span><br></pre></td></tr></table></figure><pre><code>100&apos;0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!&quot;#$%&amp;\&apos;()*+,-./:;&lt;=&gt;?@[\\]^_`{|}~ \t\n\r\x0b\x0c&apos;</code></pre><h4 id="1-d-amp-D-숫자와-비숫자를-찾는-패턴"><a href="#1-d-amp-D-숫자와-비숫자를-찾는-패턴" class="headerlink" title="(1) \d &amp; \D: 숫자와 비숫자를 찾는 패턴"></a>(1) <code>\d</code> &amp; <code>\D</code>: 숫자와 비숫자를 찾는 패턴</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">result = re.findall(<span class="string">"\d"</span>, pt)   <span class="comment"># '\d'라는 패턴을 findall 함수에 넣어줌</span></span><br><span class="line">result</span><br></pre></td></tr></table></figure><pre><code>[&apos;0&apos;, &apos;1&apos;, &apos;2&apos;, &apos;3&apos;, &apos;4&apos;, &apos;5&apos;, &apos;6&apos;, &apos;7&apos;, &apos;8&apos;, &apos;9&apos;]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">result = re.findall(<span class="string">"\D"</span>, pt)</span><br><span class="line"><span class="string">''</span>.join(result)</span><br><span class="line">```    </span><br><span class="line"><span class="string">'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!"#$%&amp;\'()*+,-./:;&lt;=&gt;?@[\\]^_`&#123;|&#125;~ \t\n\r\x0b\x0c'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#### (2) `\w` &amp; `\W` : 숫자, 문자, _  &amp; 숫자, 문자, _ 제외</span></span><br><span class="line">- 숫자, 문자, _ : 식별자로 사용할 수 있는 문자</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">```python</span><br><span class="line">result = re.findall(<span class="string">"\w"</span>, pt)</span><br><span class="line"><span class="string">''</span>.join(result)</span><br></pre></td></tr></table></figure><pre><code>&apos;0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_&apos;</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">result = re.findall(<span class="string">"\W"</span>, pt)</span><br><span class="line"><span class="string">''</span>.join(result)</span><br></pre></td></tr></table></figure><pre><code>&apos;!&quot;#$%&amp;\&apos;()*+,-./:;&lt;=&gt;?@[\\]^`{|}~ \t\n\r\x0b\x0c&apos;</code></pre><h4 id="3-s-amp-S-공백문자-amp-비공백문자"><a href="#3-s-amp-S-공백문자-amp-비공백문자" class="headerlink" title="(3) \s &amp; \S: 공백문자 &amp; 비공백문자"></a>(3) <code>\s</code> &amp; <code>\S</code>: 공백문자 &amp; 비공백문자</h4><ul><li>공백문자: 문자의 공백을 다 지우고 싶으면 이 패턴을 활용해서 sub 함수를 쓰면 됨</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">result = re.findall(<span class="string">"\s"</span>, pt)</span><br><span class="line"><span class="string">''</span>.join(result)</span><br></pre></td></tr></table></figure><pre><code>&apos; \t\n\r\x0b\x0c&apos;</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">result = re.findall(<span class="string">"\S"</span>, pt)</span><br><span class="line"><span class="string">''</span>.join(result)</span><br></pre></td></tr></table></figure><pre><code>&apos;0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!&quot;#$%&amp;\&apos;()*+,-./:;&lt;=&gt;?@[\\]^_`{|}~&apos;</code></pre><h3 id="2-2-지정자"><a href="#2-2-지정자" class="headerlink" title="2.2 지정자"></a>2.2 지정자</h3><p>지정자의 활용이 정규표현식의 핵심이라 할 수 있음!</p><ul><li><code>[]</code>: 문자</li><li><code>-</code>: 범위</li><li><code>.</code>: 하나의 문자</li><li><code>?</code>: 0회 또는 1회 반복</li><li><code>*</code>: 0회 이상 반복</li><li><code>+</code>: 1회 이상 반복</li><li><code>{m,n}</code>: m~n회 반복</li><li><code>()</code>: 그룹핑 </li></ul><h4 id="1-문자-괄호-안의-각각의-문자"><a href="#1-문자-괄호-안의-각각의-문자" class="headerlink" title="(1) []: 문자 - 괄호 안의 각각의 문자"></a>(1) <code>[]</code>: 문자 - 괄호 안의 각각의 문자</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">re.findall(<span class="string">"[abc1]"</span>, pt)</span><br></pre></td></tr></table></figure><pre><code>[&apos;1&apos;, &apos;a&apos;, &apos;b&apos;, &apos;c&apos;]</code></pre><h4 id="2-범위"><a href="#2-범위" class="headerlink" title="(2) -: 범위"></a>(2) <code>-</code>: 범위</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">print(re.findall(<span class="string">"[0-9]"</span>, pt))      <span class="comment"># [0123456789] 라고 쓸 필요가 없음</span></span><br><span class="line">print(re.findall(<span class="string">"[a-f]"</span>, pt))    </span><br><span class="line">print(re.findall(<span class="string">"[a-fA-F]"</span>, pt))   <span class="comment"># 여러가지 범위를 써도 됨</span></span><br></pre></td></tr></table></figure><pre><code>[&apos;0&apos;, &apos;1&apos;, &apos;2&apos;, &apos;3&apos;, &apos;4&apos;, &apos;5&apos;, &apos;6&apos;, &apos;7&apos;, &apos;8&apos;, &apos;9&apos;][&apos;a&apos;, &apos;b&apos;, &apos;c&apos;, &apos;d&apos;, &apos;e&apos;, &apos;f&apos;][&apos;a&apos;, &apos;b&apos;, &apos;c&apos;, &apos;d&apos;, &apos;e&apos;, &apos;f&apos;, &apos;A&apos;, &apos;B&apos;, &apos;C&apos;, &apos;D&apos;, &apos;E&apos;, &apos;F&apos;]</code></pre><h4 id="3-하나의-문자"><a href="#3-하나의-문자" class="headerlink" title="(3) .: 하나의 문자"></a>(3) <code>.</code>: 하나의 문자</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ls = [<span class="string">"123aab123"</span>, <span class="string">"a0b"</span>, <span class="string">"abc"</span>]</span><br><span class="line"><span class="keyword">for</span> s <span class="keyword">in</span> ls:</span><br><span class="line">    result = re.findall(<span class="string">"a.b"</span>, s)   <span class="comment"># a + 어떤 문자 1개 + b</span></span><br><span class="line">    print(s, result)</span><br></pre></td></tr></table></figure><pre><code>123aab123 [&apos;aab&apos;]a0b [&apos;a0b&apos;]abc []</code></pre><h4 id="4-‘-’-앞의-문자를-0회-또는-1회-반복"><a href="#4-‘-’-앞의-문자를-0회-또는-1회-반복" class="headerlink" title="(4) ?: ‘?’ 앞의 문자를 0회 또는 1회 반복"></a>(4) <code>?</code>: ‘?’ 앞의 문자를 0회 또는 1회 반복</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ls = [<span class="string">"aab"</span>, <span class="string">"a3b"</span>, <span class="string">"accb"</span>, <span class="string">"ab"</span>]</span><br><span class="line"><span class="keyword">for</span> s <span class="keyword">in</span> ls:</span><br><span class="line">    result = re.findall(<span class="string">"a.?b"</span>, s)  <span class="comment"># a + 어떤문자 0개 또는 1개 + b → a.b 또는 ab</span></span><br><span class="line">    print(s, result)</span><br></pre></td></tr></table></figure><pre><code>aab [&apos;aab&apos;]a3b [&apos;a3b&apos;]accb []ab [&apos;ab&apos;]</code></pre><h4 id="5-‘-’-앞의-문자를-0회-이상-반복"><a href="#5-‘-’-앞의-문자를-0회-이상-반복" class="headerlink" title="(5) *: ‘*’ 앞의 문자를 0회 이상 반복"></a>(5) <code>*</code>: ‘*’ 앞의 문자를 0회 이상 반복</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ls = [<span class="string">"ac"</span>, <span class="string">"abc"</span>, <span class="string">"abbbbc"</span>, <span class="string">"a3bec"</span>]</span><br><span class="line"><span class="keyword">for</span> s <span class="keyword">in</span> ls:</span><br><span class="line">    result = re.findall(<span class="string">"ab*c"</span>, s)  <span class="comment"># a + b가 0회 이상 반복 + c</span></span><br><span class="line">    print(s, result)</span><br></pre></td></tr></table></figure><pre><code>ac [&apos;ac&apos;]abc [&apos;abc&apos;]abbbbc [&apos;abbbbc&apos;]a3bec []</code></pre><h4 id="6-‘-’-앞의-문자를-1회-이상-반복"><a href="#6-‘-’-앞의-문자를-1회-이상-반복" class="headerlink" title="(6) +: ‘+’ 앞의 문자를 1회 이상 반복"></a>(6) <code>+</code>: ‘+’ 앞의 문자를 1회 이상 반복</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ls = [<span class="string">"ac"</span>, <span class="string">"abc"</span>, <span class="string">"abbbbc"</span>, <span class="string">"a3bec"</span>]</span><br><span class="line"><span class="keyword">for</span> s <span class="keyword">in</span> ls:</span><br><span class="line">    result = re.findall(<span class="string">"ab+c"</span>, s)  <span class="comment"># a + b가 1회 이상 반복 + c</span></span><br><span class="line">    print(s, result)</span><br></pre></td></tr></table></figure><pre><code>ac []abc [&apos;abc&apos;]abbbbc [&apos;abbbbc&apos;]a3bec []</code></pre><h4 id="7-m-n-앞의-문자를-m-n회-반복"><a href="#7-m-n-앞의-문자를-m-n회-반복" class="headerlink" title="(7) {m,n}: 앞의 문자를 m~n회 반복"></a>(7) <code>{m,n}</code>: 앞의 문자를 m~n회 반복</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ls = [<span class="string">"ac"</span>, <span class="string">"abc"</span>, <span class="string">"abbbbbc"</span>, <span class="string">"abbbbbbbbbbc"</span>] <span class="comment"># 5회, 10회</span></span><br><span class="line"><span class="keyword">for</span> s <span class="keyword">in</span> ls:</span><br><span class="line">    result = re.findall(<span class="string">"ab&#123;1,8&#125;c"</span>, s)  <span class="comment"># a + b가 1~8회 반복 + c</span></span><br><span class="line">    print(s, result)</span><br></pre></td></tr></table></figure><pre><code>ac []abc [&apos;abc&apos;]abbbbbc [&apos;abbbbbc&apos;]abbbbbbbbbbc []</code></pre><h4 id="8-그룹핑"><a href="#8-그룹핑" class="headerlink" title="(8) (): 그룹핑"></a>(8) <code>()</code>: 그룹핑</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ls = [<span class="string">"aaa5.djfi"</span>,<span class="string">"abdddc5"</span>,<span class="string">"1abbbbc"</span>,<span class="string">"a3.bec"</span>]</span><br><span class="line"><span class="keyword">for</span> s <span class="keyword">in</span> ls:</span><br><span class="line">    result = re.findall(<span class="string">"([0-9]+)[.]([a-z]&#123;2&#125;)"</span>, s)  </span><br><span class="line">    print(s, result)</span><br></pre></td></tr></table></figure><pre><code>aaa5.djfi [(&apos;5&apos;, &apos;dj&apos;)]abdddc5 []1abbbbc []a3.bec [(&apos;3&apos;, &apos;be&apos;)]</code></pre><h3 id="3-Examples"><a href="#3-Examples" class="headerlink" title="3. Examples"></a><strong>3. Examples</strong></h3><h3 id="3-1-email-주소-찾기"><a href="#3-1-email-주소-찾기" class="headerlink" title="3.1 email 주소 찾기"></a>3.1 email 주소 찾기</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="string">"저의 이메일 주소는 hyeshinoh@gmail.com입니다. 또한 panda706@naver.com도 가지고 있습니다."</span></span><br><span class="line">p = <span class="string">"[0-9a-zA-Z]+@[0-9a-z]+\.[0-9a-z]+"</span>          <span class="comment"># \. : 패턴이 아니고 "."을 문자 자체로 사용</span></span><br><span class="line"><span class="comment"># result = True if re.search(p, s) else False</span></span><br><span class="line"><span class="comment"># print(result, re.findall(p, s))</span></span><br><span class="line">re.findall(p, s)</span><br></pre></td></tr></table></figure><pre><code>[&apos;hyeshinoh@gmail.com&apos;, &apos;panda706@naver.com&apos;]</code></pre><h3 id="3-2-주민등록번호-뒷자리-변경"><a href="#3-2-주민등록번호-뒷자리-변경" class="headerlink" title="3.2 주민등록번호 뒷자리 변경"></a>3.2 주민등록번호 뒷자리 변경</h3><ul><li>주민등록번호를 group으로 나눠서 뒷자리를 <strong>***</strong>로 변경</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="string">"저의 전화번호는 010-1111-2222이고 주민등록번호는 870101-1234567 입니다"</span></span><br><span class="line">p = <span class="string">"[0-9]&#123;6&#125;\-[0-9]&#123;7&#125;"</span>          <span class="comment"># \(escaping)을 안해줘도 문제는 없음</span></span><br><span class="line">print(re.findall(p, s))</span><br><span class="line">p = <span class="string">"([0-9]&#123;6&#125;)\-([0-9]&#123;7&#125;)"</span>      <span class="comment"># 그룹핑</span></span><br><span class="line">print(re.findall(p, s))</span><br><span class="line">re.sub(p, <span class="string">"\g&lt;1&gt;-********"</span>, s)    <span class="comment"># \g&lt;1&gt; : 그룹핑 첫번째(0부터 세지 않음. 앞의 그룹) 데이터 사용</span></span><br></pre></td></tr></table></figure><pre><code>[&apos;870101-1234567&apos;][(&apos;870101&apos;, &apos;1234567&apos;)]&apos;저의 전화번호는 010-1111-2222이고 주민등록번호는 870101-******** 입니다&apos;</code></pre><h3 id="3-3-전화번호-추출해서-바꾸기"><a href="#3-3-전화번호-추출해서-바꾸기" class="headerlink" title="3.3 전화번호 추출해서 바꾸기"></a>3.3 전화번호 추출해서 바꾸기</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 전화번호 추출하기</span></span><br><span class="line"></span><br><span class="line">s = <span class="string">"안녕하세요. 저의 전화번호는 영일공-48구삼삼7이사 입니다. 또한 010사팔구삼삼구삼일입니다. 둘중에 하나로 연락하세요"</span></span><br><span class="line"></span><br><span class="line">p = <span class="string">'[0-9영공일이둘삼사오육칠팔구빵oO]&#123;3&#125;[-]?[0-9영공일이둘삼사오육칠팔구빵oO]&#123;3,4&#125;[-]?[0-9영공일이둘삼사오육칠팔구빵oO]&#123;4&#125;'</span></span><br><span class="line"></span><br><span class="line">numbers = re.findall(p, s)     <span class="comment"># 찾아 놓은 패턴 number에 저장</span></span><br><span class="line">numbers</span><br></pre></td></tr></table></figure><pre><code>[&apos;영일공-48구삼삼7이사&apos;, &apos;010사팔구삼삼구삼일&apos;]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 전화번호를 추출해서 바꾸기</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">change_phone_str</span><span class="params">(s)</span>:</span></span><br><span class="line">    <span class="comment"># 문자열 패턴</span></span><br><span class="line">    p = <span class="string">'[0-9영공일이둘삼사오육칠팔구빵oO]&#123;3&#125;[-]?[0-9영공일이둘삼사오육칠팔구빵o]&#123;3,4&#125;[-]?[0-9영공일이둘삼사오육칠팔구빵oO]&#123;4&#125;'</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 찾아 놓은 패턴 number에 저장</span></span><br><span class="line">    numbers = re.findall(p, s)</span><br><span class="line">    print(numbers)                                <span class="comment"># 결과: '영일공-48구삼삼7이사', '010사팔구삼삼구삼일'</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 패턴에 맞는 데이터 문자로된 숫자 숫자로 바꾸기</span></span><br><span class="line">    result = []</span><br><span class="line">    preprocess_dict = &#123;</span><br><span class="line">    <span class="string">"공"</span>: <span class="number">0</span>, <span class="string">"영"</span>: <span class="number">0</span>, <span class="string">"일"</span>: <span class="number">1</span>, <span class="string">"둘"</span>: <span class="number">2</span>, <span class="string">"이"</span>: <span class="number">2</span>, <span class="string">"삼"</span>: <span class="number">3</span>, <span class="string">"사"</span>: <span class="number">4</span>,</span><br><span class="line">    <span class="string">"오"</span>: <span class="number">5</span>, <span class="string">"육"</span>: <span class="number">6</span>, <span class="string">"칠"</span>: <span class="number">7</span>, <span class="string">"팔"</span>: <span class="number">8</span>, <span class="string">"구"</span>: <span class="number">9</span>, <span class="string">"빵"</span>:<span class="number">0</span>, <span class="string">"o"</span>:<span class="number">0</span>, <span class="string">"O"</span>:<span class="number">0</span>, <span class="string">"-"</span>: <span class="string">""</span>,</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> number <span class="keyword">in</span> numbers:            </span><br><span class="line">        mod_numbers = number</span><br><span class="line">        <span class="keyword">for</span> key, value <span class="keyword">in</span> preprocess_dict.items():</span><br><span class="line">            mod_numbers = mod_numbers.replace(key, str(value))</span><br><span class="line">        result.append(mod_numbers)</span><br><span class="line">      </span><br><span class="line">    <span class="comment"># 결과값을 replace 하기</span></span><br><span class="line">    result_str = s</span><br><span class="line">    <span class="keyword">for</span> idx, number <span class="keyword">in</span> enumerate(numbers):</span><br><span class="line">        result_str = result_str.replace(number, result[idx])</span><br><span class="line">    <span class="keyword">return</span> result_str</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">s, change_phone_str(s)</span><br></pre></td></tr></table></figure><pre><code>[&apos;영일공-48구삼삼7이사&apos;, &apos;010사팔구삼삼구삼일&apos;](&apos;안녕하세요. 저의 전화번호는 영일공-48구삼삼7이사 입니다. 또한 010사팔구삼삼구삼일입니다. 둘중에 하나로 연락하세요&apos;, &apos;안녕하세요. 저의 전화번호는 01048933724 입니다. 또한 01048933931입니다. 둘중에 하나로 연락하세요&apos;)</code></pre><h4 id="참고자료"><a href="#참고자료" class="headerlink" title="참고자료"></a>참고자료</h4><ul><li>패스트캠퍼스, ⟪데이터사이언스스쿨 8기⟫ 수업자료</li></ul><p><a href="https://nbviewer.jupyter.org/github/hyeshinoh/Study_Python/blob/master/python_11_regex.ipynb" target="_blank" rel="noopener">jupyter notebook으로 보기</a></p>]]></content>
      
      
      <categories>
          
          <category> DataScience </category>
          
          <category> Python 파이썬 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 파이썬 </tag>
            
            <tag> programming </tag>
            
            <tag> 정규표현식 </tag>
            
            <tag> regex </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2019-02-21-TIL</title>
      <link href="/2019/02/21/2019-02-21-TIL/"/>
      <url>/2019/02/21/2019-02-21-TIL/</url>
      
        <content type="html"><![CDATA[<h4 id="배운-것-amp-리뷰"><a href="#배운-것-amp-리뷰" class="headerlink" title="배운 것 &amp; 리뷰"></a>배운 것 &amp; 리뷰</h4><ul><li>파이썬 정규표현식 복습 내용 포스팅</li></ul><h4 id="다음에-배울-것"><a href="#다음에-배울-것" class="headerlink" title="다음에 배울 것"></a>다음에 배울 것</h4><ul><li>hexo 블로그에 facebook 댓글 기능 달기</li><li>파이썬 os 복습</li><li>R 기본 문법</li><li>SQL 기본 문법 복습</li><li>확률 통계 복습</li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2019-02-20-TIL</title>
      <link href="/2019/02/20/2019-02-20-TIL/"/>
      <url>/2019/02/20/2019-02-20-TIL/</url>
      
        <content type="html"><![CDATA[<h4 id="배운-것-amp-리뷰"><a href="#배운-것-amp-리뷰" class="headerlink" title="배운 것 &amp; 리뷰"></a>배운 것 &amp; 리뷰</h4><ul><li>파이썬 정규표현식 복습<ul><li>학원에서 공부할 때와 비교해 실제 업무에서 데이터 전처리를 하다보니 확실히 정규표현식을 활용할 일이 많다는 것을 깨닫게 되었다. 이참에 마무리하지 못했던 파이썬 복습 정리 &amp; 포스팅을 다시 시작! numpy, pandas, visualization까지 쭉쭉 복습해줘야겠다.</li></ul></li><li>생활코딩 리눅스 강좌: 도메인(Domain)<ul><li>며칠동안 강의 듣고 정리해서 포스팅!    </li><li>포스팅: <a href="https://hyeshinoh.github.io/2019/02/20/linux_008/">리눅스(Linux) - 도메인(Domain)</a>  </li></ul></li></ul><h4 id="다음에-배울-것"><a href="#다음에-배울-것" class="headerlink" title="다음에 배울 것"></a>다음에 배울 것</h4><ul><li>hexo 블로그에 facebook 댓글 기능 달기</li><li>파이썬 os 복습</li><li>R 기본 문법</li><li>SQL 기본 문법 복습</li><li>확률 통계 복습</li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>리눅스(Linux) - 도메인(Domain)</title>
      <link href="/2019/02/20/linux_008/"/>
      <url>/2019/02/20/linux_008/</url>
      
        <content type="html"><![CDATA[<p>생활코딩 생활코딩 <code>리눅스</code> 강좌 내용을 들으면서 정리하는 노트</p><ul><li>강의 듣기 (같은 강의이니 편한 곳을 선택해서 공부하면 된다!)<ul><li><a href="https://opentutorials.org/course/2598" target="_blank" rel="noopener">리눅스 @생활코딩</a></li><li><a href="https://www.inflearn.com/course/생활코딩-리눅스-강좌" target="_blank" rel="noopener">생활코딩 리눅스 강좌 @인프런</a></li></ul></li></ul><h2 id="1-도메인-Domain"><a href="#1-도메인-Domain" class="headerlink" title="1. 도메인(Domain)"></a>1. 도메인(Domain)</h2><img src="/2019/02/20/linux_008/domain_dns.png"><h2 id="2-hosts-file"><a href="#2-hosts-file" class="headerlink" title="2. hosts file"></a>2. hosts file</h2><ul><li>어떤 도메인이 어떤 ip인지 정보를 담은 파일</li><li>DNS 접속 전에 hosts file에 적혀있는 도메인의 ip를 보고 접속함</li><li>파일 경로: <code>/etc/hosts</code></li></ul><h2 id="3-DNS"><a href="#3-DNS" class="headerlink" title="3. DNS"></a>3. DNS</h2><ul><li><code>cat /etc/resolv.conf</code>: DNS 서버 ip 확인</li><li>도메인 구입: Freenom 등 무료 도메인을 구입할 수 있는 서비스 존재</li><li>사용할 ip를 구입한 도메인으로 DNS 서버에 등록<ul><li><code>ip addr</code>: ip 주소 열람</li><li><code>curl ipinfo.io/ip</code>: 자신의 ip 주소 확인</li></ul></li><li><code>host [domain]</code>: [domain]의 ip 주소를 알려줌</li></ul><h2 id="4-서브도메인-Sub-Domain"><a href="#4-서브도메인-Sub-Domain" class="headerlink" title="4. 서브도메인 (Sub Domain)"></a>4. 서브도메인 (Sub Domain)</h2><ul><li>도메인 앞에 prefix로 서브도메인을 붙여주면 서로 다른 ip를 가리키도록 할 수 있음</li></ul><h2 id="5-DNS-동작원리"><a href="#5-DNS-동작원리" class="headerlink" title="5. DNS 동작원리"></a>5. DNS 동작원리</h2><ul><li><code>dig +trace [domain]</code>: [domain]의 DNS 서버를 통한 IP 주소 확인 경로 추적</li></ul><h2 id="참고자료"><a href="#참고자료" class="headerlink" title="참고자료"></a>참고자료</h2><ul><li><a href="https://opentutorials.org/course/2598" target="_blank" rel="noopener">생활코딩 <code>리눅스</code> 강좌</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> DataScience </category>
          
          <category> Linux 리눅스 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 리눅스 </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2019-02-16-TIL</title>
      <link href="/2019/02/16/2019-02-16-TIL/"/>
      <url>/2019/02/16/2019-02-16-TIL/</url>
      
        <content type="html"><![CDATA[<h4 id="배운-것-amp-리뷰"><a href="#배운-것-amp-리뷰" class="headerlink" title="배운 것 &amp; 리뷰"></a>배운 것 &amp; 리뷰</h4><p>2019 LangCon 참가</p><a id="more"></a> <ul><li>자연어처리는 아직 공부를 많이 해 본 분야는 아니지만(같이 사는 분이 NLP 일을 하기 때문에 주워들은 건 좀 있다!ㅋㅋ) 이런 행사가 있다는 것을 알게되어 참가해보게 되었다.</li><li>규모가 아주 큰 행사는 아니었지만 벌써 두세번 진행을 해온 연례행사인 것 같고 앞으로 더 자리를 잡아나갈 것 같은 느낌!</li><li>제일 흥미롭게 들었던 발표는 아주대학교 홍지민님의 <code>1인 미디어를 위한 자동 하이라이트 알고리즘</code>이었다. 라이브스트리밍 방송의 댓글 데이터를 가지고 하이라이트 방송으로 편집될 부분을 예측한다는 아이디어가 정말 좋았던 것 같다! 덕분에 재밌는 아이디어로 개인 프로젝트를 하고 싶은 의욕이 뿜뿜 </li><li><a href="https://songys.github.io/2019LangCon/" target="_blank" rel="noopener">행사 소개 페이지</a></li><li><a href="https://songys.github.io/2019LangCon/about/" target="_blank" rel="noopener">발표 소개 페이지</a></li></ul><p><img src="https://songys.github.io/2019LangCon/pic/lc_poster.png" alt></p><h4 id="다음-배울-것"><a href="#다음-배울-것" class="headerlink" title="다음 배울 것"></a>다음 배울 것</h4><ul><li>파이썬 os 복습</li><li>파이썬 정규표현식 복습</li><li>R 기본 문법</li><li>SQL 기본 문법 복습</li><li>확률 통계 복습</li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2019-02-13-TIL</title>
      <link href="/2019/02/13/2019-02-11-TIL/"/>
      <url>/2019/02/13/2019-02-11-TIL/</url>
      
        <content type="html"><![CDATA[<h4 id="배운-것-amp-리뷰"><a href="#배운-것-amp-리뷰" class="headerlink" title="배운 것 &amp; 리뷰"></a>배운 것 &amp; 리뷰</h4><ul><li>생활코딩 리눅스 강좌: 인터넷, 네트워크, 그리고 서버<ul><li>강의 듣고 따라하고, 정리하고 포스팅까지 완료 </li><li>포스팅: <a href="https://hyeshinoh.github.io/2019/02/13/linux_007/">리눅스(Linux) - 인터넷, 네트워크, 그리고 서버</a></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>리눅스(Linux) - 인터넷, 네트워크, 그리고 서버</title>
      <link href="/2019/02/13/linux_007/"/>
      <url>/2019/02/13/linux_007/</url>
      
        <content type="html"><![CDATA[<p>생활코딩 생활코딩 <code>리눅스</code> 강좌 내용을 들으면서 정리하는 노트</p><ul><li>강의 듣기 (같은 강의이니 편한 곳을 선택해서 공부하면 된다!)<ul><li><a href="https://opentutorials.org/course/2598" target="_blank" rel="noopener">리눅스 @생활코딩</a></li><li><a href="https://www.inflearn.com/course/생활코딩-리눅스-강좌" target="_blank" rel="noopener">생활코딩 리눅스 강좌 @인프런</a></li></ul></li></ul><p>리눅스를 통해서 컴퓨터를 서버로 활용하는 방법에 대한 강의</p><h2 id="1-인터넷-구조-client-amp-server"><a href="#1-인터넷-구조-client-amp-server" class="headerlink" title="1. 인터넷 구조 - client &amp; server"></a>1. 인터넷 구조 - client &amp; server</h2><img src="/2019/02/13/linux_007/internet.PNG"><ul><li>클라이언트(client): request하는 컴퓨터</li><li>서버(server): response하는 컴퓨터</li><li>인터넷은 request와 response가 왔다갔다하는 컴퓨터들간(client-server)의 대화</li><li>서버에 접속하는 방법<ul><li>domain name<ul><li>e.g. ‘google.com’</li></ul></li><li>ip(internet protocol) address<ul><li>e.g. <code>$ ping google.com</code>으로 확인 가능 → ‘172.217.161.46’</li></ul></li><li>DNS server를 통해서 domain → ip address 확인해서 ip address로 server에 접속하게 됨 </li></ul></li><li>내 컴퓨터의 ip address 확인하기<ul><li>private address: 라우터(Router)에 연결된 각 컴퓨터의 ip (like 전화 내선번호)<ul><li>확인: <code>$ ip addr</code> → 결과에서 ‘inet’ 뒤에 오는 주소</li></ul></li><li>public address: 라우터의 ip (like 전화 대표번호) <ul><li>확인: <code>$ curl ipinfo.io/ip</code> or 웹브라우저에서 ‘<a href="https://ipinfo.io/ip&#39;" target="_blank" rel="noopener">https://ipinfo.io/ip&#39;</a> 접속</li></ul></li></ul></li></ul><h2 id="2-웹서버"><a href="#2-웹서버" class="headerlink" title="2. 웹서버"></a>2. 웹서버</h2><p>웹서버를 리눅스에 설치하는 방법. Apache로 설명함</p><ul><li><p>웹서버</p><ul><li>웹브라우저에게 response해주는 프로그램</li><li>서버컴퓨터에 웹서버가 설치되어있어야 웹 서비스가 가능</li><li>Apache, nginx, iis 등의 프로그램이 있음</li></ul></li><li><p>Apache 웹서버 설치 &amp; 실행</p><ul><li>설치: <code>$ sudo apt-get install apache2</code></li><li>실행: <code>$ sudo service apache2 start</code></li><li>종료: <code>$ sudo service apache2 stop</code> </li><li>재시동: <code>$ sudo service apache2 restart</code></li></ul></li><li><p>접속 - 웹서버 구동 확인</p><ul><li>ip로 접속: <code>$ elinks http://[private address]/</code> (브라우저로도 가능)<ul><li>elinks 설치: <code>$ sudo apt-get install elinks</code> </li><li>private address check: <code>$ ip addr</code> </li></ul></li><li>local host(127.0.0.1)로 접속: <code>$ elinks http://local host/</code></li></ul></li><li><p>설정(configuration)</p><ul><li><code>etc/apache2/</code>: 설정이 저장되어 있는 경로<ul><li><code>apache2.conf</code>: 설정 파일</li><li><code>/etc/apache2/sites-enable/000-default.conf</code><br>  → DocumentRoot /var/www/html</li><li><code>/var/www/html</code> 안에 <code>index.html</code> 파일 존재</li></ul></li></ul></li><li><p>로그(log)</p><ul><li><code>/etc/apache2/sites-enable/000-default.conf</code><br>  → ErrorLog \${APACHE LOG_DIR}/error.log <br> CustomLog \${APACHE LOG_DIR}/access.log combined</li><li>${APACHE LOG_DIR}: <code>/var/log/apache2/</code></li><li><code>$ tail -f /var/log/apache2/access.log</code>: 실시간으로 끝에 추가되는 정보를 화면에 출력</li></ul></li></ul><h2 id="3-원격제어-ssh"><a href="#3-원격제어-ssh" class="headerlink" title="3. 원격제어 ssh"></a>3. 원격제어 ssh</h2><p>내 컴퓨터로 인터넷을 통해서 서버 컴퓨터를 원격제어 하기</p><ul><li>동작방식: 서버(제어 대상)와 클라이언트 구조<ul><li>서버: SSH Server를 설치</li><li>클라이언트: SSH Client를 설치</li><li>SSH Client가 명령을 SSH Server로 보내면 그 명령을 서버컴퓨터로 전달하여 동작 <br> → 동작 결과를 SSH Server에게 돌려주고 SSH Client로 전달 </li></ul></li><li>대부분의 unix 계열 시스템에는 ssh가 기본적으로 설치되어 있음</li><li>설치: <code>$ sudo apt-get install openssh-server openssh-client</code><ul><li>확인: <code>$ sudo ps aux | grep ssh</code></li></ul></li><li>접속: <code>$ ssh [username]@[ip address]</code></li><li>접속종료: <code>exit</code></li></ul><h2 id="4-포트-Port"><a href="#4-포트-Port" class="headerlink" title="4. 포트(Port)"></a>4. 포트(Port)</h2><h3 id="4-1-포트란-무엇인가"><a href="#4-1-포트란-무엇인가" class="headerlink" title="4.1 포트란 무엇인가?"></a>4.1 포트란 무엇인가?</h3><p>client는 port를 통해서 server에 접속한다.</p><ul><li>1024번까지는 well-known port로 default로 고정되어 있음<ul><li>e.g. web server: 80번 포트에 연결되도록 약속되어 있음 (포트번호 생략 가능)<ul><li><code>www.naver.com:80</code> </li></ul></li><li>e.g. ssh server: 22번 포트에 연결되도록 약속되어 있음 (포트번호 생략 가능)<ul><li><code>$ ssh -p 22 [username]@[ip address]</code></li></ul></li></ul></li><li>포트번호 변경<ul><li><code>/etc/ssh/sshd_config</code>(ssh server 설정파일)에서 포트번호를 수정하고 재시작하면 포트번호가 변경됨 </li></ul></li></ul><h3 id="4-2-포트-포워딩-port-forwarding"><a href="#4-2-포트-포워딩-port-forwarding" class="headerlink" title="4.2 포트 포워딩(port forwarding)"></a>4.2 포트 포워딩(port forwarding)</h3><ul><li>라우터(public address)의 특정 port로 접근하면 네트워크에 연결되어 있는 특정 컴퓨터(private address)의 특정 port로 전달하여 접속 가능하게 함</li><li>라우터(공유기)에서 환경설정을 해주어야 함<ul><li>공유기 서버에 접속: default gateway<ul><li><code>$ ip route</code>로 확인 </li><li>mac은 환경설정-네트워크-WiFi-고급-TCP/IP에서 라우터 주소 확인 </li><li>웹브라우저로 해당 ip로 접속</li></ul></li></ul></li><li><code>NAT/라우터 관리-포트 포워드 설정</code> 메뉴에서 설정 가능 (라우터에 따라 다를 수 있음)<ul><li>내부 IP 주소: 서버를 설치할 컴퓨터의 내부 ip </li><li>외부 포트: 사용자가 사용할 포트 번호 (라우터 쪽의 포트) </li><li>내부 포트: 서버를 설치할 컴퓨터의 포트 번호</li><li>규칙이름을 지정하고 추가</li></ul></li><li>사용자는 public address:[외부포트 번호]로 서버 컴퓨터에 접속할 수 있게 됨</li></ul><h2 id="참고자료"><a href="#참고자료" class="headerlink" title="참고자료"></a>참고자료</h2><ul><li><a href="https://opentutorials.org/course/2598" target="_blank" rel="noopener">생활코딩 <code>리눅스</code> 강좌</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> DataScience </category>
          
          <category> Linux 리눅스 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 리눅스 </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>책리뷰. 로버트 기요사키, ⟪부자 아빠 가난한 아빠 1 - 20주년 특별판⟫</title>
      <link href="/2019/02/11/book_20190211/"/>
      <url>/2019/02/11/book_20190211/</url>
      
        <content type="html"><![CDATA[<blockquote><p>“열심히 일해서 돈을 모으고, 대출을 받고, 지나친 세금을 내는<br>보통 사람의 삶의 공식에서 벗어나기 위한 금융지능 키우기”</p></blockquote><p>제목만큼은 모르는 사람이 없을만큼 유명한 책으로, 이 책의 핵심 메세지에 대해서는 많이 들어봤지만 직접 읽어본 적은 없었는데 출간 20주년 특별 기념판이 나왔다고 하여 새로운 마음으로 읽어보게 되었다.</p><p>개인이 ‘돈’과 ‘재테크’에 대해 기본 마인드를 어떻게 다져두어야 하는가를 아주 명확하고 쉽게 전달하는 책이다. 책 전체가 읽기 쉽게 쓰여있는데다가 심지어 (이번 특별 기념판만 이렇게 만들어진 것인지도 모르겠지만) 챕터마다 끝부분에 요약정리를 해주고 있어 기본적인 관련 개념들을 잘 알고 있는 경우라면 요약 부분만 읽어도 될 정도.</p><p>이 책의 가장 핵심적인 내용은 가난한 사람, 중산층, 그리고 부자의 차이를 구분하는 것이다. 각각의 현금흐름 패턴을 이해하는 것이 포인트인데, 가난한 사람의 케이스는 아주 간단하다. 빠듯한 노동 수입으로 들어오는 현금이 바로 지출에서 모두 빠져나가고 나면 남는 부분이 없다. 현금흐름이 손익계산서를 넘어 대차대조표로 접근할 기회조차 없는 것이다. 보다 중요한 것은 중산층과 부자의 차이를 이해하는 것이다. 중산층의 경우엔 보통 자산 대비 부채를 과도하게 가지고 있어 노동을 통해 쓸만한 수입을 얻더라도 들어오는 현금이 부채로 인한 비용과 지출을 통해 많은 부분 빠져나간다. 반면 부자의 경우는 노동에서 얻는 수입이 아니라 자산에서 창출되는 현금흐름이 충분히 커서 나가는 현금흐름을 커버한다. 그들은 자신의 재산에서 부채의 비중을 줄이고 수입을 만들어낼 수 있는 자산에 투자하기 때문이다. 부자들은 수입이 아니라 자산에 초점을 맞춘다. 가난한 자와 중산층은 돈을 위해 일하지만 부자들은 돈이 그들을 위해 일하게 만든다.</p><p>나에게는 결국 개인도 노동자의 관점이 아니라 마치 기업인 것처럼 ‘돈’과 ‘부’를 대해야 부자가 될 수 있다는 메세지를 주는 것으로 느껴졌다. 기업이 사업을 영위하고 재무관리를 하듯 개인도 재테크에 접근하자는 것이다. 노동으로 얻는 수입이 중요한 것이 아니다. 자산에 투자하고 그 자산이 창출하는 수입으로 비용을 충당할 수 있도록 해야 한다.</p><p>20주년 기념 서문에 따르면 처음 이 책을 출간했을 때는 이 책의 주장이 꽤 논란을 일으키고 쉽게 받아들여지지 않았다고 하는데, 그랬다는 사실이 조금 의아하게 느껴질 정도로 이제는 거의 상식처럼 받아들여진다는 점이 흥미롭다. 한편, 요즘은 많은 사람들이 그의 주장을 이해하고 받아들이지만 아직도 이를 직접 실천하고 부자가 되는 사람은 극소수라는 점은 더욱 흥미로운 부분이다.</p><p>🙂 : 읽기 쉽고 메세지가 명확하다. ‘어떻게 돈을 벌고 부자가 될 것인가’에 대해 기본 마인드를 다질 수 있다.</p><p>😞 : 2019년에 읽기엔… 약간은 너무 당연한 이야기</p>]]></content>
      
      
      <categories>
          
          <category> Life </category>
          
          <category> 리뷰 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 책리뷰 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>리눅스(Linux) - 사용자와 권한</title>
      <link href="/2019/02/11/linux_006/"/>
      <url>/2019/02/11/linux_006/</url>
      
        <content type="html"><![CDATA[<p>생활코딩 생활코딩 <code>리눅스</code> 강좌 내용을 들으면서 정리하는 노트</p><ul><li>강의 듣기 (같은 강의이니 편한 곳을 선택해서 공부하면 된다!)<ul><li><a href="https://opentutorials.org/course/2598" target="_blank" rel="noopener">리눅스 @생활코딩</a></li><li><a href="https://www.inflearn.com/course/생활코딩-리눅스-강좌" target="_blank" rel="noopener">생활코딩 리눅스 강좌 @인프런</a></li></ul></li></ul><h2 id="1-다중-사용자"><a href="#1-다중-사용자" class="headerlink" title="1. 다중 사용자"></a>1. 다중 사용자</h2><ul><li>유닉스 계열 운영체제는 여러 명이 함께 사용할 수 있는 기능을 가지고 있음</li><li>다중 사용자 시스템이 되면 시스템의 복잡도가 높아짐</li><li><code>$ id</code>: uid(유저아이디), gid(그룹아이디)</li><li><code>$ who</code>: 현재 접속한 사용자 리스트</li></ul><h2 id="2-관리자와-일반-사용자-Superuser-vs-User"><a href="#2-관리자와-일반-사용자-Superuser-vs-User" class="headerlink" title="2. 관리자와 일반 사용자 (Superuser vs. User)"></a>2. 관리자와 일반 사용자 (Superuser vs. User)</h2><ul><li>관리자: superuser(root user)</li><li><code>$ sudo [명령어]</code>: 일시적으로 super user의 권한으로 명령 실행 </li><li>super user 되는 방법<ul><li><code>$ sudo passwd -u root</code>: unlock </li><li><code>$ sudo passwd -l root</code>: lock </li><li><code>$ su -root</code>: superuser 되기<ul><li>root user의 홈디렉토리는 <code>/root</code> (일반사용자의 홈디렉토리는 <code>/home/username</code>) </li></ul></li><li><code># exit</code>: logout</li></ul></li></ul><h2 id="3-사용자의-추가-Add-User"><a href="#3-사용자의-추가-Add-User" class="headerlink" title="3. 사용자의 추가 (Add User)"></a>3. 사용자의 추가 (Add User)</h2><ul><li><code>$ sudo useradd -m username</code>: username으로 사용자 추가<ul><li><code>-m</code>: 홈 디렉토리를 같이 만들어줌 (`/home/username)</li></ul></li><li><code>$ sudo passwd username</code>: username의 password 지정</li><li><code>$ su -username</code>: username으로 접속 </li><li><code>$ sudo usermod -a -G sudo username</code>: (sudo 가능한 유저로 접속해서 실행할 것) username이 sudo 명령을 할 수 있도록 지정 <ul><li>sudo group에 username을 추가하는 것</li></ul></li><li><code>sudo deluser username sudo</code>: username의 sudo 권한을 삭제하기 </li></ul><h2 id="4-권한-Permission"><a href="#4-권한-Permission" class="headerlink" title="4. 권한 (Permission)"></a>4. 권한 (Permission)</h2><ul><li>User가 파일/디렉토리에 대해 읽기/쓰기/실행을 할 수 있는 권한을 지정</li><li><code>ls -l</code>: 파일의 권한, 소유자 등의 정보 확인 가능</li><li>권한: <code>-rw-rw-r--</code>와 같은 형태 (10자리가 아래와 같이 나눠짐)<ul><li>첫번째 자리=type: -(파일) d(디렉토리)</li><li>다음 세자리=owner의 access mode: r(읽기), w(쓰기), x(실행)</li><li>다음 세자리=group의 access mode: r(읽기), w(쓰기), x(실행)</li><li>다음 세자리=other의 access mode: r(읽기), w(쓰기), x(실행)</li></ul></li><li>권한 변경: <code>chmod</code> 명령어 사용<ul><li><code>$ chmod [options] mode file</code> 형태  </li><li><code>$ chmod o-r [filename]</code>: [filename]에 대해 other의 read 권한을 빼기 </li><li><code>$ chmod o+r [filename]</code>: [filename]에 대해 other의 read 권한을 추가하기 </li><li><code>$ chmod o+w [filename]</code>: [filename]에 대해 other의 write 권한을 추가하기  </li><li><code>$ chmod u-r [filename]</code>: [filename]에 대해 user(소유자)의 read 권한을 빼기 </li><li><code>$ chmod u+r [filename]</code>: [filename]에 대해 user(소유자)의 read 권한을 추가하기</li></ul></li><li>실행(execute) 권한<ul><li><code>$ chmod u+x [filename]</code>: user가 해석기 프로그램 없이 [filename]을 바로 실행할 수 있게 함</li></ul></li><li>directory에 대한 권한 <ul><li>read 권한: 해당 디렉토리 안의 파일/디렉토리를 볼 수 있는가</li><li>write 권한: 해당 디렉토리 안에 파일/디렉토리를 생성/삭제/변경할 수 있는가</li><li>execute 권한: 해당 디렉토리에 들어갈 수 있는가 (<code>cd</code> 명령)</li><li><code>$ chmod -R o+w [dirname]</code>: [dirname] 안의 모든 디렉토리에 대해 재귀적으로 other의 write 권한을 추가하기   </li></ul></li><li><code>chmod</code> octal modes  <ul><li>e.g. <code>$ chmod 111 [filename]</code>: 모든 사용자가 실행만 가능하게 변경</li></ul></li></ul><table><thead><tr><th>num</th><th>Permission</th><th>rwx</th></tr></thead><tbody><tr><td>7</td><td>read, write and execute</td><td>rwx</td></tr><tr><td>6</td><td>read and write</td><td>rw-</td></tr><tr><td>5</td><td>read and execute</td><td>r-x</td></tr><tr><td>4</td><td>read only</td><td>r--</td></tr><tr><td>3</td><td>write and execute</td><td>-wx</td></tr><tr><td>2</td><td>write only</td><td>-w-</td></tr><tr><td>1</td><td>execute only</td><td>--x</td></tr><tr><td>0</td><td>none</td><td>---</td></tr></tbody></table><h2 id="5-그룹-Group"><a href="#5-그룹-Group" class="headerlink" title="5. 그룹 (Group)"></a>5. 그룹 (Group)</h2><p>특정한 사용자 그룹에 대해서 파일/디렉토리에 대한 권한을 지정할 수 있음</p><ul><li><code>$ useradd -G [group_name] [username]</code>: group에 사용자를 생성해서 추가</li><li><code>$ sudo groupadd [group_name]</code>: 그룹 생성 </li><li><code>/etc/group</code>파일에 해당 그룹이 추가되었는지 확인</li><li><code>$ sudo usermod -a -G [group_name] [username]</code>: username을 group_name에 추가하기</li><li>shell에 다시 로그인</li><li><code>$ sudo chown [owner_name:group_name] [file or dir]</code>: owner &amp; group 변경 </li><li><code>$ sudo chmod g+w [file or dir]</code>: group에 w 권한 추가</li></ul><h2 id="참고자료"><a href="#참고자료" class="headerlink" title="참고자료"></a>참고자료</h2><ul><li><a href="https://opentutorials.org/course/2598" target="_blank" rel="noopener">생활코딩 <code>리눅스</code> 강좌</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> DataScience </category>
          
          <category> Linux 리눅스 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 리눅스 </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2019-02-09-TIL</title>
      <link href="/2019/02/09/2019-02-09-TIL/"/>
      <url>/2019/02/09/2019-02-09-TIL/</url>
      
        <content type="html"><![CDATA[<h4 id="배운-것-amp-리뷰"><a href="#배운-것-amp-리뷰" class="headerlink" title="배운 것 &amp; 리뷰"></a>배운 것 &amp; 리뷰</h4><ul><li>생활코딩 리눅스 강좌: 프로세스(Process)와 실행(Execute)<ul><li>강의 듣고 따라하고, 정리하고 포스팅까지 완료 </li><li>이제 60% 이상 정도 들은 것 같은데 이고잉님 진짜 너무 잘 설명해주시고 유익하고 강의 너무 좋다 엉엉</li><li>포스팅: <a href="https://hyeshinoh.github.io/2019/02/09/linux_005/">리눅스(Linux) - 프로세스(Process)와 실행(Execute)</a></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>리눅스(Linux) - 프로세스(Process)와 실행(Execute)</title>
      <link href="/2019/02/09/linux_005/"/>
      <url>/2019/02/09/linux_005/</url>
      
        <content type="html"><![CDATA[<p>생활코딩 생활코딩 <code>리눅스</code> 강좌 내용을 들으면서 정리하는 노트</p><ul><li>강의 듣기 (같은 강의이니 편한 곳을 선택해서 공부하면 된다!)<ul><li><a href="https://opentutorials.org/course/2598" target="_blank" rel="noopener">리눅스 @생활코딩</a></li><li><a href="https://www.inflearn.com/course/생활코딩-리눅스-강좌" target="_blank" rel="noopener">생활코딩 리눅스 강좌 @인프런</a></li></ul></li></ul><h2 id="1-프로세스"><a href="#1-프로세스" class="headerlink" title="1. 프로세스"></a>1. 프로세스</h2><ul><li>컴퓨터의 하드웨어<ul><li>Storage: HDD, SSD 등의 저장장치<ul><li>가격↓ 용량↑ 속도↓</li></ul></li><li>Memory: RAM<ul><li>가격↑ 용량↓ 속도↑ </li></ul></li><li>Processor: CPU</li></ul></li><li>컴퓨터의 아키텍처<ul><li>Storage에 설치되어 있는 프로그램을 읽어서 memory에 적재해두고 이걸 CPU가 읽어서 동작하고 데이터를 처리함</li></ul></li><li>Program vs. Process<ul><li>Program: 파일로 storage에 저장되어 있는 명령어</li><li>Process: 실행되어 메모리에 적재되어서 CPU에 의해 처리되는 상태에 있는 프로그램</li></ul></li></ul><h2 id="2-프로세스-모니터링"><a href="#2-프로세스-모니터링" class="headerlink" title="2. 프로세스 모니터링"></a>2. 프로세스 모니터링</h2><ul><li><code>ps</code>: process list<ul><li><code>$ ps aux</code>: 백그라운드에서 돌아가는 모든 프로그램 리스트</li><li><code>$ ps aux | grep apache</code>: apache가 들어간 프로세스만 출력</li><li><code>PID</code>: 프로세스 ID <ul><li><code>sudo kill [PID]</code> 해당 프로세스를 kill</li></ul></li></ul></li><li><code>top</code> &amp; <code>htop</code><ul><li><code>htop</code>: <code>top</code>과 비슷하지만 더 많은 기능 제공<ul><li>설치<ul><li>Linux: <code>$ sudo apt-get install htop</code></li><li>Mac: <code>$ brew install htop</code>  </li></ul></li></ul></li><li>컬럼명을 클릭하면 해당 컬럼 기준으로 정렬 가능 </li><li>Load average: CPU 부하 정도 파악 가능</li><li><code>htop</code> 실행화면 <br>    <img src="/2019/02/09/linux_005/htop.png"></li></ul></li></ul><h2 id="3-백그라운드-실행"><a href="#3-백그라운드-실행" class="headerlink" title="3. 백그라운드 실행"></a>3. 백그라운드 실행</h2><ul><li><code>ctrl</code> + <code>z</code>: 프로그램을 끄지 않고 background로 실행됨</li><li><code>fg</code>: 해당 프로그램이 foureground로 돌아감</li><li><code>jobs</code>: background에 실행중인 프로그램을 보여줌</li><li><code>kill %[프로그램 번호]</code>: 정상 종료<ul><li><code>kill -9 %[프로그램 번호]</code>: 강제 kill </li></ul></li><li>명령어 끝에 <code>&amp;</code>를 붙이면 즉각 background로 실행</li></ul><h2 id="4-항상-실행-daemon-service"><a href="#4-항상-실행-daemon-service" class="headerlink" title="4. 항상 실행 (daemon, service)"></a>4. 항상 실행 (daemon, service)</h2><ul><li>데몬의 개념<ul><li>마치 가전 중 항상 켜져있는 냉장고나 인터넷 공유기처럼 항상 실행되는 프로그램</li><li>server 프로그램의 경우가 해당함 </li></ul></li><li>service와 자동실행<ul><li><code>/etc/init.d</code>: 데몬 프로그램이 위치하는 디렉토리</li><li>이 경로에 위치한 데몬 프로그램을 실행하기/끄기<ul><li><code>$ sudo service [프로그램명] start</code></li><li><code>$ sudo service [프로그램명] stop</code>  </li></ul></li><li>자동실행: 아래 경로에 <code>S**</code>으로 시작되는 링크 생성 → 자동실행 <br>(S는 서비스시작, K는 서비스중단, 번호는 우선순위)    <ul><li><code>/etc/rc3.d</code> (CLI 운영체제)</li><li><code>/etc/rc5.d</code> (GUI 운영체제) </li></ul></li></ul></li></ul><h2 id="5-정기적으로-실행-cron"><a href="#5-정기적으로-실행-cron" class="headerlink" title="5. 정기적으로 실행 (cron)"></a>5. 정기적으로 실행 (cron)</h2><ul><li>cron: 정기적으로 명령을 실행시켜주는 도구</li><li><code>$ crontab -e</code>: 실행하고자하는 작업 정의<ul><li>입력방법: format - <code>* * * * * * command</code><br><img src="/2019/02/09/linux_005/cron_expression.png"> <br>(이미지 출처: <a href="https://i.stack.imgur.com/A1Z5h.png" target="_blank" rel="noopener">https://i.stack.imgur.com/A1Z5h.png</a>)</li></ul></li><li><code>$ crontab -l</code>: cron 작업 리스트</li></ul><h2 id="6-쉘을-시작할-때-실행-startup-script"><a href="#6-쉘을-시작할-때-실행-startup-script" class="headerlink" title="6. 쉘을 시작할 때 실행 (startup script)"></a>6. 쉘을 시작할 때 실행 (startup script)</h2><ul><li>쉘이 시작할 때 명령을 실행하도록 해서 쉘을 커스터마이징할 수 있다.</li><li>유용한 예시: <code>alias l=&#39;ls -al&#39;</code> (alias를 사용해서 자주 사용하는 명령을 간편하게 실행)</li><li>방법: bash의 경우라면 home 디렉토리(<code>cd ~</code>)의 <code>.bashrc</code> script에 코드 추가</li></ul><h2 id="참고자료"><a href="#참고자료" class="headerlink" title="참고자료"></a>참고자료</h2><ul><li><a href="https://opentutorials.org/course/2598" target="_blank" rel="noopener">생활코딩 <code>리눅스</code> 강좌</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> DataScience </category>
          
          <category> Linux 리눅스 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 리눅스 </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2019-02-07-TIL</title>
      <link href="/2019/02/07/2019-02-07-TIL/"/>
      <url>/2019/02/07/2019-02-07-TIL/</url>
      
        <content type="html"><![CDATA[<h4 id="배운-것-amp-리뷰"><a href="#배운-것-amp-리뷰" class="headerlink" title="배운 것 &amp; 리뷰"></a>배운 것 &amp; 리뷰</h4><ul><li>생활코딩 리눅스 강좌: 디렉토리의 구조 &amp; 파일을 찾는 법<ul><li>강의 듣고 따라하고, 정리하고 포스팅까지 완료 </li><li>포스팅: <a href="https://hyeshinoh.github.io/2019/02/07/linux_004/">리눅스(Linux) - 디렉토리의 구조 &amp; 파일을 찾는 법</a></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>리눅스(Linux) - 디렉토리의 구조 &amp; 파일을 찾는 법</title>
      <link href="/2019/02/07/linux_004/"/>
      <url>/2019/02/07/linux_004/</url>
      
        <content type="html"><![CDATA[<p>생활코딩 생활코딩 <code>리눅스</code> 강좌 내용을 들으면서 정리하는 노트</p><ul><li>강의 듣기 (같은 강의이니 편한 곳을 선택해서 공부하면 된다!)<ul><li><a href="https://opentutorials.org/course/2598" target="_blank" rel="noopener">리눅스 @생활코딩</a></li><li><a href="https://www.inflearn.com/course/생활코딩-리눅스-강좌" target="_blank" rel="noopener">생활코딩 리눅스 강좌 @인프런</a></li></ul></li></ul><p>아. 리눅스의 디렉토리 구조! 맥을 쓰면서도 궁금했던 부분인데 이번 생활코딩 강의를 통해 궁금점이 상당 부분 해소되었다!</p><h2 id="1-디렉토리의-구조"><a href="#1-디렉토리의-구조" class="headerlink" title="1. 디렉토리의 구조"></a>1. 디렉토리의 구조</h2><ul><li>unix 계열은 디렉토리의 용도에 따라서 이름이 정해져 있음</li><li>디렉토리의 구조<br>  <img src="https://www.2daygeek.com/wp-content/uploads/2016/10/linux-file-system-structure-final-4.png" alt><br>  (이미지 출처: <a href="https://www.2daygeek.com/linux-directory-structure-file-system-hierarchy/" target="_blank" rel="noopener">https://www.2daygeek.com/linux-directory-structure-file-system-hierarchy/</a>)</li></ul><h2 id="주요-디렉토리"><a href="#주요-디렉토리" class="headerlink" title="주요 디렉토리"></a>주요 디렉토리</h2><h3 id="1-1-The-root-directory"><a href="#1-1-The-root-directory" class="headerlink" title="1.1 /: The root directory"></a>1.1 <code>/</code>: The root directory</h3><ul><li>최상위 디렉토리</li></ul><h3 id="1-2-bin-User-Binaries"><a href="#1-2-bin-User-Binaries" class="headerlink" title="1.2 /bin: User Binaries"></a>1.2 <code>/bin</code>: User Binaries</h3><ul><li>사용자들이 사용하는 명령(프로그램)들이 위치함</li></ul><h3 id="1-3-sbin-System-Binaries"><a href="#1-3-sbin-System-Binaries" class="headerlink" title="1.3 /sbin: System Binaries"></a>1.3 <code>/sbin</code>: System Binaries</h3><ul><li>시스템 관리자, root user가 사용하는 명령(프로그램)들이 위치함</li></ul><h3 id="1-4-etc-Configuration-Files"><a href="#1-4-etc-Configuration-Files" class="headerlink" title="1.4 /etc: Configuration Files"></a>1.4 <code>/etc</code>: Configuration Files</h3><ul><li>프로그램의 설정 파일들이 위치함</li></ul><h3 id="1-5-var-Variable-Files"><a href="#1-5-var-Variable-Files" class="headerlink" title="1.5 /var: Variable Files"></a>1.5 <code>/var</code>: Variable Files</h3><ul><li>내용이 바뀔 수 있는 파일들이 위치함</li><li>system log files, packages and database files 등</li></ul><h3 id="1-6-tmp-Temporary-Files"><a href="#1-6-tmp-Temporary-Files" class="headerlink" title="1.6 /tmp: Temporary Files"></a>1.6 <code>/tmp</code>: Temporary Files</h3><ul><li>임시 파일들이 위치함</li><li>시스템이 리부트되면 파일이 삭제됨</li></ul><h3 id="1-7-home-Home-Directory"><a href="#1-7-home-Home-Directory" class="headerlink" title="1.7 /home: Home Directory"></a>1.7 <code>/home</code>: Home Directory</h3><ul><li>사용자들의 파일이 위치한 디렉토리</li><li><code>$ cd ~</code>: 어느 위치에서든 <code>$ cd /home/[사용자이름]</code>와 같은 결과</li></ul><h3 id="1-8-usr-User-Programs"><a href="#1-8-usr-User-Programs" class="headerlink" title="1.8 /usr: User Programs"></a>1.8 <code>/usr</code>: User Programs</h3><ul><li>사용자가 설치하는 프로그램 관련 파일이 위치한 디렉토리</li><li>컴퓨터 발전 과정 상의 이유로 <code>/bin</code>과 분리되어 있는 측면이 있음</li><li><code>/usr/bin</code></li><li><code>/usr/sbin</code></li><li><code>/usr/lib</code></li><li><code>/usr/local</code></li></ul><h2 id="2-파일을-찾는-법"><a href="#2-파일을-찾는-법" class="headerlink" title="2. 파일을 찾는 법"></a>2. 파일을 찾는 법</h2><h3 id="2-1-locate-amp-find"><a href="#2-1-locate-amp-find" class="headerlink" title="2.1 locate &amp; find"></a>2.1 <code>locate</code> &amp; <code>find</code></h3><ul><li><code>$ locate [파일명]</code>: mlocate라는 db를 검색하기 때문에 빠름<ul><li><code>$ sudo updatedb</code>: 자동으로 정기적으로(매일) 실행되고 있음</li></ul></li><li><code>$ find</code>: 직접 디렉토리를 검색 (기능이 다양)     <ul><li><code>$ find . -name *.log</code>: 현재 디렉토리하의 ‘*.log’ 검색</li><li><code>$ find . -type f -name *.log</code>: 현재 디렉토리 하의 ‘파일’인 ‘*.log’ 검색  </li><li><code>$ find . -type f -name *.log -exec rm -f {} \;</code>: ‘파일’인 ‘*.log’를 찾아서 삭제 </li></ul></li></ul><h3 id="2-2-whereis-amp-PATH"><a href="#2-2-whereis-amp-PATH" class="headerlink" title="2.2 whereis &amp; $PATH"></a>2.2 <code>whereis</code> &amp; <code>$PATH</code></h3><ul><li><code>whereis</code>: 실행파일을 찾아주는 명령어 (locates the binary, source and manual files)</li><li><code>$PATH</code> (환경변수) <ul><li>명령어 실행시 <code>$PATH</code>에 담긴 디렉토리를 검색해서 명령어가 그 안에 있다면 실행됨 </li></ul></li></ul><h2 id="참고자료"><a href="#참고자료" class="headerlink" title="참고자료"></a>참고자료</h2><ul><li><a href="https://opentutorials.org/course/2598" target="_blank" rel="noopener">생활코딩 <code>리눅스</code> 강좌</a></li><li><a href="https://www.2daygeek.com/linux-directory-structure-file-system-hierarchy/" target="_blank" rel="noopener">https://www.2daygeek.com/linux-directory-structure-file-system-hierarchy/</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> DataScience </category>
          
          <category> Linux 리눅스 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 리눅스 </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2019-02-05-TIL</title>
      <link href="/2019/02/05/2019-02-05-TIL/"/>
      <url>/2019/02/05/2019-02-05-TIL/</url>
      
        <content type="html"><![CDATA[<h4 id="배운-것-amp-리뷰"><a href="#배운-것-amp-리뷰" class="headerlink" title="배운 것 &amp; 리뷰"></a>배운 것 &amp; 리뷰</h4><ul><li>생활코딩 리눅스 강좌: 쉘(Shell)과 쉘 스크립트(Shell script)<ul><li>강의 듣고 따라하고, 정리하고 포스팅까지 완료 </li><li>포스팅: <a href="https://hyeshinoh.github.io/2019/02/05/linux_003/">리눅스(Linux) - 쉘(Shell)과 쉘 스크립트(Shell script)</a></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>리눅스(Linux) - 쉘(Shell)과 쉘 스크립트(Shell script)</title>
      <link href="/2019/02/05/linux_003/"/>
      <url>/2019/02/05/linux_003/</url>
      
        <content type="html"><![CDATA[<p>생활코딩 생활코딩 <code>리눅스</code> 강좌 내용을 들으면서 정리하는 노트</p><ul><li>강의 듣기 (같은 강의이니 편한 곳을 선택해서 공부하면 된다!)<ul><li><a href="https://opentutorials.org/course/2598" target="_blank" rel="noopener">리눅스 @생활코딩</a></li><li><a href="https://www.inflearn.com/course/생활코딩-리눅스-강좌" target="_blank" rel="noopener">생활코딩 리눅스 강좌 @인프런</a></li></ul></li></ul><h2 id="1-쉘과-커널-Shell-amp-Kernel"><a href="#1-쉘과-커널-Shell-amp-Kernel" class="headerlink" title="1. 쉘과 커널 (Shell &amp; Kernel)"></a>1. 쉘과 커널 (Shell &amp; Kernel)</h2><h3 id="1-1-리눅스의-구조"><a href="#1-1-리눅스의-구조" class="headerlink" title="1.1 리눅스의 구조"></a>1.1 리눅스의 구조</h3><p><img src="https://oradba2015.files.wordpress.com/2018/07/kernel_shell.jpg" alt="리눅스의 구조"><br>(이미지 출처: <a href="https://getstart.blog/linux-tutorial/introduction/" target="_blank" rel="noopener">https://getstart.blog/linux-tutorial/introduction/</a>)</p><ul><li>kernel: hardware를 직접적으로 제어하는 운영체제의 가장 중심적인 부분</li><li>shell: 사용자의 명령을 해석해서 kernel에게 전달하는 역할</li><li>kernel과 shell을 분리하면 다양한 shell이 만들어질 수 있기 때문에 사용자의 선택의 폭이 넓어짐</li></ul><h3 id="1-2-bash-vs-zsh"><a href="#1-2-bash-vs-zsh" class="headerlink" title="1.2 bash vs. zsh"></a>1.2 bash vs. zsh</h3><ul><li><code>$ echo $0</code>: 현재 shell 확인 (bash or zsh)</li><li>기능의 차이가 약간 존재함 (zsh의 편의성이 더 뛰어남)</li><li>선호하는 shell을 설치해서 자신에게 최적화하여 사용 가능<ul><li>각각의 user마다 선호하는 다른 shell을 사용 가능</li></ul></li></ul><h2 id="2-쉘-스크립트-Shell-script"><a href="#2-쉘-스크립트-Shell-script" class="headerlink" title="2. 쉘 스크립트(Shell script)"></a>2. 쉘 스크립트(Shell script)</h2><ul><li>여러 개의 명령을 순차적으로 실행함으로써 하나의 업무가 이루어질 때 그 명령들을 script로 작성 → 저장 &amp; 재사용 가능</li><li>script 작성<ul><li>첫 줄에 <code>#!/bin/bash</code>: 이 밑에 작성되는 코드가 bin/bash를 통해 해석되어야한다는 사실을 명시</li></ul></li><li><p>script 작성 예시</p><ul><li><p><code>backup</code> 파일 생성 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="keyword">if</span> ! [ -d bak ]; <span class="keyword">then</span></span><br><span class="line">        mkdir bak</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">cp *.<span class="built_in">log</span> bak</span><br></pre></td></tr></table></figure></li><li><p>내용: 현재 디렉토리에 bak 디렉토리가 존재하지 않는다면 bak 디렉토리를 만들고, <code>.log</code>로 끝나는 파일을 bak 디렉토리로 복사한다.</p></li></ul></li><li>script 실행<ul><li>파일권한 변경: <code>$ chmod +x backup</code> (실행가능하게 변경)</li><li>실행: <code>./backup</code></li></ul></li></ul><h2 id="참고자료"><a href="#참고자료" class="headerlink" title="참고자료"></a>참고자료</h2><ul><li><a href="https://opentutorials.org/course/2598" target="_blank" rel="noopener">생활코딩 <code>리눅스</code> 강좌</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> DataScience </category>
          
          <category> Linux 리눅스 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 리눅스 </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2019-02-03-TIL</title>
      <link href="/2019/02/03/2019-02-03-TIL/"/>
      <url>/2019/02/03/2019-02-03-TIL/</url>
      
        <content type="html"><![CDATA[<h4 id="배운-것-amp-리뷰"><a href="#배운-것-amp-리뷰" class="headerlink" title="배운 것 &amp; 리뷰"></a>배운 것 &amp; 리뷰</h4><ul><li>생활코딩 리눅스 강좌: IO Redirection<ul><li>강의 듣고 따라하고, 정리하고 포스팅까지 완료 </li><li>포스팅: <a href="https://hyeshinoh.github.io/2019/02/03/linux_002/">리눅스(Linux) - IO Redirection</a></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>리눅스(Linux) - IO Redirection</title>
      <link href="/2019/02/03/linux_002/"/>
      <url>/2019/02/03/linux_002/</url>
      
        <content type="html"><![CDATA[<p>생활코딩 생활코딩 <code>리눅스</code> 강좌 내용을 들으면서 정리하는 노트</p><ul><li>강의 듣기 (같은 강의이니 편한 곳을 선택해서 공부하면 된다!)<ul><li><a href="https://opentutorials.org/course/2598" target="_blank" rel="noopener">리눅스 @생활코딩</a></li><li><a href="https://www.inflearn.com/course/생활코딩-리눅스-강좌" target="_blank" rel="noopener">생활코딩 리눅스 강좌 @인프런</a></li></ul></li></ul><h2 id="0-Process의-input과-output"><a href="#0-Process의-input과-output" class="headerlink" title="0. Process의 input과 output"></a>0. Process의 input과 output</h2><p>UNIX Program에서 process는 기본적으로 input과 output을 가지고 있음</p><ul><li>Means of input<ul><li>program(command line) arguments [control information]<ul><li>e.g. <code>ls -al</code>에서 <code>-al</code></li></ul></li><li>environment variables [state information]</li><li>standard input [data]</li></ul></li><li>Means of output<ul><li>Return status code [control information]</li><li>Standard output [data]</li><li>Standard error [error messages]</li></ul></li></ul><p>IO Redirection이란 입력(Input)과 출력(Output)의 방향을 바꾸는 것</p><h2 id="1-Output-redirection"><a href="#1-Output-redirection" class="headerlink" title="1. Output redirection"></a>1. Output redirection</h2><h3 id="1-1-Standard-output-redirection"><a href="#1-1-Standard-output-redirection" class="headerlink" title="1.1 Standard output redirection"></a>1.1 Standard output redirection</h3><ul><li>Standard output은 기본적으로 결과가 모니터에 출력됨</li><li><code>&gt;</code>(<code>1&gt;</code>이 생략된 것)를 사용해 output이 파일에 저장되도록 redirection</li><li>e.g. <code>$ ls -l &gt; result.txt</code><ul><li><code>ls -l</code>의 출력 결과를 result.txt 파일에 저장함</li></ul></li><li><code>&gt;&gt;</code>: output을 파일에 덮어쓰기 하지 않고 append</li><li><code>&gt; /dev/null</code>: output이 화면에도 출력되지 않고 파일에도 출력하지 않음</li></ul><h3 id="1-2-Standard-error-redirection"><a href="#1-2-Standard-error-redirection" class="headerlink" title="1.2 Standard error redirection"></a>1.2 Standard error redirection</h3><ul><li>Standard error: 프로그램에 오류가 있을 때 별도의 출력으로 처리됨      </li><li><code>2&gt;</code>를 사용해 redirection (standard output과의 차이에 유의)</li><li>e.g. <code>$ rm result.txt 2&gt; error.log</code><ul><li><code>$ rm result.txt</code>의 결과 오류가 발생하면 에러 메시지를 error.log 파일에 저장함 </li></ul></li></ul><h2 id="2-Input-redirection"><a href="#2-Input-redirection" class="headerlink" title="2. Input redirection"></a>2. Input redirection</h2><p>input redirection은 output redirection처럼 자주 쓰이는 것은 아님</p><h3 id="2-1-Standard-input-redirection"><a href="#2-1-Standard-input-redirection" class="headerlink" title="2.1 Standard input redirection"></a>2.1 Standard input redirection</h3><ul><li><code>&lt;</code>을 사용해서 standard input을 redirection</li><li>e.g. <code>$ cat &lt; result.txt</code>를 사용하면 redirection<ul><li><code>cat</code>은 standard input으로 키보드 입력값을 받음 </li><li>cf: <code>$ cat result.txt</code>는 command line argument로 입력한 것</li></ul></li><li><code>&lt;&lt;</code>: 여러 개의 input을 redirection </li><li>e.g. <code>$ mail hyeshinoh@gmail.com &lt;&lt; aaa</code><ul><li><code>aaa</code>를 입력할 때까지의 모든 입력이 email로 전송됨</li></ul></li></ul><h2 id="3-Input-redirection과-output-redirection-함께-사용하기"><a href="#3-Input-redirection과-output-redirection-함께-사용하기" class="headerlink" title="3. Input redirection과 output redirection 함께 사용하기"></a>3. Input redirection과 output redirection 함께 사용하기</h2><ul><li>표준입력에 대한 redirection과 표준출력에 대한 redirection을 연결해서 함께 사용 가능함</li><li>e.g. <code>$ head -n1 &lt; result.txt &gt; one.txt</code><ul><li>result.txt의 첫 1줄이 one.txt에 저장됨</li></ul></li></ul><h2 id="참고자료"><a href="#참고자료" class="headerlink" title="참고자료"></a>참고자료</h2><ul><li><a href="https://opentutorials.org/course/2598" target="_blank" rel="noopener">생활코딩 <code>리눅스</code> 강좌</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> DataScience </category>
          
          <category> Linux 리눅스 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 리눅스 </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2019-02-01-TIL</title>
      <link href="/2019/02/01/2019-02-01-TIL/"/>
      <url>/2019/02/01/2019-02-01-TIL/</url>
      
        <content type="html"><![CDATA[<h4 id="배운-것-amp-리뷰"><a href="#배운-것-amp-리뷰" class="headerlink" title="배운 것 &amp; 리뷰"></a>배운 것 &amp; 리뷰</h4><ul><li>생활코딩 리눅스 강좌: 리눅스 기초<ul><li>이고잉님은 정말 쉽게 설명을 잘해주신다!!</li><li>기초 파트 들으면서 실습, 정리하고 포스팅까지 완료 <ul><li>포스팅: <a href="https://hyeshinoh.github.io/2019/02/01/linux_001/">리눅스(Linux) - 기초</a></li></ul></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>리눅스(Linux) - 기초</title>
      <link href="/2019/02/01/linux_001/"/>
      <url>/2019/02/01/linux_001/</url>
      
        <content type="html"><![CDATA[<p>생활코딩 생활코딩 <code>리눅스</code> 강좌 내용을 들으면서 정리하는 노트</p><ul><li>강의 듣기 (같은 강의이니 편한 곳을 선택해서 공부하면 된다!)<ul><li><a href="https://opentutorials.org/course/2598" target="_blank" rel="noopener">리눅스 @생활코딩</a></li><li><a href="https://www.inflearn.com/course/생활코딩-리눅스-강좌" target="_blank" rel="noopener">생활코딩 리눅스 강좌 @인프런</a></li></ul></li></ul><h2 id="1-디렉토리와-파일"><a href="#1-디렉토리와-파일" class="headerlink" title="1. 디렉토리와 파일"></a>1. 디렉토리와 파일</h2><p>기본 명령어</p><ul><li><code>pwd</code>: 현재 위치하고 있는 디렉토리를 알려주는 명령어</li><li><code>ls</code>: 현재 디렉토리의 파일 목록을 출력하는 명령어<ul><li><code>ls -a</code>: 모든 파일 보기 옵션(<code>.</code>으로 시작하는 숨김 파일까지)</li><li><code>ls -l</code>: 자세히 보기 옵션</li></ul></li><li><code>mkdir</code>: 디렉토리를 생성 (<code>$ mkdir 디렉토리명</code>)<ul><li><code>$ mkdir -p dir1/dir2/dir3</code>: 필요하면 부모 디렉토리도 생성함 </li></ul></li><li><code>touch</code>: 빈 파일 생성 (<code>$ touch 파일명</code>)</li><li><code>cd</code>: change directory. 디렉토리 이동 (<code>$ cd 디렉토리명</code>)<ul><li>절대경로:<ul><li><code>cd /</code>: root(최상위) directory      </li></ul></li><li>상대경로: 현재 위치한 디렉토리에 따라 다른 디렉토리 위치를 표현<ul><li><code>cd .</code>: 현재 디렉토리</li><li><code>cd ..</code>: 부모 디렉토리     </li></ul></li></ul></li><li><code>rm</code>: remove. 파일/디렉토리 삭제<ul><li><code>$ rm 파일명</code>: 파일 삭제</li><li><code>$ rm -r directory명</code>: 디렉토리 삭제 <ul><li><code>-r</code>: recursively (재귀적으로). 디렉토리 안의 디렉토리(안의 디렉토리.. 그리고..)까지 지우는 것  </li></ul></li></ul></li><li><code>cp</code>: 파일/디렉토리 복사</li><li><code>mv</code>: 파일/디렉토리 이동</li></ul><h2 id="2-–help와-man"><a href="#2-–help와-man" class="headerlink" title="2. –help와 man"></a>2. –help와 man</h2><ul><li><code>명령어 --help</code>: 명령어의 도움말 보기</li><li><code>man 명령어</code>: 명령어의 manual 보기 (별도의 상세한 문서로 들어감)<ul><li>문서 내 검색: <code>/검색어</code> → <code>n</code>(다음 위치로 이동) </li></ul></li></ul><h2 id="3-sudo"><a href="#3-sudo" class="headerlink" title="3. sudo"></a>3. sudo</h2><ul><li><code>sudo</code>: substitute user do (다른 사용자의 권한으로 명령을 실행해라)</li><li>운영체제의 사용자마다 permission이 다르게 설정되어 있고, 모든 권한을 가진 superuser(root user)가 있음</li><li>보통은 일반사용자로 사용하다 필요할 경우 임시로 root user의 권한으로 명령을 실행해야하는 때에 <code>sudo</code> 사용</li><li>usage: <code>$ sudo 명령어</code></li></ul><h2 id="4-Package-Manager-패키지-매니저"><a href="#4-Package-Manager-패키지-매니저" class="headerlink" title="4. Package Manager(패키지 매니저)"></a>4. Package Manager(패키지 매니저)</h2><ul><li>패키지 매니저: 운영체제에 기본적으로 설치되어 있지 않은 프로그램을 쉽게 설치할 수 있는 방법</li></ul><h3 id="4-1-apt"><a href="#4-1-apt" class="headerlink" title="4.1 apt"></a>4.1 apt</h3><ul><li><code>$ sudo apt-get update</code>: 최신 상태의 패키지 목록을 다운로드</li><li><code>$ sudo apt-cache search 패키지명</code> : 패키지 검색</li><li><code>$ sudo apt-get install 패키지명</code> : 패키지 설치</li><li><code>$ sudo apt-get upgrade 패키지명</code> : 패키지 업그레이드<ul><li><code>$ sudo apt-get upgrade</code> : 모든 패키지 업그레이드</li></ul></li><li><code>$ sudo apt-get remove 패키지명</code> : 패키지 삭제</li></ul><h3 id="4-2-Homebrew-for-Mac"><a href="#4-2-Homebrew-for-Mac" class="headerlink" title="4.2 Homebrew (for Mac)"></a>4.2 Homebrew (for Mac)</h3><ul><li><code>$ brew update</code>: 최신 상태의 패키지 목록을 다운로드</li><li><code>$ brew help</code>: homebrew 기본적 사용법 보기</li><li><code>$ brew search 패키지명</code>: 패키지 검색</li><li><code>$ brew install 패키지명</code>: 패키지 설치</li><li><code>$ brew list</code>: homebrew로 설치한 패키지 리스트 확인</li><li><code>$ brew uninstall 패키지명</code>: 패키지 삭제</li><li><code>$ brew upgrade 패키지명</code>: 패키지 업그레이드   <ul><li><code>$ brew upgrade</code>: 모든 패키지 업그레이드    </li></ul></li></ul><h2 id="5-파일-다운로드-wget-git"><a href="#5-파일-다운로드-wget-git" class="headerlink" title="5. 파일 다운로드 (wget, git)"></a>5. 파일 다운로드 (wget, git)</h2><h3 id="5-1-wget-이용"><a href="#5-1-wget-이용" class="headerlink" title="5.1 wget 이용"></a>5.1 wget 이용</h3><ul><li>url로 파일을 다운로드할 수 있음</li><li><code>$ wget -O [filename] [url]</code>: url에서 다운로드해서 filename 파일로 저장 </li></ul><h3 id="5-2-git-이용"><a href="#5-2-git-이용" class="headerlink" title="5.2 git 이용"></a>5.2 git 이용</h3><ul><li>github에 있는 소스코드를 다운로드 받는 방법</li><li>git 설치: <code>$ apt-get install git</code></li><li><code>$ git clone [소스코드 url] [directory]</code>: 오픈소스 프로젝트를 directory에 복제</li></ul><h2 id="참고자료"><a href="#참고자료" class="headerlink" title="참고자료"></a>참고자료</h2><ul><li><a href="https://opentutorials.org/course/2598" target="_blank" rel="noopener">생활코딩 <code>리눅스</code> 강좌</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> DataScience </category>
          
          <category> Linux 리눅스 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 리눅스 </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2019-01-19-TIL</title>
      <link href="/2019/01/19/2019-01-19-TIL/"/>
      <url>/2019/01/19/2019-01-19-TIL/</url>
      
        <content type="html"><![CDATA[<p>1/15 화요일 ~ 1/19 토요일 Today I learned</p><a id="more"></a> <h4 id="배운-것-amp-리뷰"><a href="#배운-것-amp-리뷰" class="headerlink" title="배운 것 &amp; 리뷰"></a>배운 것 &amp; 리뷰</h4><ul><li>SQL<ul><li>회사에서 오랜만에 sql을 사용하게 되었다. 데사스에서도 살짝만 배웠다보니 몇개월만에 만난 sql은 너무나 어색하다. workbench 자체가 거의 처음보는 낯선 느낌이고 ㅋㅋ 쿼리를 쓰려면 하나씩 찾아가면서 쳐야함 ㅎㅎ</li></ul></li><li>R<ul><li>회사에서 데이터 정제와 학습에 쓰는 소스코드가 아직 R로 남아있는 것이 많다. 작년 1월에 들었던 패캠 R 강의를 약간 복습하면서 R에도 다시 발을 들여놓는 중. 근데 python을 배우고나서 다시 R을 써보니 확실히 속도에서 차이가 나는 느낌이다.</li></ul></li><li>Web<ul><li>코딩야학 5기 10일차까지 완강! 별로 어려운 내용은 아니었지만, 웹에 대해 기본적이면서도 아리까리한 개념들을 정말 잘 설명해주었다!! 코딩야학 기간 내에 수료해서 꽤나 뿌듯하다.</li></ul></li><li>머신러닝 <ul><li>19(토): [LaTex로 익히는 한페이지 머신러닝 세미나] 참석<ul><li>개괄적으로 머신러닝의 아이디어를 설명해주는 부분과 LaTex 설명이 유용했다.</li><li>토요일 9시반-5시반이라는 스케줄은 상당히 힘들었다.</li><li>중간에 N-NP 문제 등 컴퓨터 사이언스로 깊게 들어가는 내용은 너무 어려워서 정신을 살짝 놓아버렸던 것 같다 ㅋㅋ </li></ul></li></ul></li></ul><h4 id="다음-배울-것"><a href="#다음-배울-것" class="headerlink" title="다음 배울 것"></a>다음 배울 것</h4><ul><li>파이썬 os 복습</li><li>파이썬 정규표현식 복습</li><li>R 기본 문법</li><li>SQL 기본 문법 복습</li><li>확률 통계 복습</li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2019-01-14-TIL</title>
      <link href="/2019/01/14/2019-01-14-TIL/"/>
      <url>/2019/01/14/2019-01-14-TIL/</url>
      
        <content type="html"><![CDATA[<p>1/14 월요일 Today I learned</p><h4 id="배운-것-amp-리뷰"><a href="#배운-것-amp-리뷰" class="headerlink" title="배운 것 &amp; 리뷰"></a>배운 것 &amp; 리뷰</h4><ul><li>패스트캠퍼스 파이썬 데이터 전처리 Level Up CAMP 4주차 수업 <ul><li>변수 치우침과 이상치 문제</li><li>클래스 불균형 문제</li></ul></li></ul><a id="more"></a> <ul><li>일하다 pandas 사용시 주의할 점을 알게 됨<ul><li>데이터프레임의 컬럼에서 몇자리수만 필터링으로 찾아내 값을 수정하려는데 기존 코드가 아래처럼 되어 있는 것을 발견했다.  <ul><li><code>df[&#39;컬럼명&#39;].str[:3][...] = ...</code></li></ul></li><li>이렇게 쓰면 <code>df[&#39;컬럼명&#39;]</code>은 수정되지 않는다. 다음과 같은 식으로 바꿔주어야 한다. <ul><li><code>df[&#39;컬럼명&#39;][df[&#39;컬럼명&#39;].str[:3]=...] = ...</code> </li></ul></li></ul></li></ul><h4 id="다음-배울-것"><a href="#다음-배울-것" class="headerlink" title="다음 배울 것"></a>다음 배울 것</h4><ul><li>코딩야학 8일차</li><li>파이썬 os</li><li>파이썬 정규표현식</li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2019-01-13-TIL</title>
      <link href="/2019/01/13/2019-01-13-TIL/"/>
      <url>/2019/01/13/2019-01-13-TIL/</url>
      
        <content type="html"><![CDATA[<p>1/13 일요일</p><h4 id="배운-것-amp-리뷰"><a href="#배운-것-amp-리뷰" class="headerlink" title="배운 것 &amp; 리뷰"></a>배운 것 &amp; 리뷰</h4><ul><li>정말 오랜만에 일욜 오전 스터디 참석 ㅋㅋ 오랜만에 오전이 있는 일요일, 긴- 일요일을 보냈다. 다시 꾸준히 참석해야지</li><li>패스트캠퍼스 파이썬 데이터 전처리 CAMP 3주차 복습</li><li>코딩야학 6-7일차: 이고잉님은 설명을 정말 알기 쉽게 잘 해주시는 것 같다.  코딩야학으로 올라온 web1말고도 webn으로 다양한 강의가 있는데 차근차근 조금씩 들어보고 싶당 </li></ul><h4 id="다음-배울-것"><a href="#다음-배울-것" class="headerlink" title="다음 배울 것"></a>다음 배울 것</h4><ul><li>코딩야학 8일차</li><li>파이썬 os</li><li>파이썬 정규표현식</li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2019-01-09-TIL</title>
      <link href="/2019/01/09/2019-01-09-TIL/"/>
      <url>/2019/01/09/2019-01-09-TIL/</url>
      
        <content type="html"><![CDATA[<p>1/9 수요일</p><h4 id="배운-것"><a href="#배운-것" class="headerlink" title="배운 것"></a>배운 것</h4><ul><li>코딩야학 5일차 </li></ul><h4 id="내일-배울-것"><a href="#내일-배울-것" class="headerlink" title="내일 배울 것"></a>내일 배울 것</h4><ul><li>패스트캠퍼스 전처리 CAMP 3주차 복습</li><li>코딩야학 6일차</li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2019-01-08-TIL</title>
      <link href="/2019/01/08/2019-01-08-TIL/"/>
      <url>/2019/01/08/2019-01-08-TIL/</url>
      
        <content type="html"><![CDATA[<h4 id="배운-것"><a href="#배운-것" class="headerlink" title="배운 것"></a>배운 것</h4><ul><li>네이버 AI-vision 등에 사용하기 위해 이참에 드디어 맥북에 pyenv, virtualenv, autoenv 설치 </li></ul><h4 id="내일-배울-것"><a href="#내일-배울-것" class="headerlink" title="내일 배울 것"></a>내일 배울 것</h4><ul><li>네이버 AI-vision 리서치</li><li>코딩야학 5일차</li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2019-01-06-TIL</title>
      <link href="/2019/01/06/2019-01-06-TIL/"/>
      <url>/2019/01/06/2019-01-06-TIL/</url>
      
        <content type="html"><![CDATA[<h4 id="배운-것"><a href="#배운-것" class="headerlink" title="배운 것"></a>배운 것</h4><ul><li>코딩야학 3, 4일차 강의. 내용은 html 기초. 오늘도 쉬운 내용이었지만 설명을 참 이해하기 쉽게 잘해주시네</li><li>네이버 2018 AI-Vision. ipython파일이 아니고 python 파일로 작업해서 cli 환경으로 nsml에서 작동시키는 환경이 익숙치가 않구먼 ㅜ</li></ul><h4 id="내일-배울-것"><a href="#내일-배울-것" class="headerlink" title="내일 배울 것"></a>내일 배울 것</h4><ul><li>코딩야학 5일차</li><li>ai-vision 관련 리서치</li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2019-01-03-TIL</title>
      <link href="/2019/01/03/2019-01-03-TIL/"/>
      <url>/2019/01/03/2019-01-03-TIL/</url>
      
        <content type="html"><![CDATA[<h4 id="2018-리뷰"><a href="#2018-리뷰" class="headerlink" title="2018 리뷰"></a>2018 리뷰</h4><ul><li>12월 동안은 데이터사이언스 공부와 블로그에 아주 소홀하게 되었는데, 사실 12월 초에 취업이 확정되어 여행을 갔다오는 등 신나게 놀았기 때문!</li><li>올 해 큰 맘 먹고 커리어 전환을 위해 데이터 사이언스 공부를 시작했는데, 한해가 지나가기 전에 이직에 성공하게 되어 다행이다.</li><li>다만 회사 자체가 빅데이터 쪽으로 더 포커스가 되어있고 머신러닝과 딥러닝을 많이 사용하지는 않는 곳이기 때문에, 앞으로는 개인적으로 데이터 사이언스 공부는 더 활발하게 계속 해나가야겠다고 생각하고 있다.</li></ul><h4 id="오늘-배운-것"><a href="#오늘-배운-것" class="headerlink" title="오늘 배운 것"></a>오늘 배운 것</h4><ul><li>새해를 맞아 리프레시한 기분으로 도전한 코딩야학 첫날! web의 기초를 배우는 과정인데 1일차 수업은 가볍게 시작한다. 생활코딩 강의는 처음인데 오 느낌이 좋다. 매일매일 조금씩 해서 열흘 과정을 완료하면 꽤 뿌듯할 듯</li><li>네이버 2018 AI-Vision에 도전하기로 했고, 일단 오늘은 nsml 세팅 완료</li></ul><h4 id="내일-배울-것"><a href="#내일-배울-것" class="headerlink" title="내일 배울 것"></a>내일 배울 것</h4><ul><li>코딩야학 2일차</li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>&lt;선형대수&gt; 고윳값 분해 (2)</title>
      <link href="/2018/12/02/math-lin_alg-022/"/>
      <url>/2018/12/02/math-lin_alg-022/</url>
      
        <content type="html"><![CDATA[<h2 id="고윳값행렬과-고유벡터행렬"><a href="#고윳값행렬과-고유벡터행렬" class="headerlink" title="고윳값행렬과 고유벡터행렬"></a>고윳값행렬과 고유벡터행렬</h2><ul><li>$N$차원의 정방행렬 $A$가 $N$개의 고윳값과 이에 대응하는 고유벡터를 가질 때, 그 고윳값과 고유벡터를 다음과 같이 표시하자<ul><li>고윳값: $\lambda_1, \lambda_2, \cdots, \lambda_N$</li><li>고윳벡터: $v_1, v_2, \cdots, v_N$</li></ul></li><li>이 고윳값과 고유벡터를 묶어서 아래와 같이 고유벡터 행렬, 고윳값 행렬을 정의<ul><li>고유벡터 행렬 $V$: 고유벡터를 옆으로 쌓아서 만든 행렬<br>$$ V = \begin{bmatrix} v_1 &amp; \cdots &amp; v_N \end{bmatrix},\quad  V \in R^{N \times N} $$<img src="/2018/12/02/math-lin_alg-022/eigenmatrix.jpeg"><a id="more"></a> </li><li>고윳값 행렬 $\Lambda$: 고윳값을 대각성분으로 가지는 대각행렬<br>$$ \Lambda = \begin{bmatrix}<br>\lambda_1 &amp; 0 &amp; \cdots &amp; 0 \\<br>0 &amp; \lambda_2 &amp; \cdots &amp; 0 \\<br>\\<br>\vdots &amp; \vdots &amp; \ddots &amp; \vdots \\<br>\\<br>0 &amp; 0 &amp; \cdots &amp; \lambda_N<br>\end{bmatrix}, \quad  \Lambda \in R^{N \times N}<br>$$</li></ul></li></ul><h2 id="행렬의-대각화-diagonalization"><a href="#행렬의-대각화-diagonalization" class="headerlink" title="행렬의 대각화(diagonalization)"></a>행렬의 대각화(diagonalization)</h2><ul><li><p>위와 같이 고유벡터행렬과 고윳값행렬을 정의하면 <u>행렬과 고유벡터행렬의 곱</u>은 <u>고유벡터행렬과 고윳값행렬의 곱</u>과 같음<br>$$ AV = V\Lambda $$</p><ul><li>유도 과정<br>$$ \begin{align}<br>AV &amp; = A \begin{bmatrix} v_1 &amp; \cdots &amp; v_N \end{bmatrix} \\<br>&amp; = \begin{bmatrix} Av_1 &amp; \cdots &amp; Av_N \end{bmatrix} \\<br>&amp; = \begin{bmatrix} \lambda_1 v_1 &amp; \cdots &amp; \lambda_2 v_N \end{bmatrix} \\<br>&amp; = \begin{bmatrix} v_1 &amp; \cdots &amp; v_N \end{bmatrix}<br>\begin{bmatrix}<br>\lambda_1 &amp; 0 &amp; \cdots &amp; 0 \\<br>0 &amp; \lambda_2 &amp; \cdots &amp; 0 \\<br>\\<br>\vdots &amp; \vdots &amp; \ddots &amp; \vdots \\<br>\\<br>0 &amp; 0 &amp; \cdots &amp; \lambda_N<br>\end{bmatrix} \\<br>&amp; = V \Lambda<br>\end{align}$$</li></ul></li><li><p>행렬의 대각화: 고유벡터행렬  $V$의 역행렬이 존재한다면 행렬을 다음처럼 고유벡터행렬과 고윳값행렬의 곱으로 표현 가능<br>$$ A = V\Lambda V^{-1} $$</p></li></ul><h2 id="대각화가능-diagonalizable"><a href="#대각화가능-diagonalizable" class="headerlink" title="대각화가능(diagonalizable)"></a>대각화가능(diagonalizable)</h2><ul><li>행렬이 대각화가능하려면 고유벡터가 선형독립이어야 함(= 고유벡터행렬 $V$에 역행렬이 존재)</li></ul><h2 id="고윳값과-역행렬"><a href="#고윳값과-역행렬" class="headerlink" title="고윳값과 역행렬"></a>고윳값과 역행렬</h2><ul><li>대각화가능한 행렬에 0인 고윳값이 없으면 항상 역행렬이 존재함</li><li>증명<ul><li>대각화가능 행렬 $A$: $\quad A = V \Lambda V^{-1}$</li><li>$A$의 역행렬: $\quad A^{-1} = (V \Lambda V^{-1})^{-1} = V \Lambda^{-1} V^{-1}$</li><li>대각행렬의 역행렬은 각 대각성분의 역수로 이루어진 대각행렬이므로 0인 고윳값이 없으면 항상 역행렬이 존재함</li></ul></li></ul><hr><h2 id="대칭행렬의-고유분해"><a href="#대칭행렬의-고유분해" class="headerlink" title="대칭행렬의 고유분해"></a>대칭행렬의 고유분해</h2><ul><li><u>행렬 $A$가 실수인 대칭행렬이면 고윳값이 실수이고 고유벡터는 직교(orthogonal)</u>함</li><li>만약 고유벡터가 크기가 1이 되도록 정규화된 상태라면 고유벡터 행렬 $V$는 다음과 같이 전치 행렬이 역행렬임<br>$$ V^TV = VV^T = 1$$<br>$$ V^{-1} = V^T $$</li><li>따라서, <mark>대칭행렬은 항상 대각화가능</mark></li></ul><h2 id="대칭행렬을-랭크-1-행렬의-합으로-분해"><a href="#대칭행렬을-랭크-1-행렬의-합으로-분해" class="headerlink" title="대칭행렬을 랭크-1 행렬의 합으로 분해"></a>대칭행렬을 랭크-1 행렬의 합으로 분해</h2><ul><li>$N$차원 대칭행렬 $A$는 다음처럼 $N$개의 랭크-1 행렬 $A_i = v_i v_i^T$의 합으로 표시할 수 있음<br>$$ \begin{align}<br>A &amp; = V \Lambda V^T \\<br>&amp; = \begin{bmatrix} v_1 &amp; v_2 &amp; \cdots &amp; v_N  \end{bmatrix}<br>\begin{bmatrix}<br>\lambda_1 &amp; 0 &amp; \cdots &amp; 0 \\<br>0 &amp; \lambda_2 &amp; \cdots &amp; 0 \\<br>\\<br>\vdots &amp; \vdots &amp; \ddots &amp; \vdots \\<br>\\<br>0 &amp; 0 &amp; \cdots &amp; \lambda_N<br>\end{bmatrix}<br>\begin{bmatrix} v_1^T \\ v_2^T \\ \vdots \\ v_N^T \end{bmatrix} \\<br>&amp; = \begin{bmatrix} \lambda_1 v_1 &amp; \lambda_2 v_2 &amp; \cdots &amp; \lambda_N v_N  \end{bmatrix}<br>\begin{bmatrix} v_1^T \\ v_2^T \\ \vdots \\ v_N^T \end{bmatrix} \\<br>&amp; = \sum_{i=1}^N \lambda_i v_i v_i^T \\<br>&amp; = \sum_{i=1}^N \lambda_i A_i \\<br>&amp; = \lambda_1 A_1 + \cdots + \lambda_N A_N \\<br>\end{align}$$</li><li><p>아래와 같은 이미지로 나타낼 수 있음</p><img src="/2018/12/02/math-lin_alg-022/symmetric.jpeg"></li><li><p>만약 0인 고윳값이 없다면 역행렬도 아래처럼 표시할 수 있음<br>$$ A^{-1} = V \Lambda^{-1}V^T = \sum_{i=1}^N \dfrac{1}{\lambda_i}v_iv_i^T = \dfrac{1}{\lambda_1}A_! + \cdots + \dfrac{1}{\lambda_N}A_N $$</p></li></ul><h2 id="대칭행렬의-간략화"><a href="#대칭행렬의-간략화" class="headerlink" title="대칭행렬의 간략화"></a>대칭행렬의 간략화</h2><ul><li>대칭행렬을 랭크-1 행렬의 합으로 분해할 때 각 요소는 모두 단위벡터인 고유벡터로 만들어진 행렬이므로 행렬의 놈이 1이 됨</li><li>하지만 고윳값은 크기가 다양하게 나타날 수 있음</li><li>따라서 고윳값이 작은 항을 몇 개 생략해도 원래의 행렬과 큰 차이가 나지 않을 것<br>$$ \begin{align}<br>A &amp; = \lambda_1A_1 + \cdots + \lambda_NA_N \; (\lambda_1 &gt; \cdots &gt; \lambda_N) \\<br>&amp; \approx \lambda_1A_1 + \cdots + \lambda_MA_M \; (N &gt; M)<br>\end{align}<br>$$</li></ul><img src="/2018/12/02/math-lin_alg-022/forPCA.jpeg"><hr><h2 id="공분산행렬-covariance-matrix"><a href="#공분산행렬-covariance-matrix" class="headerlink" title="공분산행렬(covariance matrix)"></a>공분산행렬(covariance matrix)</h2><ul><li>공분산행렬: 임의의 실수 행렬 $X$에 대해 $X^TX$인 정방행렬</li><li>공분산행렬은 양의 준정부호임(positive semidefinite) - 음수인 고윳값은 없음<br>$$ v^T(X^TX)v = (Xv)^T(Xv) = u^Tu \ge 0$$<ul><li>모든 벡터 $v$에 대해 공분산행렬에 대한 이차형식은 어떤 벡터의 제곱합이 됨</li><li>따라서 0 또는 양수인 고윳값만 가짐</li></ul></li></ul><h2 id="고윳값과-양의-정부호"><a href="#고윳값과-양의-정부호" class="headerlink" title="고윳값과 양의 정부호"></a>고윳값과 양의 정부호</h2><ul><li>대칭행렬의 경우 다음 성질이 성립함<br>1) 대칭행렬의 고윳값이 모두 양수이면 그 행렬은 양의 정부호(positive definite<br>)이다.<br>2) 역으로 양의 정부호(positive definite)인 대칭행렬의 고윳값은 항상 양수이다.</li></ul><h2 id="공분산행렬의-역행렬"><a href="#공분산행렬의-역행렬" class="headerlink" title="공분산행렬의 역행렬"></a>공분산행렬의 역행렬</h2><ul><li>공분산행렬에서는 다음 성질이 성립함 <br> 행렬 $X$가 풀랭크이면 이 행렬의 공분산행렬 $X^TX$의 역행렬이 존재한다.</li></ul><img src="/2018/12/02/math-lin_alg-022/summary.png" title="양의 정부호 행렬에 대한 고윳값-고유벡터의 성질"><center>그림: 양의 정부호 행렬에 대한 고윳값-고유벡터의 성질 <br> (출처: 데이터 사이언스 스쿨 - 고윳값 분해)</center><h2 id="고유분해의-성질-정리"><a href="#고유분해의-성질-정리" class="headerlink" title="고유분해의 성질 정리"></a>고유분해의 성질 정리</h2><p>N 차원 정방행렬 A에 대해 다음 성질이 성립한다.</p><ol><li>행렬 $A$는 $N$개의 고윳값-고유벡터를 가진다. (복소수인 경우와 중복인 경우를 포함)</li><li>행렬의 대각합은 모든 고윳값의 합과 같다.</li><li>행렬의 행렬식은 모든 고윳값의 곱과 같다.</li><li>행렬 $A$가 대칭행렬이면 $N$개의 실수 고윳값을 가지며 고유벡터들이 서로 수직(orthogonal)이다.</li><li>행렬 $A$가 대칭행렬이고 고윳값이 모두 양수이면 양의 정부호(positive-definite)이고 역행렬이 존재한다. 역도 성립한다.</li><li>행렬 $A$가 어떤 행렬 X의 공분산행렬 $X^TX$이면 $0$ 또는 양의 고윳값을 가진다.</li><li>행렬 $X$가 풀랭크이면 공분산행렬 $X^TX$은 역행렬이 존재한다.</li></ol><h4 id="참고-자료"><a href="#참고-자료" class="headerlink" title="참고 자료"></a>참고 자료</h4><ul><li><a href="https://datascienceschool.net/view-notebook/7fd58178d9e64be682058db7e024d8b5/" target="_blank" rel="noopener">데이터 사이언스 스쿨 - 고윳값 분해</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> DataScience </category>
          
          <category> Math </category>
          
      </categories>
      
      
        <tags>
            
            <tag> data analysis </tag>
            
            <tag> math </tag>
            
            <tag> 선형대수 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>&lt;선형대수&gt; 고윳값 분해 (1)</title>
      <link href="/2018/12/02/math-lin_alg-021/"/>
      <url>/2018/12/02/math-lin_alg-021/</url>
      
        <content type="html"><![CDATA[<h2 id="고윳값-분해"><a href="#고윳값-분해" class="headerlink" title="고윳값 분해"></a>고윳값 분해</h2><ul><li>고윳값 분해(eigenvalue decomposition) or 고유 분해(eigen-decomposition)</li><li>고윳값과 고유벡터를 찾는 작업을 의미함</li></ul><h2 id="고윳값-eigenvalue-과-고유벡터-eigenvector"><a href="#고윳값-eigenvalue-과-고유벡터-eigenvector" class="headerlink" title="고윳값(eigenvalue)과 고유벡터(eigenvector)"></a>고윳값(eigenvalue)과 고유벡터(eigenvector)</h2><ul><li>정방 행렬 $A$에 대해 다음 식을 만족하는 벡터 $v$, 실수 $\lambda$를 찾을 수 있다고 가정<br>$$ Av = \lambda v$$<ul><li>벡터를 선형 변환(행렬x벡터)해도 방향이 같은 벡터(실수x벡터)가 된다는 의미</li><li>계산의 형태를 생각해보면 다음과 같음<a id="more"></a> <img src="/2018/12/02/math-lin_alg-021/eigen_001.jpeg"></li></ul></li><li>위 식을 만족하는 실수 $\lambda$를 고윳값, 벡터 $v$를 고유벡터라고 함</li><li>고유벡터를 구할 때, 방향이 같은 벡터는 모두 고유벡터가 되므로 보통은 크기가 1인 단위 벡터가 되도록 unit vector를 이용해 정규화함(벡터의 크기, norm으로 나누어주기)<br>$$ \frac{v}{\Vert v \Vert} $$</li></ul><h2 id="고윳값-고유벡터-계산하기"><a href="#고윳값-고유벡터-계산하기" class="headerlink" title="고윳값, 고유벡터 계산하기"></a>고윳값, 고유벡터 계산하기</h2><ul><li>먼저 고윳값를 구한 후에 이를 대입해서 고유벡터를 구함</li><li>행렬 A의 고윳값은 다음과 같은 <u>특성방정식(characteristic equation)</u>의 해와 같음<br>$$ f(\lambda) = det(A -\lambda I) = 0 $$<ul><li>유도 과정<br>$$ \begin{align}<br>Av &amp; = \lambda v \\<br>Av &amp; = \lambda I v \\<br>(A - \lambda I)v &amp; = 0 \\<br>det(A - \lambda I) &amp; = 0 \\<br>\end{align} $$</li></ul></li><li>고윳값을 알면 다음 연립 방정식을 풀어 고유벡터를 구함<br>$$ (A - \lambda I)v = 0 $$</li><li>e.g. 고윳값 계산하기 (행렬 $A = \begin{bmatrix} 2 &amp; 3 \\ 2 &amp; 1 \end{bmatrix}$에 대해)<ul><li>특성방정식<br>$$ \begin{align}<br>det(A- \lambda I) &amp; = det(\begin{bmatrix} 2 &amp; 3 \\ 2 &amp; 1 \end{bmatrix} - \begin{bmatrix} \lambda &amp; 0 \\ 0 &amp; \lambda \end{bmatrix} \\<br>&amp; = det \begin{bmatrix} 2 - \lambda &amp; 3 \\ 2 &amp; 1 - \lambda \end{bmatrix} \\<br>&amp; = (2 - \lambda)(1 - \lambda) - 6 \\<br>&amp; = \lambda^2 - 3\lambda - 4 = 0 \\<br>\end{align} $$</li><li>고윳값 계산<br>$$ \lambda^2 - 3\lambda - 4 = (\lambda - 4)(\lambda + 1) = 0 $$</li></ul></li></ul><h2 id="고윳값의-갯수"><a href="#고윳값의-갯수" class="headerlink" title="고윳값의 갯수"></a>고윳값의 갯수</h2><ul><li>$N$차방정식이 항상 $N$개의 복소수 해를 가진다는 사실을 이용하면 $N$차원 정방행렬의 고윳값의 갯수는 다음과 같음<br>1) 중복된 고유값을 하나로 생각하고 실수 고윳값만 고려한다면 $N$차원 정방행렬의 고윳값은 $0$개부터  $N$개까지 있을 수 있다.<br>2) 중복된 고윳값을 각각 별개로 생각하고 복소수인 고윳값도 고려한다면  $N$차원 정방행렬의 고윳값은 항상 $N$개이다.</li></ul><h2 id="고윳값과-대각합-행렬식"><a href="#고윳값과-대각합-행렬식" class="headerlink" title="고윳값과 대각합/행렬식"></a>고윳값과 대각합/행렬식</h2><ul><li>어떤 행렬의 고윳값이 $\lambda_1, \lambda_2, \cdots, \lambda_N$이라고 할 때, 모든 고윳값의 곱은 행렬식(determinant)의 값과 같고, 모든 고윳값의 합은 대각합(trace)의 값과 같음<br>$$ det(A) = \prod_{i=1}^N \lambda_i $$<br>$$ tr(A) = \sum_{i=1}^N \lambda_i $$</li></ul><h4 id="참고-자료"><a href="#참고-자료" class="headerlink" title="참고 자료"></a>참고 자료</h4><ul><li><a href="https://datascienceschool.net/view-notebook/7fd58178d9e64be682058db7e024d8b5/" target="_blank" rel="noopener">데이터 사이언스 스쿨 - 고윳값 분해</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> DataScience </category>
          
          <category> Math </category>
          
      </categories>
      
      
        <tags>
            
            <tag> data analysis </tag>
            
            <tag> math </tag>
            
            <tag> 선형대수 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>&lt;선형대수&gt; 선형종속/선형독립 &amp; 좌표변환</title>
      <link href="/2018/11/22/math-lin_alg-020/"/>
      <url>/2018/11/22/math-lin_alg-020/</url>
      
        <content type="html"><![CDATA[<h1 id="1-선형-종속과-선형-독립"><a href="#1-선형-종속과-선형-독립" class="headerlink" title="1. 선형 종속과 선형 독립"></a>1. 선형 종속과 선형 독립</h1><h2 id="벡터의-선형-종속과-선형-독립"><a href="#벡터의-선형-종속과-선형-독립" class="headerlink" title="벡터의 선형 종속과 선형 독립"></a>벡터의 선형 종속과 선형 독립</h2><ul><li>선형조합이 0벡터가 되는 경우로 선형 독립과 선형 종속을 판단함</li></ul><p>$$c_1x_1 + c_2x_2 + \cdots + c_Nx_N = 0 $$ </p><ul><li>선형 독립(linearly independent): 위 식을 만족하는 모두 0이 아닌 스칼라값 $c_1, c_2, \cdots, x_N$이 존재하지 않는 경우 그 벡터들이 선형 독립임<ul><li>즉, 선형조합이 영벡터가 되려면 모든 스칼라가 0이어야 한다는 의미<a id="more"></a> </li></ul></li><li>선형 종속(linearly dependent): 위 식을 만족하는 모두 0이 아닌 스칼라값 $c_1, c_2, \cdots, x_N$    이 존재할 경우 그 벡터들이 선형 종속임<ul><li>스칼라와 벡터를 잘 조합하면 $0$을 만들 수 있는 <u><em>특수한 경우</em></u>임 </li></ul></li></ul><h2 id="선형독립과-선형연립방정식"><a href="#선형독립과-선형연립방정식" class="headerlink" title="선형독립과 선형연립방정식"></a>선형독립과 선형연립방정식</h2><ul><li><p>matrix와 vector의 곱은 다음의 두 가지 방법으로 생각해 볼 수 있음<br>(1) inner product를 여러개 모아서 표현</p><img src="/2018/11/22/math-lin_alg-020/matrixvector1.jpeg"><p>(2) 선형조합을 모아서 표현   </p><img src="/2018/11/22/math-lin_alg-020/matrixvector2.jpeg"></li><li><p>여기서 (2)의 관점으로 보면, 선형조합을 알아내는 문제는 선형 연립방정식을 푸는 문제와 같음</p><ul><li>$c$: 가중치 스칼라 값 $c_i$가 모인 가중치 벡터</li><li>$X$: 열벡터 $x_i$가 모인 행렬       </li></ul></li></ul><p>$$ \begin{align}<br>c_1x_1 + c_2x_2 + \cdots + c_Nx_N &amp; = \begin{bmatrix} x_1 &amp; x_2 &amp; \cdots &amp; x_N \end{bmatrix} \begin{bmatrix} c_1 \\ c_2 \\ \vdots \\ c_N \end{bmatrix} \\<br>&amp; = Xc \<br>\end{align}$$</p><ul><li><p>$X$행렬의 역행렬이 존재하면 0벡터가 유일한 해이므로 선형독립<br>$$ \begin{align}<br>Xc &amp; = 0 \\<br>X^{-1}Xc &amp; = X^{-1}0 \\<br>c &amp; = 0 \<br>\end{align} $$</p></li><li><p>$X$ 행렬에 0벡터가 아닌 해 $c$가 존재하면 선형 종속</p></li></ul><center><mark>$det(A) \neq 0$, 역행렬이 존재함 ⇔ 선형독립</mark></center><br><center><mark>$det(A) = 0$, 즉 역행렬이 존재하지 않음 ⇔ 선형종속</mark></center><h2 id="랭크"><a href="#랭크" class="headerlink" title="랭크"></a>랭크</h2><ul><li>열 랭크(column rank): 행렬의 열벡터 중 서로 독립인 벡터의 최대 갯수</li><li>행 랭크(row rank): 행렬의 행 벡터 중 서로 독립인 벡터의 최대 갯수</li><li>행 랭크와 열 랭크는 항상 같음</li></ul><h2 id="벡터-공간과-기저-벡터"><a href="#벡터-공간과-기저-벡터" class="headerlink" title="벡터 공간과 기저 벡터"></a>벡터 공간과 기저 벡터</h2><ul><li>벡터 공간(vector space): 서로 독립인 벡터를 선형 조합하여 만들어지는 모든 벡터의 집합</li><li>기저 벡터(basis vector): 벡터 공간을 만드는 서로 독립인 벡터 (선형종속인 벡터는 기저 벡터가 될 수 없음)<ul><li>표준 기저 벡터(standard basis vector): 기저 벡터 중 원소의 하나만 값이 1인 벡터 (단위행렬 $I$를 이루는 벡터들) </li></ul></li></ul><hr><h1 id="2-좌표-변환-coordinate-transform"><a href="#2-좌표-변환-coordinate-transform" class="headerlink" title="2. 좌표 변환(coordinate transform)"></a>2. 좌표 변환(coordinate transform)</h1><h2 id="좌표-표현"><a href="#좌표-표현" class="headerlink" title="좌표 표현"></a>좌표 표현</h2><ul><li>좌표표현(coordinate representation) 또는 좌표(coordinate): 기저벡터를 선형 조합하여 해당 벡터를 나타냈을 때 선형 조합 가중치<br>$$ x = r_1e_1 + r_2e_2 $$</li><li>위와 같이 기저 벡터 $e_1, e_2$를 선형 조합하여 벡터 $x$를 나타낼 경우 벡터 $\begin{bmatrix} r_1 \\ r_2 \end{bmatrix}$를 벡터 $x$의 기저벡터 $e_1, e_2$에 대한 좌표라고 함</li><li>표준 기저 벡터에 대한 좌표는 원래 벡터와 같음</li></ul><h2 id="변환-행렬"><a href="#변환-행렬" class="headerlink" title="변환 행렬"></a>변환 행렬</h2><ul><li>기저벡터를 바꾸면 벡터의 coordinate이 어떻게 바뀌는가를 계산하기 위한 행렬</li><li>변환 행렬(transform matrix, $T$로 표기): $T = A^T$<ul><li>행렬 $A$: 새로운 기저 벡터의 (기존 기저 벡터에 대한) 좌표를 열벡터로 두고 행렬로 묶은 것<br>$$ g_1 = ae_1 + ce_2 \\<br>g_2 = be_1 + de_2 $$</li><li>기존 기저벡터($e_1, e_2$)와 새로운 기저 벡터($g_1, g_2$)의 관계가 위와 같을 때 새로운 기저벡터의 좌표와 행렬 $A$<br>$$ g_1\text{의 좌표}: \begin{bmatrix} a \\ c \end{bmatrix} \text {,} \quad g_2 \text{의 좌표}: \begin{bmatrix} b \\ d \end{bmatrix} $$<br>$$ A = \begin{bmatrix} a &amp; b \\ c &amp; d \end{bmatrix} $$</li></ul></li></ul><h2 id="좌표-변환"><a href="#좌표-변환" class="headerlink" title="좌표 변환"></a>좌표 변환</h2><ul><li>좌표 변환(coordinate transform): 새로운 기저 벡터에 대해 좌표를 계산하는 것</li><li><mark>좌표 변환은 행렬의 곱셈으로 구할 수 있음</mark></li><li><p>벡터 $a$의 기존 기저벡터($e_1, e_2$)에 대한 좌표 $a_1$를 새로운 기저 벡터($g_1, g_2$)에 대한 좌표 $a_2$로 변환하기</p><ul><li>기존 기저벡터에 대한 좌표값과 새로운 기저벡터에 대한 좌표값이 가리키는 실제 위치는 같아야 함<br>$$ a = a_1e_1 + a_2e_2  = a’_1g_1 + a’_2g_2 \\<br>a = \begin{bmatrix} e_1 &amp; e_2 \end{bmatrix}a_1<br>= \begin{bmatrix} g_1 &amp; g_2 \end{bmatrix}a’ $$</li><li>이 식에서 $a’_1, a’_2$가 새로운 기저 벡터에 대한 좌표임<br>$$ \begin{align}<br>a’_1g_1 + a’_2g_2 &amp; = \begin{bmatrix} g_1 &amp; g_2 \end{bmatrix} \begin{bmatrix} a’_1 \\ a’_2 \end{bmatrix} \\<br>&amp; = \begin{bmatrix} g_1 &amp; g_2 \end{bmatrix} a’ \\<br>&amp; = Aa’<br>\end{align}$$</li><li>이 때, $A$는 역행렬이 존재하므로 다음과 같이 새로운 좌표계를 계산 가능<br>$$ \begin{align}<br>Aa’ &amp; = a \\<br>a’ &amp; = A^{-1}a \\<br>&amp; = Ta<br>\end{align}$$</li></ul></li><li><p>좌표 변환 예제</p><ul><li>벡터 $a$의 표준 기저 벡터에 대한 좌표: $a = 2e_1+2e_2 = \begin{bmatrix} 2 \\ 2 \end{bmatrix}$</li><li>새로운 기저 벡터의 (표준 기저 벡터에 대한) 좌표: $g_1 = \begin{bmatrix} \frac{1}{\sqrt 2} \\ \frac{1}{\sqrt 2} \end{bmatrix}$, $g_2 = \begin{bmatrix} -\frac{1}{\sqrt 2} \\ \frac{1}{\sqrt 2} \end{bmatrix}$</li><li>이 때, 새로운 기저 벡터에 대한 벡터 $a$의 좌표는?<br>$$ \begin{align}<br>a’ &amp; = A^{-1}a \\<br>&amp; = \begin{bmatrix} \frac{1}{\sqrt 2} &amp; -\frac{1}{\sqrt 2}\\ \frac{1}{\sqrt 2} &amp; \frac{1}{\sqrt 2} \end{bmatrix}^{-1} \begin{bmatrix} 2 \\ 2 \end{bmatrix} \\<br>&amp; = \begin{bmatrix} \frac{1}{\sqrt 2} &amp; \frac{1}{\sqrt 2}\\ -\frac{1}{\sqrt 2} &amp; \frac{1}{\sqrt 2} \end{bmatrix} \begin{bmatrix} 2 \\ 2 \end{bmatrix} \\<br>&amp; = \begin{bmatrix} 2 \sqrt 2 \\ 0 \end{bmatrix} \\<br>\end{align}$$</li></ul></li></ul><h4 id="참고-자료"><a href="#참고-자료" class="headerlink" title="참고 자료"></a>참고 자료</h4><ul><li><a href="https://datascienceschool.net/view-notebook/41138b1b54454caf819d9288d26560c7/" target="_blank" rel="noopener">데이터 사이언스 스쿨 - 좌표와 변환</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> DataScience </category>
          
          <category> Math </category>
          
      </categories>
      
      
        <tags>
            
            <tag> data analysis </tag>
            
            <tag> math </tag>
            
            <tag> 선형대수 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>&lt;선형대수&gt; 직선과 점의 거리</title>
      <link href="/2018/11/21/math-lin_alg-019/"/>
      <url>/2018/11/21/math-lin_alg-019/</url>
      
        <content type="html"><![CDATA[<p>직선과 점의 거리는 분류 알고리즘인 <strong>서포트 벡터 머신(SVM: Support Vector Machine)</strong> 과 관련해 알아두어야 할 부분이다.</p><h2 id="직선의-방정식"><a href="#직선의-방정식" class="headerlink" title="직선의 방정식"></a>직선의 방정식</h2><img src="/2018/11/21/math-lin_alg-019/line.jpeg"><ul><li>어떤 벡터 $w$가 있을 때, 다음의 조건을 만족하는 직선 $x$의 방정식<br>  (1) 벡터 $w$와 수직<br>  (2) 벡터 $w$가 가리키는 점을 지남</li></ul><a id="more"></a> <ul><li>벡터 $x$가 해당 직선 위의 한 점일 때, 벡터 $x$가 가리키는 점과 벡터 $w$가 가리키는 점을 이은 벡터 $x-w$가 벡터 $w$와 직교해야 함을 이용하여 풀이</li></ul><script type="math/tex; mode=display">w^T(x-w) = 0</script><script type="math/tex; mode=display">\begin{align}w^T(x-w) & = w^Tx-w^Tw \\\& = w^Tx-\Vert w \Vert^2 \\\\end{align}</script><script type="math/tex; mode=display">w^Tx-\Vert w \Vert^2  = 0</script><ul><li>e.g. $w= \begin{bmatrix} 3 \\ 1 \end{bmatrix}$일 경우 $w$를 수직으로 지나는 직선의 방정식</li></ul><script type="math/tex; mode=display">\begin{bmatrix} 3 & 1 \end{bmatrix}\begin{bmatrix} x_1 \\\ x_2 \end{bmatrix} = 3x_1 + x_2 -10 = 0</script><script type="math/tex; mode=display">3x_1 + x_2 = 10</script><ul><li>조건을 한 가지로 줄여 단순히 벡터 $w$에 수직인 직선의 방정식은 다음과 같이 나타냄<script type="math/tex; mode=display">w^Tx- w_0 = 0</script><ul><li>$w_0$: 원점으로부터 직선에 내린 수선의 길이의 제곱</li><li>$w_0 = 0$이면 원점을 지나는 직선의 방정식 </li><li>이 직선과 원점 사이의 거리: $\dfrac{w_0}{\Vert w\Vert}$</li></ul></li></ul><h2 id="직선과-점의-거리"><a href="#직선과-점의-거리" class="headerlink" title="직선과 점의 거리"></a>직선과 점의 거리</h2><img src="/2018/11/21/math-lin_alg-019/distance.jpeg"><ul><li>직선 $w^Tx-\Vert w \Vert^2 = 0$과 직선 위에 있지 않은 점 $x’$ 사이의 거리: $x’^{\Vert w}$ 의 길이와 $\Vert w \Vert$의 차이 <br> (점이 직선의 안쪽에 있을 수도, 바깥쪽에 있을 수도 있으므로 절대값을 취함)<ul><li>$x’$의 프로젝션 벡터의 길이: $ \Vert x’^{\Vert w}\Vert = \dfrac{w^Tx’}{\Vert w\Vert} $</li></ul></li></ul><script type="math/tex; mode=display">\begin{align}d & = \left|  \Vert x'^{\Vert w}\Vert - \Vert w \Vert \right| \\\& = \left| \dfrac{w^Tx'}{\Vert w \Vert} - \Vert w \Vert \right| \\\& = \dfrac{\left|w^Tx' - \Vert w \Vert^2 \right|}{\Vert w \Vert} \\\\end{align}</script><ul><li>직선의 방정식이 $w^Tx - w_0 = 0$인 경우 직선과 점의 거리</li></ul><script type="math/tex; mode=display">d = \dfrac{\left|w^Tx' - w_0 \right|}{\Vert w \Vert}</script><h4 id="참고-자료"><a href="#참고-자료" class="headerlink" title="참고 자료"></a>참고 자료</h4><ul><li><a href="https://datascienceschool.net/view-notebook/3f44cfdda2874080a9aa6b034c71d5ec/" target="_blank" rel="noopener">데이터 사이언스 스쿨 - 선형대수와 해석기하의 기초</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> DataScience </category>
          
          <category> Math </category>
          
      </categories>
      
      
        <tags>
            
            <tag> data analysis </tag>
            
            <tag> math </tag>
            
            <tag> 선형대수 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>&lt;선형대수&gt; 벡터와 유사도</title>
      <link href="/2018/11/21/math-lin_alg-018/"/>
      <url>/2018/11/21/math-lin_alg-018/</url>
      
        <content type="html"><![CDATA[<h2 id="1-유클리드-유사도-Euclidean-Similarity"><a href="#1-유클리드-유사도-Euclidean-Similarity" class="headerlink" title="1. 유클리드 유사도(Euclidean Similarity)"></a>1. 유클리드 유사도(Euclidean Similarity)</h2><ul><li>유클리드 거리(Euclidean distance): 두 벡터가 가리키는 점 사이의 거리</li><li>두 벡터의 차의 길이로 구할 수 있음</li></ul><p>$$<br>\begin{align}<br>\Vert a - b \Vert &amp; = \sqrt{\sum_{i=1} (a_i - b_i)^2} \\<br>&amp; = \sqrt{\sum_{i=1} ( a_i^2 - 2 a_i b_i + b_i^2 )} \\<br>&amp; = \sqrt{\sum_{i=1} a_i^2 + \sum_{i=1} b_i^2 - 2 \sum_{i=1} a_i b_i} \\<br>&amp; = \sqrt{\Vert a \Vert^2 + \Vert b \Vert^2  - 2 a^Tb } \\<br>\end{align}<br>$$</p><p>$$<br>\Vert a - b \Vert^2 = \Vert a \Vert^2 + \Vert b \Vert^2 - 2 a^T b<br>$$</p><ul><li>유클리드 유사도: 유클리드 거리와 반비례하는 값으로 정의할 수 있음</li></ul><h2 id="2-코사인-유사도-Cosine-Similarity"><a href="#2-코사인-유사도-Cosine-Similarity" class="headerlink" title="2. 코사인 유사도(Cosine Similarity)"></a>2. 코사인 유사도(Cosine Similarity)</h2><h3 id="2-1-벡터의-내적과-코사인"><a href="#2-1-벡터의-내적과-코사인" class="headerlink" title="2.1 벡터의 내적과 코사인"></a>2.1 벡터의 내적과 코사인</h3><ul><li>두 벡터의 내적은 다음과 같이 벡터의 길이 $\Vert a \Vert, \Vert b \Vert$와 두 벡터 사이의 각도 $\theta$로 계산할 수 있음</li></ul><p>$$ a^Tb = \Vert a \Vert \Vert b \Vert \cos \theta $$</p><ul><li>$\cos \theta$: $\theta$ 각을 가지는 직각삼각형에서 빗변 $a$와 아랫변 $b$의 길이의 비율<ul><li>$\cos\theta$의 값은 $\theta$가 0에 가까워질수록 1에 가까워지고 $\theta$가 $90{}^{\circ}$에 가까워질수록 0에 가까워짐     </li></ul></li></ul><p>$$ \cos\theta = \dfrac{\text{밑변}}{\text{빗변}} $$</p><p>$$ \cos 0^{\circ} = 1  $$</p><p>$$ \cos 90^{\circ} = 0  $$</p><img src="/2018/11/21/math-lin_alg-018/triangle.png" class="slug"><h3 id="2-2-직교-orthogonal"><a href="#2-2-직교-orthogonal" class="headerlink" title="2.2 직교(orthogonal)"></a>2.2 직교(orthogonal)</h3><ul><li>직교: 두 벡터 $a$와 $b$가 이루는 각이 90도인 경우 직교한다고 하며 $a \perp b$로 표기</li><li>$\cos 90^{\circ} = 0$이므로  서로 직교인 두 벡터의 내적은 0<br>$$ a^T b = b^T a = 0   \;\;\;\; \leftrightarrow \;\;\;\; a \perp b   $$</li></ul><h3 id="2-3-코사인-유사도-cosine-similarity"><a href="#2-3-코사인-유사도-cosine-similarity" class="headerlink" title="2.3 코사인 유사도(cosine similarity)"></a>2.3 코사인 유사도(cosine similarity)</h3><ul><li>두 벡터의 유클리드 거리 대신 두 벡터가 비슷한 방향을 가리키는 것을 유사하다고 볼 수도 있음</li><li>코사인 유사도: 두 벡터가 이루는 각의 코사인 값<ul><li>두 벡터가 같은 방향을 가리키면(각도가 0) 최대값 1을 가짐</li></ul></li></ul><p>$$ \text{cosine similarity} = \cos\theta = \dfrac{x^Ty}{\Vert x\Vert \Vert y\Vert}  $$</p><ul><li><p>추천시스템(recommend system)에서 사용자 취향의 유사성을 계산할 때 사용됨</p></li><li><p>코사인 거리(cosine distance)<br>$$ \text{cosine distance} = 1 - \text{cosine similarity} = 1 - \dfrac{x^Ty}{\Vert x\Vert \Vert y\Vert} $$</p></li></ul><h4 id="참고-자료"><a href="#참고-자료" class="headerlink" title="참고 자료"></a>참고 자료</h4><ul><li><a href="https://datascienceschool.net/view-notebook/3f44cfdda2874080a9aa6b034c71d5ec/" target="_blank" rel="noopener">데이터 사이언스 스쿨 - 선형대수와 해석기하의 기초</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> DataScience </category>
          
          <category> Math </category>
          
      </categories>
      
      
        <tags>
            
            <tag> data analysis </tag>
            
            <tag> math </tag>
            
            <tag> 선형대수 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>&lt;선형대수&gt; 선형대수와 선형회귀모형(linear regression)</title>
      <link href="/2018/11/21/math-lin_alg-017/"/>
      <url>/2018/11/21/math-lin_alg-017/</url>
      
        <content type="html"><![CDATA[<h2 id="1-선형-회귀-모형-linear-regression"><a href="#1-선형-회귀-모형-linear-regression" class="headerlink" title="1. 선형 회귀 모형(linear regression)"></a><strong>1. 선형 회귀 모형(linear regression)</strong></h2><h3 id="1-1-선형-회귀-모형이란"><a href="#1-1-선형-회귀-모형이란" class="headerlink" title="1.1 선형 회귀 모형이란"></a>1.1 선형 회귀 모형이란</h3><ul><li>선형 회귀 모형이란 독립 변수 $x$에서 종속 변수 $y$를 예측하기 위한 방법의 하나로 독립 변수 벡터 $x$와 가중치 벡터 $w$의 가중합으로 $y$와 가장 비슷한 값 $\hat y$을 계산</li></ul><p>$$ \hat y = w_1x_1 + \cdots + w_Nx_N $$</p><p>$$ \hat y = w^Tx $$</p><h3 id="1-2-잔차"><a href="#1-2-잔차" class="headerlink" title="1.2 잔차"></a>1.2 잔차</h3><ul><li>선형 회귀 분석의 결과는 가중치 벡터 $w$로 나타나고 예측치는 이 가중치 벡터를 사용한 벡터 $x_i$의 가중합 $w^Tx_i$가됨</li><li>잔차(residual) 혹은 오차(error): 예측치 $\hat {y_i}$와 실제값(target) $y_i$의 차이</li></ul><p>$$ e_i = y_i - \hat {y_i} = y_i - w^Tx_i $$</p><h3 id="1-3-잔차-제곱합-RSS-residual-sum-of-squares"><a href="#1-3-잔차-제곱합-RSS-residual-sum-of-squares" class="headerlink" title="1.3 잔차 제곱합(RSS: residual sum of squares)"></a>1.3 잔차 제곱합(RSS: residual sum of squares)</h3><ul><li>잔차의 크기는 잔차 벡터의 잔차제곱합을 이용하여 구하며, $e^Te$로 나타냄</li></ul><p>$$ \sum_{i=1}^N e_i^2 = \sum_{i=1}^N {(y_i - w^Tx_i)^2} = e^Te = (y-Xw)^T(y-Xw) $$</p><h2 id="2-연립방정식과-역행렬"><a href="#2-연립방정식과-역행렬" class="headerlink" title="2. 연립방정식과 역행렬"></a><strong>2. 연립방정식과 역행렬</strong></h2><p>그렇다면 가중치 벡터 $w$는 어떻게 구하는가? 연립방정식과 (의사)역행렬을 이용해 선형 예측 모형의 가중치 벡터를 구하는 방법을 알아보자.</p><h3 id="2-1-선형-연립-방정식-system-of-linear-equations"><a href="#2-1-선형-연립-방정식-system-of-linear-equations" class="headerlink" title="2.1 선형 연립 방정식(system of linear equations)"></a>2.1 선형 연립 방정식(system of linear equations)</h3><ul><li>선형연립 방정식: $x_1, x_2, \cdots, x_M$이라는 $M$개의 미지수를 가지는 $N$개의 선형 방정식</li></ul><p>$$ \begin{matrix}<br>a_{11} x_1 &amp; + \;&amp; a_{12} x_2   &amp;\; + \cdots + \;&amp; a_{1M} x_M &amp;\; = \;&amp; b_1 \\<br>a_{21} x_1 &amp; + \;&amp; a_{22} x_2   &amp;\; + \cdots + \;&amp; a_{2M} x_M &amp;\; = \;&amp; b_2 \\<br>\vdots\;\;\; &amp;   &amp; \vdots\;\;\; &amp;                &amp; \vdots\;\;\; &amp;     &amp; \;\vdots \\<br>a_{N1} x_1 &amp; + \;&amp; a_{N2} x_2   &amp;\; + \cdots + \;&amp; a_{NM} x_M &amp;\; = \;&amp; b_N \\<br>\end{matrix}<br>$$</p><ul><li>행렬을 사용하면 아래와 같이 간단하게 표현할 수 있음<ul><li>$A$: 계수행렬(coefficient matrix)</li><li>$x$: 미지수벡터(unknown vector)</li><li>$b$: 상수벡터(constant vector)</li></ul></li></ul><p>$$<br>\begin{bmatrix}<br>a_{11} &amp; a_{12} &amp; \cdots &amp; a_{1M} \\<br>a_{21} &amp; a_{22} &amp; \cdots &amp; a_{2M} \\<br>\vdots &amp; \vdots &amp; \ddots &amp; \vdots \\<br>a_{N1} &amp; a_{N2} &amp; \cdots &amp; a_{NM} \\<br>\end{bmatrix}<br>\begin{bmatrix}<br>x_1 \\ x_2 \\ \vdots \\ x_M<br>\end{bmatrix}<br> =<br>\begin{bmatrix}<br>b_1 \\ b_2 \\ \vdots \\ b_N<br>\end{bmatrix}<br>$$</p><p>$$Ax  = b  $$</p><h3 id="2-2-역행렬"><a href="#2-2-역행렬" class="headerlink" title="2.2 역행렬"></a>2.2 역행렬</h3><ul><li>역행렬($A^{-1}$): 정방행렬 A에 대해 다음 관계를 만족하는 정방 행렬 ($I$는 단위 행렬)</li></ul><p>$$ A^{-1}A = AA^{-1} = I $$</p><ul><li>역행렬의 성질 ($A, B, C$모두 역행렬이 존재한다고 가정)<ul><li>전치 행렬의 역행렬은 역행렬의 전치 행렬과 같다. 따라서 대칭 행렬의 역행렬도 대칭 행렬이다.<br>$$ (A^T)^{-1} = (A^{-1})^T $$</li><li>두 개 이상의 정방 행렬의 곱은 같은 크기의 정방 행렬이 되는데, 이러한 행렬의 곱의 역행렬은 다음 성질이 성립한다.<br>$$ (AB)^{-1} = B^{-1}A^{-1} $$<br>$$ (ABC)^{-1} = C^{-1}B^{-1}A^{-1} $$</li><li>역행렬은 행렬식이 0이 아닌 경우에만 존재한다.</li></ul></li></ul><h3 id="2-3-역행렬과-선형-연립-방정식의-해"><a href="#2-3-역행렬과-선형-연립-방정식의-해" class="headerlink" title="2.3 역행렬과 선형 연립 방정식의 해"></a>2.3 역행렬과 선형 연립 방정식의 해</h3><ul><li>행렬 $A$의 역행렬이 존재한다면 선형 연립 방정식의 해는 다음과 같이 구함</li></ul><p>$$ \begin{align}<br>Ax &amp; = b \\<br>A^{-1}Ax &amp; = A^{-1}b \\<br>Ix &amp; = A^{-1}b \\<br>x &amp; = A^{-1}b \\<br>\end{align} $$</p><ul><li>역행렬이 존재할 때만 (행렬식이 0이 아닌 경우에만) 구할 수 있음</li></ul><h3 id="2-4-최소-자승-문제-Least-Square-Problem"><a href="#2-4-최소-자승-문제-Least-Square-Problem" class="headerlink" title="2.4 최소 자승 문제 (Least Square Problem)"></a>2.4 최소 자승 문제 (Least Square Problem)</h3><h4 id="미지수의-수와-방정식의-수를-고려한-연립-방정식의-종류"><a href="#미지수의-수와-방정식의-수를-고려한-연립-방정식의-종류" class="headerlink" title="미지수의 수와 방정식의 수를 고려한 연립 방정식의 종류"></a>미지수의 수와 방정식의 수를 고려한 연립 방정식의 종류</h4><ol><li>방정식의 수와 미지수의 수가 같음 ($N = M$)<ul><li>정방행렬의 경우</li></ul></li><li>방정식의 수 &lt; 미지수의 수 ($N &lt; M$)<ul><li>무수히 많은 해가 존재할 수 있음</li></ul></li><li>방정식의 수 &gt; 미지수의 수 ($N &gt; M$)<ul><li>해가 존재하지 않을 수 있음</li></ul></li></ol><h4 id="최소-자승-문제"><a href="#최소-자승-문제" class="headerlink" title="최소 자승 문제"></a>최소 자승 문제</h4><ul><li>데이터 분석에서는 대부분 큰 데이터를 다루게 되므로 3번의 경우가 일반적이기때문에 정확한 해를 구할 수 없음</li><li>아무런 답도 구할 수 없는 것 보다는 좌변과 우변을 가장 비슷하게라도 만들어주는 수를 구하는 것이 좋음</li></ul><p>$$ Ax \approx b $$</p><ul><li>따라서 잔차의 크기를 최소화하는 문제로 바꾸어 풀어야 함 <br> 이는 잔차 벡터의 크기, 즉 놈을 최소화하는 것과 같음</li></ul><p>$$ e = Ax -b $$</p><p>$$ e^Te = \Vert e \Vert^2 = (Ax -b)^T(Ax-b) $$</p><p>$$ x = arg \min_x e^Te = arg \min_x \Vert e \Vert^2 = (Ax -b)^T(Ax-b) $$</p><h4 id="의사-역행렬-pseudo-inverse"><a href="#의사-역행렬-pseudo-inverse" class="headerlink" title="의사 역행렬(pseudo inverse)"></a>의사 역행렬(pseudo inverse)</h4><ul><li>전치행렬을 원래 행렬에 곱해주면 정방행렬 형태가 됨 ($A^TA$ or $AA^T$)</li><li>이를 이용해 최소 자승 문제를 다음과 같이 의사 역행렬 $A^+$로 풀 수 있음 </li></ul><p>$$ \begin{align}<br>Ax &amp; = b \\<br>A^TAx &amp; = A^Tb \\<br>(A^TA)^{-1}A^TAx &amp; = (A^TA)^{-1}A^Tb \\<br>x &amp; = (A^TA)^{-1}A^Tb \\<br>x &amp; = A^+b \\<br>\end{align} $$</p><ul><li>의사 역행렬: $A^+ = (A^TA)^{-1}A^T$</li></ul><h4 id="참고-자료"><a href="#참고-자료" class="headerlink" title="참고 자료"></a>참고 자료</h4><ul><li><a href="https://datascienceschool.net/view-notebook/3f44cfdda2874080a9aa6b034c71d5ec/" target="_blank" rel="noopener">데이터 사이언스 스쿨 - 벡터와 행렬의 연산</a></li><li><a href="https://datascienceschool.net/view-notebook/927d7f7972dd434ead9d294169ae7f34/" target="_blank" rel="noopener">데이터 사이언스 스쿨 - 선형 연립방정식과 역행렬</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> DataScience </category>
          
          <category> Math </category>
          
      </categories>
      
      
        <tags>
            
            <tag> data analysis </tag>
            
            <tag> math </tag>
            
            <tag> 선형대수 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>&lt;선형대수&gt; 행렬의 성질 with python</title>
      <link href="/2018/11/16/math-lin_alg-016/"/>
      <url>/2018/11/16/math-lin_alg-016/</url>
      
        <content type="html"><![CDATA[<h2 id="행렬의-부호"><a href="#행렬의-부호" class="headerlink" title="행렬의 부호"></a>행렬의 부호</h2><h3 id="1-행렬의-양-정부호-positive-definite-특성"><a href="#1-행렬의-양-정부호-positive-definite-특성" class="headerlink" title="1) 행렬의 양-정부호(positive definite) 특성"></a>1) 행렬의 양-정부호(positive definite) 특성</h3><ul><li><u>영벡터가 아닌</u> 모든 벡터 $x$에 대해 다음 부등식이 성립하면 행렬 $A$가 양-정부호(positive definite)이라고 함</li></ul><script type="math/tex; mode=display">x^TAx>0</script><ul><li>식이 등호를 포함하는 경우 양-준정부호(positive semi-definite)</li></ul><script type="math/tex; mode=display">x^TAx \geq 0</script><ul><li>단위 행렬은 양-정부호</li></ul><h2 id="행렬의-크기"><a href="#행렬의-크기" class="headerlink" title="행렬의 크기"></a>행렬의 크기</h2><h3 id="1-놈-norm"><a href="#1-놈-norm" class="headerlink" title="1) 놈(norm)"></a>1) 놈(norm)</h3><ul><li>행렬 $A$에 대해 다음처럼 정의되는 숫자로, 보통 $\Vert A \Vert_L$로 표기 <br>($L$은 1, 2, 또는 무한대를 많이 사용)</li><li>벡터의 길이</li></ul><script type="math/tex; mode=display">\Vert A \Vert_L = \left( \sum_{i=1}^N \sum_{j=1}^M |a_{ij}|^L \right)^{1/L}</script><ul><li>$L=2$인 $L2$놈이 많이 쓰이며, 프로베니우스 놈(Frobenius norm)이라고 불리기도 함 ($\Vert A \Vert_F$로 표기)</li></ul><script type="math/tex; mode=display">\Vert A \Vert = \Vert A \Vert_2 = \Vert A \Vert_F = \sqrt{\sum_{i=1}^N \sum_{j=1}^M a_{ij}^2}</script><ul><li>행렬과 벡터의 놈은 항상 0과 같거나 0보다 큰 값을 가짐</li><li>numpy에서는 linalg 서브패키지의 norm 명령으로 계산</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">A = (np.arange(<span class="number">9</span>) - <span class="number">4</span>).reshape((<span class="number">3</span>,<span class="number">3</span>))</span><br><span class="line">A</span><br></pre></td></tr></table></figure><pre><code>array([[-4, -3, -2],       [-1,  0,  1],       [ 2,  3,  4]])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.linalg.norm(A)</span><br></pre></td></tr></table></figure><pre><code>7.745966692414834</code></pre><h3 id="2-대각합-trace"><a href="#2-대각합-trace" class="headerlink" title="2) 대각합(trace)"></a>2) 대각합(trace)</h3><ul><li>정방행렬의 대각 원소들의 합</li></ul><script type="math/tex; mode=display">tr(A) = a_{11} + a_{22} + \cdots + a_{NN} = \sum_{i=1}^N a_{ii}</script><ul><li>대각합의 성질<ul><li>스칼라를 곱하면 대각합은 스칼라와 원래의 대각합의 곱이다.<script type="math/tex; mode=display">\text{tr} (cA) = c\;\text{tr} (A)</script></li><li>전치연산을 해도 대각합이 달라지지 않는다.<script type="math/tex; mode=display">\text{tr} (A^T) = \text{tr} (A)</script></li><li>두 행렬의 합의 대각합은 두 행렬의 대각합의 합이다.<script type="math/tex; mode=display">\text{tr} (A + B) = \text{tr} (A) + \text{tr} (B)</script></li><li>두 행렬의 곱의 대각합은 행렬의 순서를 바꾸어도 달라지지 않는다.<script type="math/tex; mode=display">\text{tr} (AB) = \text{tr} (BA)</script></li><li>세 행렬의 곱의 대각합은 다음과 같이 순서를 순환시켜도 달라지지 않는다.<script type="math/tex; mode=display">\text{tr} (ABC) = \text{tr} (BCA) = \text{tr} (CAB)</script></li></ul></li></ul><ul><li>마지막 두 성질은 trace trick이라고 하여 이차 형식(quadratic form)의 미분을 구하는데 유용하게 사용됨<ul><li>이 두 수식에서는 $A, B, C$가 각각 정방행렬일 필요는 없고 대각합을 구하는 행렬이 정방 행렬이면 됨  </li><li>이차형식의 trace trick 공식 (이차형식은 스칼라 값이기 때문에 대각합을 취해도 원래의 값과 같음)</li></ul></li></ul><script type="math/tex; mode=display">x^TAx = \text{tr}(x^TAx) = \text{tr}(Axx^T) = \text{tr}(xx^TA)</script><ul><li>numpy에서는 linalg 서브패키지의 trace 명령으로 계산</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.trace(np.eye(<span class="number">3</span>))</span><br></pre></td></tr></table></figure><pre><code>3.0</code></pre><h3 id="3-행렬식-determinant"><a href="#3-행렬식-determinant" class="headerlink" title="3) 행렬식(determinant)"></a>3) 행렬식(determinant)</h3><ul><li>정방행렬의 행렬식은 $det(A), |A|$로 표기</li><li>코팩터 전개(cofactor expansion)라고 불리는 재귀적인 방법으로 정의 <br> (이 복잡한 수식과 계산 방법을 외우는 것 보다는 이해하고 넘어가는 것이 좋다고 생각된다. 어차피 손계산으로 행렬식을 구할 일은 거의 없을 것이니)</li></ul><script type="math/tex; mode=display">\det(A) = \sum_{i=1}^N \left\{(-1)^{i+j_0} M_{i,j_0} \right\} a_{i,j_0}</script><center>또는</center><script type="math/tex; mode=display">\det(A) = \sum_{j=1}^N \left\{(-1)^{i_0+j} M_{i_0,j} \right\} a_{i_0,j}</script><ul><li><p>2차, 3차 정방행렬의 행렬식 공식<br>(특히 2×2의 행렬식 정도는 기억해두어야 한다.)</p><ul><li><p>2×2 행렬의 행렬식</p><script type="math/tex; mode=display">\det \left( \begin{bmatrix} a&b \\\ c&d \end{bmatrix} \right) = ad-bc</script></li><li><p>3×3 행렬의 행렬식</p><script type="math/tex; mode=display">\det \left( \begin{bmatrix}a&b&c \\\ d&e&f \\\ g&h&i\end{bmatrix} \right) = aei+bfg+cdh-ceg-bdi-afh</script></li></ul></li><li><p>행렬식의 기하학적 의미</p><ul><li>기하학적으로 2x2 행렬의 행렬식은 평행사변형의 넓이, 3x3 행렬의 행렬식은 육면체의 부피와 관련을 가짐</li><li>자세한 내용은 다음의 포스팅을 참고 <a href="/2018/10/30/math-lin_alg-006/" title="<선형대수> 3Blue1Brown - Essence of linear algebra E6"><선형대수> 3Blue1Brown - Essence of linear algebra E6</선형대수></a></li></ul></li></ul><ul><li><p>행렬식의 성질</p><ul><li>전치 행렬의 행렬식은 원래의 행렬의 행렬식과 같다. </li></ul><script type="math/tex; mode=display">\det(A^{T}) = \det(A)</script><ul><li>단위 행렬의 행렬식은 1이다.</li></ul><script type="math/tex; mode=display">\det(I) = 1</script><ul><li>두 행렬의 곱의 행렬식은 각 행렬의 행렬식의 곱과 같다. </li></ul><script type="math/tex; mode=display">\det(AB) = \det(A)\det(B)</script><ul><li>역행렬의 행렬식은 원래의 행렬의 행렬식의 역수와 같다. </li></ul><script type="math/tex; mode=display">\det(A^{-1}) = \dfrac{1}{\det(A)}</script></li></ul><ul><li>numpy에서는 linalg 서브패키지의 det 명령으로 계산</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">A = np.array([[<span class="number">1</span>,<span class="number">2</span>], [<span class="number">3</span>,<span class="number">4</span>]])</span><br><span class="line">A</span><br></pre></td></tr></table></figure><pre><code>array([[1, 2],       [3, 4]])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.linalg.det(A)</span><br></pre></td></tr></table></figure><pre><code>-2.0000000000000004</code></pre><h4 id="참고-자료"><a href="#참고-자료" class="headerlink" title="참고 자료"></a>참고 자료</h4><ul><li><a href="https://datascienceschool.net/view-notebook/d6205659aff0413797c22552947aec83/" target="_blank" rel="noopener">데이터 사이언스 스쿨 - 행렬의 성질</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> DataScience </category>
          
          <category> Math </category>
          
      </categories>
      
      
        <tags>
            
            <tag> data analysis </tag>
            
            <tag> math </tag>
            
            <tag> 선형대수 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>&lt;선형대수&gt; 선형대수 기초 with python NumPy</title>
      <link href="/2018/11/16/math-lin_alg-015/"/>
      <url>/2018/11/16/math-lin_alg-015/</url>
      
        <content type="html"><![CDATA[<p>선형대수의 기초 개념과 파이썬 numpy로 구현해보는 내용을 정리해보았다.</p><h2 id="데이터의-유형"><a href="#데이터의-유형" class="headerlink" title="데이터의 유형"></a>데이터의 유형</h2><h3 id="1-스칼라-scalar"><a href="#1-스칼라-scalar" class="headerlink" title="1) 스칼라(scalar)"></a>1) 스칼라(scalar)</h3><ul><li>실수인 숫자 하나로 이루어진 데이터</li></ul><h3 id="2-벡터-vector"><a href="#2-벡터-vector" class="headerlink" title="2) 벡터(vector)"></a>2) 벡터(vector)</h3><ul><li>여러 개의 숫자가 특정한 순서대로 모여있는 것</li></ul><a id="more"></a> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">x = np.array([[<span class="number">1</span>], [<span class="number">3</span>], [<span class="number">2</span>], [<span class="number">4</span>]])</span><br><span class="line">x</span><br></pre></td></tr></table></figure><pre><code>array([[1],       [3],       [2],       [4]])</code></pre><h3 id="3-행렬-matrix"><a href="#3-행렬-matrix" class="headerlink" title="3) 행렬(matrix)"></a>3) 행렬(matrix)</h3><ul><li>벡터들의 모임, 2D array of numbers</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">A = np.array([[<span class="number">11</span>, <span class="number">12</span>, <span class="number">13</span>], [<span class="number">21</span>, <span class="number">22</span>, <span class="number">23</span>]])</span><br><span class="line">A</span><br></pre></td></tr></table></figure><pre><code>array([[11, 12, 13],       [21, 22, 23]])</code></pre><h2 id="전치연산-transpose"><a href="#전치연산-transpose" class="headerlink" title="전치연산(transpose)"></a>전치연산(transpose)</h2><ul><li>행렬의 행과 열을 바꾸는 연산</li><li>벡터나 행렬에 $T$라는 위첨자(super-script)를 붙여서 표기</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># T는 method가 아닌 attribute이므로 소괄호()를 붙여서 호출하지 않는다.</span></span><br><span class="line">A.T</span><br></pre></td></tr></table></figure><pre><code>array([[11, 21],       [12, 22],       [13, 23]])</code></pre><h2 id="특수한-벡터와-행렬"><a href="#특수한-벡터와-행렬" class="headerlink" title="특수한 벡터와 행렬"></a>특수한 벡터와 행렬</h2><h3 id="1-영벡터"><a href="#1-영벡터" class="headerlink" title="1) 영벡터"></a>1) 영벡터</h3><ul><li>모든 원소가 0인 N차원 벡터</li></ul><h3 id="2-일벡터"><a href="#2-일벡터" class="headerlink" title="2) 일벡터"></a>2) 일벡터</h3><ul><li>모든 원소가 1인 N차원 벡터</li></ul><h3 id="3-정방-행렬-square-matrix"><a href="#3-정방-행렬-square-matrix" class="headerlink" title="3) 정방 행렬(square matrix)"></a>3) 정방 행렬(square matrix)</h3><ul><li>행의 개수와 열의 개수가 같은 행렬</li></ul><h3 id="4-대각-행렬-diagonal-matrix"><a href="#4-대각-행렬-diagonal-matrix" class="headerlink" title="4) 대각 행렬(diagonal matrix)"></a>4) 대각 행렬(diagonal matrix)</h3><ul><li>모든 비대각(off-diagonal) 요소가 0인 정방 행렬</li><li>numpy에서는 diag 명령을 사용</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.diag([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])</span><br></pre></td></tr></table></figure><pre><code>array([[1, 0, 0],       [0, 2, 0],       [0, 0, 3]])</code></pre><h3 id="5-단위-행렬-identity-matrix"><a href="#5-단위-행렬-identity-matrix" class="headerlink" title="5) 단위 행렬(identity matrix)"></a>5) 단위 행렬(identity matrix)</h3><ul><li>모든 대각 성분의 값이 1인 대각 행렬</li><li>numpy에서는 identity, 혹은 eye 명령을 사용</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.identity(<span class="number">3</span>)</span><br></pre></td></tr></table></figure><pre><code>array([[1., 0., 0.],       [0., 1., 0.],       [0., 0., 1.]])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.eye(<span class="number">4</span>)</span><br></pre></td></tr></table></figure><pre><code>array([[1., 0., 0., 0.],       [0., 1., 0., 0.],       [0., 0., 1., 0.],       [0., 0., 0., 1.]])</code></pre><h3 id="6-대칭-행렬-symmetric-matrix"><a href="#6-대칭-행렬-symmetric-matrix" class="headerlink" title="6) 대칭 행렬(symmetric matrix)"></a>6) 대칭 행렬(symmetric matrix)</h3><ul><li>정방 행렬 중 전치 행렬과 원래의 행렬이 같은 행렬</li><li>$S^T = S$</li></ul><h2 id="벡터와-행렬의-연산"><a href="#벡터와-행렬의-연산" class="headerlink" title="벡터와 행렬의 연산"></a>벡터와 행렬의 연산</h2><h3 id="1-벡터와-행렬의-덧셈과-뺄셈"><a href="#1-벡터와-행렬의-덧셈과-뺄셈" class="headerlink" title="1) 벡터와 행렬의 덧셈과 뺄셈"></a>1) 벡터와 행렬의 덧셈과 뺄셈</h3><ul><li>같은 크기의 벡터와 행렬에서 계산이 가능하며, 같은 위치의 원소끼리(element-wise) 더하거나 뺌 </li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">x1 = np.array([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>])</span><br><span class="line">x2 = np.array([<span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>])</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">x1 + x2</span><br></pre></td></tr></table></figure><pre><code>array([ 7,  9, 11, 13, 15])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">x2 - x1</span><br></pre></td></tr></table></figure><pre><code>array([5, 5, 5, 5, 5])</code></pre><h3 id="2-스칼라와-벡터-행렬의-곱셈"><a href="#2-스칼라와-벡터-행렬의-곱셈" class="headerlink" title="2) 스칼라와 벡터/행렬의 곱셈"></a>2) 스칼라와 벡터/행렬의 곱셈</h3><ul><li>벡터($x$)나 행렬($A$)의 모든 원소에 스칼라($c$)를 곱하는 것과 같음 (스칼라배)  </li></ul><p>$$ c \begin{bmatrix} x_1 \\x_2 \end{bmatrix} = \begin{bmatrix} cx_1 \\cx_2 \end{bmatrix} $$<br><br><br>$$ c \begin{bmatrix} a_{11} &amp; a_{12}\\a_{21} &amp; a_{22} \end{bmatrix} = \begin{bmatrix} ca_{11} &amp; ca_{12}\\ca_{21} &amp; ca_{22}  \end{bmatrix} $$</p><h3 id="3-선형-조합-linear-combination"><a href="#3-선형-조합-linear-combination" class="headerlink" title="3) 선형 조합(linear combination)"></a>3) 선형 조합(linear combination)</h3><ul><li>벡터/행렬을 스칼라배한 후 더하거나 뺀 것으로, 벡터나 행렬을 선형조합해도 그 크기는 변하지 않음</li></ul><p>$$ c_1x_1 + c_2x_2 + \cdots + c_Lx_L = x $$<br>$$ c_1A_1 + c_2A_2 + \cdots + c_LA_L = x $$</p><h3 id="4-벡터와-벡터의-곱셈"><a href="#4-벡터와-벡터의-곱셈" class="headerlink" title="4) 벡터와 벡터의 곱셈"></a>4) 벡터와 벡터의 곱셈</h3><ul><li>내적(inner product, dot product)</li><li>$x^Ty$ 혹은 $x \cdot y$</li><li>앞을 행벡터, 뒤를 열벡터로 두고 같은 위치의 원소들을 각각 곱해 모두 더해 스칼라 값으로 만듦</li></ul><p>$$ x^Ty = \begin{bmatrix}x_1 &amp; x_2 &amp; \cdots&amp;  x_N \end{bmatrix}\begin{bmatrix}y_1 \\ y_2 \\ \vdots \\  y_N \end{bmatrix} = x_1y_1 + \cdots + x_Ny_N = \sum_{i=1}^N x_iy_i $$</p><ul><li>가중합(weighted sum)을 벡터와 벡터의 곱셈으로 계산할 수 있음</li></ul><p>$$ w_1x_1 + \cdots + w_Nx_N = \sum_{i=1}^N w_ix_i = w^Tx $$</p><ul><li>벡터의 내적은 두 벡터간의 유사도(similarity)를 계산하는 데에도 이용 (유사할수록 내적이 커짐)</li></ul><h3 id="5-행렬과-행렬의-곱셈"><a href="#5-행렬과-행렬의-곱셈" class="headerlink" title="5) 행렬과 행렬의 곱셈"></a>5) 행렬과 행렬의 곱셈</h3><ul><li>행렬 $A$와 $B$의 곱을 행렬 $C$라고 할 때, $c_{ij}$의 값은 A행렬의 i번째 행벡터 $a_i^T$와 $B$행렬의 $j$번째 열벡터 $b_j$의 내적</li></ul><p>$$ C = AB \to c_{ij} = a_i^Tb_j $$</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">A = np.array([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]])</span><br><span class="line">B = np.array([[<span class="number">1</span>, <span class="number">2</span>], [<span class="number">3</span>, <span class="number">4</span>], [<span class="number">5</span>, <span class="number">6</span>]])</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">A</span><br></pre></td></tr></table></figure><pre><code>array([[1, 2, 3],       [4, 5, 6]])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">B</span><br></pre></td></tr></table></figure><pre><code>array([[1, 2],       [3, 4],       [5, 6]])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C = np.dot(A, B)</span><br><span class="line">C</span><br></pre></td></tr></table></figure><pre><code>array([[22, 28],       [49, 64]])</code></pre><h3 id="6-행렬의-계산-법칙"><a href="#6-행렬의-계산-법칙" class="headerlink" title="6) 행렬의 계산 법칙"></a>6) 행렬의 계산 법칙</h3><ul><li>행렬의 곱셈은 교환법칙이 성립하지 않음</li></ul><p>$$ AB \neq BA $$</p><ul><li>행렬의 덧셈에 대한 분배 법칙은 성립함</li></ul><p>$$ A(B+C) = AB + AC $$<br>$$ (A+B)C = AC + BC $$</p><ul><li>전치 연산도 덧셈/뺄셈에 대해 분배 법칙이 성립</li></ul><p>$$ (A + B)^T = A^T + B^T $$</p><ul><li>전체 연산의 곱셈의 경우 분배법칙이 성립하지만 전치 연산이 분배되면서 곱셈의 순서가 바뀜</li></ul><p>$$ (AB)^T = B^TA^T $$<br>$$ (ABC)^T = C^TB^TA^T $$</p><ul><li>연속된 행렬의 곱셈은 계산 순서를 임의로 해도 상관 없음</li></ul><p>$$ ABC = (AB)C = A(BC) $$<br>$$ ABCD = ((AB)C)D = (AB)(CD) = A(BCD) = A(BC)D $$</p><ul><li>어떤 정방 행렬이든 단위 행렬을 곱하면 그 행렬의 값이 변하지 않음</li></ul><p>$$ AI = IA = A $$</p><h4 id="참고자료"><a href="#참고자료" class="headerlink" title="참고자료"></a>참고자료</h4><ul><li><a href="https://datascienceschool.net/view-notebook/cd600e9627cd4f16bc4f6078231ab28c/" target="_blank" rel="noopener">데이터 사이언스 스쿨</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> DataScience </category>
          
          <category> Math </category>
          
      </categories>
      
      
        <tags>
            
            <tag> data analysis </tag>
            
            <tag> math </tag>
            
            <tag> 선형대수 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>&lt;선형대수&gt; 3Blue1Brown - Essence of linear algebra E14</title>
      <link href="/2018/11/02/math-lin_alg-014/"/>
      <url>/2018/11/02/math-lin_alg-014/</url>
      
        <content type="html"><![CDATA[<p>선형대수 기본 개념을 익히는 데 아주 좋은 youtube 3Blue1Brown 채널의 Essence of linear algebra 시리즈의 14편(마지막) 내용을 간략하게 정리해본다.<br><a id="more"></a> </p><div class="video-container"><iframe src="//www.youtube.com/embed/TgKwz5Ikpc8?list=PLZHQObOWTQDPD3MizzM2xVFitgF8hE_ab" frameborder="0" allowfullscreen></iframe></div><h2 id="E14-Abstract-vector-space"><a href="#E14-Abstract-vector-space" class="headerlink" title="E14. Abstract vector space"></a>E14. Abstract vector space</h2><ul><li>Formal definition of Linearity<ul><li>Linear transformations preserve addition and scalar multiplication</li><li>Additivity: $L(\vec v + \vec w) = L(\vec v) + L(\vec w)$<ul><li>두 벡터를 더한 후에 변환한 것과 두 벡터를 각각 변환 후 더한 것이 같음 </li></ul></li><li>Scaling: $L(c\vec v) + cL(\vec v)$<ul><li>벡터를 scaling하고 변환한 것과 벡터를 변환하고 scaling한 것이 같음</li></ul></li></ul></li></ul><ul><li>Vector space: linearity의 조건을 만족하는 모든 것들 (추상적인 개념)</li></ul>]]></content>
      
      
      <categories>
          
          <category> DataScience </category>
          
          <category> Math </category>
          
      </categories>
      
      
        <tags>
            
            <tag> data analysis </tag>
            
            <tag> math </tag>
            
            <tag> 선형대수 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>&lt;선형대수&gt; 3Blue1Brown - Essence of linear algebra E13</title>
      <link href="/2018/11/02/math-lin_alg-013/"/>
      <url>/2018/11/02/math-lin_alg-013/</url>
      
        <content type="html"><![CDATA[<p>선형대수 기본 개념을 익히는 데 아주 좋은 youtube 3Blue1Brown 채널의 Essence of linear algebra 시리즈의 13편 내용을 간략하게 정리해본다.<br><a id="more"></a> </p><div class="video-container"><iframe src="//www.youtube.com/embed/PFDu9oVAE-g" frameborder="0" allowfullscreen></iframe></div><h2 id="E13-Eigenvectors-and-eigenvalues-고유벡터와-고유값"><a href="#E13-Eigenvectors-and-eigenvalues-고유벡터와-고유값" class="headerlink" title="E13. Eigenvectors and eigenvalues(고유벡터와 고유값)"></a>E13. Eigenvectors and eigenvalues(고유벡터와 고유값)</h2><h2 id="1-개념"><a href="#1-개념" class="headerlink" title="1. 개념"></a>1. 개념</h2><ul><li>eigenvector와 eigenvalue를 이해하려면 앞에서 다룬 개념들에 대한 시각적 이해, 특히 행렬을 선형변환으로 생각하는 방법에 대한 이해가 선행되어야 함</li><li>2차원 선형변환에서 대부분의 경우 특정 벡터는 그 벡터의 span을 벗어나게 되지만, 변형 후에도 고유한 span을 벗어나지 않는 경우가 있음<ul><li>행렬을 곱하는 것이 마치 scalar처럼 vector를 늘이고 줄이기(scaling)만 하는 것</li></ul></li><li>이 span에 놓여있는 벡터를 변환의 eigenvectors, 변환 도중 원래 벡터를 scaling하는 배수를 eigenvalue라고 함</li><li>3차원 rotation에서 eigenvector를 찾을 수 있다면 그것이 바로 회전축이 됨</li></ul><h2 id="2-계산"><a href="#2-계산" class="headerlink" title="2. 계산"></a>2. 계산</h2><ul><li>계산식: $A \vec v = \lambda \vec v$<ul><li>$A$: 임의의 변환을 나타내는 행렬(transformation matrix)</li><li>$\vec v$: 고유벡터(eigenvector)</li><li>$\lambda$: 고유값(eigenvalue)</li></ul></li><li>$scaling \; by \; \lambda \Leftrightarrow Matrix \; multiplication \; by \begin {bmatrix} \lambda &amp;0&amp;0 \\ 0&amp;\lambda&amp;0 \\ 0&amp;0&amp;\lambda\end{bmatrix}(=\lambda I)$</li><li>풀이<br>$$<br>\begin{align}<br>A \vec v &amp; = \lambda \vec v \\<br>A \vec v &amp; = (\lambda I) \vec v \\<br>(A - \lambda I)\vec v &amp; = 0 \\<br>det(A - \lambda I) &amp; = 0 \quad (squishification) \\<br>\end{align}<br>$$</li></ul><h2 id="3-Eigenbasis-고유기저"><a href="#3-Eigenbasis-고유기저" class="headerlink" title="3. Eigenbasis(고유기저)"></a>3. Eigenbasis(고유기저)</h2><ul><li>Eigenbasis: 기저벡터이기도 한 고유벡터의 쌍</li></ul>]]></content>
      
      
      <categories>
          
          <category> DataScience </category>
          
          <category> Math </category>
          
      </categories>
      
      
        <tags>
            
            <tag> data analysis </tag>
            
            <tag> math </tag>
            
            <tag> 선형대수 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>&lt;선형대수&gt; 3Blue1Brown - Essence of linear algebra E12</title>
      <link href="/2018/11/02/math-lin_alg-012/"/>
      <url>/2018/11/02/math-lin_alg-012/</url>
      
        <content type="html"><![CDATA[<p>선형대수 기본 개념을 익히는 데 아주 좋은 youtube 3Blue1Brown 채널의 Essence of linear algebra 시리즈의 12편 내용을 간략하게 정리해본다.</p><a id="more"></a> <div class="video-container"><iframe src="//www.youtube.com/embed/P2LTAUO1TdA" frameborder="0" allowfullscreen></iframe></div><h2 id="E12-Change-of-basis"><a href="#E12-Change-of-basis" class="headerlink" title="E12. Change of basis"></a>E12. Change of basis</h2><h2 id="1-개념"><a href="#1-개념" class="headerlink" title="1. 개념"></a>1. 개념</h2><ul><li>우리의 basis vector(표준 좌표계): $\hat i, \hat j$<ul><li>$\hat i, \hat j$에 scalar를 곱하고 서로 더해(scaling) 특정 벡터를 나타낼 수 있음</li></ul></li><li>Jennifer의 basis vector(alternative coordinate system) $\hat b_1, \hat b_2$를 이용해 특정 벡터를 나타내면 좌표값이 완전히 달라짐</li></ul><h2 id="2-좌표계-변환"><a href="#2-좌표계-변환" class="headerlink" title="2. 좌표계 변환"></a>2. 좌표계 변환</h2><ul><li><p>Jennifer가 말하는 좌표를 우리의 좌표계로 표현/이해하려면?</p><ul><li>우리의 basis vector에서 Jennifer의 basis vector로의 “선형변환”</li><li>e.g. Jennifer의 basis vector가 표준좌표계에서$\begin{bmatrix}2\\1\end{bmatrix}, \begin{bmatrix}-1\\1\end{bmatrix}$일 경우($A = \begin{bmatrix}2&amp;-1\\1&amp;1 \end{bmatrix}$) 제니퍼가 말하는 벡터 $\begin{bmatrix}2\\1\end{bmatrix}$는 표준좌표계의 어떤 벡터인가?<br>$$ \begin{bmatrix}2&amp;-1\\1&amp;1 \end{bmatrix}\begin{bmatrix}2\\1\end{bmatrix}=\begin{bmatrix}3\\3\end{bmatrix}$$</li></ul></li><li><p>우리의 좌표계의 벡터(좌표)가 Jennifer의 좌표계에서는 어떻게 표현/이해되나?</p><ul><li>위의 “선형변환” matrix의 역을 취함 (Inverse change of basis matrix)</li><li>e.g. 우리 표준좌표계의 $\begin{bmatrix}3\\2\end{bmatrix}$는 Jennifer의 좌표계에서는 어떤 벡터인가?<br>$$ \begin{bmatrix}2&amp;-1\\1&amp;1 \end{bmatrix}^{-1}\begin{bmatrix}3\\2\end{bmatrix}=\begin{bmatrix}5/3\\1/3\end{bmatrix} $$</li></ul></li></ul><p>우리 좌표계의 행렬 변환 ⇆ Jennifer의 행렬 변환: $A^{-1}MA$</p>]]></content>
      
      
      <categories>
          
          <category> DataScience </category>
          
          <category> Math </category>
          
      </categories>
      
      
        <tags>
            
            <tag> data analysis </tag>
            
            <tag> math </tag>
            
            <tag> 선형대수 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018-11-01-TIL</title>
      <link href="/2018/11/01/2018-11-01-TIL/"/>
      <url>/2018/11/01/2018-11-01-TIL/</url>
      
        <content type="html"><![CDATA[<h4 id="공부한-것-amp-리뷰"><a href="#공부한-것-amp-리뷰" class="headerlink" title="공부한 것 &amp; 리뷰"></a>공부한 것 &amp; 리뷰</h4><ul><li>선형대수 패캠 조교를 하면서 복습도 하고 있다. 블로그에는 정말 좋은 유튜브 채널인 3blue1brown의 Essense of Linear Algebra 영상을 에피소드마다 정리해서 포스팅하고 있다. </li><li>아무래도 학원도 안 다니고 하니 TIL도 잘 안 쓰게 되고, 확실히 게을러지고 있다. 복습때문에 계속 기업 지원을 미루고 있는데, 일단 지원을 다시 시작해야겠다. 춥다고 더 움츠러들기 전에!</li></ul><h4 id="내일-공부할-것"><a href="#내일-공부할-것" class="headerlink" title="내일 공부할 것"></a>내일 공부할 것</h4><ul><li>NLP 복습</li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>&lt;선형대수&gt; 3Blue1Brown - Essence of linear algebra E11</title>
      <link href="/2018/11/01/math-lin_alg-011/"/>
      <url>/2018/11/01/math-lin_alg-011/</url>
      
        <content type="html"><![CDATA[<p>선형대수 기본 개념을 익히는 데 아주 좋은 youtube 3Blue1Brown 채널의 Essence of linear algebra 시리즈의 11편 내용을 간략하게 정리해본다.<br><a id="more"></a> </p><div class="video-container"><iframe src="//www.youtube.com/embed/BaM7OCEm3G0?list=PLZHQObOWTQDPD3MizzM2xVFitgF8hE_ab" frameborder="0" allowfullscreen></iframe></div><h2 id="E11-Cross-products-in-the-light-of-linear-transformations"><a href="#E11-Cross-products-in-the-light-of-linear-transformations" class="headerlink" title="E11. Cross products in the light of linear transformations"></a>E11. Cross products in the light of linear transformations</h2><p>11강의 내용은 요약을 아래의 캡쳐 이미지로 대신합니다.</p><img src="/2018/11/01/math-lin_alg-011/3b1b_11.jpeg">]]></content>
      
      
      <categories>
          
          <category> DataScience </category>
          
          <category> Math </category>
          
      </categories>
      
      
        <tags>
            
            <tag> data analysis </tag>
            
            <tag> math </tag>
            
            <tag> 선형대수 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>&lt;선형대수&gt; 3Blue1Brown - Essence of linear algebra E10</title>
      <link href="/2018/11/01/math-lin_alg-010/"/>
      <url>/2018/11/01/math-lin_alg-010/</url>
      
        <content type="html"><![CDATA[<p>선형대수 기본 개념을 익히는 데 아주 좋은 youtube 3Blue1Brown 채널의 Essence of linear algebra 시리즈의 10편 내용을 간략하게 정리해본다.</p><a id="more"></a><div class="video-container"><iframe src="//www.youtube.com/embed/eu6i7WJeinw?list=PLZHQObOWTQDPD3MizzM2xVFitgF8hE_ab" frameborder="0" allowfullscreen></iframe></div><h2 id="E10-Cross-products-vec-v-times-vec-w"><a href="#E10-Cross-products-vec-v-times-vec-w" class="headerlink" title="E10. Cross products: $\vec v \times \vec w$"></a>E10. Cross products: $\vec v \times \vec w$</h2><h2 id="1-What-is-cross-product"><a href="#1-What-is-cross-product" class="headerlink" title="1. What is cross product?"></a>1. What is cross product?</h2><ul><li>2차원 벡터의 경우, $\vec v \times \vec w = Area \; of\; parallelogram$</li><li>$\vec v$가 $\vec w$의 오른쪽에 위치하면 $\vec v \times \vec w \gt 0$</li><li>$\vec v$가 $\vec w$의 왼쪽에 위치하면 $\vec v \times \vec w \lt 0$</li><li>$\vec v \times \vec w = - \; \vec w \times \vec v$</li></ul><h2 id="2-Cross-product-computation"><a href="#2-Cross-product-computation" class="headerlink" title="2. Cross product computation"></a>2. Cross product computation</h2><ul><li>$\vec v$와 $\vec w$의 좌표를 행렬의 column으로 넣고 행렬식 계산</li><li>e.g. $\vec v = \begin{bmatrix} 3 \\ 1 \end{bmatrix} , \; \vec v = \begin{bmatrix} 2 \\ -1 \end{bmatrix}$ 일 경우:  $\; \vec v \times \vec w = det\Bigl(\begin{bmatrix}3 &amp; 2  \\ 1 &amp; -1 \end{bmatrix}\Bigr)$</li><li>두 벡터가 직교에 가까울수록 외적값이 커짐</li></ul><h2 id="3-외적의-정확한-의미-vec-v-times-vec-w-vec-p"><a href="#3-외적의-정확한-의미-vec-v-times-vec-w-vec-p" class="headerlink" title="3. 외적의 정확한 의미: $\vec v \times \vec w = \vec p$"></a>3. 외적의 정확한 의미: $\vec v \times \vec w = \vec p$</h2><ul><li>개념적으로는 두 벡터가 이루는 평행사변형의 면적이라고 볼 수 있지만 정확한 외적의 개념은 두 개의 3차원 벡터로 새로운 3차원 벡터를 만들어내는 것(결과가 면적이 아닌 벡터임)</li><li>$\vec p$의 길이가 두 벡터의 면적과 같고, $\vec p$의 방향은 평행사변형에 직교함(perpendicular)<ul><li>직교의 규칙: 오른손 규칙 (엄지, 검지, 중지가 $\vec p, \vec v, \vec w$)</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> DataScience </category>
          
          <category> Math </category>
          
      </categories>
      
      
        <tags>
            
            <tag> data analysis </tag>
            
            <tag> math </tag>
            
            <tag> 선형대수 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>&lt;선형대수&gt; 3Blue1Brown - Essence of linear algebra E9</title>
      <link href="/2018/11/01/math-lin_alg-009/"/>
      <url>/2018/11/01/math-lin_alg-009/</url>
      
        <content type="html"><![CDATA[<p>선형대수 기본 개념을 익히는 데 아주 좋은 youtube 3Blue1Brown 채널의 Essence of linear algebra 시리즈의 9편 내용을 간략히 정리해본다.</p><a id="more"></a> <div class="video-container"><iframe src="//www.youtube.com/embed/LyGKycYT2v0?list=PLZHQObOWTQDPD3MizzM2xVFitgF8hE_ab" frameborder="0" allowfullscreen></iframe></div><h2 id="E9-Dot-products-and-duality"><a href="#E9-Dot-products-and-duality" class="headerlink" title="E9. Dot products and duality"></a>E9. Dot products and duality</h2><h2 id="1-Dot-product-내적-vec-v-cdot-vec-w"><a href="#1-Dot-product-내적-vec-v-cdot-vec-w" class="headerlink" title="1. Dot product(내적): $\vec v \cdot \vec w$"></a>1. Dot product(내적): $\vec v \cdot \vec w$</h2><ul><li>Dot product 개념: 두 벡터 $\vec v, \vec w$의 같은 위치의 원소끼리 곱해 더함, 결과는 scalar</li><li>기하학적인 의미: $\vec w$를 $\vec v$에 project한 벡터의 길이와 $\vec v$의 길이를 곱합<ul><li>$\vec v \cdot \vec w = (length \;of\; projected\; \vec w)(length \; of \; \vec v)$</li><li>이때 순서는 중요하지 않음($\vec w$에 $\vec v$를 투사해도 결과는 같음)</li></ul></li><li>$\vec w$가 $\vec v$의 방향과 반대이면 dot product는 음수</li><li>$\vec w$가 $\vec v$의 방향과 비슷하면 dot product는 양수</li><li>$\vec w$가 $\vec v$의 방향과 수직(perpendicular)이면 dot product는 0</li></ul><h2 id="2-Duality"><a href="#2-Duality" class="headerlink" title="2. Duality"></a>2. Duality</h2><ul><li>Duality: natural-but-surprising correspondence between two mathematical things</li><li>matrix-vector product ⇔ dot product<ul><li>$1 \cdot 2$ matrix와 2차원 vector를 생각할 것  </li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> DataScience </category>
          
          <category> Math </category>
          
      </categories>
      
      
        <tags>
            
            <tag> data analysis </tag>
            
            <tag> math </tag>
            
            <tag> 선형대수 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>&lt;선형대수&gt; 3Blue1Brown - Essence of linear algebra E8</title>
      <link href="/2018/11/01/math-lin_alg-008/"/>
      <url>/2018/11/01/math-lin_alg-008/</url>
      
        <content type="html"><![CDATA[<p>선형대수 기본 개념을 익히는 데 아주 좋은 youtube 3Blue1Brown 채널의 Essence of linear algebra 시리즈의 8편 내용을 간략히 정리해본다.</p><a id="more"></a> <div class="video-container"><iframe src="//www.youtube.com/embed/v8VSDg_WQlA" frameborder="0" allowfullscreen></iframe></div><h2 id="E8-Nonsquare-matrices-as-transformation-between-dimensions"><a href="#E8-Nonsquare-matrices-as-transformation-between-dimensions" class="headerlink" title="E8. Nonsquare matrices as transformation between dimensions"></a>E8. Nonsquare matrices as transformation between dimensions</h2><ul><li>$n \times m$ 행렬에서 column $m$은 입력 기저벡터의 수, row $n$은 기저벡터의 변환 후 좌표값 개수(차원수)를 나타냄</li><li>2차원에서 3차원으로 가는 $3 \times 2$ matrix 곱은 평면이 3차원상에서 비틀려 나타나는 것과 유사하고, 3차원에서 2차원으로 가는 $3 \times 2$ matrix 곱은 3차원을 투사해서 평면으로 찌그러트려보는 것과 유사</li></ul>]]></content>
      
      
      <categories>
          
          <category> DataScience </category>
          
          <category> Math </category>
          
      </categories>
      
      
        <tags>
            
            <tag> data analysis </tag>
            
            <tag> math </tag>
            
            <tag> 선형대수 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>&lt;선형대수&gt; 3Blue1Brown - Essence of linear algebra E7</title>
      <link href="/2018/10/30/math-lin_alg-007/"/>
      <url>/2018/10/30/math-lin_alg-007/</url>
      
        <content type="html"><![CDATA[<p>선형대수 기본 개념을 익히는 데 아주 좋은 youtube 3Blue1Brown 채널의 Essence of linear algebra 시리즈의 7편 내용을 간략히 정리해본다.</p><a id="more"></a> <div class="video-container"><iframe src="//www.youtube.com/embed/uQhTuRlWMxw" frameborder="0" allowfullscreen></iframe></div><h2 id="E7-Inverse-matrices-column-space-and-null-space"><a href="#E7-Inverse-matrices-column-space-and-null-space" class="headerlink" title="E7. Inverse matrices, column space and null space"></a>E7. Inverse matrices, column space and null space</h2><h2 id="1-Usefulness-of-matrices"><a href="#1-Usefulness-of-matrices" class="headerlink" title="1. Usefulness of matrices"></a>1. Usefulness of matrices</h2><ul><li>특정 방정식계(system of equations)를 풀 수 있음 ⇦ Linear system of equations</li><li>system of equations: unknown variables &amp; equations     <script type="math/tex; mode=display">\begin{matrix} 2x+5y+3z = -3 \\\ 4x+0y+8z=0 \\\ 1x+3y+0z=2 \end{matrix} \to \begin{bmatrix} 2&5&3 \\\ 4&0&8 \\\ 1&3&0 \end{bmatrix}\begin{bmatrix} x \\\ y \\\ z \end{bmatrix} = \begin{bmatrix} -3 \\\ 0 \\\ 2 \end{bmatrix} \to A\vec x = \vec v</script></li></ul><h2 id="2-A-vec-x-vec-v-의-해-vec-x-를-구하는-방법"><a href="#2-A-vec-x-vec-v-의-해-vec-x-를-구하는-방법" class="headerlink" title="2. $A\vec x = \vec v$의 해 $\vec x$를 구하는 방법"></a>2. $A\vec x = \vec v$의 해 $\vec x$를 구하는 방법</h2><h3 id="1-when-det-A-neq-0-A-의-역행렬이-존재-⇨-Inverse-transformation"><a href="#1-when-det-A-neq-0-A-의-역행렬이-존재-⇨-Inverse-transformation" class="headerlink" title="1) when $det(A) \neq 0$: $A$의 역행렬이 존재 ⇨ Inverse transformation"></a>1) when $det(A) \neq 0$: $A$의 역행렬이 존재 ⇨ Inverse transformation</h3><ul><li>Inverse matrices(역행렬) $A^{-1}$: $A^{-1}A = I$</li></ul><script type="math/tex; mode=display">\begin{align}A^{-1}A \vec x & = A^{-1}\vec v \\\\vec x & = A^{-1}\vec v \\\end{align}</script><h3 id="2-when-det-A-0-A-의-역행렬이-존재하지-않음"><a href="#2-when-det-A-0-A-의-역행렬이-존재하지-않음" class="headerlink" title="2) when $det(A) = 0$: $A$의 역행렬이 존재하지 않음"></a>2) when $det(A) = 0$: $A$의 역행렬이 존재하지 않음</h3><ul><li>rank: number of dimensions in the output of transformation<ul><li>변환의 결과가 선, 즉 1차원이라면 rank = 1</li><li>변환의 결과가 평면 상의 벡터들이라면 rank = 2 </li></ul></li><li><p>$n \times n$ 행렬에서 rank가 $n$보다 작을 경우, 즉 full rank가 아닐 경우, 공간이 더 작은 차원으로 축소했음을 의미</p></li><li><p>Column space of $A$: set of all possible outputs of $A \vec v$</p><ul><li>span of columns ⟺ column space</li></ul></li><li><p>Null space(Kernel): 차원이 축소할 때 원점으로 이동되는 벡터들의 집합</p></li><li>$A \vec x= \begin{bmatrix} 0\\ 0\end{bmatrix}$인 경우 null space 모두가 해가 될 수 있음 </li></ul>]]></content>
      
      
      <categories>
          
          <category> DataScience </category>
          
          <category> Math </category>
          
      </categories>
      
      
        <tags>
            
            <tag> data analysis </tag>
            
            <tag> math </tag>
            
            <tag> 선형대수 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>&lt;선형대수&gt; 3Blue1Brown - Essence of linear algebra E6</title>
      <link href="/2018/10/30/math-lin_alg-006/"/>
      <url>/2018/10/30/math-lin_alg-006/</url>
      
        <content type="html"><![CDATA[<p>선형대수 기본 개념을 익히는 데 아주 좋은 youtube 3Blue1Brown 채널의 Essence of linear algebra 시리즈의 6편 내용을 간략히 정리해본다.</p><a id="more"></a> <div class="video-container"><iframe src="//www.youtube.com/embed/Ip3X9LOh2dk" frameborder="0" allowfullscreen></iframe></div><h2 id="E6-The-determinant"><a href="#E6-The-determinant" class="headerlink" title="E6. The determinant"></a>E6. The determinant</h2><h2 id="1-Determinant-of-transformation의-개념"><a href="#1-Determinant-of-transformation의-개념" class="headerlink" title="1. Determinant of transformation의 개념"></a>1. Determinant of transformation의 개념</h2><ul><li>Determinant(행렬식): 선형변형 후 단위면적을 scaling하는 factor<ul><li>2차원 변환의 determinant 값이 3이라면 특정 면적의 크기는 3배가 됨 </li><li>2차원 변환의 determinant 값이 0이라면 차원을 축소시켜 직선이나 점이 됨 (면적은 0이됨)</li><li>determinant 값이 음수인 경우는 방향(orientation)이 뒤집히는 것으로 볼 수 있음</li></ul></li><li>3차원의 determinant는 단위정육면체의 부피를 scaling하는 factor<ul><li>determinant 값이 음수인 경우 오른손의 규칙의 방향이 뒤집히는 것(왼손으로)으로 볼 수 있음<ul><li>오른손의 규칙: 오른손의 엄지, 검지, 중지를 폈을 때 각각 $\hat k, \hat i, \hat j$에 대응함</li></ul></li></ul></li></ul><h2 id="2-Determinant-computation"><a href="#2-Determinant-computation" class="headerlink" title="2. Determinant computation"></a>2. Determinant computation</h2><ul><li>2차원 행렬의 determinant: $det\Bigl(\begin{bmatrix} a &amp; b \\ c &amp; d \end{bmatrix}\Bigr) = ad - cd$</li></ul>]]></content>
      
      
      <categories>
          
          <category> DataScience </category>
          
          <category> Math </category>
          
      </categories>
      
      
        <tags>
            
            <tag> math </tag>
            
            <tag> data science </tag>
            
            <tag> 선형대수 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>&lt;선형대수&gt; 3Blue1Brown - Essence of linear algebra E5</title>
      <link href="/2018/10/30/math-lin_alg-005/"/>
      <url>/2018/10/30/math-lin_alg-005/</url>
      
        <content type="html"><![CDATA[<p>선형대수 기본 개념을 익히는 데 아주 좋은 youtube 3Blue1Brown 채널의 Essence of linear algebra 시리즈의 5편 내용을 간략히 정리해본다.</p><a id="more"></a> <div class="video-container"><iframe src="//www.youtube.com/embed/rHLEWRxRGiM" frameborder="0" allowfullscreen></iframe></div><h2 id="E5-Three-dimentional-linear-transformations"><a href="#E5-Three-dimentional-linear-transformations" class="headerlink" title="E5. Three-dimentional linear transformations"></a>E5. Three-dimentional linear transformations</h2><h2 id="1-3차원의-선형변환"><a href="#1-3차원의-선형변환" class="headerlink" title="1. 3차원의 선형변환"></a>1. 3차원의 선형변환</h2><ul><li>3차원 기저벡터: $\hat i=\begin{bmatrix} 1\\0\\0\end{bmatrix}, \hat j=\begin{bmatrix} 0\\1\\0\end{bmatrix}, \hat k=\begin{bmatrix} 0\\0\\1\end{bmatrix}$</li><li>2차원에서와 마찬가지로 각 기저벡터들이 어디로 이동하는지 좌표값을 알면 특정 벡터 $\vec v=\begin{bmatrix} x\\y\\z\end{bmatrix}=x\hat i+y\hat j+z\hat k$가 어떤 벡터로 변형되는지 파악할 수 있음</li><li>e.g. 기저벡터: $\hat i, \hat j, \hat k$가 $\begin{bmatrix} 1\\0\\1\end{bmatrix}, \begin{bmatrix} 1\\1\\0\end{bmatrix}, \begin{bmatrix} 0\\0\\1\end{bmatrix}$로 이동한다고 할 때의 선형변환<ul><li>각 이동한 좌표값이 행렬의 열을 구성함 </li></ul></li></ul><p>$$<br>\begin{align}<br>  \begin{bmatrix} 1&amp;1&amp;0 \\ 0&amp;1&amp;0 \\ 1&amp;0&amp;1\end{bmatrix}<br>  \begin{bmatrix}x\\ y\\ z\end{bmatrix}<br>  &amp; = x\begin{bmatrix}1\\ 0\\ 1\end{bmatrix}<br>  +y\begin{bmatrix}1\\ 1\\ 0\end{bmatrix}<br>  +z\begin{bmatrix} 0\\ 0\\ 1\end{bmatrix} \\<br>   &amp; = \begin{bmatrix} 1x+1y+0z\\ 0x+1y+0z\\ 1x+0y+1z \end{bmatrix} \\<br>\end{align}<br>$$</p>]]></content>
      
      
      <categories>
          
          <category> DataScience </category>
          
          <category> Math </category>
          
      </categories>
      
      
        <tags>
            
            <tag> math </tag>
            
            <tag> data science </tag>
            
            <tag> 선형대수 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>&lt;선형대수&gt; 3Blue1Brown - Essence of linear algebra E4</title>
      <link href="/2018/10/30/math-lin_alg-004/"/>
      <url>/2018/10/30/math-lin_alg-004/</url>
      
        <content type="html"><![CDATA[<p>선형대수 기본 개념을 익히는 데 아주 좋은 youtube 3Blue1Brown 채널의 Essence of linear algebra 시리즈의 4편 내용을 간략히 정리해본다.</p><a id="more"></a> <div class="video-container"><iframe src="//www.youtube.com/embed/XkY2DOUCWMU" frameborder="0" allowfullscreen></iframe></div><h2 id="E4-Matrix-multiplication-as-composition"><a href="#E4-Matrix-multiplication-as-composition" class="headerlink" title="E4. Matrix multiplication as composition"></a>E4. Matrix multiplication as composition</h2><h2 id="1-Composition-of-linear-transformation"><a href="#1-Composition-of-linear-transformation" class="headerlink" title="1. Composition of linear transformation"></a>1. Composition of linear transformation</h2><ul><li>선형변환을 한 번 하고 다시 선형변환을 하면 그 결과는 새로운 하나의 선현변환이 됨</li><li>이를 행렬의 곱으로 나타낼 수 있음, 단 함수의 합성처럼 식의 왼쪽으로 곱해나가야 함</li><li>e.g. 첫번째 선형변환을 $\begin{bmatrix} 0 &amp; -1 \\ 1 &amp; 0\end{bmatrix}$(rotation), 두번째 선형변환을 $\begin{bmatrix} 1 &amp; 1 \\ 0 &amp; 1\end{bmatrix}$(shear)라고 할 때 그 composition<br>$$<br>\begin{bmatrix} 1 &amp; 1 \\ 0 &amp; 1\end{bmatrix}\Bigl(\begin{bmatrix} 0 &amp; -1 \\ 1 &amp; 0\end{bmatrix}\begin{bmatrix} x \\ y \end{bmatrix} \Bigr) = \begin{bmatrix} 1 &amp; -1 \\ 1 &amp; 0\end{bmatrix}\begin{bmatrix} x \\ y \end{bmatrix}<br>$$</li><li>이 때 composition 행렬을 두 원본 행렬의 곱(product)이라고 할 수 있음 </li></ul><h2 id="2-Matrix-multiplication"><a href="#2-Matrix-multiplication" class="headerlink" title="2. Matrix multiplication"></a>2. Matrix multiplication</h2><ul><li>$M_1 = \begin{bmatrix} e &amp; f \\ g &amp; h\end{bmatrix}$과 $M_2 = \begin{bmatrix} a &amp; b \\ c &amp; d\end{bmatrix}$의 곱:<br>$$<br>\begin{bmatrix} a &amp; b \\ c &amp; d\end{bmatrix} \begin{bmatrix} e &amp; f \\ g &amp; h\end{bmatrix} = \begin{bmatrix} ae+bg &amp; af+bh \\ ce+dg &amp; cf+dh \end{bmatrix}<br>$$</li><li>교환법칙은 성립하지 않음: $AB \neq BA$ (곱하는 순서는 중요하다!)</li><li>결합법칙은 성립함: $(AB)C = A(BC)$ (Associativity)</li></ul>]]></content>
      
      
      <categories>
          
          <category> DataScience </category>
          
          <category> Math </category>
          
      </categories>
      
      
        <tags>
            
            <tag> math </tag>
            
            <tag> data science </tag>
            
            <tag> 선형대수 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>&lt;선형대수&gt; 3Blue1Brown - Essence of linear algebra E3</title>
      <link href="/2018/10/30/math-lin_alg-003/"/>
      <url>/2018/10/30/math-lin_alg-003/</url>
      
        <content type="html"><![CDATA[<p>선형대수 기본 개념을 익히는 데 아주 좋은 youtube 3Blue1Brown 채널의 Essence of linear algebra 시리즈의 3편 내용을 간략히 정리해본다.</p><a id="more"></a> <div class="video-container"><iframe src="//www.youtube.com/embed/kYB8IZa5AuE" frameborder="0" allowfullscreen></iframe></div><h2 id="E3-Linear-transformation-and-matrices"><a href="#E3-Linear-transformation-and-matrices" class="headerlink" title="E3. Linear transformation and matrices"></a>E3. Linear transformation and matrices</h2><h2 id="1-Linear-transformation란"><a href="#1-Linear-transformation란" class="headerlink" title="1. Linear transformation란"></a>1. Linear transformation란</h2><ul><li>특정 벡터를 다른 벡터로 바꾸는 변환 (input vector → output vector)</li><li>Linear 변환의 속성<ul><li>Lines remain lines </li><li>Origin remains fixed</li><li>Grid lines remain parallel and evenly spaced</li></ul></li></ul><h2 id="2-Linear-transformation-계산"><a href="#2-Linear-transformation-계산" class="headerlink" title="2. Linear transformation 계산"></a>2. Linear transformation 계산</h2><ul><li>기저벡터 $\hat i$와 $\hat j$의 변형위치를 알면 임의의 벡터 $\vec v$를 추론할 수 있음<ul><li>e.g. $\vec v = -1\hat i + 2\hat j$에서 $\hat i$와 $\hat j$가 $\begin{bmatrix} 1 \\ 2 \end{bmatrix},  \begin{bmatrix} 3 \\ 0 \end{bmatrix}$로 변형된 경우 변환된 $\vec v$ 구하기</li></ul></li></ul><p>$$<br>\begin{align}<br>\vec v &amp; = -1(Transformed \; \hat i) + 2(Transformed\; \hat j)\\<br> &amp; = -1\begin{bmatrix}1\\2\end{bmatrix} + 2 \begin{bmatrix}3\\0\end{bmatrix}\\<br> &amp; = \begin{bmatrix} -1(1)+2(3) \\ 1(2)+2(0) \end{bmatrix}\\<br> &amp; = \begin{bmatrix} 5 \\ 2 \end{bmatrix}<br>\end{align}<br>$$</p><ul><li>일반화: $\vec v = x\hat i + y\hat j = \begin{bmatrix} x \\ y \end{bmatrix}$에서 $\hat i$와 $\hat j$가 $\begin{bmatrix} a \\ c \end{bmatrix},  \begin{bmatrix} b \\ d \end{bmatrix}$로 변형된 경우 변환된 벡터 구하기</li></ul><p>$$<br>\begin{bmatrix} a &amp; b \\ c &amp; d\end{bmatrix}\begin{bmatrix} x \\ y \end{bmatrix} =<br>x\begin{bmatrix} a \\ c \end{bmatrix} + \;y\begin{bmatrix} b \\ d \end{bmatrix} = \begin{bmatrix} ax+by \\ cx+dy \end{bmatrix}<br>$$<br><code>⇒ 행렬-벡터 곱셈은 선형 변환을 계산하는 방법이라고 할 수 있음</code></p>]]></content>
      
      
      <categories>
          
          <category> DataScience </category>
          
          <category> Math </category>
          
      </categories>
      
      
        <tags>
            
            <tag> math </tag>
            
            <tag> data science </tag>
            
            <tag> 선형대수 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>&lt;선형대수&gt; 3Blue1Brown - Essence of linear algebra E2</title>
      <link href="/2018/10/24/math-lin_alg-002/"/>
      <url>/2018/10/24/math-lin_alg-002/</url>
      
        <content type="html"><![CDATA[<p>선형대수 기본 개념을 익히는 데 아주 좋은 youtube 3Blue1Brown 채널의 Essence of linear algebra 시리즈의 2편 내용을 간략히 정리해본다.</p><a id="more"></a><div class="video-container"><iframe src="//www.youtube.com/embed/k7RM-ot2NWY?list=PLZHQObOWTQDPD3MizzM2xVFitgF8hE_ab" frameborder="0" allowfullscreen></iframe></div><h2 id="E2-Linear-combinations-span-and-basis-vectors"><a href="#E2-Linear-combinations-span-and-basis-vectors" class="headerlink" title="E2. Linear combinations, span, and basis vectors"></a>E2. Linear combinations, span, and basis vectors</h2><h2 id="1-Basis-vectors-기저-벡터"><a href="#1-Basis-vectors-기저-벡터" class="headerlink" title="1. Basis vectors (기저 벡터)"></a>1. Basis vectors (기저 벡터)</h2><ul><li>basis: the basis of a vector is a set of linearly independent vectors that span the full space </li><li><p>xy coordinate system의 basis vector는 $\hat i$과 $\hat j$</p><ul><li>$\hat i = \begin{bmatrix} 1 \\ 0 \end{bmatrix}, \, \hat j = \begin{bmatrix} 0 \\ 1 \end{bmatrix}$</li></ul></li><li><p>vector의 coordinate(좌표)은 scalar</p><ul><li>basis vectors $\hat i$와 $\hat j$를 scale함</li><li>e.g. $\begin{bmatrix} -5 \\ 2 \end{bmatrix} = (-5)\hat i + (2)\hat j$</li></ul></li></ul><h2 id="2-Linear-combination-선형-조합"><a href="#2-Linear-combination-선형-조합" class="headerlink" title="2. Linear combination (선형 조합)"></a>2. Linear combination (선형 조합)</h2><ul><li>linear combination of $\vec v$ and $\vec w$: $a\vec v + b\vec w$</li></ul><h2 id="3-Span"><a href="#3-Span" class="headerlink" title="3. Span"></a>3. Span</h2><ul><li>$\vec v$와 $\vec w$의 span이란 두 벡터의 모든 가능한 linear combination 조합 </li><li>선형독립인 두개의 2차원 벡터의 span은 2차원 평면 전체가 되고, 두 벡터가 일직선상에 놓인 경우, 즉 선형종속인 경우 두 벡터의 span은 직선이 됨</li></ul><h2 id="4-Linearly-dependent-선형-종속"><a href="#4-Linearly-dependent-선형-종속" class="headerlink" title="4. Linearly dependent(선형 종속)"></a>4. Linearly dependent(선형 종속)</h2><ul><li>선형종속: 한 벡터가 다른 두 벡터의 선형조합으로 표현될 경우<ul><li>$\vec u = a\vec v + b\vec w$</li><li>선형종속인 벡터는 redundant함 (이 벡터를 없애도 span이 줄어들지 않음)</li></ul></li><li>선형독립: 한 벡터가 다른 두 벡터의 선형조합으로 표현되지 않는 경우<ul><li>$\vec u \neq a\vec v + b\vec w$</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> DataScience </category>
          
          <category> Math </category>
          
      </categories>
      
      
        <tags>
            
            <tag> math </tag>
            
            <tag> data science </tag>
            
            <tag> 선형대수 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018-10-24-TIL</title>
      <link href="/2018/10/24/2018-10-24-TIL/"/>
      <url>/2018/10/24/2018-10-24-TIL/</url>
      
        <content type="html"><![CDATA[<h4 id="공부한-것-amp-리뷰"><a href="#공부한-것-amp-리뷰" class="headerlink" title="공부한 것 &amp; 리뷰"></a>공부한 것 &amp; 리뷰</h4><ul><li>hexo 블로그에 수식을 쓸 수 있도록 mathjax 설정을 마치고 설정 방법도 포스팅</li><li>선형대수 복습을 시작했다. </li></ul><h4 id="내일-공부할-것"><a href="#내일-공부할-것" class="headerlink" title="내일 공부할 것"></a>내일 공부할 것</h4><ul><li>AWS, NLP 복습</li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo 블로그에 수식 사용하기 - mathjax 설정</title>
      <link href="/2018/10/24/hexo_mathjax_00/"/>
      <url>/2018/10/24/hexo_mathjax_00/</url>
      
        <content type="html"><![CDATA[<p>앞으로 Hexo 블로그에 수학 공부 내용도 정리하기 위해서 열심히 구글링을 해서 mathjax 설정을 마쳤다!<br>이렇게 알아낸 내용을 기억해두기 위해 Hexo 블로그에서 LaTex로 수식을 작성할 수 있도록 mathjax를 설정하는 방법을 정리해보겠다.</p><a id="more"></a> <h2 id="1-설치"><a href="#1-설치" class="headerlink" title="1. 설치"></a>1. 설치</h2><h3 id="1-renderer-설치-및-세팅"><a href="#1-renderer-설치-및-세팅" class="headerlink" title="1) renderer 설치 및 세팅"></a>1) renderer 설치 및 세팅</h3><p>Hexo의 기본 renderer인 hexo-renderer-marked는 mathjax 문법을 지원하지 않는다고 한다. 따라서 다음과 같이 새로운 rendering engine으로 교체해준다.</p><p><code>$ npm uninstall hexo-renderer-marked --save</code><br><code>$ npm install hexo-renderer-kramed --save</code></p><p>그리고 <code>&lt;your-project-dir&gt;/node_modules/hexo-reneder-kramed/lib/renderer.js</code>를 열어 다음과 같이 return 값을 text로 수정한다.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Change inline math rule</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">formatText</span>(<span class="params">text</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// Fit kramed's rule: $$ + \1 + $$</span></span><br><span class="line">  <span class="comment">// return text.replace(/`\$(.*?)\$`/g, '$$$$$1$$$$');</span></span><br><span class="line">  <span class="keyword">return</span> text;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-mathjax-설치"><a href="#2-mathjax-설치" class="headerlink" title="2) mathjax 설치"></a>2) mathjax 설치</h3><p>다음으로는 mathjax plugin을 설치한다.<br><code>$ npm install hexo-renderer-mathjax --save</code></p><p>그리고 <code>&lt;your-project-dir&gt;/node_modules/hexo-reneder-mathjax/mathjax.html</code>을 열고 CDN URL을 아래와 같이 수정한다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- &lt;script src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML"&gt;&lt;/script&gt; --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/MathJax.js?config=TeX-MML-AM_CHTML'</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2-LaTex와-markdown의-문법-충돌-fix하기"><a href="#2-LaTex와-markdown의-문법-충돌-fix하기" class="headerlink" title="2. LaTex와 markdown의 문법 충돌 fix하기"></a>2. LaTex와 markdown의 문법 충돌 fix하기</h2><p>LaTex와 markdown에는 다음과 같이 문법이 충돌하는 부분이 있다. </p><ul><li>markdown: <code>*</code>과 <code>_</code>는 bold와 italic</li><li>LaTex: <code>_</code>는 subscript</li></ul><p>따라서 <code>_</code>는 LaTex의 문법만을 따라서 아랫첨자를 나타내도록 하기위해<code>node_modules\kramed\lib\rules\inline.js</code>를 열고 다음과 같이 수정한다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">escape: /^\\([`*\[\]()#$+\-.!_&gt;])/,</span><br><span class="line">em: /^\*((?:\*\*|[\s\S])+?)\*(?!\*)/,</span><br></pre></td></tr></table></figure><h2 id="3-Mathjax-사용하기"><a href="#3-Mathjax-사용하기" class="headerlink" title="3. Mathjax 사용하기"></a>3. Mathjax 사용하기</h2><p>사용하고 있는 theme의 <code>_config.yml</code> 파일을 열고 다음과 같이 mathjax를 enabling 해준다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mathjax:</span><br><span class="line">  enable: true</span><br></pre></td></tr></table></figure><h2 id="4-markdown-post-작성하기"><a href="#4-markdown-post-작성하기" class="headerlink" title="4. markdown post 작성하기"></a>4. markdown post 작성하기</h2><p>이제 hexo 블로그에 수식을 사용하기 위한 설정은 모두 마쳤다!<br>마지막으로 post 작성시 header 부분에 <code>mathjax: true</code>를 넣어주면 아래처럼 블로그에 수식이 잘 표현된다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">\begin&#123;pmatrix&#125;</span><br><span class="line"> 1 &amp; a_1 &amp; a_1^2 &amp; \cdots &amp; a_1^n \\</span><br><span class="line"> 1 &amp; a_2 &amp; a_2^2 &amp; \cdots &amp; a_2^n \\</span><br><span class="line"> \vdots  &amp; \vdots&amp; \vdots &amp; \ddots &amp; \vdots \\</span><br><span class="line"> 1 &amp; a_m &amp; a_m^2 &amp; \cdots &amp; a_m^n    </span><br><span class="line"> \end&#123;pmatrix&#125;</span><br><span class="line">$$</span><br></pre></td></tr></table></figure><p>$$<br>\begin{pmatrix}<br> 1 &amp; a_1 &amp; a_1^2 &amp; \cdots &amp; a_1^n \\<br> 1 &amp; a_2 &amp; a_2^2 &amp; \cdots &amp; a_2^n \\<br> \vdots  &amp; \vdots&amp; \vdots &amp; \ddots &amp; \vdots \\<br> 1 &amp; a_m &amp; a_m^2 &amp; \cdots &amp; a_m^n<br> \end{pmatrix}<br>$$</p><h4 id="내용-추가-문제가-발생했다-2019-01"><a href="#내용-추가-문제가-발생했다-2019-01" class="headerlink" title="내용 추가! 문제가 발생했다! (2019.01)"></a>내용 추가! 문제가 발생했다! (2019.01)</h4><p>위에 행렬 작성 latex 코드를 보면, 행렬 내에서 행 구분을 할 때는 <code>\\</code>를 사용한다. 처음 블로그에 mathjax 설정을 했을 때는 문제 없이 동작했는데, hexo blog theme을 업데이트 하고 나니까 <mark><code>\\</code>가 제대로 인식되지 않고 모든 행렬이 한 줄로 나타나는 문제가 발생</mark>했다!! </p><p>설정 쪽에서 escape 항목을 수정해서 해결해보려고 했지만 생각대로 되지 않았다ㅜ </p><p>결국 적절히 escape이 될 수 있도록 모든 latex 코드를 수동으로 <code>\\</code> → <code>\\\\</code>로 수정해주는 방법을 택할 수 밖에 없었다.</p><p>즉, 현재는 아래처럼 작성해주어야 행렬이 올바르게 표시된다.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">\begin&#123;pmatrix&#125;</span><br><span class="line"> 1 &amp; a_1 &amp; a_1^2 &amp; \cdots &amp; a_1^n \\\\</span><br><span class="line"> 1 &amp; a_2 &amp; a_2^2 &amp; \cdots &amp; a_2^n \\\\</span><br><span class="line"> \vdots  &amp; \vdots&amp; \vdots &amp; \ddots &amp; \vdots \\\\</span><br><span class="line"> 1 &amp; a_m &amp; a_m^2 &amp; \cdots &amp; a_m^n    </span><br><span class="line"> \end&#123;pmatrix&#125;</span><br><span class="line">$$</span><br></pre></td></tr></table></figure></p><h4 id="참고-자료"><a href="#참고-자료" class="headerlink" title="참고 자료"></a>참고 자료</h4><ul><li>블로그 <a href="https://www.infiniteft.xyz/2018/03/21/make-hexo-support-latex/" target="_blank" rel="noopener">Make Hexo Support Latex</a></li><li>블로그 <a href="https://irongaea.github.io/2018/08/21/hexo-inline-math/" target="_blank" rel="noopener">hexo-inline-math</a></li><li>블로그 <a href="https://johngrib.github.io/wiki/mathjax-latex/#3-%EB%8F%84%EA%B5%AC" target="_blank" rel="noopener">MathJax로 LaTeX 사용하기</a></li><li><a href="https://www.mathjax.org/#gettingstarted" target="_blank" rel="noopener">www.mathjax.org</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> DataScience </category>
          
          <category> Hexo 블로그 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> mathjax </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>&lt;선형대수&gt; 3Blue1Brown - Essence of linear algebra E1</title>
      <link href="/2018/10/24/math-lin_alg-001/"/>
      <url>/2018/10/24/math-lin_alg-001/</url>
      
        <content type="html"><![CDATA[<p>선형대수 기본 개념을 익히는 데 아주 좋은 youtube 3Blue1Brown 채널의 Essence of linear algebra 시리즈의 1편 내용을 간략히 정리해본다.</p><a id="more"></a><div class="video-container"><iframe src="//www.youtube.com/embed/fNk_zzaMoSs?list=PLZHQObOWTQDPD3MizzM2xVFitgF8hE_ab" frameborder="0" allowfullscreen></iframe></div><h2 id="E1-Vectors-what-even-are-they"><a href="#E1-Vectors-what-even-are-they" class="headerlink" title="E1. Vectors, what even are they?"></a>E1. Vectors, what even are they?</h2><h2 id="1-vector를-보는-세-가지-관점"><a href="#1-vector를-보는-세-가지-관점" class="headerlink" title="1. vector를 보는 세 가지 관점"></a>1. vector를 보는 세 가지 관점</h2><h3 id="1-물리학-관점"><a href="#1-물리학-관점" class="headerlink" title="1) 물리학 관점"></a>1) 물리학 관점</h3><ul><li>벡터는 공간에서의 화살표</li><li>길이와 방향을 가짐  </li></ul><h3 id="2-컴퓨터-사이언스-관점"><a href="#2-컴퓨터-사이언스-관점" class="headerlink" title="2) 컴퓨터 사이언스 관점"></a>2) 컴퓨터 사이언스 관점</h3><ul><li>벡터는 순차 숫자 리스트 (ordered lists of numbers)</li><li>차원 = 리스트의 길이  </li></ul><h3 id="3-수학의-관점"><a href="#3-수학의-관점" class="headerlink" title="3) 수학의 관점"></a>3) 수학의 관점</h3><ul><li>벡터의 합과 벡터에 숫자를 곱한다는 개념에 맞으면 벡터 <br> ⇨ 수학의 관점은 시리즈 마지막에 제대로 정의함</li></ul><h2 id="2-vector에-대한-새로운-개념을-배울-때는"><a href="#2-vector에-대한-새로운-개념을-배울-때는" class="headerlink" title="2. vector에 대한 새로운 개념을 배울 때는"></a>2. vector에 대한 새로운 개념을 배울 때는</h2><ul><li>‘벡터’라 함은 xy평면 같은 좌표계 안에 있으며 꼬리는 원점인 화살표로 떠올리자</li><li>이 화살표가 가리키는 좌표가 컴퓨터 사이언스 관점의 벡터인 ‘숫자 리스트’가 됨</li></ul><h2 id="3-벡터의-연산"><a href="#3-벡터의-연산" class="headerlink" title="3. 벡터의 연산"></a>3. 벡터의 연산</h2><ul><li>벡터 합(vector addition): 한 화살표의 끝에서 다음 화살표를 이어서 최종적으로 가리키는 곳</li><li>multiplication by number(scalar): scaling</li></ul>]]></content>
      
      
      <categories>
          
          <category> DataScience </category>
          
          <category> Math </category>
          
      </categories>
      
      
        <tags>
            
            <tag> math </tag>
            
            <tag> data science </tag>
            
            <tag> 선형대수 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>데이터 사이언스 - 수학 공부 가이드</title>
      <link href="/2018/10/24/math_000_guide/"/>
      <url>/2018/10/24/math_000_guide/</url>
      
        <content type="html"><![CDATA[<p>데이터 사이언스를 공부하는 데 있어 필수적이고 기초적인 부분이 바로 선형대수, 미적분, 확률 통계 등의 수학일 것이다.</p><p>지금까지 공부해 온, 그리고 앞으로 공부할 컨텐츠 등을 바탕으로 데이터 사이언스를 위한 수학 공부에 유용한 컨텐츠를 정리해보려고 한다. (내용은 계속 업데이트된다)</p><a id="more"></a><h2 id="1-선형대수-Linear-Algebra"><a href="#1-선형대수-Linear-Algebra" class="headerlink" title="1. 선형대수 (Linear Algebra)"></a>1. 선형대수 (Linear Algebra)</h2><ul><li>3Blue1Brown - Essence of linear algebra<ul><li>youtube 채널 3Blue1Brown에서 제공하는 선형대수 기초 영상. 기본적인 내용을 다루고 있지만, 직접 코드로 구현된 그래프 등을 영상으로 보면서 선형대수의 기초적인 내용을 직관적으로 이해하는데 엄청난 도움이 된다. 강력 추천!</li><li>14편의 영상으로 이루어져있는데 대부분 15분 미만의 길이로 부담없이 시청할 수 있고, 여러번 반복해서 보기에도 좋다. </li></ul></li></ul><h2 id="2-미적분"><a href="#2-미적분" class="headerlink" title="2. 미적분"></a>2. 미적분</h2><h2 id="3-확률과-통계"><a href="#3-확률과-통계" class="headerlink" title="3. 확률과 통계"></a>3. 확률과 통계</h2>]]></content>
      
      
      <categories>
          
          <category> DataScience </category>
          
          <category> Math </category>
          
      </categories>
      
      
        <tags>
            
            <tag> math </tag>
            
            <tag> 확률통계 </tag>
            
            <tag> data science </tag>
            
            <tag> 선형대수 </tag>
            
            <tag> 미적분 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018-10-15-TIL</title>
      <link href="/2018/10/15/2018-10-15-TIL/"/>
      <url>/2018/10/15/2018-10-15-TIL/</url>
      
        <content type="html"><![CDATA[<h4 id="공부한-것-amp-리뷰"><a href="#공부한-것-amp-리뷰" class="headerlink" title="공부한 것 &amp; 리뷰"></a>공부한 것 &amp; 리뷰</h4><ul><li>web crawling - scrapy</li><li>AWS, pyenv  </li><li>블로그 게시글이 100개를 돌파했다! 아직은 데이터사이언스스쿨 기본적인 복습 내용을 나 보려고 정리해 올리는 정도지만 꾸준히 해나가다보면 더 좋은 포스팅도 하게 되겠지!</li></ul><h4 id="내일-공부할-것"><a href="#내일-공부할-것" class="headerlink" title="내일 공부할 것"></a>내일 공부할 것</h4><ul><li>AWS, NLP 복습</li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Web crawling - Scrapy</title>
      <link href="/2018/10/15/web_12_scrapy/"/>
      <url>/2018/10/15/web_12_scrapy/</url>
      
        <content type="html"><![CDATA[<p><a href="https://github.com/hyeshinoh/Study_Web/blob/master/web_11_scrapy.ipynb" target="_blank" rel="noopener">jupyter notebook으로 보기</a></p><h4 id="다룰-내용"><a href="#다룰-내용" class="headerlink" title="다룰 내용"></a>다룰 내용</h4><ul><li>Scrapy 개요</li><li>xpath<ul><li>xpath의 기본 문법</li><li>scrapy shell 환경에서 xpath</li><li>scrapy jupyter notebook xpath</li><li>네이버 실시간 검색어, 다음실시간 검색어, 지마켓 베스트 200</li></ul></li><li>scrapy 프로젝트를 만들어서 크롤링<ul><li>네이버 영화 사이트에서 현재 상영영화 링크를 크롤링</li><li>크롤링한 링크에서 영화 제목과 누적관객수 데이터를 크롤링</li><li>csv 파일로 저장</li></ul></li></ul><a id="more"></a> <h2 id="1-Scrapy"><a href="#1-Scrapy" class="headerlink" title="1. Scrapy"></a>1. Scrapy</h2><ul><li>웹사이트에서 데이터 추출을 하기 위한 오픈소스 프레임워크 (패키지가 아님)</li><li><a href="http://scrapy.org" target="_blank" rel="noopener">http://scrapy.org</a></li><li>설치<ul><li>windows: <code>conda install -c conda-forge scrapy</code></li><li>mac: <code>pip3 install scrapy</code></li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> scrapy</span><br></pre></td></tr></table></figure><h2 id="2-xpath"><a href="#2-xpath" class="headerlink" title="2. xpath"></a>2. xpath</h2><p>지금까지 배웠던 css selector가 아닌 xpath를 이용해서도 웹페이지의 html element를 선택할 수 있다.</p><h3 id="2-1-xpath의-기본-문법"><a href="#2-1-xpath의-기본-문법" class="headerlink" title="2.1 xpath의 기본 문법"></a>2.1 xpath의 기본 문법</h3><p>예시 xpath: 네이버 실시간 검색어 순위에서 [copy xpath]로 복사<br><code>//*[@id=&quot;PM_ID_ct&quot;]/div[1]/div[2]/div[2]/div[1]/div/ul/li[1]/a/span[2]</code></p><ul><li><code>//</code>: 최상위 element를 의미</li><li><code>*</code>: 조건에 맞는 하위 element를 모두 살펴봄 (css selector에서 하위 element 검색: 한칸 띄우기)</li><li><code>[@id=&quot;PM_ID_ct&quot;]</code>: id가 PM_ID_ct 인 element를 선택<ul><li><code>[@&lt;key&gt;=&lt;value&gt;]</code> 형태 (css selector와 다르게 모든 속성을 <code>@&lt;key&gt;</code>로 표현)</li></ul></li><li><code>/</code>: 바로 아래 element를 살펴봄 (css selector의 <code>&gt;</code> 기호와 같은 의미)</li><li><code>[number]</code>: number번째 element를 선택 (0번부터가 아니라 1번부터 시작함)</li><li><code>.</code>: 현재 element를 의미</li><li><code>not()</code>: 조건이 아닌 element를 찾음<ul><li><code>not([@id=test})</code></li></ul></li></ul><h3 id="2-2-네이버-실시간-검색어-크롤링"><a href="#2-2-네이버-실시간-검색어-크롤링" class="headerlink" title="2.2 네이버 실시간 검색어 크롤링"></a>2.2 네이버 실시간 검색어 크롤링</h3><h4 id="1-스크래피-셸-사용"><a href="#1-스크래피-셸-사용" class="headerlink" title="(1) 스크래피 셸 사용"></a>(1) 스크래피 셸 사용</h4><ul><li><code>$ scrapy shell &quot;&lt;url&gt;&quot;</code></li></ul><h4 id="2-jupyter-notebook-사용"><a href="#2-jupyter-notebook-사용" class="headerlink" title="(2) jupyter notebook 사용"></a>(2) jupyter notebook 사용</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> scrapy.http <span class="keyword">import</span> TextResponse</span><br></pre></td></tr></table></figure><h5 id="웹페이지에-연결"><a href="#웹페이지에-연결" class="headerlink" title="웹페이지에 연결"></a>웹페이지에 연결</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">url = <span class="string">"http://naver.com"</span></span><br><span class="line">rep = requests.get(url)</span><br><span class="line">response = TextResponse(rep.url, body=rep.text, encoding=<span class="string">"utf-8"</span>)</span><br></pre></td></tr></table></figure><h5 id="네이버-실시간-검색어-1위-element-객체"><a href="#네이버-실시간-검색어-1위-element-객체" class="headerlink" title="네이버 실시간 검색어 1위 element 객체"></a>네이버 실시간 검색어 1위 element 객체</h5><ul><li>xpath로 select하면 list로 return</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">response.xpath(<span class="string">'//*[@id="PM_ID_ct"]/div[1]/div[2]/div[2]/div[1]/div/ul/li[1]/a/span[2]'</span>)</span><br></pre></td></tr></table></figure><pre><code>[&lt;Selector xpath=&apos;//*[@id=&quot;PM_ID_ct&quot;]/div[1]/div[2]/div[2]/div[1]/div/ul/li[1]/a/span[2]&apos; data=&apos;&lt;span class=&quot;ah_k&quot;&gt;우왁굳&lt;/span&gt;&apos;&gt;]</code></pre><h5 id="네이버-실시간-검색어-20개-element-객체"><a href="#네이버-실시간-검색어-20개-element-객체" class="headerlink" title="네이버 실시간 검색어 20개 element 객체"></a>네이버 실시간 검색어 20개 element 객체</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 네이버 실시간 검색어 20개 element 객체</span></span><br><span class="line">response.xpath(<span class="string">'//*[@id="PM_ID_ct"]/div[1]/div[2]/div[2]/div[1]/div/ul/li/a/span[2]'</span>)</span><br></pre></td></tr></table></figure><pre><code>[&lt;Selector xpath=&apos;//*[@id=&quot;PM_ID_ct&quot;]/div[1]/div[2]/div[2]/div[1]/div/ul/li/a/span[2]&apos; data=&apos;&lt;span class=&quot;ah_k&quot;&gt;우왁굳&lt;/span&gt;&apos;&gt;, &lt;Selector xpath=&apos;//*[@id=&quot;PM_ID_ct&quot;]/div[1]/div[2]/div[2]/div[1]/div/ul/li/a/span[2]&apos; data=&apos;&lt;span class=&quot;ah_k&quot;&gt;홍현희&lt;/span&gt;&apos;&gt;, &lt;Selector xpath=&apos;//*[@id=&quot;PM_ID_ct&quot;]/div[1]/div[2]/div[2]/div[1]/div/ul/li/a/span[2]&apos; data=&apos;&lt;span class=&quot;ah_k&quot;&gt;김수현&lt;/span&gt;&apos;&gt;, &lt;Selector xpath=&apos;//*[@id=&quot;PM_ID_ct&quot;]/div[1]/div[2]/div[2]/div[1]/div/ul/li/a/span[2]&apos; data=&apos;&lt;span class=&quot;ah_k&quot;&gt;오영택&lt;/span&gt;&apos;&gt;, &lt;Selector xpath=&apos;//*[@id=&quot;PM_ID_ct&quot;]/div[1]/div[2]/div[2]/div[1]/div/ul/li/a/span[2]&apos; data=&apos;&lt;span class=&quot;ah_k&quot;&gt;미세먼지&lt;/span&gt;&apos;&gt;, &lt;Selector xpath=&apos;//*[@id=&quot;PM_ID_ct&quot;]/div[1]/div[2]/div[2]/div[1]/div/ul/li/a/span[2]&apos; data=&apos;&lt;span class=&quot;ah_k&quot;&gt;주윤발&lt;/span&gt;&apos;&gt;, &lt;Selector xpath=&apos;//*[@id=&quot;PM_ID_ct&quot;]/div[1]/div[2]/div[2]/div[1]/div/ul/li/a/span[2]&apos; data=&apos;&lt;span class=&quot;ah_k&quot;&gt;박지원&lt;/span&gt;&apos;&gt;, &lt;Selector xpath=&apos;//*[@id=&quot;PM_ID_ct&quot;]/div[1]/div[2]/div[2]/div[1]/div/ul/li/a/span[2]&apos; data=&apos;&lt;span class=&quot;ah_k&quot;&gt;환희유치원&lt;/span&gt;&apos;&gt;, &lt;Selector xpath=&apos;//*[@id=&quot;PM_ID_ct&quot;]/div[1]/div[2]/div[2]/div[1]/div/ul/li/a/span[2]&apos; data=&apos;&lt;span class=&quot;ah_k&quot;&gt;제이쓴&lt;/span&gt;&apos;&gt;, &lt;Selector xpath=&apos;//*[@id=&quot;PM_ID_ct&quot;]/div[1]/div[2]/div[2]/div[1]/div/ul/li/a/span[2]&apos; data=&apos;&lt;span class=&quot;ah_k&quot;&gt;동탄 환희유치원&lt;/span&gt;&apos;&gt;, &lt;Selector xpath=&apos;//*[@id=&quot;PM_ID_ct&quot;]/div[1]/div[2]/div[2]/div[1]/div/ul/li/a/span[2]&apos; data=&apos;&lt;span class=&quot;ah_k&quot;&gt;브리짓 존스의 베이비&lt;/span&gt;&apos;&gt;, &lt;Selector xpath=&apos;//*[@id=&quot;PM_ID_ct&quot;]/div[1]/div[2]/div[2]/div[1]/div/ul/li/a/span[2]&apos; data=&apos;&lt;span class=&quot;ah_k&quot;&gt;고현정&lt;/span&gt;&apos;&gt;, &lt;Selector xpath=&apos;//*[@id=&quot;PM_ID_ct&quot;]/div[1]/div[2]/div[2]/div[1]/div/ul/li/a/span[2]&apos; data=&apos;&lt;span class=&quot;ah_k&quot;&gt;추상미&lt;/span&gt;&apos;&gt;, &lt;Selector xpath=&apos;//*[@id=&quot;PM_ID_ct&quot;]/div[1]/div[2]/div[2]/div[1]/div/ul/li/a/span[2]&apos; data=&apos;&lt;span class=&quot;ah_k&quot;&gt;조현민&lt;/span&gt;&apos;&gt;, &lt;Selector xpath=&apos;//*[@id=&quot;PM_ID_ct&quot;]/div[1]/div[2]/div[2]/div[1]/div/ul/li/a/span[2]&apos; data=&apos;&lt;span class=&quot;ah_k&quot;&gt;장학영&lt;/span&gt;&apos;&gt;, &lt;Selector xpath=&apos;//*[@id=&quot;PM_ID_ct&quot;]/div[1]/div[2]/div[2]/div[1]/div/ul/li/a/span[2]&apos; data=&apos;&lt;span class=&quot;ah_k&quot;&gt;강병규&lt;/span&gt;&apos;&gt;, &lt;Selector xpath=&apos;//*[@id=&quot;PM_ID_ct&quot;]/div[1]/div[2]/div[2]/div[1]/div/ul/li/a/span[2]&apos; data=&apos;&lt;span class=&quot;ah_k&quot;&gt;이한샘&lt;/span&gt;&apos;&gt;, &lt;Selector xpath=&apos;//*[@id=&quot;PM_ID_ct&quot;]/div[1]/div[2]/div[2]/div[1]/div/ul/li/a/span[2]&apos; data=&apos;&lt;span class=&quot;ah_k&quot;&gt;자이언티&lt;/span&gt;&apos;&gt;, &lt;Selector xpath=&apos;//*[@id=&quot;PM_ID_ct&quot;]/div[1]/div[2]/div[2]/div[1]/div/ul/li/a/span[2]&apos; data=&apos;&lt;span class=&quot;ah_k&quot;&gt;오늘 미세먼지 농도&lt;/span&gt;&apos;&gt;, &lt;Selector xpath=&apos;//*[@id=&quot;PM_ID_ct&quot;]/div[1]/div[2]/div[2]/div[1]/div/ul/li/a/span[2]&apos; data=&apos;&lt;span class=&quot;ah_k&quot;&gt;존조&lt;/span&gt;&apos;&gt;]</code></pre><h5 id="객체의-text만-추출하기"><a href="#객체의-text만-추출하기" class="headerlink" title="객체의 text만 추출하기"></a>객체의 text만 추출하기</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">response.xpath(<span class="string">'//*[@id="PM_ID_ct"]/div[1]/div[2]/div[2]/div[1]/div/ul/li/a/span[2]/text()'</span>)</span><br></pre></td></tr></table></figure><pre><code>[&lt;Selector xpath=&apos;//*[@id=&quot;PM_ID_ct&quot;]/div[1]/div[2]/div[2]/div[1]/div/ul/li/a/span[2]/text()&apos; data=&apos;우왁굳&apos;&gt;, &lt;Selector xpath=&apos;//*[@id=&quot;PM_ID_ct&quot;]/div[1]/div[2]/div[2]/div[1]/div/ul/li/a/span[2]/text()&apos; data=&apos;홍현희&apos;&gt;, &lt;Selector xpath=&apos;//*[@id=&quot;PM_ID_ct&quot;]/div[1]/div[2]/div[2]/div[1]/div/ul/li/a/span[2]/text()&apos; data=&apos;김수현&apos;&gt;, &lt;Selector xpath=&apos;//*[@id=&quot;PM_ID_ct&quot;]/div[1]/div[2]/div[2]/div[1]/div/ul/li/a/span[2]/text()&apos; data=&apos;오영택&apos;&gt;, &lt;Selector xpath=&apos;//*[@id=&quot;PM_ID_ct&quot;]/div[1]/div[2]/div[2]/div[1]/div/ul/li/a/span[2]/text()&apos; data=&apos;미세먼지&apos;&gt;, &lt;Selector xpath=&apos;//*[@id=&quot;PM_ID_ct&quot;]/div[1]/div[2]/div[2]/div[1]/div/ul/li/a/span[2]/text()&apos; data=&apos;주윤발&apos;&gt;, &lt;Selector xpath=&apos;//*[@id=&quot;PM_ID_ct&quot;]/div[1]/div[2]/div[2]/div[1]/div/ul/li/a/span[2]/text()&apos; data=&apos;박지원&apos;&gt;, &lt;Selector xpath=&apos;//*[@id=&quot;PM_ID_ct&quot;]/div[1]/div[2]/div[2]/div[1]/div/ul/li/a/span[2]/text()&apos; data=&apos;환희유치원&apos;&gt;, &lt;Selector xpath=&apos;//*[@id=&quot;PM_ID_ct&quot;]/div[1]/div[2]/div[2]/div[1]/div/ul/li/a/span[2]/text()&apos; data=&apos;제이쓴&apos;&gt;, &lt;Selector xpath=&apos;//*[@id=&quot;PM_ID_ct&quot;]/div[1]/div[2]/div[2]/div[1]/div/ul/li/a/span[2]/text()&apos; data=&apos;동탄 환희유치원&apos;&gt;, &lt;Selector xpath=&apos;//*[@id=&quot;PM_ID_ct&quot;]/div[1]/div[2]/div[2]/div[1]/div/ul/li/a/span[2]/text()&apos; data=&apos;브리짓 존스의 베이비&apos;&gt;, &lt;Selector xpath=&apos;//*[@id=&quot;PM_ID_ct&quot;]/div[1]/div[2]/div[2]/div[1]/div/ul/li/a/span[2]/text()&apos; data=&apos;고현정&apos;&gt;, &lt;Selector xpath=&apos;//*[@id=&quot;PM_ID_ct&quot;]/div[1]/div[2]/div[2]/div[1]/div/ul/li/a/span[2]/text()&apos; data=&apos;추상미&apos;&gt;, &lt;Selector xpath=&apos;//*[@id=&quot;PM_ID_ct&quot;]/div[1]/div[2]/div[2]/div[1]/div/ul/li/a/span[2]/text()&apos; data=&apos;조현민&apos;&gt;, &lt;Selector xpath=&apos;//*[@id=&quot;PM_ID_ct&quot;]/div[1]/div[2]/div[2]/div[1]/div/ul/li/a/span[2]/text()&apos; data=&apos;장학영&apos;&gt;, &lt;Selector xpath=&apos;//*[@id=&quot;PM_ID_ct&quot;]/div[1]/div[2]/div[2]/div[1]/div/ul/li/a/span[2]/text()&apos; data=&apos;강병규&apos;&gt;, &lt;Selector xpath=&apos;//*[@id=&quot;PM_ID_ct&quot;]/div[1]/div[2]/div[2]/div[1]/div/ul/li/a/span[2]/text()&apos; data=&apos;이한샘&apos;&gt;, &lt;Selector xpath=&apos;//*[@id=&quot;PM_ID_ct&quot;]/div[1]/div[2]/div[2]/div[1]/div/ul/li/a/span[2]/text()&apos; data=&apos;자이언티&apos;&gt;, &lt;Selector xpath=&apos;//*[@id=&quot;PM_ID_ct&quot;]/div[1]/div[2]/div[2]/div[1]/div/ul/li/a/span[2]/text()&apos; data=&apos;오늘 미세먼지 농도&apos;&gt;, &lt;Selector xpath=&apos;//*[@id=&quot;PM_ID_ct&quot;]/div[1]/div[2]/div[2]/div[1]/div/ul/li/a/span[2]/text()&apos; data=&apos;존조&apos;&gt;]</code></pre><h5 id="문자열만-추출하기"><a href="#문자열만-추출하기" class="headerlink" title="문자열만 추출하기"></a>문자열만 추출하기</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">response.xpath(<span class="string">'//*[@id="PM_ID_ct"]/div[1]/div[2]/div[2]/div[1]/div/ul/li/a/span[2]/text()'</span>)[:<span class="number">10</span>].extract()</span><br></pre></td></tr></table></figure><pre><code>[&apos;우왁굳&apos;, &apos;홍현희&apos;, &apos;김수현&apos;, &apos;오영택&apos;, &apos;미세먼지&apos;, &apos;주윤발&apos;, &apos;박지원&apos;, &apos;환희유치원&apos;, &apos;제이쓴&apos;, &apos;동탄 환희유치원&apos;]</code></pre><h5 id="을-이용해서-가져오기"><a href="#을-이용해서-가져오기" class="headerlink" title=".을 이용해서 가져오기"></a><code>.</code>을 이용해서 가져오기</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">keywords = response.xpath(<span class="string">'//*[@id="PM_ID_ct"]/div[1]/div[2]/div[2]/div[1]/div/ul/li'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> keyword <span class="keyword">in</span> keywords:</span><br><span class="line">    print(keyword.xpath(<span class="string">'./a/span[2]/text()'</span>)[<span class="number">0</span>].extract())</span><br></pre></td></tr></table></figure><pre><code>우왁굳홍현희김수현오영택미세먼지주윤발박지원환희유치원제이쓴동탄 환희유치원브리짓 존스의 베이비고현정추상미조현민장학영강병규이한샘자이언티오늘 미세먼지 농도존조</code></pre><h3 id="2-3-다음-실시간-검색어-크롤링"><a href="#2-3-다음-실시간-검색어-크롤링" class="headerlink" title="2.3 다음 실시간 검색어 크롤링"></a>2.3 다음 실시간 검색어 크롤링</h3><h5 id="다음-실시간-검색어-리스트-출력"><a href="#다음-실시간-검색어-리스트-출력" class="headerlink" title="다음 실시간 검색어 리스트 출력"></a>다음 실시간 검색어 리스트 출력</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">url = <span class="string">"http://daum.net"</span></span><br><span class="line">rep = requests.get(url)</span><br><span class="line">response = TextResponse(rep.url, body=rep.text, encoding=<span class="string">"utf-8"</span>)</span><br><span class="line">response.xpath(<span class="string">'//*[@id="mArticle"]/div[2]/div[1]/div[2]/div[1]/ol/li/div/div[1]/span[2]/a/text()'</span>).extract()</span><br></pre></td></tr></table></figure><pre><code>[&apos;박지원&apos;, &apos;추상미&apos;, &apos;우왁굳&apos;, &apos;강예빈&apos;, &apos;김수현 아나운서&apos;, &apos;장학영&apos;, &apos;환희유치원&apos;, &apos;미세먼지&apos;, &apos;존조&apos;, &apos;서유정&apos;]</code></pre><h3 id="2-4-gmarket-best-item-200-크롤링"><a href="#2-4-gmarket-best-item-200-크롤링" class="headerlink" title="2.4 gmarket best item 200 크롤링"></a>2.4 gmarket best item 200 크롤링</h3><h5 id="웹페이지에-연결-1"><a href="#웹페이지에-연결-1" class="headerlink" title="웹페이지에 연결"></a>웹페이지에 연결</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">url = <span class="string">"http://corners.gmarket.co.kr/Bestsellers"</span></span><br><span class="line">rep = requests.get(url)</span><br><span class="line">response = TextResponse(rep.url, body=rep.text, encoding=<span class="string">"utf-8"</span>)</span><br></pre></td></tr></table></figure><h5 id="베스트-200-아이템-제목-문자열-리스트로-가져오기"><a href="#베스트-200-아이템-제목-문자열-리스트로-가져오기" class="headerlink" title="베스트 200 아이템 제목 문자열 리스트로 가져오기"></a>베스트 200 아이템 제목 문자열 리스트로 가져오기</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">titles = response.xpath(<span class="string">'//*[@id="gBestWrap"]/div/div[3]/div[2]/ul/li/a/text()'</span>).extract()</span><br><span class="line">print(len(titles))</span><br><span class="line">titles[<span class="number">195</span>:<span class="number">199</span>]</span><br></pre></td></tr></table></figure><pre><code>200[&apos;일본수출 초극세사이불/백화점납품/ 피톤치드가공10mm&apos;, &apos;제로스킨 아이폰 갤럭시 핸드폰케이스 6 7 8 X S 노트&apos;, &apos;(국산)고급 반코팅 100켤레 이중코팅 면 목장갑 작업&apos;, &apos;[다이소]공식판매처/택배박스/봉투/로고인쇄/당일발송/소량&apos;]</code></pre><h5 id="200개-아이템에서-li-클래스가-first인-데이터만-가져오기"><a href="#200개-아이템에서-li-클래스가-first인-데이터만-가져오기" class="headerlink" title="200개 아이템에서 li 클래스가 first인 데이터만 가져오기"></a>200개 아이템에서 li 클래스가 first인 데이터만 가져오기</h5><ul><li>클래스가 first인 아이템은 한 줄에 4개씩 나타나는 상품 중 각 줄의 첫번째 상품</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">titles = response.xpath(<span class="string">'//*[@id="gBestWrap"]/div/div[3]/div[2]/ul/li[@class="first"]/a/text()'</span>).extract()</span><br><span class="line">len(titles)</span><br></pre></td></tr></table></figure><pre><code>50</code></pre><h5 id="200개-아이템에서-li-클래스가-first가-아닌-데이터만-가져오기"><a href="#200개-아이템에서-li-클래스가-first가-아닌-데이터만-가져오기" class="headerlink" title="200개 아이템에서 li 클래스가 first가 아닌 데이터만 가져오기"></a>200개 아이템에서 li 클래스가 first가 아닌 데이터만 가져오기</h5><ul><li><code>not()</code>을 사용</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">titles = response.xpath(<span class="string">'//*[@id="gBestWrap"]/div/div[3]/div[2]/ul/li[not(@class="first")]/a/text()'</span>).extract()</span><br><span class="line">len(titles)</span><br></pre></td></tr></table></figure><pre><code>150</code></pre><h2 id="3-Scrapy-project"><a href="#3-Scrapy-project" class="headerlink" title="3. Scrapy project"></a>3. Scrapy project</h2><ul><li>jupyter notebook이 아닌 atom에서 작성</li><li>네이버 영화 페이지에서 현재 상영되고 있는 영화의 제목과 관람객수를 크롤링</li></ul><h3 id="3-1-scrapy-프로젝트-생성"><a href="#3-1-scrapy-프로젝트-생성" class="headerlink" title="3.1 scrapy 프로젝트 생성"></a>3.1 scrapy 프로젝트 생성</h3><ul><li>project 생성: <code>$ scrapy startproject &lt;project_name&gt;</code></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">! scrapy startproject crawler</span><br></pre></td></tr></table></figure><pre><code>New Scrapy project &apos;crawler&apos;, using template directory &apos;/usr/local/lib/python3.6/site-packages/scrapy/templates/project&apos;, created in:    /Users/hyeshinoh/Workspace/Study_Web/crawlerYou can start your first spider with:    cd crawler    scrapy genspider example example.com</code></pre><h3 id="3-2-scrapy-프로젝트-파일-설명"><a href="#3-2-scrapy-프로젝트-파일-설명" class="headerlink" title="3.2 scrapy 프로젝트 파일 설명"></a>3.2 scrapy 프로젝트 파일 설명</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">! tree crawler</span><br></pre></td></tr></table></figure><pre><code>crawler├── crawler│   ├── __init__.py│   ├── __pycache__│   ├── items.py│   ├── middlewares.py│   ├── pipelines.py│   ├── settings.py│   └── spiders│       ├── __init__.py│       └── __pycache__└── scrapy.cfg4 directories, 7 files</code></pre><h4 id="project-구조"><a href="#project-구조" class="headerlink" title="project 구조"></a>project 구조</h4><ul><li>spiders directory <ul><li>어떤 웹사이트를 어떻게 크롤링할 것인가를 명시하고, 각각의 웹 페이지의 어떤 부분을 스크래핑할 것인지 명시하는 클래스가 모여있는 디렉토리</li><li>여러개의 spider.py 파일을 만들어 사용할 수 있음</li></ul></li><li>items.py<ul><li>크롤링하는 데이터에 대해 정의하는 클래스가 있는 파일(MVC → M)</li></ul></li><li>pipelines.py<ul><li>item 객체 형태로 크롤링을 하고 출력하기 전에 item을 받아서 실행하는 파일이 정의되어 있는 파일</li><li>item을 자유롭게 가공하거나 다양한 파일 형태로 저장할 수 있도록 하는 클래스</li></ul></li><li>settings.py<ul><li>spider나 item pipeline 등이 어떻게 동작하게 할지에 대한 세부적 설정이 담겨 있는 파일 </li><li>e.g. robots.txt 정책을 따를 것인지 안 따를 것인지, pipeline을 사용할지 안 할지</li></ul></li></ul><h3 id="3-3-크롤링-코드-작성"><a href="#3-3-크롤링-코드-작성" class="headerlink" title="3.3 크롤링 코드 작성"></a>3.3 크롤링 코드 작성</h3><h4 id="※-yield"><a href="#※-yield" class="headerlink" title="※ yield"></a>※ yield</h4><h5 id="iterator와-generator"><a href="#iterator와-generator" class="headerlink" title="iterator와 generator"></a>iterator와 generator</h5><ul><li>iterator: 순서가 있는 데이터의 집합</li><li>generator: 함수가 호출될 때마다 순서대로 결과가 나오는 집합<ul><li><code>return</code>으로 한번에 데이터를 return하는 것보다 <code>yield</code>로 하나씩 return하면 resource를 절약할 수 있음</li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># iterator data</span></span><br><span class="line">ls = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># generator data</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">number</span><span class="params">()</span>:</span>    <span class="comment"># generator를 만드는 함수</span></span><br><span class="line">    <span class="keyword">yield</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">yield</span> <span class="number">2</span></span><br><span class="line">    <span class="keyword">yield</span> <span class="number">3</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">n = number()</span><br><span class="line">n</span><br></pre></td></tr></table></figure><pre><code>&lt;generator object number at 0x11052c620&gt;</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">n.__next__()</span><br></pre></td></tr></table></figure><pre><code>1</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">n.__next__()</span><br></pre></td></tr></table></figure><pre><code>2</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">n.__next__()</span><br></pre></td></tr></table></figure><pre><code>3</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">n.__next__()</span><br></pre></td></tr></table></figure><pre><code>---------------------------------------------------------------------------StopIteration                             Traceback (most recent call last)&lt;ipython-input-23-8d5cb7b534a9&gt; in &lt;module&gt;()----&gt; 1 n.__next__()StopIteration: </code></pre><h4 id="1-items-py"><a href="#1-items-py" class="headerlink" title="(1) items.py"></a>(1) items.py</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#######################################################################################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Define here the models for your scraped items</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># See documentation in:</span></span><br><span class="line"><span class="comment"># https://doc.scrapy.org/en/latest/topics/items.html</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CrawlerItem</span><span class="params">(scrapy.Item)</span>:</span></span><br><span class="line">    <span class="comment"># define the fields for your item here like:</span></span><br><span class="line">    title = scrapy.Field()</span><br><span class="line">    count = scrapy.Field()</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#######################################################################################</span></span><br></pre></td></tr></table></figure><h4 id="2-spider-py"><a href="#2-spider-py" class="headerlink" title="(2) spider.py"></a>(2) spider.py</h4><ul><li>가장 먼저 실행되는 파일</li><li>기본적 변수<ul><li>name: scrapy 명령어로 spider를 실행할 때 argument로 쓰는 name</li><li>domain: 크롤링할 domain</li><li>start_urls: 가장 먼저 크롤링을 시작할 (처음에 request를 던질) url</li></ul></li></ul><h4 id="크롤링-함수-작성"><a href="#크롤링-함수-작성" class="headerlink" title="크롤링 함수 작성"></a>크롤링 함수 작성</h4><p>먼저, jupyter notebook 상에서 네이버 영화 페이지에서 현재 상영영화 링크 리스트 크롤링해본다.<br>(jupyter notebook 상에서 크롤링이 제대로 되는지 확인해보고, 파이썬 파일로 작성하기 위함)</p><ul><li>상영중인 영화 리스트 받아오기</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">url = <span class="string">"https://movie.naver.com/movie/running/current.nhn"</span></span><br><span class="line">rep = requests.get(url)</span><br><span class="line">response = TextResponse(rep.url, body=rep.text, encoding=<span class="string">"utf-8"</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">links = response.xpath(<span class="string">'//*[@id="content"]/div[1]/div[1]/div[3]/ul/li/dl/dt/a/@href'</span>)[:<span class="number">10</span>].extract()</span><br><span class="line"><span class="keyword">for</span> link <span class="keyword">in</span> links:</span><br><span class="line">    print(response.urljoin(link))    <span class="comment"># domain과 연결시켜줌</span></span><br></pre></td></tr></table></figure><pre><code>https://movie.naver.com/movie/bi/mi/basic.nhn?code=167105https://movie.naver.com/movie/bi/mi/basic.nhn?code=119428https://movie.naver.com/movie/bi/mi/basic.nhn?code=155356https://movie.naver.com/movie/bi/mi/basic.nhn?code=168050https://movie.naver.com/movie/bi/mi/basic.nhn?code=163533https://movie.naver.com/movie/bi/mi/basic.nhn?code=168023https://movie.naver.com/movie/bi/mi/basic.nhn?code=178402https://movie.naver.com/movie/bi/mi/basic.nhn?code=164992https://movie.naver.com/movie/bi/mi/basic.nhn?code=172040https://movie.naver.com/movie/bi/mi/basic.nhn?code=97612</code></pre><ul><li>영화의 제목과 누적 관객수 받아오기</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">url = <span class="string">"https://movie.naver.com/movie/bi/mi/basic.nhn?code=159892"</span></span><br><span class="line">rep = requests.get(url)</span><br><span class="line">response = TextResponse(rep.url, body=rep.text, encoding=<span class="string">"utf-8"</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">parse_page_contents</span><span class="params">(self, response)</span>:</span></span><br><span class="line">    item = CrawlerItem()</span><br><span class="line">    item[<span class="string">"title"</span>] = response.xpath(<span class="string">'//*[@id="content"]/div[1]/div[2]/div[1]/h3/a[1]/text()'</span>).extract()[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        item[<span class="string">"count"</span>] = response.xpath(<span class="string">'//*[@id="content"]/div[1]/div[2]/div[1]/dl/dd[5]/div/p[2]/text()'</span>).extract()[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        item[<span class="string">"count"</span>] = <span class="string">"0명"</span></span><br><span class="line">    <span class="keyword">yield</span> item</span><br></pre></td></tr></table></figure><h4 id="nm-spider-py-작성"><a href="#nm-spider-py-작성" class="headerlink" title="nm_spider.py 작성"></a>nm_spider.py 작성</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#######################################################################################</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"><span class="keyword">from</span> crawler.items <span class="keyword">import</span> CrawlerItem    <span class="comment"># 위에서 작성한 items.py를 불러옴</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># start_urls -&gt; parse -&gt; parse_page_contents 순으로 호출</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NaverMovieSpider</span><span class="params">(scrapy.Spider)</span>:</span>    <span class="comment"># scrapy.Spider 클래스를 상속 받음 (크롤링에 필요한 기능이 들어가 있음)</span></span><br><span class="line">    name = <span class="string">"naver_movie"</span>   </span><br><span class="line">    allow_domain = [<span class="string">"https://movie.naver.com"</span>]</span><br><span class="line">    start_urls = [</span><br><span class="line">        <span class="string">"https://movie.naver.com/movie/running/current.nhn"</span></span><br><span class="line">    ]    </span><br><span class="line"></span><br><span class="line">    <span class="comment"># link 리스트를 가져옴 (start url을 request로 던지고 그 response를 parse 함수가 받음)</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse</span><span class="params">(self, response)</span>:</span></span><br><span class="line">        links = response.xpath(<span class="string">'//*[@id="content"]/div[1]/div[1]/div[3]/ul/li/dl/dt/a/@href'</span>)[:<span class="number">10</span>].extract()</span><br><span class="line">        <span class="keyword">for</span> link <span class="keyword">in</span> links:</span><br><span class="line">            link = response.urljoin(link)</span><br><span class="line">            <span class="keyword">yield</span> scrapy.Request(link, callback=self.parse_page_contents)  <span class="comment"># yield가 10개 생성됨</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 각페이지의 link로 접속하여 데이터를 가져옴</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse_page_contents</span><span class="params">(self, response)</span>:</span></span><br><span class="line">        item = CrawlerItem()    <span class="comment"># item obj.를 만들어 줌</span></span><br><span class="line">        item[<span class="string">"title"</span>] = response.xpath(<span class="string">'//*[@id="content"]/div[1]/div[2]/div[1]/h3/a[1]/text()'</span>).extract()[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            item[<span class="string">"count"</span>] = response.xpath(<span class="string">'//*[@id="content"]/div[1]/div[2]/div[1]/dl/dd[5]/div/p[2]/text()'</span>).extract()[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            item[<span class="string">"count"</span>] = <span class="string">"0명"</span></span><br><span class="line">        <span class="keyword">yield</span> item      <span class="comment"># 10개 만들어진 generator마다 한 번 실행됨</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#######################################################################################</span></span><br></pre></td></tr></table></figure><h4 id="3-settings-py"><a href="#3-settings-py" class="headerlink" title="(3) settings.py"></a>(3) settings.py</h4><ul><li>크롤링하려는 사이트의 robots.txt 정책에 따라 obey 여부를 조정</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#######################################################################################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Obey robots.txt rules</span></span><br><span class="line">ROBOTSTXT_OBEY = <span class="keyword">False</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#######################################################################################</span></span><br></pre></td></tr></table></figure><h4 id="4-spider-실행"><a href="#4-spider-실행" class="headerlink" title="(4) spider 실행"></a>(4) spider 실행</h4><ul><li>실행 위치: 프로젝트 디렉토리에서 실행(item.py 파일이 있는 디렉토리)</li><li>명령어<ul><li><code>$ scrapy crawl naver_movie</code></li><li>csv 파일로 결과 저장 옵션: <code>$ scrapy crawl naver_movie -o movie.csv</code><ul><li>단, 이렇게 저장하면 column 순서를 지정할 수 없음 (pipeline으로 지정할 수 있음)</li></ul></li></ul></li><li>비동기 thread로 처리되기 때문에 영화 데이터가 순서대로 크롤링되지 않음</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pd.read_csv(<span class="string">"movie.csv"</span>)</span><br></pre></td></tr></table></figure><table><thead><tr><th></th><th>count</th><th>title</th></tr></thead><tbody><tr><td>0</td><td>2,833,821명</td><td>암수살인</td></tr><tr><td>1</td><td>15,248명</td><td>리즈와 파랑새</td></tr><tr><td>2</td><td>395,867명</td><td>곰돌이 푸 다시 만나 행복해</td></tr><tr><td>3</td><td>0명</td><td>다이노 어드벤처2: 육해공 공룡 대백과</td></tr><tr><td>4</td><td>153,398명</td><td>스타 이즈 본</td></tr><tr><td>5</td><td>18,318명</td><td>극장판 가면라이더 이그제이드: 트루 엔딩</td></tr><tr><td>6</td><td>193,789명</td><td>미쓰백</td></tr><tr><td>7</td><td>794,815명</td><td>그랜드 부다페스트 호텔</td></tr><tr><td>8</td><td>5,352,401명</td><td>안시성</td></tr><tr><td>9</td><td>3,249,358명</td><td>베놈</td></tr></tbody></table><h4 id="5-pipeline-py"><a href="#5-pipeline-py" class="headerlink" title="(5) pipeline.py"></a>(5) pipeline.py</h4><ul><li>pipeline을 사용해서 크롤링한 데이터를 column 순서를 지정해서 csv 파일로 저장할 수 있음</li><li>크롤러를 실행할 때 CrawlerPipeline 객체를 생성하고 아이템을 하나씩 크롤링할 때마다 process_item 함수를 실행</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#######################################################################################</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> csv</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CrawlerPipeline</span><span class="params">(object)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.csvwriter = csv.writer(open(<span class="string">"NaverMovie.csv"</span>,<span class="string">"wt"</span>))</span><br><span class="line">        self.csvwriter.writerow([<span class="string">"title"</span>, <span class="string">"count"</span>])</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">process_item</span><span class="params">(self, item, spider)</span>:</span></span><br><span class="line">        row = []</span><br><span class="line">        row.append(item[<span class="string">"title"</span>])</span><br><span class="line">        row.append(item[<span class="string">"count"</span>])</span><br><span class="line">        self.csvwriter.writerow(row)</span><br><span class="line">        <span class="keyword">return</span> item</span><br><span class="line"></span><br><span class="line"><span class="comment">#######################################################################################</span></span><br></pre></td></tr></table></figure><p>settings.py 수정 (주석 해제)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#######################################################################################</span></span><br><span class="line"></span><br><span class="line">ITEM_PIPELINES = &#123;</span><br><span class="line">    <span class="string">'crawler.pipelines.CrawlerPipeline'</span>:<span class="number">300</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#######################################################################################</span></span><br></pre></td></tr></table></figure><p>다시 scrapy 실행시 결과 파일의 column이 title, count 순서로 만들어짐</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pd.read_csv(<span class="string">"NaverMovie.csv"</span>)</span><br></pre></td></tr></table></figure><table><thead><tr><th></th><th>title</th><th>count</th></tr></thead><tbody><tr><td>0</td><td>암수살인</td><td>2,833,821명</td></tr><tr><td>1</td><td>리즈와 파랑새</td><td>15,248명</td></tr><tr><td>2</td><td>다이노 어드벤처2: 육해공 공룡 대백과</td><td>0명</td></tr><tr><td>3</td><td>곰돌이 푸 다시 만나 행복해</td><td>395,867명</td></tr><tr><td>4</td><td>스타 이즈 본</td><td>153,398명</td></tr><tr><td>5</td><td>극장판 가면라이더 이그제이드: 트루 엔딩</td><td>18,318명</td></tr><tr><td>6</td><td>안시성</td><td>5,352,401명</td></tr><tr><td>7</td><td>미쓰백</td><td>193,789명</td></tr><tr><td>8</td><td>그랜드 부다페스트 호텔</td><td>794,815명</td></tr><tr><td>9</td><td>베놈</td><td>3,249,358명</td></tr></tbody></table><h3 id="덧"><a href="#덧" class="headerlink" title="덧"></a>덧</h3><ul><li>yield, callback 구조를 이해하면 그 단계를 다양하게 구성할 수 있음</li><li>동적페이지를 크롤링하려면 <code>__init__()</code> 함수로 driver를 만들고 driver를 사용해서 크롤링</li></ul><p><a href="https://github.com/hyeshinoh/Study_Web/blob/master/web_11_scrapy.ipynb" target="_blank" rel="noopener">jupyter notebook으로 보기</a></p><h4 id="참고자료"><a href="#참고자료" class="headerlink" title="참고자료"></a>참고자료</h4><ul><li>패스트캠퍼스, ⟪데이터사이언스스쿨 8기⟫ 수업자료</li></ul>]]></content>
      
      
      <categories>
          
          <category> DataScience </category>
          
          <category> Web 웹 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> programming </tag>
            
            <tag> web </tag>
            
            <tag> crawling </tag>
            
            <tag> web_crawling </tag>
            
            <tag> 웹크롤링 </tag>
            
            <tag> selenium </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python 10. Try &amp; Except (예외처리)</title>
      <link href="/2018/10/13/python_10_try%20&amp;%20except/"/>
      <url>/2018/10/13/python_10_try%20&amp;%20except/</url>
      
        <content type="html"><![CDATA[<p><a href="https://nbviewer.jupyter.org/github/hyeshinoh/Study_Python/blob/master/python_10_try%20%26%20except.ipynb" target="_blank" rel="noopener">jupyter notebook으로 보기</a></p><h2 id="Try-amp-Except-예외처리"><a href="#Try-amp-Except-예외처리" class="headerlink" title="Try &amp; Except - 예외처리"></a>Try &amp; Except - 예외처리</h2><ul><li>예외처리, 코드에서 에러가 발생할 경우에 대한 처리방법을 정의하는 것  <a id="more"></a> </li><li>문법<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">try:</span><br><span class="line">    예외 발생 가능 코드</span><br><span class="line">except &lt;Exception Type&gt;:</span><br><span class="line">    예외(에러) 발생시 대응하는 코드</span><br></pre></td></tr></table></figure></li></ul><!-- more --> <h2 id="1-Exception의-종류-built-in-exception"><a href="#1-Exception의-종류-built-in-exception" class="headerlink" title="1. Exception의 종류 (built-in exception)"></a>1. Exception의 종류 (built-in exception)</h2><ul><li><code>IndexError</code>: list의 index 범위를 넘어갈 때</li><li><code>NameError</code>: 존재하지 않은 벼수를 호출할 때</li><li><code>ZeroDivisionError</code>: 0으로 숫자를 나눌 때</li><li><code>ValueError</code>: 변환할 수 없는 문자/숫자를 변환할 때</li><li><code>FileNotFoundError</code>: 존재하지 않는 파일을 호출할 때</li></ul><h2 id="2-Try-amp-Except-구문"><a href="#2-Try-amp-Except-구문" class="headerlink" title="2. Try &amp; Except 구문"></a>2. Try &amp; Except 구문</h2><p>다음은 에러가 발생하는 코드이다</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ls = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line">print(ls[<span class="number">3</span>])</span><br><span class="line">print(<span class="string">"done"</span>)</span><br></pre></td></tr></table></figure><pre><code>---------------------------------------------------------------------------IndexError                                Traceback (most recent call last)&lt;ipython-input-1-d1eeae227c94&gt; in &lt;module&gt;()      1 ls = [1,2,3]----&gt; 2 print(ls[3])      3 print(&quot;done&quot;)IndexError: list index out of range</code></pre><p>try &amp; except를 사용해서 아래와 같이 에러가 나도 코드가 실행될 수 있도록 만든다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ls = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    print(ls[<span class="number">3</span>])</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    print(<span class="string">"error"</span>)</span><br><span class="line">print(<span class="string">"done"</span>)</span><br></pre></td></tr></table></figure><pre><code>errordone</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ls = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    print(ls[<span class="number">3</span>])</span><br><span class="line"><span class="keyword">except</span> IndexError <span class="keyword">as</span> e:</span><br><span class="line">    print(<span class="string">"e"</span>)</span><br><span class="line">print(<span class="string">"done"</span>)</span><br></pre></td></tr></table></figure><pre><code>edone</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ls = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="number">1</span> / <span class="number">0</span></span><br><span class="line"><span class="keyword">except</span> IndexError <span class="keyword">as</span> e:     <span class="comment"># 특정 error</span></span><br><span class="line">    print(<span class="string">"e"</span>)</span><br><span class="line">print(<span class="string">"done"</span>)</span><br></pre></td></tr></table></figure><pre><code>---------------------------------------------------------------------------ZeroDivisionError                         Traceback (most recent call last)&lt;ipython-input-3-802b3bd3ad1b&gt; in &lt;module&gt;()      1 ls = [1,2,3]      2 try:----&gt; 3     1 / 0      4 except IndexError as e:     # 특정 error      5     print(&quot;e&quot;)ZeroDivisionError: division by zero</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">ls = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="number">1</span> / <span class="number">0</span></span><br><span class="line"><span class="keyword">except</span> ZeroDivisionError <span class="keyword">as</span> z:      </span><br><span class="line">    print(<span class="string">"z"</span>)</span><br><span class="line"><span class="keyword">except</span> IndexError <span class="keyword">as</span> e:     </span><br><span class="line">    print(<span class="string">"e"</span>)</span><br><span class="line">print(<span class="string">"done"</span>)</span><br></pre></td></tr></table></figure><pre><code>zdone</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ls = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="number">1</span> / <span class="number">0</span></span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:      </span><br><span class="line">    print(<span class="string">"e"</span>)</span><br><span class="line">print(<span class="string">"done"</span>)</span><br></pre></td></tr></table></figure><pre><code>edone</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ls = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="number">1</span> / <span class="number">0</span></span><br><span class="line"><span class="keyword">except</span> (IndexError, ZeroDivisionError) <span class="keyword">as</span> e:</span><br><span class="line">    print(<span class="string">"e"</span>)</span><br><span class="line"></span><br><span class="line">print(<span class="string">"done"</span>)</span><br></pre></td></tr></table></figure><pre><code>edone</code></pre><h2 id="3-Finally-구문"><a href="#3-Finally-구문" class="headerlink" title="3. Finally 구문"></a>3. Finally 구문</h2><ul><li>try-except 구문이 실행되고 마지막에 무조건 실행되는 구문</li><li>파일을 읽어오거나 할 때 finally로 그 파일을 닫아줄 때 많이 사용</li><li>가독성의 이유(명시적으로 관련성을 표시)로 사용 (finally가 없어도 결국 밑에 코드는 실행)</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">ls = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="number">1</span> / <span class="number">0</span></span><br><span class="line"><span class="keyword">except</span> (IndexError, ZeroDivisionError) <span class="keyword">as</span> e:  </span><br><span class="line">    print(e)</span><br><span class="line"><span class="keyword">finally</span>:</span><br><span class="line">    print(<span class="string">"end"</span>)</span><br><span class="line"></span><br><span class="line">print(<span class="string">"done"</span>)</span><br></pre></td></tr></table></figure><pre><code>division by zeroenddone</code></pre><h2 id="4-Raise-구문-Make-Error-에러-만들기"><a href="#4-Raise-구문-Make-Error-에러-만들기" class="headerlink" title="4. Raise 구문 (Make Error - 에러 만들기)"></a>4. Raise 구문 (Make Error - 에러 만들기)</h2><ul><li><code>raise</code>를 이용하면 에러를 강제로 발생시킬 수 있음</li><li>에러를 만들때는 Exception을 상속 받아 선언</li></ul><p>10 이하의 숫자가 들어가면 에러를 발생시키는 코드를 만들어 보자.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Under10Error</span><span class="params">(Exception)</span>:</span>    <span class="comment"># Exception을 상속 받음</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">"insert int larger than 10"</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">input_number</span><span class="params">(num)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> num &lt; <span class="number">10</span>:</span><br><span class="line">        <span class="keyword">raise</span> Under10Error()</span><br><span class="line">    print(num)</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">input_number(<span class="number">5</span>)</span><br></pre></td></tr></table></figure><pre><code>---------------------------------------------------------------------------Under10Error                              Traceback (most recent call last)&lt;ipython-input-9-5c81f9e7ac63&gt; in &lt;module&gt;()      5       6 ----&gt; 7 input_number(5)&lt;ipython-input-9-5c81f9e7ac63&gt; in input_number(num)      1 def input_number(num):      2     if num &lt; 10:----&gt; 3         raise Under10Error()      4     print(num)      5 Under10Error: insert int larger than 10</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    input_number(<span class="number">5</span>)</span><br><span class="line">    input_number(<span class="number">11</span>)</span><br><span class="line"><span class="keyword">except</span> Under10Error <span class="keyword">as</span> e:</span><br><span class="line">    print(e)</span><br><span class="line">print(<span class="string">"done"</span>)</span><br></pre></td></tr></table></figure><pre><code>insert int larger than 10done</code></pre><p><a href="https://nbviewer.jupyter.org/github/hyeshinoh/Study_Python/blob/master/python_10_try%20%26%20except.ipynb" target="_blank" rel="noopener">jupyter notebook으로 보기</a></p><h4 id="참고자료"><a href="#참고자료" class="headerlink" title="참고자료"></a>참고자료</h4><ul><li>패스트캠퍼스, ⟪데이터사이언스스쿨 8기⟫ 수업자료</li><li>인프런, ⟪프로그래밍, 데이터 과학을 위한 파이썬 입문⟫ 수업 자료</li></ul>]]></content>
      
      
      <categories>
          
          <category> DataScience </category>
          
          <category> Python 파이썬 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 파이썬 </tag>
            
            <tag> programming </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018-10-12-TIL</title>
      <link href="/2018/10/13/2018-10-12-TIL/"/>
      <url>/2018/10/13/2018-10-12-TIL/</url>
      
        <content type="html"><![CDATA[<h4 id="공부한-것-amp-리뷰"><a href="#공부한-것-amp-리뷰" class="headerlink" title="공부한 것 &amp; 리뷰"></a>공부한 것 &amp; 리뷰</h4><ul><li>python: file &amp; pickle, os 복습 및 포스팅</li></ul><h4 id="내일-공부할-것"><a href="#내일-공부할-것" class="headerlink" title="내일 공부할 것"></a>내일 공부할 것</h4><ul><li>dss 스터디: NLP 복습</li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python 09. OS &amp; shutil로 파일 &amp; 폴더 관련 작업하기</title>
      <link href="/2018/10/12/python_09_OS%20&amp;%20shutil/"/>
      <url>/2018/10/12/python_09_OS%20&amp;%20shutil/</url>
      
        <content type="html"><![CDATA[<p><a href="https://nbviewer.jupyter.org/github/hyeshinoh/Study_Python/blob/master/python_09_OS%20%26%20shutil.ipynb" target="_blank" rel="noopener">jupyter notebook으로 보기</a></p><h2 id="OS-amp-shutil"><a href="#OS-amp-shutil" class="headerlink" title="OS &amp; shutil"></a>OS &amp; shutil</h2><p>OS와 shutil 두 가지 라이브러리를 통해 파이썬으로 파일과 폴더와 관련된 작업들을 할 수 있다.</p><a id="more"></a> <ul><li>OS: 운영체제와 관련된 함수와 클래스를 제공하는 라이브러리로 파일, 폴더와 관련된 함수와 클래스 제공</li><li>shutil: 파일, 폴더와 관련된 함수와 클래스를 제공하는 라이브러리</li><li>두 라이브러리 모두 파이썬에 기본으로 포함되어 있어 따로 설치할 필요는 없음</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> shutil</span><br></pre></td></tr></table></figure><h3 id="1-폴더-만들기"><a href="#1-폴더-만들기" class="headerlink" title="1. 폴더 만들기"></a><strong>1. 폴더 만들기</strong></h3><h4 id="1-1-현재-디렉토리와-파일-리스트-확인"><a href="#1-1-현재-디렉토리와-파일-리스트-확인" class="headerlink" title="1.1 현재 디렉토리와 파일 리스트 확인"></a>1.1 현재 디렉토리와 파일 리스트 확인</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">os.getcwd()</span><br><span class="line">!ls</span><br></pre></td></tr></table></figure><pre><code>&apos;D:\\Workspace\\Study_Python&apos;LICENSEpython_01_basic_syntax.ipynbpython_02_condition &amp; loop.ipynbpython_03_function_basic.ipynbpython_04_function_intermediate.ipynbpython_05_class_basic.ipynbpython_06_class_intermediate.ipynbpython_07_module &amp; package.ipynbpython_08_file &amp; pickle.ipynbpython_09_OS.ipynbpython_10_try &amp; except.ipynbpython_11_regex.ipynbREADME.md</code></pre><h4 id="1-2-폴더-만들기"><a href="#1-2-폴더-만들기" class="headerlink" title="1.2 폴더 만들기"></a>1.2 폴더 만들기</h4><ul><li><code>os.makedirs()</code></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">os.makedirs(<span class="string">"os_dir"</span>)</span><br><span class="line">!ls</span><br></pre></td></tr></table></figure><pre><code>LICENSEos_dirpython_01_basic_syntax.ipynbpython_02_condition &amp; loop.ipynbpython_03_function_basic.ipynbpython_04_function_intermediate.ipynbpython_05_class_basic.ipynbpython_06_class_intermediate.ipynbpython_07_module &amp; package.ipynbpython_08_file &amp; pickle.ipynbpython_09_OS.ipynbpython_10_try &amp; except.ipynbpython_11_regex.ipynbREADME.md</code></pre><h4 id="1-3-만들려는-폴더가-이미-존재하는지-확인하고-없으면-생성하기"><a href="#1-3-만들려는-폴더가-이미-존재하는지-확인하고-없으면-생성하기" class="headerlink" title="1.3 만들려는 폴더가 이미 존재하는지 확인하고 없으면 생성하기"></a>1.3 만들려는 폴더가 이미 존재하는지 확인하고 없으면 생성하기</h4><ul><li>os.path.isdir()</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">make_dir</span><span class="params">(name)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.isdir(name):</span><br><span class="line">        os.makedirs(name)</span><br><span class="line">        print(name, <span class="string">"폴더가 생성되었습니다."</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">"해당 폴더가 이미 존재합니다."</span>)</span><br><span class="line">    !ls</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make_dir(<span class="string">"os_dir"</span>)</span><br></pre></td></tr></table></figure><pre><code>해당 폴더가 이미 존재합니다.LICENSEos_dirpython_01_basic_syntax.ipynbpython_02_condition &amp; loop.ipynbpython_03_function_basic.ipynbpython_04_function_intermediate.ipynbpython_05_class_basic.ipynbpython_06_class_intermediate.ipynbpython_07_module &amp; package.ipynbpython_08_file &amp; pickle.ipynbpython_09_OS.ipynbpython_10_try &amp; except.ipynbpython_11_regex.ipynbREADME.md</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make_dir(<span class="string">"os_dir2"</span>)</span><br></pre></td></tr></table></figure><pre><code>os_dir2 폴더가 생성되었습니다.LICENSEos_diros_dir2python_01_basic_syntax.ipynbpython_02_condition &amp; loop.ipynbpython_03_function_basic.ipynbpython_04_function_intermediate.ipynbpython_05_class_basic.ipynbpython_06_class_intermediate.ipynbpython_07_module &amp; package.ipynbpython_08_file &amp; pickle.ipynbpython_09_OS.ipynbpython_10_try &amp; except.ipynbpython_11_regex.ipynbREADME.md</code></pre><h3 id="2-파일-쓰기"><a href="#2-파일-쓰기" class="headerlink" title="2. 파일 쓰기"></a><strong>2. 파일 쓰기</strong></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">s1 = <span class="string">"data science"</span></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">"os_dir/test1.txt"</span>, <span class="string">"wt"</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(s1)</span><br><span class="line"></span><br><span class="line">s2 = <span class="string">"data science2"</span></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">"os_dir/test2.txt"</span>, <span class="string">"wt"</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(s2)</span><br><span class="line"></span><br><span class="line">s3 = <span class="string">"data science3"</span></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">"os_dir/test3.csv"</span>, <span class="string">"wt"</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(s3)</span><br></pre></td></tr></table></figure><h3 id="3-파일-리스트-읽기"><a href="#3-파일-리스트-읽기" class="headerlink" title="3. 파일 리스트 읽기"></a><strong>3. 파일 리스트 읽기</strong></h3><ul><li><code>os.listdir()</code>: 경로를 입력하면 경로 안의 파일 목록을 리스트로 반환</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">files = os.listdir(<span class="string">"os_dir"</span>)</span><br><span class="line">files</span><br></pre></td></tr></table></figure><pre><code>[&apos;test1.txt&apos;, &apos;test2.txt&apos;, &apos;test3.csv&apos;]</code></pre><ul><li>txt 파일만 파일 리스트 출력하기</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">txt_files = [file <span class="keyword">for</span> file <span class="keyword">in</span> files <span class="keyword">if</span> file.endswith(<span class="string">".txt"</span>)]</span><br><span class="line">txt_files</span><br></pre></td></tr></table></figure><pre><code>[&apos;test1.txt&apos;, &apos;test2.txt&apos;]</code></pre><ul><li>txt 파일이 아닌 파일 리스트만 출력하기</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ntxt_files = [file <span class="keyword">for</span> file <span class="keyword">in</span> files <span class="keyword">if</span> <span class="keyword">not</span> file.endswith(<span class="string">".txt"</span>)]</span><br><span class="line">ntxt_files</span><br></pre></td></tr></table></figure><pre><code>[&apos;test3.csv&apos;]</code></pre><h3 id="4-파일-및-폴더-존재-여부-확인"><a href="#4-파일-및-폴더-존재-여부-확인" class="headerlink" title="4. 파일 및 폴더 존재 여부 확인"></a><strong>4. 파일 및 폴더 존재 여부 확인</strong></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">os.path.exists(<span class="string">"os_dir/test1.txt"</span>)</span><br><span class="line">os.path.exists(<span class="string">"os_dir3"</span>)</span><br></pre></td></tr></table></figure><pre><code>TrueFalse</code></pre><h3 id="5-파일-및-폴더-타입-확인"><a href="#5-파일-및-폴더-타입-확인" class="headerlink" title="5. 파일 및 폴더 타입 확인"></a><strong>5. 파일 및 폴더 타입 확인</strong></h3><ul><li><code>os.path.isfile()</code></li><li><code>os.path.isdir()</code></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">os.path.isdir(<span class="string">"os_dir"</span>), os.path.isfile(<span class="string">"os_dir"</span>)</span><br><span class="line">os.path.isdir(<span class="string">"os_dir/test1.txt"</span>), os.path.isfile(<span class="string">"os_dir/test1.txt"</span>)</span><br></pre></td></tr></table></figure><pre><code>(True, False)(False, True)</code></pre><h3 id="6-파일-및-폴더-복사하기"><a href="#6-파일-및-폴더-복사하기" class="headerlink" title="6. 파일 및 폴더 복사하기"></a><strong>6. 파일 및 폴더 복사하기</strong></h3><ul><li><code>shutil.copy(원본 경로, 대상 경로)</code></li><li><code>shutil.copyfile(원본 파일 경로, 대상 파일 경로)</code>: 원본이 파일이 아니라 폴더이면 에러 발생</li><li><code>shutil.copytree(원본 폴더 경로, 대상 폴더 경로)</code>: 원본이 폴더가 아니라 파일이면 에러 발생</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">shutil.copy(<span class="string">"os_dir/test1.txt"</span>, <span class="string">"os_dir/copy1.txt"</span>)</span><br><span class="line">shutil.copyfile(<span class="string">"os_dir/test1.txt"</span>, <span class="string">"os_dir/copy2.txt"</span>)</span><br><span class="line">os.listdir(<span class="string">"os_dir"</span>)</span><br></pre></td></tr></table></figure><pre><code>&apos;os_dir/copy1.txt&apos;&apos;os_dir/copy2.txt&apos;[&apos;copy1.txt&apos;, &apos;copy2.txt&apos;, &apos;test1.txt&apos;, &apos;test2.txt&apos;, &apos;test3.csv&apos;]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">shutil.copytree(<span class="string">"os_dir"</span>, <span class="string">"os_dir_copy"</span>)</span><br><span class="line">!ls</span><br></pre></td></tr></table></figure><pre><code>&apos;os_dir_copy&apos;LICENSEos_diros_dir_copyos_dir2python_01_basic_syntax.ipynbpython_02_condition &amp; loop.ipynbpython_03_function_basic.ipynbpython_04_function_intermediate.ipynbpython_05_class_basic.ipynbpython_06_class_intermediate.ipynbpython_07_module &amp; package.ipynbpython_08_file &amp; pickle.ipynbpython_09_OS.ipynbpython_10_try &amp; except.ipynbpython_11_regex.ipynbREADME.md</code></pre><h3 id="7-이름-바꾸기"><a href="#7-이름-바꾸기" class="headerlink" title="7. 이름 바꾸기"></a><strong>7. 이름 바꾸기</strong></h3><ul><li><code>os.rename(기존 파일명, 새로운 파일명)</code></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">os.rename(<span class="string">"os_dir/copy1.txt"</span>, <span class="string">"os_dir/renamed.txt"</span>)</span><br><span class="line">os.listdir(<span class="string">"os_dir"</span>)</span><br></pre></td></tr></table></figure><pre><code>[&apos;copy2.txt&apos;, &apos;renamed.txt&apos;, &apos;test1.txt&apos;, &apos;test2.txt&apos;, &apos;test3.csv&apos;]</code></pre><h3 id="8-파일-및-폴더-삭제"><a href="#8-파일-및-폴더-삭제" class="headerlink" title="8. 파일 및 폴더 삭제"></a><strong>8. 파일 및 폴더 삭제</strong></h3><h4 id="8-1-파일-삭제"><a href="#8-1-파일-삭제" class="headerlink" title="8.1 파일 삭제"></a>8.1 파일 삭제</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">os.remove(<span class="string">"os_dir/test3.csv"</span>)</span><br><span class="line">os.listdir(<span class="string">"os_dir"</span>)</span><br></pre></td></tr></table></figure><pre><code>[&apos;copy2.txt&apos;, &apos;renamed.txt&apos;, &apos;test1.txt&apos;, &apos;test2.txt&apos;]</code></pre><h4 id="8-2-폴더-삭제"><a href="#8-2-폴더-삭제" class="headerlink" title="8.2 폴더 삭제"></a>8.2 폴더 삭제</h4><ul><li><code>os.removedirs()</code>: 폴더 안에 파일이 있으면 삭제되지 않음</li><li><code>shutil.rmtree()</code>: 폴더 안에 파일이 있어도 삭제 가능</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">os.removedirs(<span class="string">"os_dir"</span>)</span><br></pre></td></tr></table></figure><pre><code>---------------------------------------------------------------------------OSError                                   Traceback (most recent call last)&lt;ipython-input-20-b28c6d42127c&gt; in &lt;module&gt;----&gt; 1 os.removedirs(&quot;os_dir&quot;)~\Anaconda3\lib\os.py in removedirs(name)    236     237     &quot;&quot;&quot;--&gt; 238     rmdir(name)    239     head, tail = path.split(name)    240     if not tail:OSError: [WinError 145] 디렉터리가 비어 있지 않습니다: &apos;os_dir&apos;</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">os.removedirs(<span class="string">"os_dir2"</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">shutil.rmtree(<span class="string">"os_dir"</span>)</span><br><span class="line">!ls</span><br></pre></td></tr></table></figure><pre><code>LICENSEos_dir_copypython_01_basic_syntax.ipynbpython_02_condition &amp; loop.ipynbpython_03_function_basic.ipynbpython_04_function_intermediate.ipynbpython_05_class_basic.ipynbpython_06_class_intermediate.ipynbpython_07_module &amp; package.ipynbpython_08_file &amp; pickle.ipynbpython_09_OS.ipynbpython_10_try &amp; except.ipynbpython_11_regex.ipynbREADME.md</code></pre><h3 id="9-권한설정"><a href="#9-권한설정" class="headerlink" title="9. 권한설정"></a><strong>9. 권한설정</strong></h3><h4 id="9-1-권한-설정-이해"><a href="#9-1-권한-설정-이해" class="headerlink" title="9.1 권한 설정 이해"></a>9.1 권한 설정 이해</h4><ul><li>10자리의 문자로 되어 있음 (e.g. <code>-rw-r--r--</code>)<ul><li><code>[:1]</code>: type (“-“ 파일, “d” 디렉토리)  </li><li><code>[1:4]</code>: 소유자의 권한</li><li><code>[4:7]</code>: 그룹에 대한 권한</li><li><code>[7:]</code>: 모든 사용자에 대한 권한</li></ul></li><li>소유자/그룹/모든 사용자의 권한은 rwx로 나뉨<ul><li><code>rwx</code>: r(읽기), w(쓰기), x(실행)</li><li><code>rwx</code> 각 권한이 있으면 1, 없으면 0(2진수)으로 표시 ⇒ 3자리의 2진수를 8진수로 변환<ul><li><code>rwx</code>: 111(2진수) → 7(8진수)</li><li><code>r--</code>: 100(2진수) → 4(8진수) </li><li><code>-wx</code>: 011(2진수) → 3(8진수)</li></ul></li></ul></li></ul><h4 id="9-2-권한-설정-실습"><a href="#9-2-권한-설정-실습" class="headerlink" title="9.2 권한 설정 실습"></a>9.2 권한 설정 실습</h4><ul><li><code>os.chmod(파일경로, 권한)</code></li></ul><h5 id="1-모든-사용자가-read권한만-갖도록-설정-r-r-r"><a href="#1-모든-사용자가-read권한만-갖도록-설정-r-r-r" class="headerlink" title="1) 모든 사용자가 read권한만 갖도록 설정: -r--r--r--"></a>1) 모든 사용자가 read권한만 갖도록 설정: <code>-r--r--r--</code></h5><p>각 사용자의 권한은 <code>r--</code>, 즉 2진수 ‘100’임 → 8진수 ‘4’로 변환됨</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">os.chmod(<span class="string">"os_dir_copy/test1.txt"</span>, <span class="number">0o444</span>)</span><br></pre></td></tr></table></figure><h5 id="2-파일소유자가-작성권한을-갖도록-rw-r-r"><a href="#2-파일소유자가-작성권한을-갖도록-rw-r-r" class="headerlink" title="2) 파일소유자가 작성권한을 갖도록: -rw-r--r--"></a>2) 파일소유자가 작성권한을 갖도록: <code>-rw-r--r--</code></h5><p>파일소유자의 권한은 <code>rw-</code>, 즉 2진수 ‘110’ → 8진수 ‘6’로 변환됨</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">os.chmod(<span class="string">"os_dir_copy/test1.txt"</span>, <span class="number">0o644</span>)</span><br></pre></td></tr></table></figure><h5 id="3-모든-권한-제거"><a href="#3-모든-권한-제거" class="headerlink" title="3) 모든 권한 제거: ----------"></a>3) 모든 권한 제거: <code>----------</code></h5><p>각 사용자의 권한은 <code>---</code>, 즉 2진수 ‘000’ → 8진수 ‘0’으로 변환됨</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">os.chmod(<span class="string">"os_dir_copy/test1.txt"</span>, <span class="number">0o000</span>)</span><br></pre></td></tr></table></figure><p><a href="https://nbviewer.jupyter.org/github/hyeshinoh/Study_Python/blob/master/python_09_OS%20%26%20shutil.ipynb" target="_blank" rel="noopener">jupyter notebook으로 보기</a></p><h4 id="참고자료"><a href="#참고자료" class="headerlink" title="참고자료"></a>참고자료</h4><ul><li>패스트캠퍼스, ⟪데이터사이언스스쿨 8기⟫ 수업자료</li><li>이태화, 일잘하는 평사원의 업무자동화</li></ul>]]></content>
      
      
      <categories>
          
          <category> DataScience </category>
          
          <category> Python 파이썬 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 파이썬 </tag>
            
            <tag> programming </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python 08. Python File &amp; Pickle</title>
      <link href="/2018/10/12/python_08_file%20&amp;%20pickle/"/>
      <url>/2018/10/12/python_08_file%20&amp;%20pickle/</url>
      
        <content type="html"><![CDATA[<p><a href="https://nbviewer.jupyter.org/github/hyeshinoh/Study_Python/blob/master/python_08_file%20%26%20pickle.ipynb" target="_blank" rel="noopener">jupyter notebook으로 보기</a></p><h2 id="Python으로-file-읽고-쓰기"><a href="#Python으로-file-읽고-쓰기" class="headerlink" title="Python으로 file 읽고 쓰기"></a>Python으로 file 읽고 쓰기</h2><a id="more"></a> <h2 id="1-파일-불러오기"><a href="#1-파일-불러오기" class="headerlink" title="1. 파일 불러오기"></a>1. 파일 불러오기</h2><ul><li>문법<ul><li><code>f = open(&quot;파일명&quot;, &quot;옵션&quot;)</code>, <code>f.close()</code></li><li><code>with</code> 구문: 구문이 끝나면 자동으로 파일이 close됨<ul><li><code>with open(&quot;파일명&quot;, &quot;옵션&quot;) as f:</code></li></ul></li></ul></li><li>파일 접근 옵션<ul><li>w: 파일 쓰기 - 파일이 존재하면 덮어씀</li><li>x: 파일 쓰기 - 파일이 존재하지 않을때만 생성</li><li>r: 파일 읽기 </li><li>a: 파일 추가 - 파일 마지막에 새로운 내용을 추가</li></ul></li><li>파일 type에 대한 옵션<ul><li>t: text 파일</li><li>b: binary 파일</li></ul></li></ul><!-- more --> <h2 id="2-파일-쓰기-write"><a href="#2-파일-쓰기-write" class="headerlink" title="2. 파일 쓰기 - write"></a>2. 파일 쓰기 - write</h2><h3 id="2-1-텍스트-파일-쓰기"><a href="#2-1-텍스트-파일-쓰기" class="headerlink" title="2.1 텍스트 파일 쓰기"></a>2.1 텍스트 파일 쓰기</h3><h4 id="1-wt-옵션-사용"><a href="#1-wt-옵션-사용" class="headerlink" title="(1) wt 옵션 사용"></a>(1) wt 옵션 사용</h4><p>간단한 텍스트 파일(test1.txt, test2.txt)을 작성해보자</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="string">"""data</span></span><br><span class="line"><span class="string">scicence</span></span><br><span class="line"><span class="string">professional</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"></span><br><span class="line">f = open(<span class="string">"test1.txt"</span>, <span class="string">'wt'</span>)</span><br><span class="line">f.write(s)</span><br><span class="line">f.close()</span><br><span class="line"></span><br><span class="line"><span class="comment">## 아래와 같이 with구문을 사용해도 동일</span></span><br><span class="line"><span class="comment"># with open("text1.txt", 'wt') as f:</span></span><br><span class="line"><span class="comment">#     f.write(s)</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">f = open(<span class="string">"test1.txt"</span>,<span class="string">"rt"</span>)</span><br><span class="line">result = f.read()</span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure><pre><code>datascicenceprofessional</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="string">"""datascicence</span></span><br><span class="line"><span class="string">fighting!!</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">f = open(<span class="string">"test2.txt"</span>, <span class="string">'wt'</span>)</span><br><span class="line">f.write(s)</span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure><h4 id="2-xt-옵션-사용"><a href="#2-xt-옵션-사용" class="headerlink" title="(2) xt 옵션 사용"></a>(2) xt 옵션 사용</h4><p>파일 옵션을 xt로 주면 아래와 같이 해당 파일이 없는 경우에만 새로이 생성이 가능하다</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="string">"""dss</span></span><br><span class="line"><span class="string">dss7</span></span><br><span class="line"><span class="string">dss8</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"></span><br><span class="line">f = open(<span class="string">"test1.txt"</span>, <span class="string">'xt'</span>)</span><br><span class="line">f.write(s)</span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure><pre><code>---------------------------------------------------------------------------FileExistsError                           Traceback (most recent call last)&lt;ipython-input-5-736c6249daba&gt; in &lt;module&gt;()      5 &quot;&quot;&quot;      6 ----&gt; 7 f = open(&quot;test1.txt&quot;, &apos;xt&apos;)      8 f.write(s)      9 f.close()FileExistsError: [Errno 17] File exists: &apos;test1.txt&apos;</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="string">"""dss</span></span><br><span class="line"><span class="string">dss7</span></span><br><span class="line"><span class="string">dss8</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"></span><br><span class="line">f = open(<span class="string">"test3.txt"</span>, <span class="string">'xt'</span>)</span><br><span class="line">f.write(s)</span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure><h3 id="2-2-바이너리-파일-쓰기"><a href="#2-2-바이너리-파일-쓰기" class="headerlink" title="2.2 바이너리 파일 쓰기"></a>2.2 바이너리 파일 쓰기</h3><ul><li>객체를 저장할 때 사용</li><li><code>bytes()</code>: 이진데이터로 형변환 시켜줌</li><li>이진데이터로 저장하기: 옵션 wb</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">data = bytes(range(<span class="number">0</span>,<span class="number">10</span>))</span><br><span class="line">data</span><br></pre></td></tr></table></figure><pre><code>b&apos;\x00\x01\x02\x03\x04\x05\x06\x07\x08\t&apos;</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">f = open(<span class="string">"range.b"</span>, <span class="string">"wb"</span>)</span><br><span class="line">f.write(data)</span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure><h2 id="3-파일읽기-read"><a href="#3-파일읽기-read" class="headerlink" title="3. 파일읽기 - read"></a>3. 파일읽기 - read</h2><h3 id="3-1-텍스트-파일-읽어오기-옵션-rt"><a href="#3-1-텍스트-파일-읽어오기-옵션-rt" class="headerlink" title="3.1 텍스트 파일 읽어오기 (옵션 : rt)"></a>3.1 텍스트 파일 읽어오기 (옵션 : rt)</h3><h4 id="1-텍스트-파일-모두-읽어오기-read"><a href="#1-텍스트-파일-모두-읽어오기-read" class="headerlink" title="(1) 텍스트 파일 모두 읽어오기 - read"></a>(1) 텍스트 파일 모두 읽어오기 - read</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">f = open(<span class="string">"test1.txt"</span>, <span class="string">'rt'</span>)</span><br><span class="line">result = f.read()</span><br><span class="line">f.close()</span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure><pre><code>datascicenceprofessional</code></pre><h4 id="2-텍스트-파일-일부만-읽어오기"><a href="#2-텍스트-파일-일부만-읽어오기" class="headerlink" title="(2) 텍스트 파일 일부만 읽어오기"></a>(2) 텍스트 파일 일부만 읽어오기</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">f = open(<span class="string">"test1.txt"</span>, <span class="string">'rt'</span>)</span><br><span class="line">result = f.read(<span class="number">13</span>)     <span class="comment"># 10자만 읽어옴</span></span><br><span class="line">f.close()</span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure><pre><code>datascicence</code></pre><h4 id="3-텍스트-파일-한-줄-읽어오기-readline"><a href="#3-텍스트-파일-한-줄-읽어오기-readline" class="headerlink" title="(3) 텍스트 파일 한 줄 읽어오기 - readline"></a>(3) 텍스트 파일 한 줄 읽어오기 - readline</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">f = open(<span class="string">"test1.txt"</span>, <span class="string">'rt'</span>)</span><br><span class="line">result = f.readline()</span><br><span class="line">print(result, end=<span class="string">""</span>)</span><br><span class="line">result = f.readline()</span><br><span class="line">f.close()</span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure><pre><code>datascicence</code></pre><p>for문 사용해서 두 줄 읽기</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">f = open(<span class="string">"test1.txt"</span>, <span class="string">'rt'</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">2</span>):</span><br><span class="line">    result = f.readline()</span><br><span class="line">    print(result, end=<span class="string">""</span>)</span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure><pre><code>datascicence</code></pre><p>while문 사용해서 끝까지 읽기</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">f = open(<span class="string">"test1.txt"</span>, <span class="string">'rt'</span>)</span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">    result = f.readline()</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> result:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    print(result, end=<span class="string">""</span>)</span><br><span class="line">    </span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure><pre><code>datascicenceprofessional</code></pre><h3 id="3-2-바이너리-파일-읽어오기"><a href="#3-2-바이너리-파일-읽어오기" class="headerlink" title="3.2 바이너리 파일 읽어오기"></a>3.2 바이너리 파일 읽어오기</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">f = open(<span class="string">"range.b"</span>, <span class="string">"rb"</span>)</span><br><span class="line">data = f.read()</span><br><span class="line">print(list(data))</span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure><pre><code>[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]</code></pre><h2 id="4-파일에-내용-추가하기-a"><a href="#4-파일에-내용-추가하기-a" class="headerlink" title="4. 파일에 내용 추가하기 - a"></a>4. 파일에 내용 추가하기 - a</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="string">"\nschool"</span></span><br><span class="line">f = open(<span class="string">"test1.txt"</span>, <span class="string">"at"</span>)</span><br><span class="line">f.write(s)</span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">f = open(<span class="string">"test1.txt"</span>, <span class="string">"rt"</span>)</span><br><span class="line">print(f.read())</span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure><pre><code>datascicenceprofessionalschool</code></pre><h2 id="5-with"><a href="#5-with" class="headerlink" title="5. with"></a>5. with</h2><ul><li>with 구문이 끝나면 자동으로 close를 하여 파일을 읽고 쓸때 조금 더 편리</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> open(<span class="string">"test1.txt"</span>, <span class="string">'rt'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    s = f.read()</span><br><span class="line">    print(s)</span><br></pre></td></tr></table></figure><pre><code>datascicenceprofessionalschool</code></pre><h2 id="6-Pickle"><a href="#6-Pickle" class="headerlink" title="6. Pickle"></a>6. Pickle</h2><ul><li>직렬화(serialization): 객체를 파일로 저장하는 것</li><li>pickle: 파이썬에서 직렬화를 통해 바이너리 형태의 데이터를 저장하고 복원하는 모듈<ul><li>데이터, 객체 등 실행 중인 정보를 저장하고 다시 불러와서 사용</li><li>데이터 분석에서 분석모델을 저장하고 불러오는 등 많이 사용하게 됨</li></ul></li><li>이진타입으로 변환해서 입력하는 것보다 pickle이 더 빠름</li></ul><h3 id="6-1-피클파일로-저장할-클래스-선언"><a href="#6-1-피클파일로-저장할-클래스-선언" class="headerlink" title="6.1 피클파일로 저장할 클래스 선언"></a>6.1 피클파일로 저장할 클래스 선언</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pickle</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, data)</span>:</span></span><br><span class="line">        self.data = data</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">disp</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(self.data)</span><br><span class="line"></span><br><span class="line">a = A(<span class="string">"pickle test"</span>)</span><br><span class="line">a.disp()</span><br></pre></td></tr></table></figure><pre><code>pickle test</code></pre><h3 id="6-2-pickle-파일로-객체를-저장"><a href="#6-2-pickle-파일로-객체를-저장" class="headerlink" title="6.2 pickle 파일로 객체를 저장"></a>6.2 pickle 파일로 객체를 저장</h3><ul><li>문법: <code>pickle.dump(&quot;저장할 객체&quot;, &quot;파일 객체&quot;)</code></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> open(<span class="string">"obj.pkl"</span>, <span class="string">"wb"</span>) <span class="keyword">as</span> f:</span><br><span class="line">    pickle.dump(a, f)</span><br></pre></td></tr></table></figure><h3 id="6-3-pickle-파일-로드-하기"><a href="#6-3-pickle-파일-로드-하기" class="headerlink" title="6.3 pickle 파일 로드 하기"></a>6.3 pickle 파일 로드 하기</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> open(<span class="string">"obj.pkl"</span>, <span class="string">"rb"</span>) <span class="keyword">as</span> f:</span><br><span class="line">    load_a = pickle.load(f)</span><br><span class="line">load_a</span><br></pre></td></tr></table></figure><pre><code>&lt;__main__.A at 0x10c577da0&gt;</code></pre><h3 id="6-4-로드한-피클파일-객체의-함수-실행하기"><a href="#6-4-로드한-피클파일-객체의-함수-실행하기" class="headerlink" title="6.4 로드한 피클파일 객체의 함수 실행하기"></a>6.4 로드한 피클파일 객체의 함수 실행하기</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">load_a.disp(), load_a.data</span><br></pre></td></tr></table></figure><pre><code>pickle test(None, &apos;pickle test&apos;)</code></pre><p><a href="https://nbviewer.jupyter.org/github/hyeshinoh/Study_Python/blob/master/python_08_file%20%26%20pickle.ipynb" target="_blank" rel="noopener">jupyter notebook으로 보기</a></p><h4 id="참고자료"><a href="#참고자료" class="headerlink" title="참고자료"></a>참고자료</h4><ul><li>패스트캠퍼스, ⟪데이터사이언스스쿨 8기⟫ 수업자료</li><li>인프런, ⟪프로그래밍, 데이터 과학을 위한 파이썬 입문⟫ 수업 자료</li></ul>]]></content>
      
      
      <categories>
          
          <category> DataScience </category>
          
          <category> Python 파이썬 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 파이썬 </tag>
            
            <tag> programming </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018-10-10-TIL</title>
      <link href="/2018/10/11/2018-10-10-TIL/"/>
      <url>/2018/10/11/2018-10-10-TIL/</url>
      
        <content type="html"><![CDATA[<h4 id="공부한-것-amp-리뷰"><a href="#공부한-것-amp-리뷰" class="headerlink" title="공부한 것 &amp; 리뷰"></a>공부한 것 &amp; 리뷰</h4><ul><li>TIL을 밀리는 동안 selenium 실습, python class, module &amp; package 등을 복습. 확실히 여러번 보고 연습해볼수록 이해도 잘되고 익숙해지고 있다</li></ul><h4 id="내일-공부할-것"><a href="#내일-공부할-것" class="headerlink" title="내일 공부할 것"></a>내일 공부할 것</h4><ul><li>NLP 복습</li><li>python: file &amp; pickle, try &amp; exception, thread 복습</li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python 07. Python Module  &amp; Package</title>
      <link href="/2018/10/11/python_07_module%20&amp;%20package/"/>
      <url>/2018/10/11/python_07_module%20&amp;%20package/</url>
      
        <content type="html"><![CDATA[<p><a href="https://nbviewer.jupyter.org/github/hyeshinoh/Study_Python/blob/master/python_07_module%20%26%20package.ipynb" target="_blank" rel="noopener">jupyter notebook으로 보기</a></p><h2 id="1-Module-모듈"><a href="#1-Module-모듈" class="headerlink" title="1. Module - 모듈"></a>1. Module - 모듈</h2><p>여럿이 함께 프로그램을 개발하기 위한 방법인 (1) 함수 (2) 객체 (3) 모듈 중 모듈에 대해 알아보자.</p><a id="more"></a> <ul><li>모듈: 변수, 함수, 클래스를 모아놓은 파일</li><li>사용 이유: 하나의 파일로 모든 코드를 작성해서 서비스를 만들 수 없기 때문에 코드의 규모가 커지면 기능별로 분리해 모듈 형태로 저장하고, 모듈을 모아서 하나의 큰 프로그램을 개발</li><li>모듈의 확장자는 py</li><li>import를 이용하여 모듈을 호출</li><li>naming:<ul><li>module의 식별자(이름)은 짧은 소문자로 구성, 합성어를 사용할 경우에는 밑줄로 구분(snake_case)</li><li>CamelCase도 혼재</li><li>C/C++모듈은 이름이 밑줄로 시작</li></ul></li></ul><p>magic command를 이용하여 module로 사용할 dsm.py 파일을 만들어 저장</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">%%writefile dsm.py</span><br><span class="line"></span><br><span class="line">var = <span class="number">1234</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">disp1</span><span class="params">(s)</span>:</span></span><br><span class="line">    print(<span class="string">"dsm_f1:"</span>, s)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">disp2</span><span class="params">(s)</span>:</span></span><br><span class="line">    print(<span class="string">"dsm_f2:"</span>, s)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">disp3</span><span class="params">(s)</span>:</span></span><br><span class="line">    print(<span class="string">"dsm_f3:"</span>, s)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Calc</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">plus</span><span class="params">(self, *args)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> sum(args)</span><br></pre></td></tr></table></figure><pre><code>Writing dsm.py</code></pre><h3 id="1-1-모듈-호출"><a href="#1-1-모듈-호출" class="headerlink" title="1.1 모듈 호출"></a>1.1 모듈 호출</h3><h4 id="1-dsm-모듈-호출"><a href="#1-dsm-모듈-호출" class="headerlink" title="(1) dsm 모듈 호출"></a>(1) dsm 모듈 호출</h4><p>같은 폴더 내에 모듈이 위치한 경우 바로 import가 가능</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> dsm</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%whos</span><br></pre></td></tr></table></figure><pre><code>Variable   Type      Data/Info------------------------------dsm        module    &lt;module &apos;dsm&apos; from &apos;/User&lt;...&gt;ace/Study_Python/dsm.py&apos;&gt;</code></pre><h4 id="2-dsm-모듈의-변수-호출"><a href="#2-dsm-모듈의-변수-호출" class="headerlink" title="(2) dsm 모듈의 변수 호출"></a>(2) dsm 모듈의 변수 호출</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dsm.var</span><br></pre></td></tr></table></figure><pre><code>1234</code></pre><h4 id="3-dsm-모듈의-함수-호출"><a href="#3-dsm-모듈의-함수-호출" class="headerlink" title="(3) dsm 모듈의 함수 호출"></a>(3) dsm 모듈의 함수 호출</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dsm.disp1(<span class="string">"test"</span>)</span><br></pre></td></tr></table></figure><pre><code>dsm_f1: test</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dsm.disp1(<span class="string">"test1"</span>)</span><br><span class="line">dsm.disp2(<span class="string">"test2"</span>)</span><br><span class="line">dsm.disp3(<span class="string">"test3"</span>)</span><br></pre></td></tr></table></figure><pre><code>dsm_f1: test1dsm_f2: test2dsm_f3: test3</code></pre><h4 id="4-dsm-모듈의-클래스-호출"><a href="#4-dsm-모듈의-클래스-호출" class="headerlink" title="(4) dsm 모듈의 클래스 호출"></a>(4) dsm 모듈의 클래스 호출</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">c = dsm.Calc()</span><br><span class="line">c.plus(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>)</span><br></pre></td></tr></table></figure><pre><code>15</code></pre><h3 id="1-2-모듈에-있는-함수만-호출하기"><a href="#1-2-모듈에-있는-함수만-호출하기" class="headerlink" title="1.2 모듈에 있는 함수만 호출하기"></a>1.2 모듈에 있는 함수만 호출하기</h3><ul><li>모듈에 있는 함수만 호출하면 (모듈이름).(함수이름) 에서 (함수이름)만 사용하기 때문에 함수를 사용할때 코드의 양을 줄일수 있음</li><li>from을 사용하여 모듈을 호출하고 import를 이용하여 모듈안에 있는 함수나 변수나 클래스를 호출할수 있음</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%reset</span><br></pre></td></tr></table></figure><pre><code>Once deleted, variables cannot be recovered. Proceed (y/[n])?  y</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> dsm <span class="keyword">import</span> disp1, disp2</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%whos</span><br></pre></td></tr></table></figure><pre><code>Variable   Type        Data/Info--------------------------------disp1      function    &lt;function disp1 at 0x1078f6d08&gt;disp2      function    &lt;function disp2 at 0x10de1e950&gt;</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">disp1(<span class="string">"test"</span>)</span><br></pre></td></tr></table></figure><pre><code>dsm_f1: test</code></pre><h3 id="1-3-모듈의-모든-함수-호출"><a href="#1-3-모듈의-모든-함수-호출" class="headerlink" title="1.3 모듈의 모든 함수 호출"></a>1.3 모듈의 모든 함수 호출</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> dsm <span class="keyword">import</span> *</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%whos</span><br></pre></td></tr></table></figure><pre><code>Variable   Type        Data/Info--------------------------------Calc       type        &lt;class &apos;dsm.Calc&apos;&gt;disp1      function    &lt;function disp1 at 0x1078f6d08&gt;disp2      function    &lt;function disp2 at 0x10de1e950&gt;disp3      function    &lt;function disp3 at 0x10de9a378&gt;var        int         1234</code></pre><h2 id="2-Package-패키지"><a href="#2-Package-패키지" class="headerlink" title="2. Package - 패키지"></a>2. Package - 패키지</h2><ul><li>하나의 큰 프로젝트를 만드는 코드의 묶음</li><li>디렉토리와 모듈로 이루어져 있음</li><li><code>__init__.py</code><ul><li>현재 폴더가 패키지임을 알리는 초기화 스크립트로, 없을 경우 패키지로 간주하지 않음</li><li><code>python3.3</code> 이후 버전에서는 없어도 동작에 문제가 없지만 호환성을 위해서 파일을 만들어 주는 것이 좋음</li></ul></li></ul><h3 id="2-1-school-패키지-만들기"><a href="#2-1-school-패키지-만들기" class="headerlink" title="2.1 school 패키지 만들기"></a>2.1 school 패키지 만들기</h3><h4 id="디렉토리-구성하기"><a href="#디렉토리-구성하기" class="headerlink" title="디렉토리 구성하기"></a>디렉토리 구성하기</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">!mkdir school</span><br><span class="line">!mkdir school/datascience</span><br><span class="line">!mkdir school/web</span><br></pre></td></tr></table></figure><h4 id="init-py-만들기"><a href="#init-py-만들기" class="headerlink" title="__init__.py 만들기"></a><code>__init__.py</code> 만들기</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">!touch school/datascience/__init__.py</span><br><span class="line">!touch school/web/__init__.py</span><br></pre></td></tr></table></figure><h4 id="directory-structure-체크"><a href="#directory-structure-체크" class="headerlink" title="directory structure 체크"></a>directory structure 체크</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!tree school</span><br></pre></td></tr></table></figure><pre><code>school├── datascience│   ├── __init__.py│   ├── __pycache__│   │   ├── __init__.cpython-36.pyc│   │   └── data.cpython-36.pyc│   └── data.py└── web    ├── __init__.py    ├── __pycache__    │   ├── __init__.cpython-36.pyc    │   └── url.cpython-36.pyc    └── url.py4 directories, 8 files</code></pre><h4 id="data-모듈-작성"><a href="#data-모듈-작성" class="headerlink" title="data 모듈 작성"></a>data 모듈 작성</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">%%writefile school/datascience/data.py</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">plus</span><span class="params">(*args)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> sum(args)</span><br></pre></td></tr></table></figure><pre><code>Writing school/datascience/data.py</code></pre><h4 id="url-모듈-작성"><a href="#url-모듈-작성" class="headerlink" title="url 모듈 작성"></a>url 모듈 작성</h4><ul><li>url의 프로토콜을 확인해서 붙여주는 함수를 포함</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">%%writefile school/web/url.py</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">make_url</span><span class="params">(url)</span>:</span></span><br><span class="line">    protocol = <span class="string">"http://"</span></span><br><span class="line">    <span class="keyword">return</span> url <span class="keyword">if</span> url[:<span class="number">7</span>] == protocol <span class="keyword">else</span> protocol + url</span><br></pre></td></tr></table></figure><pre><code>Writing school/web/url.py</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!tree school</span><br></pre></td></tr></table></figure><pre><code>school├── datascience│   ├── __init__.py│   └── data.py└── web    ├── __init__.py    └── url.py2 directories, 4 files</code></pre><h3 id="2-2-모듈-호출하기"><a href="#2-2-모듈-호출하기" class="headerlink" title="2.2 모듈 호출하기"></a>2.2 모듈 호출하기</h3><h4 id="1-import-사용해서-호출하기"><a href="#1-import-사용해서-호출하기" class="headerlink" title="(1) import 사용해서 호출하기"></a>(1) import 사용해서 호출하기</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%reset</span><br></pre></td></tr></table></figure><pre><code>Once deleted, variables cannot be recovered. Proceed (y/[n])?  y</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 아래처럼 import할 때 마지막은 module이 와야함</span></span><br><span class="line"><span class="keyword">import</span> school.web.url</span><br><span class="line">school.web.url.make_url(<span class="string">"naver.com"</span>)</span><br></pre></td></tr></table></figure><pre><code>&apos;http://naver.com&apos;</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%whos</span><br></pre></td></tr></table></figure><pre><code>Variable   Type      Data/Info------------------------------school     module    &lt;module &apos;school&apos; (namespace)&gt;</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> school.web.url <span class="keyword">as</span> url</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%whos</span><br></pre></td></tr></table></figure><pre><code>Variable   Type      Data/Info------------------------------school     module    &lt;module &apos;school&apos; (namespace)&gt;url        module    &lt;module &apos;school.web.url&apos; &lt;...&gt;ython/school/web/url.py&apos;&gt;</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url.make_url(<span class="string">"fastcampus.com"</span>)</span><br></pre></td></tr></table></figure><pre><code>&apos;http://fastcampus.com&apos;</code></pre><h4 id="2-from과-import-사용해서-호출하기"><a href="#2-from과-import-사용해서-호출하기" class="headerlink" title="(2) from과 import 사용해서 호출하기"></a>(2) from과 import 사용해서 호출하기</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%reset</span><br></pre></td></tr></table></figure><pre><code>Once deleted, variables cannot be recovered. Proceed (y/[n])?  y</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> school.datascience <span class="keyword">import</span> data</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">%%writefile school/datascience/data2.py</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> functools <span class="keyword">import</span> reduce</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sqrt_data</span><span class="params">(*args)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> reduce(<span class="keyword">lambda</span> x, y: x ** y, args)</span><br></pre></td></tr></table></figure><pre><code>Writing school/datascience/data2.py</code></pre><h4 id="3-init-py-파일"><a href="#3-init-py-파일" class="headerlink" title="(3) __init__.py 파일"></a>(3) <code>__init__.py</code> 파일</h4><ul><li><code>__init__.py</code>를 아래와 같이 작성하면 패키지를 호출시 <code>*</code>로 모든 모듈을 호출할 경우 import할 모듈을 정해줄 수 있음 </li><li>수정 후엔 kernel restart</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">%%writefile school/datascience/__init__.py</span><br><span class="line"></span><br><span class="line">__all__ = [<span class="string">'data'</span>, <span class="string">'data2'</span>]</span><br></pre></td></tr></table></figure><pre><code>Overwriting school/datascience/__init__.py</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> school.datascience <span class="keyword">import</span> *</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%whos</span><br></pre></td></tr></table></figure><pre><code>Variable   Type      Data/Info------------------------------data       module    &lt;module &apos;school.datascien&lt;...&gt;ool/datascience/data.py&apos;&gt;data2      module    &lt;module &apos;school.datascien&lt;...&gt;ol/datascience/data2.py&apos;&gt;</code></pre><h3 id="2-2-global-영역-path-확인하기"><a href="#2-2-global-영역-path-확인하기" class="headerlink" title="2.2 global 영역 path 확인하기"></a>2.2 global 영역 path 확인하기</h3><ul><li>jupyter notebook을 실행한 환경의 python에서 참고하고 있는 path들 체크</li><li>같은 경로에 있지 않아도 이 path에 있으면 바로 import해서 사용 가능</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> path <span class="keyword">in</span> sys.path:</span><br><span class="line">    print(path)</span><br><span class="line">```     </span><br><span class="line">   /usr/local/Cellar/python/<span class="number">3.6</span><span class="number">.5</span>_1/Frameworks/Python.framework/Versions/<span class="number">3.6</span>/lib/python36.zip</span><br><span class="line">  /usr/local/Cellar/python/<span class="number">3.6</span><span class="number">.5</span>_1/Frameworks/Python.framework/Versions/<span class="number">3.6</span>/lib/python3<span class="number">.6</span></span><br><span class="line">  /usr/local/Cellar/python/<span class="number">3.6</span><span class="number">.5</span>_1/Frameworks/Python.framework/Versions/<span class="number">3.6</span>/lib/python3<span class="number">.6</span>/lib-dynload</span><br><span class="line">/usr/local/lib/python3<span class="number">.6</span>/site-packages</span><br><span class="line">/usr/local/lib/python3<span class="number">.6</span>/site-packages/IPython/extensions</span><br><span class="line">/Users/hyeshinoh/.ipython</span><br><span class="line"></span><br><span class="line">```python</span><br><span class="line">!ls /usr/local/lib/python3<span class="number">.6</span>/site-packages</span><br></pre></td></tr></table></figure><pre><code>IPythonJinja2-2.10.dist-infoKeras-2.2.2.dist-infoKeras_Applications-1.0.4.dist-infoKeras_Preprocessing-1.0.2.dist-info...wheel-0.31.1-py3.6.egg-infowidgetsnbextensionwidgetsnbextension-3.4.0.dist-infoyamlzmq</code></pre><p><a href="https://nbviewer.jupyter.org/github/hyeshinoh/Study_Python/blob/master/python_07_module%20%26%20package.ipynb" target="_blank" rel="noopener">jupyter notebook으로 보기</a></p><h4 id="참고자료"><a href="#참고자료" class="headerlink" title="참고자료"></a>참고자료</h4><ul><li>패스트캠퍼스, ⟪데이터사이언스스쿨 8기⟫ 수업자료</li></ul>]]></content>
      
      
      <categories>
          
          <category> DataScience </category>
          
          <category> Python 파이썬 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 파이썬 </tag>
            
            <tag> programming </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python 06. Python Class - Intermediate</title>
      <link href="/2018/10/07/python_06_class_intermediate/"/>
      <url>/2018/10/07/python_06_class_intermediate/</url>
      
        <content type="html"><![CDATA[<p><a href="https://nbviewer.jupyter.org/github/hyeshinoh/Study_Python/blob/master/python_06_class_intermediate.ipynb" target="_blank" rel="noopener">jupyter notebook으로 보기</a></p><h3 id="다룰-내용"><a href="#다룰-내용" class="headerlink" title="다룰 내용"></a>다룰 내용</h3><p>python class - intermediate</p><ul><li>getter &amp; setter</li><li>private</li><li>is a / has a</li><li>magic method</li></ul><a id="more"></a> <h2 id="1-Getter-amp-Setter"><a href="#1-Getter-amp-Setter" class="headerlink" title="1. Getter &amp; Setter"></a>1. Getter &amp; Setter</h2><ul><li>객체의 내부 변수에 접근할때 특정 로직을 거쳐서(특정 함수를 이용, 특정 코드를 거쳐서) 접근할수 있도록 하는 방법</li><li>property와 decorator 두 가지 방법으로 구현이 가능</li><li>OOP의 캡슐화, 은닉화를 구현하기 위해 쓰임</li></ul><h3 id="1-1-Property-함수-이용"><a href="#1-1-Property-함수-이용" class="headerlink" title="1.1 Property 함수 이용"></a>1.1 Property 함수 이용</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person1</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, input_name1, input_name2)</span>:</span></span><br><span class="line">        self.hidden_name1 = input_name1</span><br><span class="line">        self.hidden_name2 = input_name2</span><br><span class="line">        </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">disp_name1</span><span class="params">(self)</span>:</span>     <span class="comment"># getter 1</span></span><br><span class="line">        print(<span class="string">"disp_name1"</span>)</span><br><span class="line">        <span class="keyword">return</span> self.hidden_name1.upper()</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">disp_name2</span><span class="params">(self)</span>:</span>     <span class="comment"># getter 2</span></span><br><span class="line">        print(<span class="string">"disp_name2"</span>)</span><br><span class="line">        <span class="keyword">return</span> self.hidden_name2</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">set_name1</span><span class="params">(self, input_name)</span>:</span>     <span class="comment"># setter 1</span></span><br><span class="line">        print(<span class="string">"set_name1"</span>)</span><br><span class="line">        self.hidden_name1 = <span class="string">"Mr. "</span>+ input_name.lower()</span><br><span class="line">        </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">set_name2</span><span class="params">(self, input_name)</span>:</span>     <span class="comment"># setter 2</span></span><br><span class="line">        print(<span class="string">"set_name2"</span>)</span><br><span class="line">        self.hidden_name2 = input_name</span><br><span class="line">        </span><br><span class="line">    name1 = property(disp_name1, set_name1)     <span class="comment"># property:내장함수 | property(getter함수, setter함수)</span></span><br><span class="line">    name2 = property(disp_name2, set_name2)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">p = Person1(<span class="string">"ksm"</span>, <span class="string">"kek"</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">p.name1</span><br></pre></td></tr></table></figure><pre><code>disp_name1&apos;KSM&apos;</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">p.hidden_name1</span><br></pre></td></tr></table></figure><pre><code>&apos;ksm&apos;</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">p.name1 = <span class="string">"ppp"</span>         <span class="comment"># setter1을 통해 p에 이름 "ppp"를 저장함</span></span><br></pre></td></tr></table></figure><pre><code>set_name1</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">p.hidden_name1          <span class="comment"># setter1을 통해 Mr. 를 붙여서 저장되었음</span></span><br></pre></td></tr></table></figure><pre><code>&apos;Mr. ppp&apos;</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">p.disp_name1()          <span class="comment"># getter1을 거쳐 대문자로 표시됨</span></span><br></pre></td></tr></table></figure><pre><code>disp_name1&apos;MR. PPP&apos;</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">p.name1</span><br></pre></td></tr></table></figure><pre><code>disp_name1&apos;MR. PPP&apos;</code></pre><h3 id="1-2-decorator-이용"><a href="#1-2-decorator-이용" class="headerlink" title="1.2 decorator 이용"></a>1.2 decorator 이용</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person2</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, input_name)</span>:</span></span><br><span class="line">        self.hidden_name = input_name</span><br><span class="line"></span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">name</span><span class="params">(self)</span>:</span>                      <span class="comment"># getter function</span></span><br><span class="line">        print(<span class="string">"inside the getter"</span>)</span><br><span class="line">        <span class="keyword">return</span> self.hidden_name.upper()</span><br><span class="line">    </span><br><span class="line"><span class="meta">    @name.setter</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">name</span><span class="params">(self, input_name)</span>:</span>          <span class="comment"># setter function</span></span><br><span class="line">        print(<span class="string">"inside the setter"</span>)</span><br><span class="line">        self.hidden_name = <span class="string">"Mr. "</span> + input_name</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">p2 = Person2(<span class="string">"park"</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">p2.hidden_name</span><br></pre></td></tr></table></figure><pre><code>&apos;park&apos;</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">p2.name = <span class="string">"kim"</span></span><br></pre></td></tr></table></figure><pre><code>inside the setter</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">p2.hidden_name</span><br></pre></td></tr></table></figure><pre><code>&apos;Mr. kim&apos;</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">p2.name</span><br></pre></td></tr></table></figure><pre><code>inside the getter&apos;MR. KIM&apos;</code></pre><h2 id="2-Private"><a href="#2-Private" class="headerlink" title="2. Private"></a>2. Private</h2><ul><li>위 코드처럼 생성자 함수에 변수를 선언하면 객체를 만들었을 때 getter를 통하지 않고 접근이 가능</li><li>python에서는 mangling이라는 방법을 사용하여 class 내부 변수에 다이렉트로 접근하지 못하게 하는 방법으로 private을 구현<ul><li>변수명 앞에 <code>__</code> 를 붙여서 변수를 선언</li></ul></li><li>완벽한 방법은 아니고 변수명 앞에 <code>_(클래스명)</code>을 붙이면 접근이 가능</li><li>객체의 변수에 접근하기 위해서 <code>(객체명).(변수명)</code> 으로 접근이 가능</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person3</span><span class="params">()</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, input_name)</span>:</span></span><br><span class="line">        self.__hidden_name = input_name</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">mod</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.__hidden_name = <span class="string">"Park"</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">name</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"inside the getter"</span>)</span><br><span class="line">        <span class="keyword">return</span> self.__hidden_name.upper()</span><br><span class="line"></span><br><span class="line"><span class="meta">    @name.setter</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">name</span><span class="params">(self, input_name)</span>:</span></span><br><span class="line">        print(<span class="string">"inside the setter"</span>)</span><br><span class="line">        self.__hidden_name = <span class="string">"Mr. "</span> + input_name</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">p3 = Person3(<span class="string">"Lee"</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#직접 접근할 수 없음</span></span><br><span class="line">p3.__hidden_name</span><br></pre></td></tr></table></figure><pre><code>---------------------------------------------------------------------------AttributeError                            Traceback (most recent call last)&lt;ipython-input-17-3caaa32295f2&gt; in &lt;module&gt;()----&gt; 1 p3.__hidden_nameAttributeError: &apos;Person3&apos; object has no attribute &apos;__hidden_name&apos;</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># getter로만 접근 가능</span></span><br><span class="line">p3.name</span><br></pre></td></tr></table></figure><pre><code>inside the getter&apos;LEE&apos;</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">p3.mod()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">p3.name</span><br></pre></td></tr></table></figure><pre><code>inside the getter&apos;PARK&apos;</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">p3._Person3__hidden_name    <span class="comment"># 접근은 가능</span></span><br></pre></td></tr></table></figure><pre><code>&apos;Park&apos;</code></pre><h3 id="Private-function"><a href="#Private-function" class="headerlink" title="Private function"></a>Private function</h3><ul><li>class 내에서만 사용되는 함수의 이름 중복이 우려될 때 사용</li><li>mangling 사용</li><li>거의 사용되지는 않음</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># def test():</span></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__test</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"test"</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a = A()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a._A__test()</span><br></pre></td></tr></table></figure><pre><code>test</code></pre><h2 id="3-is-a-amp-has-a"><a href="#3-is-a-amp-has-a" class="headerlink" title="3. is a &amp; has a"></a>3. is a &amp; has a</h2><ul><li>is a: A is a B의 개념은 A는 B임을 의미<ul><li>상속을 사용하여 클래스를 선언하는 개념</li></ul></li><li>has a: A has a B는 A는 B 객체를 가지고 있음을 의미<ul><li>클래스의 변수를 객체로 받아서 클래스를 선언하는 개념</li></ul></li><li>같이 혼합해서도 사용 가능</li></ul><h3 id="3-1-is-a"><a href="#3-1-is-a" class="headerlink" title="3.1 is a"></a>3.1 is a</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span><span class="params">()</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, email)</span>:</span></span><br><span class="line">        self.name = name</span><br><span class="line">        self.email = email</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span><span class="params">(B)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">about</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(self.name, self.email)</span><br><span class="line">        </span><br><span class="line">person = A(<span class="string">"Hyeshin"</span>, <span class="string">"hyeshinoh@gmail.com"</span>)</span><br><span class="line">person.about()</span><br></pre></td></tr></table></figure><pre><code>Hyeshin hyeshinoh@gmail.com</code></pre><h3 id="3-2-has-a"><a href="#3-2-has-a" class="headerlink" title="3.2 has a"></a>3.2 has a</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Name</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name)</span>:</span></span><br><span class="line">        self.name_str = name</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Email</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, email)</span>:</span></span><br><span class="line">        self.email_str = email</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, email)</span>:</span></span><br><span class="line">        self.name_obj = name</span><br><span class="line">        self.email_obj = email</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">about</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(self.name_obj.name_str, self.email_obj.email_str)</span><br><span class="line">             <span class="comment"># object가 들어오고 오브젝트의 name값</span></span><br><span class="line"></span><br><span class="line">name = Name(<span class="string">"Hyeshin"</span>)</span><br><span class="line">email = Email(<span class="string">"hyeshinoh@gmail.com"</span>)</span><br><span class="line">p = Person(name, email)</span><br><span class="line">p.about()</span><br></pre></td></tr></table></figure><pre><code>Hyeshin hyeshinoh@gmail.com</code></pre><h2 id="4-Magic-Special-Method"><a href="#4-Magic-Special-Method" class="headerlink" title="4. Magic(Special) Method"></a>4. Magic(Special) Method</h2><ul><li><a href="https://docs.python.org/3/reference/datamodel.html#specialnames" target="_blank" rel="noopener">https://docs.python.org/3/reference/datamodel.html#specialnames</a></li><li><p>compare</p><ul><li><code>__eq__</code> : ==</li><li><code>__ne__</code> : !=</li><li><code>__lt__</code> : &lt;</li><li><code>__gt__</code> : &gt;</li><li><code>__le__</code> : &lt;=</li><li><code>__ge__</code> : &gt;=</li></ul></li><li><p>calculate</p><ul><li><code>__add__</code> : +</li><li><code>__sub__</code> : -</li><li><code>__mul__</code> : *</li><li><code>__floordiv__</code> : // </li><li><code>__truediv__</code> : /</li><li><code>__mod__</code> : %</li><li><code>__pow__</code> : **</li></ul></li><li><code>__repr__</code></li><li><code>__str__</code></li><li><code>__len__</code></li></ul><h3 id="4-1-eq"><a href="#4-1-eq" class="headerlink" title="4.1 __eq__"></a>4.1 <code>__eq__</code></h3><ul><li>text 변수를 저장하고 객체가 같은지 비교하는 코드</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Txt</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, txt)</span>:</span></span><br><span class="line">        self.txt = txt</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">equals</span><span class="params">(self, txt_obj)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.txt.lower() == txt_obj.txt.lower()</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">txt1 = Txt(<span class="string">"DataScience"</span>)</span><br><span class="line">txt2 = Txt(<span class="string">"datascience"</span>)</span><br><span class="line">txt3 = Txt(<span class="string">"dataScience"</span>)</span><br><span class="line">txt4 = Txt(<span class="string">"python"</span>)</span><br><span class="line">txt5 = txt1</span><br><span class="line"></span><br><span class="line"><span class="comment"># Txt 객체의 txt 변수를 비교</span></span><br><span class="line">print( txt1.equals(txt2) )</span><br><span class="line">print( txt1.equals(txt3) )</span><br><span class="line">print( txt1.equals(txt4) )</span><br><span class="line">print( txt1.equals(txt5) )</span><br></pre></td></tr></table></figure><pre><code>TrueTrueFalseTrue</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">txt1 == txt2, txt1 == txt3, txt1 == txt4, txt1</span><br><span class="line"><span class="comment"># object는 == 사용시 주소값 비교</span></span><br></pre></td></tr></table></figure><pre><code>(False, False, False, True)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">txt1, txt4, txt5</span><br></pre></td></tr></table></figure><pre><code>(&lt;__main__.Txt at 0x114f65ef0&gt;, &lt;__main__.Txt at 0x114f65f28&gt;, &lt;__main__.Txt at 0x114f65ef0&gt;)</code></pre><p><code>__eq__</code>를 정의하면 클래스 비교연산에서 <code>__eq__</code>를 수행<br>이를 값을 비교하는 함수로 수정</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Txt</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, txt)</span>:</span></span><br><span class="line">        self.txt = txt</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__eq__</span><span class="params">(self, txt_obj)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        return self.txt.lower() == txt_obj.txt.lower()</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        <span class="keyword">return</span> self.txt.lower() == txt_obj.txt.lower()</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">txt1 = Txt(<span class="string">"DataScience"</span>)</span><br><span class="line">txt2 = Txt(<span class="string">"datascience"</span>)</span><br><span class="line">txt3 = Txt(<span class="string">"dataScience"</span>)</span><br><span class="line">txt4 = Txt(<span class="string">"python"</span>)</span><br><span class="line">txt5 = txt1</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## equal의 기능을 바꿔주었음</span></span><br><span class="line">txt1 == txt2, txt1 == txt3, txt1 == txt4, txt1 == txt5</span><br></pre></td></tr></table></figure><pre><code>(True, True, False, True)</code></pre><h3 id="4-2-ne"><a href="#4-2-ne" class="headerlink" title="4.2 __ne__"></a>4.2 <code>__ne__</code></h3><ul><li>list의 remove 함수는 한개의 value만 삭제</li><li>리스트에 있는 값 여러개 삭제하는 코드</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ls = [<span class="string">"a"</span>, <span class="string">"b"</span>, <span class="string">"a"</span>, <span class="string">"c"</span>, <span class="string">"a"</span>]</span><br><span class="line">ls.remove(<span class="string">"a"</span>)</span><br><span class="line">ls</span><br></pre></td></tr></table></figure><pre><code>[&apos;b&apos;, &apos;a&apos;, &apos;c&apos;, &apos;a&apos;]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ls = [<span class="string">"a"</span>, <span class="string">"b"</span>, <span class="string">"a"</span>, <span class="string">"c"</span>, <span class="string">"a"</span>]</span><br><span class="line">s = <span class="string">"a"</span></span><br><span class="line">result = [data <span class="keyword">for</span> data <span class="keyword">in</span> ls <span class="keyword">if</span> data != s]</span><br><span class="line">result</span><br></pre></td></tr></table></figure><pre><code>[&apos;b&apos;, &apos;c&apos;]</code></pre><p><code>__ne__</code>를 이용하여 리스트에 있는 값 여러개 삭제하는 코드</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="string">"Python"</span></span><br><span class="line"><span class="comment"># s.__ne__??</span></span><br><span class="line"></span><br><span class="line">ls = [<span class="string">"Hello"</span>,<span class="string">"Python"</span>,<span class="string">"Hello"</span>,<span class="string">"Python"</span>,<span class="string">"Hello"</span>,<span class="string">"Python"</span>]</span><br><span class="line">print(list(filter(s.__ne__, ls)))</span><br></pre></td></tr></table></figure><pre><code>[&apos;Hello&apos;, &apos;Hello&apos;, &apos;Hello&apos;]</code></pre><h3 id="4-3-add"><a href="#4-3-add" class="headerlink" title="4.3 __add__"></a>4.3 <code>__add__</code></h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">int.__add__??</span><br></pre></td></tr></table></figure><pre><code>Signature:      int.__add__(self, value, /)Call signature: int.__add__(*args, **kwargs)Type:           wrapper_descriptorString form:    &lt;slot wrapper &apos;__add__&apos; of &apos;int&apos; objects&gt;Namespace:      Python builtinDocstring:      Return self+value.</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(<span class="number">2</span>).__add__(<span class="number">3</span>), <span class="number">2</span> + <span class="number">3</span></span><br></pre></td></tr></table></figure><pre><code>(5, 5)</code></pre><p>add를 정의 해서 객체간의 덧셈을 정의 할수 있음 (뺄셈으로 변경)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">number</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, num)</span>:</span></span><br><span class="line">        self.num = num</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__add__</span><span class="params">(self, other)</span>:</span>           <span class="comment"># overriding</span></span><br><span class="line">        <span class="keyword">return</span> self.num - other.num</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">n1 = number(<span class="number">5</span>)</span><br><span class="line">n2 = number(<span class="number">7</span>)</span><br><span class="line">n1 + n2</span><br></pre></td></tr></table></figure><pre><code>-2</code></pre><p>add를 정의 해서 객체간의 덧셈을 정의 할수 있음 (곱셈으로 변경)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">number2</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, num)</span>:</span></span><br><span class="line">        self.num = num</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__add__</span><span class="params">(self, other)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.num * other.num</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">n1 = number(<span class="number">5</span>)</span><br><span class="line">n2 = number2(<span class="number">7</span>)</span><br><span class="line">n1 + n2</span><br></pre></td></tr></table></figure><pre><code>-2</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">n1 = number2(<span class="number">5</span>)</span><br><span class="line">n2 = number(<span class="number">7</span>)</span><br><span class="line">n1 + n2</span><br></pre></td></tr></table></figure><pre><code>35</code></pre><h3 id="4-4-str-repr"><a href="#4-4-str-repr" class="headerlink" title="4.4 __str__, __repr__"></a>4.4 <code>__str__</code>, <code>__repr__</code></h3><ul><li><code>__str__</code>은 print로 객체를 출력할때 출력되는 문자열 데이터를 정의<ul><li>객체에 대한 정보를 문자열로 출력 (사용자용)</li><li>객체의 변수 값을 나열하는 형태로 표현</li></ul></li><li><code>__repr__</code>은 ipython에서 객체를 출력할때 나오는 문자열을 정의 <ul><li>객체에 대한 정보를 문자열로 출력 (개발자용)</li><li>클래스명, 생성자변수이름, 변수 값을 나타냄</li></ul></li></ul><p>number class에 <code>__str__</code>과 <code>__repr__</code>을 추가하여 객체를 출력할때 숫자 결과값이 나오도록 함</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Number</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, num)</span>:</span></span><br><span class="line">        self.num = num</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> str(self.num)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__repr__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> str(<span class="string">"Number(num="</span> + str(self.num) + <span class="string">")"</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">n = Number(<span class="number">5</span>)</span><br><span class="line">print(n)</span><br></pre></td></tr></table></figure><pre><code>5</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">n</span><br></pre></td></tr></table></figure><pre><code>Number(num=5)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">n2 = Number(num=<span class="number">5</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">n2</span><br></pre></td></tr></table></figure><pre><code>Number(num=5)</code></pre><h4 id="참고자료"><a href="#참고자료" class="headerlink" title="참고자료"></a>참고자료</h4><ul><li>패스트캠퍼스, ⟪데이터사이언스스쿨 8기⟫ 수업자료</li></ul><p><a href="https://nbviewer.jupyter.org/github/hyeshinoh/Study_Python/blob/master/python_06_class_intermediate.ipynb" target="_blank" rel="noopener">jupyter notebook으로 보기</a></p>]]></content>
      
      
      <categories>
          
          <category> DataScience </category>
          
          <category> Python 파이썬 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 파이썬 </tag>
            
            <tag> programming </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Web crawling exercise</title>
      <link href="/2018/10/05/web_11_selenium_exercise/"/>
      <url>/2018/10/05/web_11_selenium_exercise/</url>
      
        <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br></pre></td></tr></table></figure><h2 id="Quiz-1"><a href="#Quiz-1" class="headerlink" title="Quiz 1"></a>Quiz 1</h2><ul><li>아래 URL의 NBA 데이터를 크롤링하여 판다스 데이터 프레임으로 나타내세요.</li><li><a href="http://stats.nba.com/teams/traditional/?sort=GP&amp;dir=-1" target="_blank" rel="noopener">http://stats.nba.com/teams/traditional/?sort=GP&amp;dir=-1</a></li></ul><a id="more"></a> <h3 id="1-1-webdriver를-실행하고-사이트에-접속하기"><a href="#1-1-webdriver를-실행하고-사이트에-접속하기" class="headerlink" title="1.1 webdriver를 실행하고 사이트에 접속하기"></a>1.1 webdriver를 실행하고 사이트에 접속하기</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">driver = webdriver.Chrome()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url = <span class="string">"http://stats.nba.com/teams/traditional/?sort=GP&amp;dir=-1"</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">driver.get(url)</span><br></pre></td></tr></table></figure><p>링크로 들어가면 GP로 정렬되어 있는 상태임<br><img src="https://github.com/hyeshinoh/Study_Web/blob/master/web_10_image_001.png?raw=true" alt></p><h3 id="1-2-표-데이터-받아오기"><a href="#1-2-표-데이터-받아오기" class="headerlink" title="1.2 표 데이터 받아오기"></a>1.2 표 데이터 받아오기</h3><h4 id="1-column-이름을-받아와서-pandas-dataframe-만들기"><a href="#1-column-이름을-받아와서-pandas-dataframe-만들기" class="headerlink" title="(1) column 이름을 받아와서 pandas dataframe 만들기"></a>(1) column 이름을 받아와서 pandas dataframe 만들기</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">columns = driver.find_elements_by_css_selector(<span class="string">"div.nba-stat-table__overflow &gt; table &gt; thead &gt; tr &gt; th"</span>)[:<span class="number">28</span>]</span><br><span class="line">len(columns)</span><br></pre></td></tr></table></figure><pre><code>28</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ls_column = []</span><br><span class="line"><span class="keyword">for</span> column <span class="keyword">in</span> columns:</span><br><span class="line">    ls_column.append(column.text)</span><br><span class="line">    </span><br><span class="line">ls_column</span><br></pre></td></tr></table></figure><pre><code>[&apos;&apos;, &apos;TEAM&apos;, &apos;GP&apos;, &apos;W&apos;, &apos;L&apos;, &apos;WIN%&apos;, &apos;MIN&apos;, &apos;PTS&apos;, &apos;FGM&apos;, &apos;FGA&apos;, &apos;FG%&apos;, &apos;3PM&apos;, &apos;3PA&apos;, &apos;3P%&apos;, &apos;FTM&apos;, &apos;FTA&apos;, &apos;FT%&apos;, &apos;OREB&apos;, &apos;DREB&apos;, &apos;REB&apos;, &apos;AST&apos;, &apos;TOV&apos;, &apos;STL&apos;, &apos;BLK&apos;, &apos;BLKA&apos;, &apos;PF&apos;, &apos;PFD&apos;, &apos;+/-&apos;]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df = pd.DataFrame(columns = ls_column)</span><br><span class="line">df</span><br></pre></td></tr></table></figure><table><thead><tr><th></th><th>TEAM</th><th>GP</th><th>W</th><th>L</th><th>WIN%</th><th>MIN</th><th>PTS</th><th>FGM</th><th>FGA</th><th>…</th><th>DREB</th><th>REB</th><th>AST</th><th>TOV</th><th>STL</th><th>BLK</th><th>BLKA</th><th>PF</th><th>PFD</th><th>+/-</th></tr></thead><tbody><tr><td></td></tr></tbody></table><h4 id="2-각-row의-팀별-데이터를-받아와서-dataframe에-넣기"><a href="#2-각-row의-팀별-데이터를-받아와서-dataframe에-넣기" class="headerlink" title="(2) 각 row의 팀별 데이터를 받아와서 dataframe에 넣기"></a>(2) 각 row의 팀별 데이터를 받아와서 dataframe에 넣기</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">team_stat = driver.find_elements_by_css_selector(<span class="string">"div.nba-stat-table__overflow &gt; table &gt; tbody &gt; tr"</span>)</span><br><span class="line">len(team_stat)</span><br></pre></td></tr></table></figure><pre><code>35</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> stat <span class="keyword">in</span> team_stat:</span><br><span class="line">    stats = stat.find_elements_by_css_selector(<span class="string">"td"</span>)</span><br><span class="line">    stat = &#123;&#125;</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(stats)):</span><br><span class="line">        stat[ls_column[i]] = stats[i].text</span><br><span class="line">    df.loc[len(df)] = stat</span><br><span class="line">df</span><br></pre></td></tr></table></figure><table><thead><tr><th></th><th>TEAM</th><th>GP</th><th>W</th><th>L</th><th>WIN%</th><th>MIN</th><th>PTS</th><th>FGM</th><th>FGA</th><th>…</th><th>DREB</th><th>REB</th><th>AST</th><th>TOV</th><th>STL</th><th>BLK</th><th>BLKA</th><th>PF</th><th>PFD</th><th>+/-</th></tr></thead><tbody><tr><td>0</td><td>1</td><td>Charlotte Hornets</td><td>3</td><td>2</td><td>1</td><td>.667</td><td>48.0</td><td>112.7</td><td>38.0</td><td>84.0</td><td>…</td><td>43.3</td><td>49.0</td><td>24.0</td><td>15.3</td><td>5.3</td><td>7.3</td><td>5.7</td><td>24.0</td><td>29.7</td><td>4.3</td></tr><tr><td>1</td><td>1</td><td>Los Angeles Lakers</td><td>3</td><td>1</td><td>2</td><td>.333</td><td>48.0</td><td>115.3</td><td>41.3</td><td>83.0</td><td>…</td><td>35.3</td><td>41.0</td><td>24.3</td><td>21.0</td><td>9.0</td><td>6.7</td><td>4.0</td><td>28.7</td><td>32.3</td><td>-4.7</td></tr><tr><td>2</td><td>1</td><td>Boston Celtics</td><td>3</td><td>1</td><td>2</td><td>.333</td><td>48.0</td><td>102.3</td><td>37.7</td><td>93.7</td><td>…</td><td>40.0</td><td>50.0</td><td>18.3</td><td>12.3</td><td>8.3</td><td>6.7</td><td>5.3</td><td>30.7</td><td>24.0</td><td>-3.7</td></tr><tr><td>3</td><td>4</td><td>Minnesota Timberwolves</td><td>2</td><td>1</td><td>1</td><td>.500</td><td>48.0</td><td>107.5</td><td>34.5</td><td>87.5</td><td>…</td><td>32.5</td><td>42.5</td><td>13.5</td><td>16.5</td><td>7.5</td><td>7.5</td><td>8.0</td><td>20.5</td><td>30.5</td><td>-11.5</td></tr><tr><td>4</td><td>4</td><td>Denver Nuggets</td><td>2</td><td>2</td><td>0</td><td>1.000</td><td>48.0</td><td>118.5</td><td>40.0</td><td>85.5</td><td>…</td><td>32.5</td><td>45.0</td><td>27.0</td><td>23.5</td><td>12.0</td><td>4.5</td><td>7.0</td><td>26.5</td><td>30.5</td><td>9.5</td></tr><tr><td>5</td><td>4</td><td>Houston</td><td>Rockets</td><td>2</td><td>1</td><td>1</td><td>.500</td><td>48.0</td><td>115.5</td><td>37.5</td><td>80.0</td><td>…</td><td>33.0</td><td>41.0</td><td>23.0</td><td>24.0</td><td>11.0</td><td>7.5</td><td>4.0</td><td>31.5</td><td>31.5</td><td>3.0</td></tr><tr><td>6</td><td>4</td><td>LA Clippers</td><td>2</td><td>2</td><td>0</td><td>1.000</td><td>48.0</td><td>119.0</td><td>45.0</td><td>89.0</td><td>…</td><td>37.0</td><td>45.5</td><td>33.5</td><td>16.5</td><td>8.5</td><td>7.5</td><td>5.5</td><td>32.0</td><td>25.5</td><td>23.0</td></tr><tr><td>7</td><td>4</td><td>Miami Heat</td><td>2</td><td>0</td><td>2</td><td>.000</td><td>48.0</td><td>106.5</td><td>37.0</td><td>94.5</td><td>…</td><td>36.5</td><td>52.0</td><td>20.0</td><td>16.0</td><td>9.0</td><td>4.5</td><td>8.0</td><td>27.5</td><td>30.0</td><td>-6.5</td></tr><tr><td>8</td><td>4</td><td>Chicago Bulls</td><td>2</td><td>1</td><td>1</td><td>.500</td><td>48.0</td><td>105.0</td><td>41.0</td><td>100.5</td><td>…</td><td>38.0</td><td>47.5</td><td>23.0</td><td>9.5</td><td>7.5</td><td>3.0</td><td>7.0</td><td>19.5</td><td>18.0</td><td>-11.0</td></tr><tr><td>9</td><td>4</td><td>New Orleans Pelicans</td><td>2</td><td>0</td><td>2</td><td>.000</td><td>48.0</td><td>109.0</td><td>41.0</td><td>100.5</td><td>…</td><td>38.5</td><td>49.5</td><td>24.5</td><td>18.0</td><td>5.0</td><td>5.5</td><td>8.0</td><td>23.5</td><td>24.0</td><td>-13.0</td></tr><tr><td>10</td><td>4</td><td>New York Knicks</td><td>2</td><td>2</td><td>0</td><td>1.000</td><td>50.5</td><td>115.5</td><td>38.5</td><td>85.0</td><td>…</td><td>40.5</td><td>50.0</td><td>19.5</td><td>22.5</td><td>11.0</td><td>6.5</td><td>5.0</td><td>36.5</td><td>34.5</td><td>4.0</td></tr><tr><td>11</td><td>4</td><td>Philadelphia 76ers</td><td>2</td><td>2</td><td>0</td><td>1.000</td><td>48.0</td><td>112.0</td><td>39.5</td><td>83.0</td><td>…</td><td>36.0</td><td>48.0</td><td>25.0</td><td>18.5</td><td>8.5</td><td>8.0</td><td>2.5</td><td>24.5</td><td>29.5</td><td>13.0</td></tr><tr><td>12</td><td>4</td><td>Phoenix Suns</td><td>2</td><td>1</td><td>1</td><td>.500</td><td>48.0</td><td>96.5</td><td>31.5</td><td>75.5</td><td>…</td><td>37.0</td><td>48.0</td><td>20.5</td><td>20.0</td><td>7.5</td><td>9.0</td><td>4.5</td><td>32.0</td><td>28.5</td><td>0.5</td></tr><tr><td>13</td><td>4</td><td>Sacramento Kings</td><td>2</td><td>1</td><td>1</td><td>.500</td><td>48.0</td><td>114.5</td><td>42.0</td><td>90.5</td><td>…</td><td>31.5</td><td>40.5</td><td>25.5</td><td>16.0</td><td>6.5</td><td>3.5</td><td>5.0</td><td>38.0</td><td>29.0</td><td>-0.5</td></tr><tr><td>14</td><td>4</td><td>Toronto Raptors</td><td>2</td><td>1</td><td>1</td><td>.500</td><td>48.0</td><td>106.0</td><td>34.0</td><td>89.0</td><td>…</td><td>35.5</td><td>48.5</td><td>13.0</td><td>18.5</td><td>8.5</td><td>5.5</td><td>4.0</td><td>28.5</td><td>35.5</td><td>1.5</td></tr><tr><td>15</td><td>4</td><td>Utah Jazz</td><td>2</td><td>2</td><td>0</td><td>1.000</td><td>48.0</td><td>117.5</td><td>44.0</td><td>89.5</td><td>…</td><td>47.0</td><td>56.5</td><td>28.5</td><td>19.0</td><td>8.5</td><td>5.5</td><td>3.0</td><td>27.0</td><td>27.0</td><td>36.5</td></tr><tr><td>16</td><td>17</td><td>Memphis Grizzlies</td><td>1</td><td>0</td><td>1</td><td>.000</td><td>48.0</td><td>115.0</td><td>40.0</td><td>85.0</td><td>…</td><td>27.0</td><td>40.0</td><td>24.0</td><td>23.0</td><td>11.0</td><td>2.0</td><td>7.0</td><td>37.0</td><td>34.0</td><td>-16.0</td></tr><tr><td>17</td><td>17</td><td>Beijing Ducks</td><td>1</td><td>0</td><td>1</td><td>.000</td><td>48.0</td><td>63.0</td><td>17.0</td><td>71.0</td><td>…</td><td>22.0</td><td>33.0</td><td>12.0</td><td>17.0</td><td>4.0</td><td>2.0</td><td>10.0</td><td>32.0</td><td>29.0</td><td>-53.0</td></tr><tr><td>18</td><td>17</td><td>Milwaukee Bucks</td><td>1</td><td>1</td><td>0</td><td>1.000</td><td>48.0</td><td>116.0</td><td>44.0</td><td>89.0</td><td>…</td><td>53.0</td><td>64.0</td><td>28.0</td><td>13.0</td><td>3.0</td><td>7.0</td><td>2.0</td><td>12.0</td><td>19.0</td><td>34.0</td></tr><tr><td>19</td><td>17</td><td>Atlanta Hawks</td><td>1</td><td>1</td><td>0</td><td>1.000</td><td>48.0</td><td>116.0</td><td>48.0</td><td>105.0</td><td>…</td><td>44.0</td><td>54.0</td><td>32.0</td><td>18.0</td><td>7.0</td><td>12.0</td><td>4.0</td><td>28.0</td><td>23.0</td><td>14.0</td></tr><tr><td>20</td><td>17</td><td>Detroit Pistons</td><td>1</td><td>1</td><td>0</td><td>1.000</td><td>48.0</td><td>97.0</td><td>39.0</td><td>84.0</td><td>…</td><td>35.0</td><td>45.0</td><td>19.0</td><td>16.0</td><td>6.0</td><td>5.0</td><td>3.0</td><td>30.0</td><td>25.0</td><td>6.0</td></tr><tr><td>21</td><td>17</td><td>Golden State Warriors</td><td>1</td><td>0</td><td>1</td><td>.000</td><td>48.0</td><td>110.0</td><td>44.0</td><td>93.0</td><td>…</td><td>41.0</td><td>48.0</td><td>33.0</td><td>17.0</td><td>9.0</td><td>8.0</td><td>6.0</td><td>23.0</td><td>16.0</td><td>-4.0</td></tr><tr><td>22</td><td>17</td><td>New Zealand Breakers</td><td>1</td><td>0</td><td>1</td><td>.000</td><td>48.0</td><td>86.0</td><td>31.0</td><td>87.0</td><td>…</td><td>32.0</td><td>43.0</td><td>16.0</td><td>14.0</td><td>9.0</td><td>5.0</td><td>14.0</td><td>25.0</td><td>31.0</td><td>-5.0</td></tr><tr><td>23</td><td>17</td><td>Oklahoma City Thunder</td><td>1</td><td>0</td><td>1</td><td>.000</td><td>48.0</td><td>91.0</td><td>30.0</td><td>82.0</td><td>…</td><td>33.0</td><td>47.0</td><td>21.0</td><td>16.0</td><td>6.0</td><td>3.0</td><td>5.0</td><td>25.0</td><td>30.0</td><td>-6.0</td></tr><tr><td>24</td><td>17</td><td>Orlando Magic</td><td>1</td><td>0</td><td>1</td><td>.000</td><td>48.0</td><td>114.0</td><td>45.0</td><td>91.0</td><td>…</td><td>30.0</td><td>35.0</td><td>27.0</td><td>12.0</td><td>6.0</td><td>4.0</td><td>7.0</td><td>33.0</td><td>30.0</td><td>-6.0</td></tr><tr><td>25</td><td>17</td><td>Perth Wildcats</td><td>1</td><td>0</td><td>1</td><td>.000</td><td>48.0</td><td>72.0</td><td>23.0</td><td>85.0</td><td>…</td><td>30.0</td><td>41.0</td><td>12.0</td><td>19.0</td><td>9.0</td><td>1.0</td><td>5.0</td><td>25.0</td><td>28.0</td><td>-58.0</td></tr><tr><td>26</td><td>17</td><td>Brooklyn Nets</td><td>1</td><td>0</td><td>1</td><td>.000</td><td>48.0</td><td>102.0</td><td>37.0</td><td>95.0</td><td>…</td><td>29.0</td><td>45.0</td><td>21.0</td><td>18.0</td><td>12.0</td><td>3.0</td><td>11.0</td><td>30.0</td><td>29.0</td><td>-5.0</td></tr><tr><td>27</td><td>17</td><td>Indiana Pacers</td><td>1</td><td>1</td><td>0</td><td>1.000</td><td>48.0</td><td>110.0</td><td>40.0</td><td>91.0</td><td>…</td><td>35.0</td><td>48.0</td><td>18.0</td><td>21.0</td><td>11.0</td><td>6.0</td><td>8.0</td><td>26.0</td><td>29.0</td><td>10.0</td></tr><tr><td>28</td><td>17</td><td>Portland Trail Blazers</td><td>1</td><td>0</td><td>1</td><td>.000</td><td>48.0</td><td>104.0</td><td>37.0</td><td>88.0</td><td>…</td><td>35.0</td><td>46.0</td><td>25.0</td><td>24.0</td><td>4.0</td><td>2.0</td><td>6.0</td><td>45.0</td><td>28.0</td><td>-18.0</td></tr><tr><td>29</td><td>17</td><td>Cleveland Cavaliers</td><td>1</td><td>1</td><td>0</td><td>1.000</td><td>48.0</td><td>102.0</td><td>33.0</td><td>80.0</td><td>…</td><td>36.0</td><td>49.0</td><td>13.0</td><td>18.0</td><td>8.0</td><td>4.0</td><td>7.0</td><td>30.0</td><td>30.0</td><td>7.0</td></tr><tr><td>30</td><td>17</td><td>San Antonio Spurs</td><td>1</td><td>1</td><td>0</td><td>1.000</td><td>48.0</td><td>104.0</td><td>37.0</td><td>85.0</td><td>…</td><td>39.0</td><td>48.0</td><td>23.0</td><td>22.0</td><td>8.0</td><td>6.0</td><td>5.0</td><td>30.0</td><td>28.0</td><td>4.0</td></tr><tr><td>31</td><td>17</td><td>Sydney Kings</td><td>1</td><td>0</td><td>1</td><td>.000</td><td>48.0</td><td>91.0</td><td>35.0</td><td>79.0</td><td>…</td><td>36.0</td><td>46.0</td><td>19.0</td><td>26.0</td><td>4.0</td><td>2.0</td><td>7.0</td><td>26.0</td><td>26.0</td><td>-19.0</td></tr><tr><td>32</td><td>17</td><td>Dallas Mavericks</td><td>1</td><td>1</td><td>0</td><td>1.000</td><td>48.0</td><td>116.0</td><td>39.0</td><td>75.0</td><td>…</td><td>39.0</td><td>51.0</td><td>31.0</td><td>13.0</td><td>6.0</td><td>10.0</td><td>2.0</td><td>29.0</td><td>32.0</td><td>53.0</td></tr><tr><td>33</td><td>17</td><td>Melbourne United</td><td>1</td><td>0</td><td>1</td><td>.000</td><td>48.0</td><td>84.0</td><td>31.0</td><td>82.0</td><td>…</td><td>29.0</td><td>37.0</td><td>15.0</td><td>23.0</td><td>10.0</td><td>1.0</td><td>9.0</td><td>26.0</td><td>19.0</td><td>-20.0</td></tr><tr><td>34</td><td>17</td><td>Washington Wizards</td><td>1</td><td>0</td><td>1</td><td>.000</td><td>53.0</td><td>121.0</td><td>40.0</td><td>97.0</td><td>…</td><td>44.0</td><td>57.0</td><td>25.0</td><td>24.0</td><td>10.0</td><td>7.0</td><td>2.0</td><td>39.0</td><td>44.0</td><td>-3.0</td></tr></tbody></table><pre><code>35 rows × 28 columns</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">driver.quit()</span><br></pre></td></tr></table></figure><h2 id="Quiz-2"><a href="#Quiz-2" class="headerlink" title="Quiz 2"></a>Quiz 2</h2><ul><li>Selenium을 이용하여 네이버 IT/과학 기사의 10 페이지 까지의 최신 제목 리스트를 크롤링하세요.</li><li><a href="http://news.naver.com/main/main.nhn?mode=LSD&amp;mid=shm&amp;sid1=105" target="_blank" rel="noopener">http://news.naver.com/main/main.nhn?mode=LSD&amp;mid=shm&amp;sid1=105</a></li></ul><h3 id="2-1-webdriver를-실행하고-사이트에-접속하기"><a href="#2-1-webdriver를-실행하고-사이트에-접속하기" class="headerlink" title="2.1 webdriver를 실행하고 사이트에 접속하기"></a>2.1 webdriver를 실행하고 사이트에 접속하기</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">driver = webdriver.Chrome()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">make_url</span><span class="params">(page=<span class="number">1</span>)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">"http://news.naver.com/main/main.nhn?mode=LSD&amp;mid=shm&amp;sid1=105#&amp;date=%2000:00:00&amp;page="</span>\</span><br><span class="line"> + str(page)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url = make_url()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">driver.get(url)</span><br></pre></td></tr></table></figure><h3 id="2-2-기사-제목-리스트-가져오기"><a href="#2-2-기사-제목-리스트-가져오기" class="headerlink" title="2.2 기사 제목 리스트 가져오기"></a>2.2 기사 제목 리스트 가져오기</h3><h4 id="1-1페이지에-대해-기사-제목-가져오기"><a href="#1-1페이지에-대해-기사-제목-가져오기" class="headerlink" title="(1) 1페이지에 대해 기사 제목 가져오기"></a>(1) 1페이지에 대해 기사 제목 가져오기</h4><h5 id="1페이지의-기사-리스트-가져오기"><a href="#1페이지의-기사-리스트-가져오기" class="headerlink" title="1페이지의 기사 리스트 가져오기"></a>1페이지의 기사 리스트 가져오기</h5><ul><li>한 페이지에 20개의 기사가 있음</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">articles = driver.find_elements_by_css_selector(<span class="string">"#section_body &gt; ul &gt; li"</span>)</span><br><span class="line">len(articles)</span><br></pre></td></tr></table></figure><pre><code>20</code></pre><h5 id="1페이지-안의-기사-제목-가져오기"><a href="#1페이지-안의-기사-제목-가져오기" class="headerlink" title="1페이지 안의 기사 제목 가져오기"></a>1페이지 안의 기사 제목 가져오기</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">dict_list = []</span><br><span class="line"><span class="keyword">for</span> article <span class="keyword">in</span> articles:</span><br><span class="line">    dict_list.append(&#123;</span><br><span class="line">        <span class="string">"title"</span>: article.find_element_by_css_selector(<span class="string">"dt:nth-child(2)"</span>).text     </span><br><span class="line">    &#125;)</span><br><span class="line">df = pd.DataFrame(dict_list)</span><br><span class="line">df.tail()</span><br></pre></td></tr></table></figure><table><thead><tr><th></th><th>title</th></tr></thead><tbody><tr><td>15</td><td>이동전화 소비자불만 ‘최다’…소비자불만 1위 이통사는?</td></tr><tr><td>16</td><td>네안데르탈인, 현대인류에게 병도 주고 약도 줬다</td></tr><tr><td>17</td><td>美 컨슈머리포트 “갤노트9 배터리, 아이폰Xs 보다 우수”</td></tr><tr><td>18</td><td>LG 스마트폰 또 1천억원대 적자…적자 폭은 줄어든 듯</td></tr><tr><td>19</td><td>닌텐도, 차세대 비디오 게임기 개발</td></tr></tbody></table><h4 id="2-1-10페이지에서-기사-제목-가져오기"><a href="#2-1-10페이지에서-기사-제목-가져오기" class="headerlink" title="(2) 1-10페이지에서 기사 제목 가져오기"></a>(2) 1-10페이지에서 기사 제목 가져오기</h4><ul><li>2페이지와 7페이지에서 에러가 발생해서 try &amp; except 처리함</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">dict_list = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">11</span>):</span><br><span class="line">    driver.get(make_url(i))</span><br><span class="line">    articles = driver.find_elements_by_css_selector(<span class="string">"#section_body &gt; ul &gt; li"</span>)</span><br><span class="line">    print(len(articles))</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">for</span> article <span class="keyword">in</span> articles:</span><br><span class="line">            dict_list.append(&#123;<span class="string">"title"</span>: article.find_element_by_css_selector(<span class="string">"dl &gt; dt:nth-child(2)"</span>).text&#125;)</span><br><span class="line">    <span class="keyword">except</span>: </span><br><span class="line">        print(str(i)+<span class="string">"페이지 에러 발생"</span>)</span><br><span class="line">        </span><br><span class="line">df = pd.DataFrame(dict_list)</span><br><span class="line">df.tail()</span><br></pre></td></tr></table></figure><pre><code>20202페이지 에러 발생20202020207페이지 에러 발생202020</code></pre><table><thead><tr><th></th><th>title</th></tr></thead><tbody><tr><td>163</td><td>iOS 12.1에서 아이폰XS 충전 문제 해결될 듯</td></tr><tr><td>164</td><td>박원순 “서울, 블록체인 중심 되게 하겠다”</td></tr><tr><td>165</td><td>[人사이트]유인상 LG CNS 단장 “스마트시티, 데이터와 시민참여가 핵심”</td></tr><tr><td>166</td><td>[와우! 과학] 여성이 남성보다 오래 사는 이유 찾았다 (연구)</td></tr><tr><td>167</td><td>“V40, 카메라 기능 역랑 집중해 고객 편의최대한 끌어올렸다”</td></tr></tbody></table><p>총 168개의 기사 제목이 크롤링됨</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">driver.quit()</span><br></pre></td></tr></table></figure><h4 id="참고자료"><a href="#참고자료" class="headerlink" title="참고자료"></a>참고자료</h4><ul><li>패스트캠퍼스, ⟪데이터사이언스스쿨 8기⟫ 수업자료</li></ul>]]></content>
      
      
      <categories>
          
          <category> DataScience </category>
          
          <category> Web 웹 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> programming </tag>
            
            <tag> web </tag>
            
            <tag> crawling </tag>
            
            <tag> web_crawling </tag>
            
            <tag> 웹크롤링 </tag>
            
            <tag> selenium </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018-10-04-TIL</title>
      <link href="/2018/10/04/2018-10-04-TIL/"/>
      <url>/2018/10/04/2018-10-04-TIL/</url>
      
        <content type="html"><![CDATA[<h4 id="공부한-것-amp-리뷰"><a href="#공부한-것-amp-리뷰" class="headerlink" title="공부한 것 &amp; 리뷰"></a>공부한 것 &amp; 리뷰</h4><ul><li>web crawling - selenium intermediate<ul><li>selenium으로 쇼핑몰(지마켓)의 데이터를 스크래핑, 네이버메일 스크래핑, 이미지 스크린샷 저장하기 복습</li><li>css selector에 초큼씩 익숙해지고 있음. 다양한 연습을 해봐야할 것 같다.</li></ul></li></ul><h4 id="내일-공부할-것"><a href="#내일-공부할-것" class="headerlink" title="내일 공부할 것"></a>내일 공부할 것</h4><ul><li>web crawling - selenium 실습</li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Web crawling - Selenium Intermediate</title>
      <link href="/2018/10/04/web_10_selenium/"/>
      <url>/2018/10/04/web_10_selenium/</url>
      
        <content type="html"><![CDATA[<h1 id="Selenium-Intermediate"><a href="#Selenium-Intermediate" class="headerlink" title="Selenium - Intermediate"></a>Selenium - Intermediate</h1><h4 id="다룰-내용"><a href="#다룰-내용" class="headerlink" title="다룰 내용"></a>다룰 내용</h4><ol><li>Selenium 웹 데이터 스크래핑</li><li>Selenium 네이버 메일 크롤링</li><li>Selenium 이미지 스크린샷</li></ol><a id="more"></a> <h2 id="1-Selenium-웹-데이터-스크래핑"><a href="#1-Selenium-웹-데이터-스크래핑" class="headerlink" title="1. Selenium 웹 데이터 스크래핑"></a>1. Selenium 웹 데이터 스크래핑</h2><ul><li>gmarket 베스트셀러 데이터 수집하기</li><li>gmarket best의 200개 상품의 이름/가격/할인가격/링크 가져오기</li></ul><h3 id="1-1-webdriver-실행하고-gmarket-best-페이지로-이동"><a href="#1-1-webdriver-실행하고-gmarket-best-페이지로-이동" class="headerlink" title="1.1 webdriver 실행하고 gmarket best 페이지로 이동"></a>1.1 webdriver 실행하고 gmarket best 페이지로 이동</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">url = <span class="string">"http://corners.gmarket.co.kr/Bestsellers"</span></span><br><span class="line">driver = webdriver.Chrome() </span><br><span class="line">driver.get(url)</span><br></pre></td></tr></table></figure><p><img src="https://github.com/hyeshinoh/Study_Web/blob/master/web_09_image_001.png?raw=true" alt></p><h3 id="1-2-best-200-상품의-정보-스크래핑"><a href="#1-2-best-200-상품의-정보-스크래핑" class="headerlink" title="1.2 best 200 상품의 정보 스크래핑"></a>1.2 best 200 상품의 정보 스크래핑</h3><h4 id="200개-상품-정보-저장하기"><a href="#200개-상품-정보-저장하기" class="headerlink" title="200개 상품 정보 저장하기"></a>200개 상품 정보 저장하기</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">items = driver.find_elements_by_css_selector(<span class="string">".best-list:nth-child(3) &gt; ul &gt; li"</span>)</span><br><span class="line"></span><br><span class="line">len(items)</span><br></pre></td></tr></table></figure><pre><code>200</code></pre><h4 id="200개-상품의-이름-가격-할인가격-링크-pandas-dataframe으로-만들기"><a href="#200개-상품의-이름-가격-할인가격-링크-pandas-dataframe으로-만들기" class="headerlink" title="200개 상품의 이름/가격/할인가격/링크 pandas dataframe으로 만들기"></a>200개 상품의 이름/가격/할인가격/링크 pandas dataframe으로 만들기</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">dict_list = []</span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> items:</span><br><span class="line">    dict_list.append(&#123;</span><br><span class="line">        <span class="string">"title"</span>: item.find_element_by_css_selector(<span class="string">".itemname"</span>).text,</span><br><span class="line">        <span class="string">"s price"</span>: item.find_element_by_css_selector(<span class="string">".s-price"</span>).text.split(<span class="string">" "</span>)[<span class="number">0</span>].replace(<span class="string">","</span>,<span class="string">""</span>)[:<span class="number">-1</span>],</span><br><span class="line">        <span class="string">"o price"</span>: item.find_element_by_css_selector(<span class="string">".o-price"</span>).text.split(<span class="string">" "</span>)[<span class="number">0</span>].replace(<span class="string">","</span>,<span class="string">""</span>)[:<span class="number">-1</span>],</span><br><span class="line">        <span class="string">"link"</span>: item.find_element_by_css_selector(<span class="string">".itemname"</span>).get_attribute(<span class="string">"href"</span>)</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">df = pd.DataFrame(dict_list)</span><br><span class="line">df.tail()</span><br></pre></td></tr></table></figure><table><thead><tr><th></th><th>link</th><th>o price</th><th>s price</th><th>title</th></tr></thead><tbody><tr><td>195</td><td><a href="http://item.gmarket.co.kr/Item?goodscode=24630.." target="_blank" rel="noopener">http://item.gmarket.co.kr/Item?goodscode=24630..</a>.</td><td>22900</td><td>6900</td><td>애견패딩 겨울옷 모음/애견의류/강아지옷/애견옷</td></tr><tr><td>196</td><td><a href="http://item.gmarket.co.kr/Item?goodscode=11011.." target="_blank" rel="noopener">http://item.gmarket.co.kr/Item?goodscode=11011..</a>.</td><td>50000</td><td>32900</td><td>[맥심]맥심 화이트 골드 커피믹스 320T 김연아커피/모카골드</td></tr><tr><td>197</td><td><a href="http://item.gmarket.co.kr/Item?goodscode=14767.." target="_blank" rel="noopener">http://item.gmarket.co.kr/Item?goodscode=14767..</a>.</td><td>38400</td><td>32900</td><td>[맥심]화이트골드 320T/커피믹스/커피</td></tr><tr><td>198</td><td><a href="http://item.gmarket.co.kr/Item?goodscode=17872.." target="_blank" rel="noopener">http://item.gmarket.co.kr/Item?goodscode=17872..</a>.</td><td></td><td>69000</td><td>윤남텍 간편세척 초음파 다목적 가습기/YN-101/G마켓</td></tr><tr><td>199</td><td><a href="http://item.gmarket.co.kr/Item?goodscode=93244.." target="_blank" rel="noopener">http://item.gmarket.co.kr/Item?goodscode=93244..</a>.</td><td>26300</td><td>7900</td><td>소녀나라 10%쿠폰/맨투맨/후드티/아우터/팬츠/스커트</td></tr></tbody></table><h4 id="sale하지-않는-품목에-o-price-채우기"><a href="#sale하지-않는-품목에-o-price-채우기" class="headerlink" title="sale하지 않는 품목에 o price 채우기"></a>sale하지 않는 품목에 o price 채우기</h4><p>o price가 NaN인지(True) 아닌지 (False) is_nodata에 저장 </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">is_nodata = df[<span class="string">"o price"</span>] == <span class="string">""</span></span><br></pre></td></tr></table></figure><p>비어있는 o price 칸에 s price의 값을 넣기</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">"s price"</span>][is_nodata] <span class="comment"># `df["s price"]`에서 is_nodata가 true인 행</span></span><br></pre></td></tr></table></figure><pre><code>9       1380027      2490030       590042       590043      1499049      3400059       690060      3400070      3960074       790075      1290078      1290085      2500088      12900101    164000105     13800106     10900119     12700124     25900136      6400137     12900142     41600143     43900150     24900151     23900153     12700164    199000176     25580178     47900192     12700198     69000Name: s price, dtype: object</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">"o price"</span>][is_nodata] = df[<span class="string">"s price"</span>][is_nodata]</span><br><span class="line">df.tail()</span><br></pre></td></tr></table></figure><table><thead><tr><th></th><th>link</th><th>o price</th><th>s price</th><th>title</th></tr></thead><tbody><tr><td>195</td><td><a href="http://item.gmarket.co.kr/Item?goodscode=24630.." target="_blank" rel="noopener">http://item.gmarket.co.kr/Item?goodscode=24630..</a>.</td><td>22900</td><td>6900</td><td>애견패딩 겨울옷 모음/애견의류/강아지옷/애견옷</td></tr><tr><td>196</td><td><a href="http://item.gmarket.co.kr/Item?goodscode=11011.." target="_blank" rel="noopener">http://item.gmarket.co.kr/Item?goodscode=11011..</a>.</td><td>50000</td><td>32900</td><td>[맥심]맥심 화이트 골드 커피믹스 320T 김연아커피/모카골드</td></tr><tr><td>197</td><td><a href="http://item.gmarket.co.kr/Item?goodscode=14767.." target="_blank" rel="noopener">http://item.gmarket.co.kr/Item?goodscode=14767..</a>.</td><td>38400</td><td>32900</td><td>[맥심]화이트골드 320T/커피믹스/커피</td></tr><tr><td>198</td><td><a href="http://item.gmarket.co.kr/Item?goodscode=17872.." target="_blank" rel="noopener">http://item.gmarket.co.kr/Item?goodscode=17872..</a>.</td><td>69000</td><td>69000</td><td>윤남텍 간편세척 초음파 다목적 가습기/YN-101/G마켓</td></tr><tr><td>199</td><td><a href="http://item.gmarket.co.kr/Item?goodscode=93244.." target="_blank" rel="noopener">http://item.gmarket.co.kr/Item?goodscode=93244..</a>.</td><td>26300</td><td>7900</td><td>소녀나라 10%쿠폰/맨투맨/후드티/아우터/팬츠/스커트</td></tr></tbody></table><h4 id="할인율-column-추가하기"><a href="#할인율-column-추가하기" class="headerlink" title="할인율 column 추가하기"></a>할인율 column 추가하기</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">"o price"</span>] = df[<span class="string">"o price"</span>].astype(<span class="string">"int"</span>)</span><br><span class="line">df[<span class="string">"s price"</span>] = df[<span class="string">"s price"</span>].astype(<span class="string">"int"</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">"sale"</span>] = round((<span class="number">1</span> - (df[<span class="string">"s price"</span>] / df[<span class="string">"o price"</span>])), <span class="number">2</span>)*<span class="number">100</span></span><br><span class="line">df[<span class="string">"sale"</span>] = df[<span class="string">"sale"</span>].astype(<span class="string">"int"</span>).astype(<span class="string">"str"</span>)+<span class="string">"%"</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.tail()</span><br></pre></td></tr></table></figure><table><thead><tr><th></th><th>link</th><th>o price</th><th>s price</th><th>title</th><th>sale</th></tr></thead><tbody><tr><td>195</td><td><a href="http://item.gmarket.co.kr/Item?goodscode=24630.." target="_blank" rel="noopener">http://item.gmarket.co.kr/Item?goodscode=24630..</a>.</td><td>22900</td><td>6900</td><td>애견패딩 겨울옷 모음/애견의류/강아지옷/애견옷</td><td>70%</td></tr><tr><td>196</td><td><a href="http://item.gmarket.co.kr/Item?goodscode=11011.." target="_blank" rel="noopener">http://item.gmarket.co.kr/Item?goodscode=11011..</a>.</td><td>50000</td><td>32900</td><td>[맥심]맥심 화이트 골드 커피믹스 320T 김연아커피/모카골드</td><td>34%</td></tr><tr><td>197</td><td><a href="http://item.gmarket.co.kr/Item?goodscode=14767.." target="_blank" rel="noopener">http://item.gmarket.co.kr/Item?goodscode=14767..</a>.</td><td>38400</td><td>32900</td><td>[맥심]화이트골드 320T/커피믹스/커피</td><td>14%</td></tr><tr><td>198</td><td><a href="http://item.gmarket.co.kr/Item?goodscode=17872.." target="_blank" rel="noopener">http://item.gmarket.co.kr/Item?goodscode=17872..</a>.</td><td>69000</td><td>69000</td><td>윤남텍 간편세척 초음파 다목적 가습기/YN-101/G마켓</td><td>0%</td></tr><tr><td>199</td><td><a href="http://item.gmarket.co.kr/Item?goodscode=93244.." target="_blank" rel="noopener">http://item.gmarket.co.kr/Item?goodscode=93244..</a>.</td><td>26300</td><td>7900</td><td>소녀나라 10%쿠폰/맨투맨/후드티/아우터/팬츠/스커트</td><td>70%</td></tr></tbody></table><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">driver.quit()</span><br></pre></td></tr></table></figure><h2 id="2-Selenium-네이버-메일-크롤링"><a href="#2-Selenium-네이버-메일-크롤링" class="headerlink" title="2. Selenium 네이버 메일 크롤링"></a>2. Selenium 네이버 메일 크롤링</h2><ul><li>네이버 페이지로 이동</li><li>아이디 패스워드로 로그인</li><li>전체 메일 수, 안읽은 메일 수를 가져오기</li><li>메일 제목과 요약을 데이터프레임으로 만들기</li></ul><h3 id="2-1-webdriver-실행하고-naver로-이동"><a href="#2-1-webdriver-실행하고-naver로-이동" class="headerlink" title="2.1 webdriver 실행하고 naver로 이동"></a>2.1 webdriver 실행하고 naver로 이동</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">main_url = <span class="string">"http://naver.com"</span></span><br><span class="line">mail_url = <span class="string">"http://mail.naver.com"</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 네이버 페이지로 이동</span></span><br><span class="line">driver = webdriver.Chrome()</span><br><span class="line">driver.get(main_url)</span><br></pre></td></tr></table></figure><p><img src="https://github.com/hyeshinoh/Study_Web/blob/master/web_09_image_002.png?raw=true" alt></p><h3 id="2-2-네이버-로그인하기"><a href="#2-2-네이버-로그인하기" class="headerlink" title="2.2 네이버 로그인하기"></a>2.2 네이버 로그인하기</h3><h4 id="아이디-패스워드-입력"><a href="#아이디-패스워드-입력" class="headerlink" title="아이디 패스워드 입력"></a>아이디 패스워드 입력</h4><p>비밀번호는 노출해서는 안되므로 pickle 파일로 저장해서 불러오기</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pickle</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># with open("naver_pw.plk", "wb") as f:</span></span><br><span class="line"><span class="comment">#     pickle.dump("본인의 네이버 pw", f)</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">my_id = <span class="string">"panda706"</span></span><br><span class="line">my_pw = pickle.load(open(<span class="string">"naver_pw.plk"</span>, <span class="string">"rb"</span>))</span><br></pre></td></tr></table></figure><p>로그인 버튼 클릭 &amp; 로그인 페이지로 이동</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">driver.find_element_by_css_selector(<span class="string">".lg_local_btn"</span>).click()</span><br></pre></td></tr></table></figure><p><img src="https://github.com/hyeshinoh/Study_Web/blob/master/web_09_image_003.png?raw=true" alt></p><p>아이디와 패스워드 넣고 로그인 버튼 클릭하기  </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">driver.find_element_by_css_selector(<span class="string">"#id"</span>).send_keys(my_id)</span><br><span class="line">driver.find_element_by_css_selector(<span class="string">"#pw"</span>).send_keys(my_pw)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">driver.find_element_by_css_selector(<span class="string">".btn_global"</span>).click()</span><br></pre></td></tr></table></figure><p><img src="https://github.com/hyeshinoh/Study_Web/blob/master/web_09_image_004.png?raw=true" alt></p><h3 id="2-3-네이버-메일로-이동해서-메일-데이터-가져오기"><a href="#2-3-네이버-메일로-이동해서-메일-데이터-가져오기" class="headerlink" title="2.3 네이버 메일로 이동해서 메일 데이터 가져오기"></a>2.3 네이버 메일로 이동해서 메일 데이터 가져오기</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">driver.get(mail_url)</span><br></pre></td></tr></table></figure><p><img src="https://github.com/hyeshinoh/Study_Web/blob/master/web_09_image_005.png?raw=true" alt></p><h4 id="전체-메일-갯수-가져오기"><a href="#전체-메일-갯수-가져오기" class="headerlink" title="전체 메일 갯수 가져오기"></a>전체 메일 갯수 가져오기</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">total_mail_count = driver.find_element_by_css_selector(<span class="string">"#headTotalNum"</span>).text</span><br><span class="line">total_mail_count</span><br></pre></td></tr></table></figure><pre><code>&apos;110&apos;</code></pre><h4 id="안-읽은-메일-갯수-가져오기"><a href="#안-읽은-메일-갯수-가져오기" class="headerlink" title="안 읽은 메일 갯수 가져오기"></a>안 읽은 메일 갯수 가져오기</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">unread_mail_count = driver.find_element_by_css_selector(<span class="string">"#headUnreadNum"</span>).text</span><br><span class="line">unread_mail_count</span><br></pre></td></tr></table></figure><pre><code>&apos;105&apos;</code></pre><h4 id="메일-데이터-가져오기-제목-보낸사람-메일링크"><a href="#메일-데이터-가져오기-제목-보낸사람-메일링크" class="headerlink" title="메일 데이터 가져오기 - 제목, 보낸사람, 메일링크"></a>메일 데이터 가져오기 - 제목, 보낸사람, 메일링크</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mails = driver.find_elements_by_css_selector(<span class="string">".mailList &gt; li"</span>)</span><br><span class="line">df = pd.DataFrame(columns = [<span class="string">"제목"</span>, <span class="string">"보낸사람"</span>, <span class="string">"메일링크"</span>])</span><br><span class="line"><span class="keyword">for</span> mail <span class="keyword">in</span> mails:</span><br><span class="line">    title = mail.find_element_by_css_selector(<span class="string">".mail_title"</span>).text</span><br><span class="line">    name = mail.find_element_by_css_selector(<span class="string">".name"</span>).text</span><br><span class="line">    link = mail.find_element_by_css_selector(<span class="string">".subject &gt; a"</span>).get_attribute(<span class="string">"href"</span>)</span><br><span class="line">    df.loc[len(df)] = &#123;<span class="string">"제목"</span>:title, <span class="string">"보낸사람"</span>:name, <span class="string">"메일링크"</span>:link&#125;</span><br><span class="line">    </span><br><span class="line">df</span><br></pre></td></tr></table></figure><table><thead><tr><th></th><th>제목</th><th>보낸사람</th><th>메일링크</th></tr></thead><tbody><tr><td>0</td><td>(광고) 화려한 마케팅보다 병원의 브렌드보다 수술결과 최고의 만족을 드리겠습니다.</td><td>Namepr</td><td><a href="https://mail.naver.com/read/popup/?nMailId=8404" target="_blank" rel="noopener">https://mail.naver.com/read/popup/?nMailId=8404</a></td></tr><tr><td>1</td><td>(광고) 룰렛돌리고 1억만드는비법 무료로 받아보세요~</td><td>이벤트메일</td><td><a href="https://mail.naver.com/read/popup/?nMailId=8403" target="_blank" rel="noopener">https://mail.naver.com/read/popup/?nMailId=8403</a></td></tr><tr><td>2</td><td>(광고) 창업을 생각중이라면 추천하고 싶은 성공창업을 위한 무점포1인창업과 창업정보…</td><td>창업신문</td><td><a href="https://mail.naver.com/read/popup/?nMailId=8402" target="_blank" rel="noopener">https://mail.naver.com/read/popup/?nMailId=8402</a></td></tr><tr><td>3</td><td>(광고) 임플란트, 치아교정 지원자를 찾습니다~</td><td>이벤트메일</td><td><a href="https://mail.naver.com/read/popup/?nMailId=8401" target="_blank" rel="noopener">https://mail.naver.com/read/popup/?nMailId=8401</a></td></tr><tr><td>4</td><td>(광고) 1년안에 1억만들기 이것만 알고있으면 가능하다?~(무료정보제공)</td><td>이벤트메일</td><td><a href="https://mail.naver.com/read/popup/?nMailId=8400" target="_blank" rel="noopener">https://mail.naver.com/read/popup/?nMailId=8400</a></td></tr><tr><td>5</td><td>내 평생 가장 맛있는 음식</td><td>따뜻한하루</td><td><a href="https://mail.naver.com/read/popup/?nMailId=8399" target="_blank" rel="noopener">https://mail.naver.com/read/popup/?nMailId=8399</a></td></tr><tr><td>6</td><td>N스토어 주식회사 분할 신설에 따른 개인정보 이전 안내</td><td>N스토어</td><td><a href="https://mail.naver.com/read/popup/?nMailId=8398" target="_blank" rel="noopener">https://mail.naver.com/read/popup/?nMailId=8398</a></td></tr><tr><td>7</td><td>SMTP send file 테스트</td><td><a href="mailto:hyeshinoh@gmail.co" target="_blank" rel="noopener">hyeshinoh@gmail.co</a>..</td><td><a href="https://mail.naver.com/read/popup/?nMailId=8397" target="_blank" rel="noopener">https://mail.naver.com/read/popup/?nMailId=8397</a></td></tr><tr><td>8</td><td>SMTP send file 테스트</td><td><a href="mailto:hyeshinoh@gmail.co" target="_blank" rel="noopener">hyeshinoh@gmail.co</a>..</td><td><a href="https://mail.naver.com/read/popup/?nMailId=8396" target="_blank" rel="noopener">https://mail.naver.com/read/popup/?nMailId=8396</a></td></tr><tr><td>9</td><td>hyeshin의 SMTP Send Text 테스트</td><td><a href="mailto:hyeshinoh@gmail.co" target="_blank" rel="noopener">hyeshinoh@gmail.co</a>..</td><td><a href="https://mail.naver.com/read/popup/?nMailId=8395" target="_blank" rel="noopener">https://mail.naver.com/read/popup/?nMailId=8395</a></td></tr><tr><td>10</td><td>hyeshin의 SMTP Send Text 테스트</td><td><a href="mailto:hyeshinoh@gmail.co" target="_blank" rel="noopener">hyeshinoh@gmail.co</a>..</td><td><a href="https://mail.naver.com/read/popup/?nMailId=8394" target="_blank" rel="noopener">https://mail.naver.com/read/popup/?nMailId=8394</a></td></tr><tr><td>11</td><td>hyeshin의 SMTP Send Text 테스트</td><td><a href="mailto:hyeshinoh@gmail.co" target="_blank" rel="noopener">hyeshinoh@gmail.co</a>..</td><td><a href="https://mail.naver.com/read/popup/?nMailId=8393" target="_blank" rel="noopener">https://mail.naver.com/read/popup/?nMailId=8393</a></td></tr><tr><td>12</td><td>hyeshin의 SMTP Send Text 테스트</td><td><a href="mailto:hyeshinoh@gmail.co" target="_blank" rel="noopener">hyeshinoh@gmail.co</a>..</td><td><a href="https://mail.naver.com/read/popup/?nMailId=8392" target="_blank" rel="noopener">https://mail.naver.com/read/popup/?nMailId=8392</a></td></tr><tr><td>13</td><td>hyeshin의 SMTP Send Text 테스트</td><td><a href="mailto:hyeshinoh@gmail.co" target="_blank" rel="noopener">hyeshinoh@gmail.co</a>..</td><td><a href="https://mail.naver.com/read/popup/?nMailId=8391" target="_blank" rel="noopener">https://mail.naver.com/read/popup/?nMailId=8391</a></td></tr><tr><td>14</td><td>hyeshin의 SMTP Send Text 테스트</td><td><a href="mailto:hyeshinoh@gmail.co" target="_blank" rel="noopener">hyeshinoh@gmail.co</a>..</td><td><a href="https://mail.naver.com/read/popup/?nMailId=8390" target="_blank" rel="noopener">https://mail.naver.com/read/popup/?nMailId=8390</a></td></tr></tbody></table><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">driver.quit()</span><br></pre></td></tr></table></figure><h2 id="3-Selenium-이미지-스크린샷"><a href="#3-Selenium-이미지-스크린샷" class="headerlink" title="3. Selenium 이미지 스크린샷"></a>3. Selenium 이미지 스크린샷</h2><ul><li>youtube 페이지를 이미지로 스크린샷을 만들기</li><li>영상 있는 부분의 위치를 파악</li><li>영상이 있는 부분을 pillow를 이용해서 자르기</li><li>영상을 저장해서 위에서 실습했던 google vision api에 넣어서 결과를 확인 </li></ul><h3 id="3-1-pillow-패키지"><a href="#3-1-pillow-패키지" class="headerlink" title="3.1 pillow 패키지"></a>3.1 pillow 패키지</h3><ul><li>python에서 사용하는 이미지 처리 패키지</li><li>설치<ul><li>mac: <code>$ pip3 install pillow</code></li><li>window: 5.1 버전은 jupyter에 문제 없음<ul><li><code>$ conda install -c anaconda pillow</code></li><li><code>$ conda uninstall pillow</code></li><li><code>$ conda install -c conda-forge pillow</code></li></ul></li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image <span class="keyword">as</span> pil</span><br><span class="line"><span class="keyword">import</span> time</span><br></pre></td></tr></table></figure><h3 id="3-2-webdriver-실행하고-youtube-영상-스크린샷-저장"><a href="#3-2-webdriver-실행하고-youtube-영상-스크린샷-저장" class="headerlink" title="3.2 webdriver 실행하고 youtube 영상 스크린샷 저장"></a>3.2 webdriver 실행하고 youtube 영상 스크린샷 저장</h3><p>스크린샷을 저장할 “WWDC 2018 Keynote - Apple” 영상의 url을 저장</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url = <span class="string">"https://www.youtube.com/watch?v=UThGcWBIMpU&amp;t=500s"</span></span><br></pre></td></tr></table></figure><p>webdriver 실행하고 영상 실행 화면을 스크린샷</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">driver = webdriver.Chrome()</span><br><span class="line">driver.get(url)</span><br><span class="line">time.sleep(<span class="number">1</span>)</span><br><span class="line">driver.save_screenshot(<span class="string">"screenshot.png"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> idx <span class="keyword">in</span> range(<span class="number">3</span>):</span><br><span class="line">    time.sleep(<span class="number">1</span>)</span><br><span class="line">    driver.save_screenshot(<span class="string">"screenshot"</span> + str(idx) + <span class="string">".png"</span>)</span><br></pre></td></tr></table></figure><pre><code>True</code></pre><h3 id="3-3-스크린샷-이미지-편집"><a href="#3-3-스크린샷-이미지-편집" class="headerlink" title="3.3 스크린샷 이미지 편집"></a>3.3 스크린샷 이미지 편집</h3><h4 id="저장한-스크린샷-이미지-확인"><a href="#저장한-스크린샷-이미지-확인" class="headerlink" title="저장한 스크린샷 이미지 확인"></a>저장한 스크린샷 이미지 확인</h4><p>스크린샷을 뜬 이미지는 아래와 같이 브라우저 전체를 담고 있음</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pil_im = pil.open(<span class="string">"screenshot.png"</span>)</span><br><span class="line">print(pil_im.size)</span><br><span class="line">pil_im</span><br></pre></td></tr></table></figure><pre><code>(2400, 1290)</code></pre><img src="/2018/10/04/web_10_selenium/output_60_1.png"><h4 id="영상이-나오는-영역만-자르기"><a href="#영상이-나오는-영역만-자르기" class="headerlink" title="영상이 나오는 영역만 자르기"></a>영상이 나오는 영역만 자르기</h4><p>영상이 재생되는 영역의 시작점과 크기를 구하기</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">element = driver.find_element_by_css_selector(<span class="string">"#player-container"</span>)</span><br><span class="line">location = element.location</span><br><span class="line">size = element.size</span><br><span class="line">location, size</span><br></pre></td></tr></table></figure><pre><code>({&apos;x&apos;: 24, &apos;y&apos;: 80}, {&apos;height&apos;: 408, &apos;width&apos;: 726})</code></pre><p>이미지 잘라내기</p><ul><li>top, bottom, left, right를 구해서 잘라낼 area 지정<br>(retina display의 경우: 각각 곱하기 2)</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">left = location[<span class="string">"x"</span>]*<span class="number">2</span></span><br><span class="line">top = location [<span class="string">"y"</span>]*<span class="number">2</span></span><br><span class="line">right = left + size[<span class="string">"width"</span>]*<span class="number">2</span></span><br><span class="line">bottom = top + size[<span class="string">"height"</span>]*<span class="number">2</span></span><br><span class="line">area = (left, top, right, bottom)</span><br><span class="line">area</span><br></pre></td></tr></table></figure><pre><code>(48, 160, 1500, 976)</code></pre><p>이미지 잘라내기</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pil_im = pil_im.crop(area)</span><br><span class="line">pil_im.save(<span class="string">"screenshot_element.png"</span>)</span><br></pre></td></tr></table></figure><p>잘라낸 결과 이미지</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pil_im = pil.open(<span class="string">"screenshot_element.png"</span>)</span><br><span class="line">pil_im</span><br></pre></td></tr></table></figure><img src="/2018/10/04/web_10_selenium/output_69_0.png"><p>잘라낸 부분에서 하단의 메뉴바 부분까지 잘라내기</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">element = driver.find_element_by_css_selector(<span class="string">".ytp-chrome-bottom"</span>)</span><br><span class="line">playbar_height = element.size[<span class="string">"height"</span>]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">left = location[<span class="string">"x"</span>] * <span class="number">2</span></span><br><span class="line">top = location [<span class="string">"y"</span>] * <span class="number">2</span></span><br><span class="line">right = left + size[<span class="string">"width"</span>] * <span class="number">2</span></span><br><span class="line">bottom = top + size[<span class="string">"height"</span>] *<span class="number">2</span> - playbar_height *<span class="number">2</span></span><br><span class="line">area = (left, top, right, bottom)</span><br><span class="line">area</span><br></pre></td></tr></table></figure><pre><code>(48, 160, 1500, 898)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pil_im = pil.open(<span class="string">"screenshot.png"</span>)</span><br><span class="line">pil_im = pil_im.crop(area)</span><br><span class="line">pil_im.save(<span class="string">"screenshot_element2.png"</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pil_im = pil.open(<span class="string">"screenshot_element2.png"</span>)</span><br><span class="line">pil_im</span><br></pre></td></tr></table></figure><img src="/2018/10/04/web_10_selenium/output_74_0.png"><h4 id="썸네일로-만들기"><a href="#썸네일로-만들기" class="headerlink" title="썸네일로 만들기"></a>썸네일로 만들기</h4><ul><li>서비스할 때 작은 사이즈의 썸네일을 만들어서 씀으로써 트래픽 비용 절감</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pil_im.size</span><br></pre></td></tr></table></figure><pre><code>(1452, 738)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pil_im.thumbnail((<span class="number">320</span>,<span class="number">160</span>))</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">driver.quit()</span><br></pre></td></tr></table></figure><h4 id="참고자료"><a href="#참고자료" class="headerlink" title="참고자료"></a>참고자료</h4><ul><li>패스트캠퍼스, ⟪데이터사이언스스쿨 8기⟫ 수업자료</li></ul>]]></content>
      
      
      <categories>
          
          <category> DataScience </category>
          
          <category> Web 웹 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> programming </tag>
            
            <tag> web </tag>
            
            <tag> crawling </tag>
            
            <tag> web_crawling </tag>
            
            <tag> 웹크롤링 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018-10-02-TIL</title>
      <link href="/2018/10/03/2018-10-02-TIL/"/>
      <url>/2018/10/03/2018-10-02-TIL/</url>
      
        <content type="html"><![CDATA[<h4 id="공부한-것-amp-리뷰"><a href="#공부한-것-amp-리뷰" class="headerlink" title="공부한 것 &amp; 리뷰"></a>공부한 것 &amp; 리뷰</h4><ul><li>web crawling - selenium basic<ul><li>selenium의 기본 사용법과 google vision api에 사진을 올려 분석하고 결과를 받아오기 복습</li><li>역시 계속 연습해서 css selector를 잘 쓰는 것이 매우 중요한 것 같다!</li></ul></li></ul><h4 id="내일-공부할-것"><a href="#내일-공부할-것" class="headerlink" title="내일 공부할 것"></a>내일 공부할 것</h4><ul><li>web crawling - selenium intermediate</li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Web crawling - Selenium Basic</title>
      <link href="/2018/10/02/web_09_selenium/"/>
      <url>/2018/10/02/web_09_selenium/</url>
      
        <content type="html"><![CDATA[<h4 id="다룰-내용"><a href="#다룰-내용" class="headerlink" title="다룰 내용"></a>다룰 내용</h4><ol><li>Selenium이란</li><li>Selenium 설치</li><li>Selenium 기본 사용법</li><li>Selenium 파일 업로드</li></ol><a id="more"></a> <h2 id="1-Selenium이란"><a href="#1-Selenium이란" class="headerlink" title="1. Selenium이란"></a>1. Selenium이란</h2><ul><li>Selenium documentation (<a href="http://www.seleniumhq.org/" target="_blank" rel="noopener">http://www.seleniumhq.org/</a>) </li><li>웹 서비스를 테스트 하기 위해 만들어진 브라우저 자동화 라이브러리 (다른 목적으로도 사용할 수 있음)</li><li>동적인 웹페이지 크롤링에 이용</li><li>여러가지 브라우저를 지원하지만 Firefox는 최신 버전 지원 X하는 등 문제가 있을 수도 <ul><li>우리는 가장 많이 사용하는 Chrome driver 사용</li></ul></li><li>여러가지 OS, 다른 언어에서도 사용 가능</li></ul><h2 id="2-Selenium-설치"><a href="#2-Selenium-설치" class="headerlink" title="2. Selenium 설치"></a>2. Selenium 설치</h2><h3 id="2-1-Install-chrome-driver"><a href="#2-1-Install-chrome-driver" class="headerlink" title="2.1 Install chrome driver"></a>2.1 Install chrome driver</h3><ul><li><a href="https://sites.google.com/a/chromium.org/chromedriver/home" target="_blank" rel="noopener">다운로드 링크</a> ← 여기에서 다운로드</li><li>Mac: chrome driver를 글로벌하게 사용하기 위해 경로 변경 <ul><li><code>$ mv ~/Donwloads/chromedriver /usr/local/bin</code></li></ul></li><li>Windows: 환경변수 추가</li><li>환경변수 설정이 잘 되지 않을 때는 같은 폴더에 chromedriver.exe를 넣거나 코드에 path를 넣어주면 됨</li></ul><h3 id="2-2-Install-selenium"><a href="#2-2-Install-selenium" class="headerlink" title="2.2 Install selenium"></a>2.2 Install selenium</h3><ul><li>Mac: <code>$ sudo pip3 install selenium</code></li><li>Windows: <code>$ conda install -c conda-forge selenium</code></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br></pre></td></tr></table></figure><h2 id="3-Selenium-기본-사용법"><a href="#3-Selenium-기본-사용법" class="headerlink" title="3. Selenium 기본 사용법"></a>3. Selenium 기본 사용법</h2><h3 id="3-1-브라우저-open"><a href="#3-1-브라우저-open" class="headerlink" title="3.1 브라우저 open"></a>3.1 브라우저 open</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">driver = webdriver.Chrome()     <span class="comment"># 객체를 만들어서 driver에 넣어줌</span></span><br></pre></td></tr></table></figure><h3 id="3-2-페이지-이동"><a href="#3-2-페이지-이동" class="headerlink" title="3.2 페이지 이동"></a>3.2 페이지 이동</h3><ul><li>url에 꼭 http를 포함해야 함</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">driver.get(<span class="string">"http://naver.com"</span>)</span><br></pre></td></tr></table></figure><h3 id="3-3-window-size-조절"><a href="#3-3-window-size-조절" class="headerlink" title="3.3 window size 조절"></a>3.3 window size 조절</h3><ul><li>반응형 웹페이지 테스트에 이용할 수 있음</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">driver.set_window_size(<span class="number">600</span>, <span class="number">800</span>)</span><br></pre></td></tr></table></figure><h3 id="3-4-브라우저-스크롤-조절"><a href="#3-4-브라우저-스크롤-조절" class="headerlink" title="3.4 브라우저 스크롤 조절"></a>3.4 브라우저 스크롤 조절</h3><ul><li>함수가 없는 경우에는 javascript 코드를 실행해서 컨트롤</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">script = <span class="string">"window.scrollTo(200,300);"</span></span><br><span class="line">driver.execute_script(script)</span><br></pre></td></tr></table></figure><h3 id="3-5-윈도우-객체-저장"><a href="#3-5-윈도우-객체-저장" class="headerlink" title="3.5 윈도우 객체 저장"></a>3.5 윈도우 객체 저장</h3><ul><li>윈도우 객체를 저장하면 브라우저에 여러 개의 탭이 있을 때 저장되어 있는 윈도우 객체의 탭으로 돌아올 수 있음</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">main_window = driver.current_window_handle</span><br><span class="line">main_window</span><br></pre></td></tr></table></figure><pre><code>&apos;CDwindow-1327F53EB33E1BF8CD1ECD3C85E4B347&apos;</code></pre><h3 id="3-6-새로운-윈도우-탭-열기"><a href="#3-6-새로운-윈도우-탭-열기" class="headerlink" title="3.6 새로운 윈도우 탭 열기"></a>3.6 새로운 윈도우 탭 열기</h3><p>javascript 코드로 새로운 탭을 열 수 있음</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">script = <span class="string">"window.open('http://google.com');"</span></span><br><span class="line">driver.execute_script(script)</span><br></pre></td></tr></table></figure><p>새로운 탭을 열었지만 아래와 같이 current_window(포커스)가 자동으로 바뀌지는 않음</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">driver.current_window_handle</span><br></pre></td></tr></table></figure><pre><code>&apos;CDwindow-1327F53EB33E1BF8CD1ECD3C85E4B347&apos;</code></pre><h3 id="3-7-현재-열려있는-윈도우-객체-확인"><a href="#3-7-현재-열려있는-윈도우-객체-확인" class="headerlink" title="3.7 현재 열려있는 윈도우 객체 확인"></a>3.7 현재 열려있는 윈도우 객체 확인</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">windows = driver.window_handles</span><br><span class="line">windows</span><br></pre></td></tr></table></figure><pre><code>[&apos;CDwindow-1327F53EB33E1BF8CD1ECD3C85E4B347&apos;, &apos;CDwindow-D8D228E9A26224583A54A676F95612EA&apos;]</code></pre><h3 id="3-8-윈도우-포커스-변경"><a href="#3-8-윈도우-포커스-변경" class="headerlink" title="3.8 윈도우 포커스 변경"></a>3.8 윈도우 포커스 변경</h3><ul><li>current window가 자동으로 바뀌지 않았기 때문에 바꿔주기</li><li>이 방법으로 탭을 이동하면서 작업할 수 있음</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">driver.switch_to_window(windows[<span class="number">1</span>])</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">driver.current_window_handle</span><br></pre></td></tr></table></figure><pre><code>&apos;CDwindow-D8D228E9A26224583A54A676F95612EA&apos;</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">driver.switch_to_window(main_window)</span><br></pre></td></tr></table></figure><h3 id="3-9-페이지-새로고침"><a href="#3-9-페이지-새로고침" class="headerlink" title="3.9 페이지 새로고침"></a>3.9 페이지 새로고침</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">script = <span class="string">"location.reload();"</span></span><br><span class="line">driver.execute_script(script)</span><br></pre></td></tr></table></figure><h3 id="3-10-alert-messege-처리"><a href="#3-10-alert-messege-처리" class="headerlink" title="3.10 alert messege 처리"></a>3.10 alert messege 처리</h3><p>alert messege 만들기</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">script = <span class="string">"alert('selenium test');"</span></span><br><span class="line">driver.execute_script(script)</span><br></pre></td></tr></table></figure><p>switch_to_alert 함수로 alert 변수에 alert 객체를 저장할 수 있음<br>alert 객의 text 값을 확인해보면 alert의 메세지를 문자열로 확인 가능</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">alert = driver.switch_to_alert()</span><br><span class="line">alert.text</span><br></pre></td></tr></table></figure><pre><code>&apos;selenium test&apos;</code></pre><p>확인 버튼 누르기</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alert.accept()</span><br></pre></td></tr></table></figure><h3 id="3-11-confirm-처리"><a href="#3-11-confirm-처리" class="headerlink" title="3.11 confirm 처리"></a>3.11 confirm 처리</h3><ul><li>confirm은 alert과 달리 확인/취소 버튼이 함께 있음</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">script = <span class="string">"confirm('data')"</span></span><br><span class="line">driver.execute_script(script)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">confirm = driver.switch_to_alert()</span><br><span class="line">confirm.text</span><br></pre></td></tr></table></figure><pre><code>&apos;data&apos;</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># confirm.accept()   # 확인 버튼 클릭</span></span><br><span class="line">confirm.dismiss()    <span class="comment"># 취소 버튼 클릭</span></span><br></pre></td></tr></table></figure><h3 id="3-12-input창에-문자열-입력하기"><a href="#3-12-input창에-문자열-입력하기" class="headerlink" title="3.12 input창에 문자열 입력하기"></a>3.12 input창에 문자열 입력하기</h3><ul><li>send_keys()를 이용하여 웹페이지의 input 태그에 문자열을 입력할 수 있음</li><li>find_element_by_css_selector<ul><li>html 코드의 태그 위치에 접근하는 함수</li><li>파라미터로 css selector를 넣어주면 해당 selector의 태그 위치로 접근</li></ul></li></ul><p>네이버 검색창에 “데이터사이언스” 입력하기</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">driver.find_element_by_css_selector(<span class="string">"#query"</span>).send_keys(<span class="string">"데이터사이언스"</span>)</span><br></pre></td></tr></table></figure><h3 id="3-13-버튼-클릭하기-click-event-발생"><a href="#3-13-버튼-클릭하기-click-event-발생" class="headerlink" title="3.13 버튼 클릭하기 (click event 발생)"></a>3.13 버튼 클릭하기 (click event 발생)</h3><p>검색 버튼 눌러 “데이터사이언스” 검색 결과 확인하기</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">driver.find_element_by_css_selector(<span class="string">"#search_btn"</span>).click()</span><br></pre></td></tr></table></figure><h3 id="3-14-끝내기"><a href="#3-14-끝내기" class="headerlink" title="3.14 끝내기"></a>3.14 끝내기</h3><h4 id="창-닫기-하나의-윈도우-창을-닫음"><a href="#창-닫기-하나의-윈도우-창을-닫음" class="headerlink" title="창 닫기 - 하나의 윈도우 창을 닫음"></a>창 닫기 - 하나의 윈도우 창을 닫음</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">driver.close()</span><br></pre></td></tr></table></figure><h4 id="브라우저-닫기"><a href="#브라우저-닫기" class="headerlink" title="브라우저 닫기"></a>브라우저 닫기</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">driver.quit()</span><br></pre></td></tr></table></figure><h2 id="4-Selenium-파일-업로드"><a href="#4-Selenium-파일-업로드" class="headerlink" title="4. Selenium 파일 업로드"></a>4. Selenium 파일 업로드</h2><ul><li>google vision api 페이지에 이미지 파일을 업로드</li><li>iframe으로 이동</li></ul><h3 id="4-1-webdriver-실행하고-google-vision-api로-이동"><a href="#4-1-webdriver-실행하고-google-vision-api로-이동" class="headerlink" title="4.1 webdriver 실행하고 google vision api로 이동"></a>4.1 webdriver 실행하고 google vision api로 이동</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">url = <span class="string">"https://cloud.google.com/vision/"</span></span><br><span class="line">driver = webdriver.Chrome()</span><br><span class="line">driver.get(url)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">driver.set_window_size(<span class="number">800</span>, <span class="number">800</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">script = <span class="string">"window.scrollTo(0,1200);"</span></span><br><span class="line">driver.execute_script(script)</span><br></pre></td></tr></table></figure><h3 id="4-2-iframe으로-포커스-이동"><a href="#4-2-iframe으로-포커스-이동" class="headerlink" title="4.2 iframe으로 포커스 이동"></a>4.2 iframe으로 포커스 이동</h3><ul><li>iframe 안에 있는 내용을 crawling하기 위해서는 꼭 iframe으로 focus switch!</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">iframe = driver.find_element_by_css_selector(<span class="string">'#vision_demo_section &gt; iframe'</span>)</span><br><span class="line">driver.switch_to_frame(iframe)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## iframe에서 메인 프레임으로 돌아가기</span></span><br><span class="line"><span class="comment"># driver.switch_to_default_content()</span></span><br></pre></td></tr></table></figure><h3 id="4-3-파일-업로드"><a href="#4-3-파일-업로드" class="headerlink" title="4.3 파일 업로드"></a>4.3 파일 업로드</h3><ul><li>절대경로로 작성해야 함</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">file_path = <span class="string">"/Users/hyeshinoh/Workspace/Study_Web/dog.png"</span></span><br><span class="line">driver.find_element_by_css_selector(<span class="string">'#input'</span>).send_keys(file_path)</span><br></pre></td></tr></table></figure><h3 id="4-4-분석-결과-확인"><a href="#4-4-분석-결과-확인" class="headerlink" title="4.4 분석 결과 확인"></a>4.4 분석 결과 확인</h3><h4 id="1-Web-결과-가져오기"><a href="#1-Web-결과-가져오기" class="headerlink" title="(1) Web 결과 가져오기"></a>(1) Web 결과 가져오기</h4><p>이미지 분석 결과에서 Web 탭을 선택</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">driver.find_element_by_css_selector(<span class="string">'#webDetection'</span>).click()</span><br></pre></td></tr></table></figure><p>분석 결과를 가져오기</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">web_results = driver.find_elements_by_css_selector(<span class="string">'#card &gt; .container &gt; .row'</span>)[:<span class="number">15</span>]</span><br><span class="line"><span class="keyword">for</span> web_result <span class="keyword">in</span> web_results:</span><br><span class="line">    print(</span><br><span class="line">        web_result.find_element_by_css_selector(<span class="string">".name"</span>).text,</span><br><span class="line">        web_result.find_element_by_css_selector(<span class="string">".score"</span>).text</span><br><span class="line">    )</span><br></pre></td></tr></table></figure><pre><code>Puppy 1.31475French Bulldog 0.93836Bulldog 0.74869Shih Tzu 0.59496Beagle 0.58407Yorkshire Terrier 0.53742Dog training 0.5303 0.5142Pet 0.4853Dog breed 0.3965stock.xchng 0.3691Dog breeding 0.3677Training 0.3125Cuteness 0.3003Dog 0</code></pre><h4 id="2-Document-결과-사진-속-text-가져오기"><a href="#2-Document-결과-사진-속-text-가져오기" class="headerlink" title="(2) Document 결과 (사진 속 text) 가져오기"></a>(2) Document 결과 (사진 속 text) 가져오기</h4><p>이미지 분석 결과에서 Document 탭을 선택</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">driver.find_element_by_css_selector(<span class="string">"#fullTextAnnotation"</span>).click()</span><br></pre></td></tr></table></figure><p>text 데이터를 가져오기</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">document_results = driver.find_elements_by_css_selector(<span class="string">"#card &gt; fieldset &gt; div &gt; fieldset"</span>)</span><br><span class="line">len(document_results)</span><br></pre></td></tr></table></figure><pre><code>2</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">documents = []</span><br><span class="line"><span class="keyword">for</span> document_result <span class="keyword">in</span> document_results:</span><br><span class="line">    words = document_result.find_elements_by_css_selector(<span class="string">".container .word"</span>)</span><br><span class="line">    print(len(words))</span><br><span class="line">    sentence_list = []</span><br><span class="line">    <span class="keyword">for</span> word <span class="keyword">in</span> words:</span><br><span class="line">        word = word.text.replace(<span class="string">" "</span>, <span class="string">""</span>)</span><br><span class="line">        sentence_list.append(word)</span><br><span class="line">    documents.append(<span class="string">" "</span>.join(sentence_list))</span><br><span class="line">documents</span><br></pre></td></tr></table></figure><pre><code>46[&apos;In the dog house&apos;, &quot;&apos; 인기를 잃다 , 면목을 잃다&quot;]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">driver.quit()</span><br></pre></td></tr></table></figure><h4 id="참고자료"><a href="#참고자료" class="headerlink" title="참고자료"></a>참고자료</h4><ul><li>패스트캠퍼스, ⟪데이터사이언스스쿨 8기⟫ 수업자료</li></ul>]]></content>
      
      
      <categories>
          
          <category> DataScience </category>
          
          <category> Web 웹 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> programming </tag>
            
            <tag> web </tag>
            
            <tag> crawling </tag>
            
            <tag> web_crawling </tag>
            
            <tag> 웹크롤링 </tag>
            
            <tag> selenium </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Github 페이지와 Hexo로 블로그 만들기</title>
      <link href="/2018/10/01/hexo_001/"/>
      <url>/2018/10/01/hexo_001/</url>
      
        <content type="html"><![CDATA[<p>커리어전환을 위해 데이터사이언스 공부를 시작하면서 블로그를 만들어야겠다고 생각했는데, 어떤 블로그를 사용해야할지 고민이 많이 되었다. 서비스형 블로그가 쓰기 쉽긴 하겠지만 마크다운(markdown) 지원이 되지 않는다는 점이 치명적이었다. 그래서 사용이 너무 어렵지 않고, 마크다운을 사용할 수 있는 것 중에서 Hexo 프레임워크를 선택했다. Hexo 블로그의 간단한 특징과 Github 페이지와 Hexo를 이용해 블로그를 만드는 방법을 알아보자.</p><h2 id="HEXO-프레임워크란"><a href="#HEXO-프레임워크란" class="headerlink" title="HEXO 프레임워크란?"></a>HEXO 프레임워크란?</h2><p>블로그 지향적인 정적 사이트 생성기(Static Site Generator)로, Github 페이지를 이용하여 쉽게 웹사이트를 만들 수 있다. </p><a id="more"></a> <h2 id="HEXO의-장점"><a href="#HEXO의-장점" class="headerlink" title="HEXO의 장점"></a>HEXO의 장점</h2><ul><li>마크다운을 사용해서 포스팅할 수 있다.</li><li>설치와 배포가 (비교적) 쉽다.</li><li>다양한 theme과 plugin이 제공된다.</li></ul><h2 id="HEXO-블로그-만들기"><a href="#HEXO-블로그-만들기" class="headerlink" title="HEXO 블로그 만들기"></a>HEXO 블로그 만들기</h2><p><a href="https://hexo.io/ko/docs/" target="_blank" rel="noopener">Hexo 한글 튜토리얼</a></p><p>먼저 준비할 것은 다음과 같다.</p><ul><li>Node.js 설치</li><li>Git 설치</li><li>Github 가입</li></ul><h3 id="1-github-repository-생성하기"><a href="#1-github-repository-생성하기" class="headerlink" title="1. github repository 생성하기"></a>1. github repository 생성하기</h3><p>github에 USERNAME.github.io로 새로운 repository를 만든다.</p><ul><li>USERNAME은 github username을 사용할 것</li></ul><p>로컬에 repository 복사</p><ul><li><code>$ git clone https://github.com/username/username.github.io</code></li></ul><h3 id="2-Hexo-설치하기"><a href="#2-Hexo-설치하기" class="headerlink" title="2. Hexo 설치하기"></a>2. Hexo 설치하기</h3><p>복사해온 username.github.io 폴더에서 아래 내용을 진행한다.</p><h4 id="2-1-Hexo-CLI-설치"><a href="#2-1-Hexo-CLI-설치" class="headerlink" title="2.1 Hexo CLI 설치"></a>2.1 Hexo CLI 설치</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-cli -g</span><br><span class="line">$ hexo init blog</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure><h4 id="2-2-config-yml-파일-수정"><a href="#2-2-config-yml-파일-수정" class="headerlink" title="2.2 _config.yml 파일 수정"></a>2.2 <code>_config.yml</code> 파일 수정</h4><p>프로젝트의 root 폴더에 생성된 <code>_config.yml</code> 파일에서 다음의 부분들을 수정한다.</p><ul><li><p>Site 정보</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># Site</span><br><span class="line">title: 우와팬더의 블로그</span><br><span class="line">subtitle:</span><br><span class="line">description: 데이터사이언스를 공부합니다</span><br><span class="line">keywords: data science</span><br><span class="line">author: 우와팬더</span><br><span class="line">language: en</span><br><span class="line">timezone: Asia/Seoul</span><br></pre></td></tr></table></figure></li><li><p>URL 정보</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># URL</span><br><span class="line">url: https://USERNAME.github.io</span><br><span class="line">root: /</span><br><span class="line">permalink: :year/:month/:day/:title/</span><br><span class="line">permalink_defaults:</span><br></pre></td></tr></table></figure></li><li><p>Github 정보</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># Deployment</span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https://github.com/USERNAME/USERNAME.github.io</span><br></pre></td></tr></table></figure></li></ul><h4 id="2-3-로컬-서버에서-구동"><a href="#2-3-로컬-서버에서-구동" class="headerlink" title="2.3 로컬 서버에서 구동"></a>2.3 로컬 서버에서 구동</h4><p>아래 명령어를 통해 로컬에서 hexo 서버를 실행한다.<br><a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a> 에서 확인이 가능하다.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br><span class="line">$ hexo s</span><br></pre></td></tr></table></figure></p><h3 id="3-Github으로-배포하기"><a href="#3-Github으로-배포하기" class="headerlink" title="3. Github으로 배포하기"></a>3. Github으로 배포하기</h3><p>로컬에서 블로그에 정상적으로 접속이 되었다면 Github 페이지에 배포 가능하다.</p><ul><li><p>배포 전에 Hexo deployer를 설치</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm insatll hexo-deployer-git --save</span><br></pre></td></tr></table></figure></li><li><p>정적 리소스 생성하기</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br><span class="line">$ hexo g</span><br></pre></td></tr></table></figure></li><li><p>배포하기</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br><span class="line">$ hexo d</span><br></pre></td></tr></table></figure></li><li><p>리소스-배포 동시에 실행하기</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g -d</span><br></pre></td></tr></table></figure></li></ul><p>배포가 완료(몇 분 정도 시간이 걸릴 수 있다)되면 USERNAME.github.io로 접속하여 확인한다.</p><p>다음 글에서는 hexo blog에 마음에 드는 테마를 적용하고 간단한 포스팅을 하는 방법을 알아보자! </p>]]></content>
      
      
      <categories>
          
          <category> DataScience </category>
          
          <category> Hexo 블로그 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018-09-29-TIL</title>
      <link href="/2018/09/30/2018-09-29-TIL/"/>
      <url>/2018/09/30/2018-09-29-TIL/</url>
      
        <content type="html"><![CDATA[<h4 id="공부한-것-amp-리뷰"><a href="#공부한-것-amp-리뷰" class="headerlink" title="공부한 것 &amp; 리뷰"></a>공부한 것 &amp; 리뷰</h4><ul><li>web crawling - requests 복습 &amp; 포스팅<ul><li>복습을 여러번할수록 확실히 익숙해지는 것 같다. 개인 프로젝트를 위해서도 크롤링을 쭉 제대로 복습해봐야겠다. 그래도 scrapy는 걱정ㅜ ㅎㅎ</li></ul></li></ul><h4 id="내일-공부할-것"><a href="#내일-공부할-것" class="headerlink" title="내일 공부할 것"></a>내일 공부할 것</h4><ul><li>dss8기 주말 스터디 시작!</li><li>web crawling - selenium 복습</li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Web crawling - Requests</title>
      <link href="/2018/09/29/web_08_requests/"/>
      <url>/2018/09/29/web_08_requests/</url>
      
        <content type="html"><![CDATA[<h1 id="Requests"><a href="#Requests" class="headerlink" title="Requests"></a>Requests</h1><ul><li>requests: 서버에 request 요청을 하고 response를 받는 패키지</li><li><a href="http://docs.python-requests.org/en/master/" target="_blank" rel="noopener">http://docs.python-requests.org/en/master/</a></li><li>mac은 설치 필요: <code>pip3 install requests</code></li></ul><a id="more"></a> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> pickle</span><br></pre></td></tr></table></figure><h2 id="1-네이버-주식-데이터-가져오기"><a href="#1-네이버-주식-데이터-가져오기" class="headerlink" title="1. 네이버 주식 데이터 가져오기"></a>1. 네이버 주식 데이터 가져오기</h2><ul><li>api를 사용해 json 파싱</li><li>네이버 주식 페이지(모바일)에서 주식 데이터를 가져와 pandas dataframe으로 만들기</li><li><a href="http://m.stock.naver.com" target="_blank" rel="noopener">http://m.stock.naver.com</a></li><li>증권-국내-코스피: <a href="http://m.stock.naver.com/sise/siseList.nhn?menu=market_sum&amp;sosok=0" target="_blank" rel="noopener">http://m.stock.naver.com/sise/siseList.nhn?menu=market_sum&amp;sosok=0</a></li><li>개발자도구에서 request url을 복사해오기<ul><li><a href="https://m.stock.naver.com/api/json/sise/siseListJson.nhn?menu=market_sum&amp;sosok=0&amp;pageSize=20&amp;page=2" target="_blank" rel="noopener">https://m.stock.naver.com/api/json/sise/siseListJson.nhn?menu=market_sum&amp;sosok=0&amp;pageSize=20&amp;page=2</a></li></ul></li></ul><h3 id="1-1-make-url-함수"><a href="#1-1-make-url-함수" class="headerlink" title="1.1 make_url 함수"></a>1.1 make_url 함수</h3><ul><li>page_size와 page를 parameter로 받아 url을 만드는 함수</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">make_url</span><span class="params">(page_size=<span class="number">10</span>, page=<span class="number">1</span>)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">"http://m.stock.naver.com/api/json/sise/siseListJson.nhn?\</span></span><br><span class="line"><span class="string">menu=market_sum&amp;sosok=0&amp;pageSize="</span>+str(page_size)+<span class="string">"&amp;page="</span>+str(page)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">make_url()</span><br></pre></td></tr></table></figure><pre><code>&apos;http://m.stock.naver.com/api/json/sise/siseListJson.nhn?menu=market_sum&amp;sosok=0&amp;pageSize=10&amp;page=1&apos;</code></pre><h3 id="1-2-get-data-함수"><a href="#1-2-get-data-함수" class="headerlink" title="1.2 get_data 함수"></a>1.2 get_data 함수</h3><ul><li>url을 parameter로 받아 pandas dataframe으로 만들어주는 함수</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_data</span><span class="params">(url)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    URL을 받으면 json으로 데이터를 가져와서 pandas dataframe 로 만들어주는 함수</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    response = requests.get(url)   <span class="comment"># response라는 obj. 안에 결과 데이터를 받아옴</span></span><br><span class="line">    json_info = response.json()    <span class="comment"># json함수: 문자열 데이터를 json 형태로 parsing</span></span><br><span class="line">    companies = json_info[<span class="string">"result"</span>][<span class="string">"itemList"</span>]</span><br><span class="line">    df = pd.DataFrame(columns = [<span class="string">"종목"</span>,<span class="string">"시세"</span>,<span class="string">"전일비"</span>,<span class="string">"등락율"</span>,<span class="string">"시가총액"</span>,<span class="string">"거래량"</span>])</span><br><span class="line">    <span class="keyword">for</span> company <span class="keyword">in</span> companies:</span><br><span class="line">        df.loc[len(df)] = &#123;</span><br><span class="line">            <span class="string">"종목"</span>:company[<span class="string">"nm"</span>],</span><br><span class="line">            <span class="string">"시세"</span>:company[<span class="string">"nv"</span>],</span><br><span class="line">            <span class="string">"전일비"</span>:company[<span class="string">"cv"</span>],</span><br><span class="line">            <span class="string">"등락율"</span>:company[<span class="string">"cr"</span>],</span><br><span class="line">            <span class="string">"시가총액"</span>:company[<span class="string">"mks"</span>],</span><br><span class="line">            <span class="string">"거래량"</span>:company[<span class="string">"aq"</span>]</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">return</span> df</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">url = make_url(<span class="number">100</span>, <span class="number">1</span>)</span><br><span class="line">df = get_data(url)</span><br><span class="line">df.tail()</span><br></pre></td></tr></table></figure><table><thead><tr><th></th><th>종목</th><th>시세</th><th>전일비</th><th>등락율</th><th>시가총액</th><th>거래량</th></tr></thead><tbody><tr><td>95</td><td>KODEX 레버리지</td><td>14885</td><td>-170</td><td>-1.13</td><td>27120</td><td>5641593</td></tr><tr><td>96</td><td>대한항공</td><td>28100</td><td>0</td><td>0.00</td><td>26651</td><td>385938</td></tr><tr><td>97</td><td>TIGER 200</td><td>30135</td><td>-175</td><td>-0.58</td><td>26428</td><td>861828</td></tr><tr><td>98</td><td>OCI</td><td>110000</td><td>3000</td><td>2.80</td><td>26234</td><td>156276</td></tr><tr><td>99</td><td>두산</td><td>136500</td><td>-1500</td><td>-1.09</td><td>26205</td><td>54640</td></tr></tbody></table><h3 id="1-3-json-normalize"><a href="#1-3-json-normalize" class="headerlink" title="1.3 json_normalize"></a>1.3 json_normalize</h3><ul><li>더 편하게 json format 데이터를 pandas dataframe에 넣어주는 방법</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pandas.io.json <span class="keyword">import</span> json_normalize</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_data</span><span class="params">(url)</span>:</span></span><br><span class="line">    </span><br><span class="line">    response = requests.get(url)</span><br><span class="line">    json_info = response.json()    <span class="comment"># parsing</span></span><br><span class="line">    companies = json_info[<span class="string">"result"</span>][<span class="string">"itemList"</span>]</span><br><span class="line">    <span class="keyword">return</span> json_normalize(companies)</span><br><span class="line"></span><br><span class="line">url = make_url(<span class="number">100</span>, <span class="number">2</span>)</span><br><span class="line">df = get_data(url)</span><br><span class="line">df.tail()</span><br></pre></td></tr></table></figure><table><thead><tr><th></th><th>aa</th><th>aq</th><th>cd</th><th>cr</th><th>cv</th><th>mks</th><th>mt</th><th>nm</th><th>nv</th><th>pcv</th><th>rf</th></tr></thead><tbody><tr><td>95</td><td>645</td><td>38116</td><td>005690</td><td>-0.59</td><td>-100</td><td>10086</td><td>0</td><td>파미셀</td><td>16850</td><td>16950</td><td>5</td></tr><tr><td>96</td><td>420</td><td>9161</td><td>079550</td><td>-1.83</td><td>-850</td><td>10054</td><td>0</td><td>LIG넥스원</td><td>45700</td><td>46550</td><td>5</td></tr><tr><td>97</td><td>62</td><td>1383</td><td>226320</td><td>0.88</td><td>400</td><td>10011</td><td>0</td><td>잇츠한불</td><td>45650</td><td>45250</td><td>2</td></tr><tr><td>98</td><td>6966</td><td>72049</td><td>001820</td><td>2.02</td><td>1900</td><td>9969</td><td>0</td><td>삼화콘덴서</td><td>95900</td><td>94000</td><td>2</td></tr><tr><td>99</td><td>129</td><td>4536</td><td>001680</td><td>-0.18</td><td>-50</td><td>9875</td><td>0</td><td>대상</td><td>28500</td><td>28550</td><td>5</td></tr></tbody></table><h2 id="2-공식적으로-제공되는-API-사용하기-Dark-Sky-API"><a href="#2-공식적으로-제공되는-API-사용하기-Dark-Sky-API" class="headerlink" title="2. 공식적으로 제공되는 API 사용하기 - Dark Sky API"></a>2. 공식적으로 제공되는 API 사용하기 - Dark Sky API</h2><ul><li><p>날씨 정보를 알려주는 api - <a href="https://darksky.net/dev" target="_blank" rel="noopener">https://darksky.net/dev</a></p><ul><li>회원가입 필요, 하루에 1000건까지 무료로 사용 가능</li><li>사용법(<a href="https://darksky.net/dev/docs" target="_blank" rel="noopener">Docs</a>)<ul><li>Forecast Request: <a href="https://api.darksky.net/forecast/[key]/[latitude],[longitude]" target="_blank" rel="noopener">https://api.darksky.net/forecast/[key]/[latitude],[longitude]</a></li><li>[key]: 회원가입시 부여받은 secret key 사용<ul><li>요청할 때 token 값을 같이 query에 보내주어 API를 요청하는 사람이 누구인지 서비스 제공자가 판별</li></ul></li></ul></li></ul></li><li><p>mac 설치: <code>pip3 install python-forecastio</code></p></li><li>window 설치: <ul><li><code>conda install -c auto python-forecastio</code></li><li><code>conda install -c anaconda python-forecastio</code></li><li><code>conda install -c conda-forge python-forecastio</code> </li><li><code>pip3 install python-forecastio</code></li></ul></li></ul><h3 id="2-1-Preparation"><a href="#2-1-Preparation" class="headerlink" title="2.1 Preparation"></a>2.1 Preparation</h3><ul><li>import package &amp; set request url</li><li>secret key(토큰)는 유출되어서는 안되니 pickle file로 저장해 이용</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> forecastio</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># FORECAST_TOKEN = "본인이 발급받은 토큰"</span></span><br><span class="line"><span class="comment"># pickle.dump(FORECAST_TOKEN, open("FORECAST_TOKEN.pickle", 'wb'))</span></span><br><span class="line">FORECAST_TOKEN = pickle.load(open(<span class="string">'FORECAST_TOKEN.pickle'</span>, <span class="string">'rb'</span>))</span><br></pre></td></tr></table></figure><h3 id="2-2-forecast-함수-사용"><a href="#2-2-forecast-함수-사용" class="headerlink" title="2.2 forecast 함수 사용"></a>2.2 forecast 함수 사용</h3><ul><li>위도와 경도를 parameter로 받는 forecast 함수 생성</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">forecast</span><span class="params">(lat, lng)</span>:</span></span><br><span class="line">    url = <span class="string">"https://api.darksky.net/forecast/&#123;&#125;/&#123;&#125;,&#123;&#125;"</span>.format(FORECAST_TOKEN, lat, lng)</span><br><span class="line">    response = requests.get(url)</span><br><span class="line">    json_info = response.json()</span><br><span class="line">    <span class="keyword">return</span> json_info[<span class="string">"hourly"</span>][<span class="string">"summary"</span>], json_info[<span class="string">"timezone"</span>]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">lat = <span class="number">37.512</span></span><br><span class="line">lng = <span class="number">126.954</span></span><br><span class="line">forecast(lat, lng)</span><br></pre></td></tr></table></figure><pre><code>(&apos;Partly cloudy tomorrow afternoon.&apos;, &apos;Asia/Seoul&apos;)</code></pre><h3 id="2-3-forecastio-패키지-사용"><a href="#2-3-forecastio-패키지-사용" class="headerlink" title="2.3 forecastio 패키지 사용"></a>2.3 forecastio 패키지 사용</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">forecast2</span><span class="params">(lat, lng)</span>:</span></span><br><span class="line">    forecast = forecastio.load_forecast(FORECAST_TOKEN, lat, lng, lang = <span class="string">'ko'</span>)</span><br><span class="line">    byHour = forecast.hourly()</span><br><span class="line">    <span class="keyword">return</span> byHour.summary</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">lat = <span class="number">37.512</span></span><br><span class="line">lng = <span class="number">126.954</span></span><br><span class="line">forecast2(lat, lng)</span><br></pre></td></tr></table></figure><pre><code>&apos;내일 오후동안 약간 흐림&apos;</code></pre><h2 id="3-BeautifulSoup"><a href="#3-BeautifulSoup" class="headerlink" title="3. BeautifulSoup"></a>3. BeautifulSoup</h2><ul><li>BeautifulSoup Doc (<a href="https://www.crummy.com/software/BeautifulSoup/bs4/doc/" target="_blank" rel="noopener">https://www.crummy.com/software/BeautifulSoup/bs4/doc/</a>)</li><li>문자열로 되어있는 html 코드를 css selector나 xpath를 이용해서 특정 element의 데이터를 쉽게 가져올 수 있도록 하는 서비스 패키지</li><li>설치: <code>pip3 install bs4</code></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br></pre></td></tr></table></figure><h3 id="3-1-네이버-검색어-순위-크롤링"><a href="#3-1-네이버-검색어-순위-크롤링" class="headerlink" title="3.1 네이버 검색어 순위 크롤링"></a>3.1 네이버 검색어 순위 크롤링</h3><ul><li>bs4 사용 : html을 특정 element를 CSS selector로 select할 수 있는 객체로 parsing</li><li>네이버 검색어 순위를 가져와 데이터 프레임으로 만들기</li><li><a href="http://naver.com" target="_blank" rel="noopener">http://naver.com</a></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">naver_top20</span><span class="params">()</span>:</span></span><br><span class="line">    df = pd.DataFrame(columns=[<span class="string">"rank"</span>,<span class="string">"keyword"</span>])</span><br><span class="line">    response = requests.get(<span class="string">"http://naver.com"</span>)</span><br><span class="line">    dom = BeautifulSoup(response.content, <span class="string">"html.parser"</span>)   <span class="comment">#html.parser   # dom 객체</span></span><br><span class="line">    keywords = dom.select(<span class="string">".ah_roll .ah_l .ah_item"</span>)   </span><br><span class="line">        <span class="comment"># CSS selector - selecting하는 방법은 다양</span></span><br><span class="line">        <span class="comment"># select 쓰면 list로 리턴 (요소가 하나라도) | select_one은 하나의 element만 리턴</span></span><br><span class="line">        <span class="comment"># len()을 찍어봐서 갯수가 맞게 나오는지 확인할 것</span></span><br><span class="line">    <span class="comment"># keywords = dom.select(".ah_roll_area &gt; .ah_l &gt; .ah_item")  </span></span><br><span class="line">    <span class="keyword">for</span> keyword <span class="keyword">in</span> keywords:</span><br><span class="line">        df.loc[len(df)] = &#123;</span><br><span class="line">            <span class="string">"rank"</span>: keyword.select_one(<span class="string">".ah_r"</span>).text,       </span><br><span class="line">            <span class="string">"keyword"</span>: keyword.select_one(<span class="string">".ah_k"</span>).text,</span><br><span class="line">            <span class="comment"># .text - element 안의 시작태그와 끝 태그 사이 내용을 가져옴</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">return</span> df</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df = naver_top20()</span><br><span class="line">df.tail()</span><br></pre></td></tr></table></figure><table><thead><tr><th></th><th>rank</th><th>keyword</th></tr></thead><tbody><tr><td>15</td><td>16</td><td>박미선</td></tr><tr><td>16</td><td>17</td><td>하나뿐인 내편</td></tr><tr><td>17</td><td>18</td><td>중국 샤먼 여행</td></tr><tr><td>18</td><td>19</td><td>그녀로 말할 것 같으면</td></tr><tr><td>19</td><td>20</td><td>토익</td></tr></tbody></table><p>10초마다 실시간 검색어를 크롤링해서 리스트로 저장하기</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line">ls = []</span><br><span class="line"><span class="keyword">for</span> idx <span class="keyword">in</span> range(<span class="number">3</span>):</span><br><span class="line">    print(idx)</span><br><span class="line">    df = naver_top20()</span><br><span class="line">    ls.append(df)</span><br><span class="line">    time.sleep(<span class="number">10</span>)</span><br></pre></td></tr></table></figure><pre><code>012</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls[<span class="number">2</span>]</span><br></pre></td></tr></table></figure><table><thead><tr><th></th><th>rank</th><th>keyword</th></tr></thead><tbody><tr><td>0</td><td>1</td><td>로또826회당첨번호</td></tr><tr><td>1</td><td>2</td><td>맨유 웨스트햄</td></tr><tr><td>2</td><td>3</td><td>그것이 알고싶다</td></tr><tr><td>3</td><td>4</td><td>류현진</td></tr><tr><td>4</td><td>5</td><td>아는형님</td></tr><tr><td>5</td><td>6</td><td>그녀로 말할 것 같으면</td></tr><tr><td>6</td><td>7</td><td>플레이어</td></tr><tr><td>7</td><td>8</td><td>로또825회당첨번호</td></tr><tr><td>8</td><td>9</td><td>맨유</td></tr><tr><td>9</td><td>10</td><td>epl</td></tr><tr><td>10</td><td>11</td><td>토트넘</td></tr><tr><td>11</td><td>12</td><td>tvn온에어</td></tr><tr><td>12</td><td>13</td><td>제3의 매력</td></tr><tr><td>13</td><td>14</td><td>미스터 션샤인</td></tr><tr><td>14</td><td>15</td><td>첼시 리버풀</td></tr><tr><td>15</td><td>16</td><td>중국 샤먼 여행</td></tr><tr><td>16</td><td>17</td><td>박미선</td></tr><tr><td>17</td><td>18</td><td>하나뿐인 내편</td></tr><tr><td>18</td><td>19</td><td>아프리카tv</td></tr><tr><td>19</td><td>20</td><td>중국 샤먼</td></tr></tbody></table><h3 id="3-2-다음-검색어-순위"><a href="#3-2-다음-검색어-순위" class="headerlink" title="3.2 다음 검색어 순위"></a>3.2 다음 검색어 순위</h3><ul><li>다음 검색어 순위를 가져와서 네이버 검색어 순위와 중복되는 키워드만 출력하기</li><li><a href="http://daum.net" target="_blank" rel="noopener">http://daum.net</a></li></ul><h4 id="다음-실시간-검색어-순위-가져오기"><a href="#다음-실시간-검색어-순위-가져오기" class="headerlink" title="다음 실시간 검색어 순위 가져오기"></a>다음 실시간 검색어 순위 가져오기</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">daum_top10</span><span class="params">()</span>:</span></span><br><span class="line">    df = pd.DataFrame(columns=[<span class="string">"rank"</span>,<span class="string">"keyword"</span>])</span><br><span class="line">    response = requests.get(<span class="string">"http://daum.net"</span>)</span><br><span class="line">    dom = BeautifulSoup(response.content, <span class="string">"html.parser"</span>)   </span><br><span class="line">    keywords = dom.select(<span class="string">"#mArticle &gt; div.cmain_tmp &gt; div.section_media &gt; div.hotissue_builtin &gt; div.realtime_part &gt; ol &gt; li"</span>)</span><br><span class="line">    print(len(keywords))</span><br><span class="line">    <span class="keyword">for</span> keyword <span class="keyword">in</span> keywords:</span><br><span class="line">        df.loc[len(df)] = &#123;</span><br><span class="line">            <span class="string">"rank"</span>:keyword.select_one(<span class="string">".ir_wa"</span>).text.replace(<span class="string">"위"</span>,<span class="string">""</span>),</span><br><span class="line">            <span class="string">"keyword"</span>:keyword.select_one(<span class="string">".link_issue"</span>).text,</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">return</span> df</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df_daum = daum_top10()</span><br><span class="line">df_daum</span><br></pre></td></tr></table></figure><pre><code>10</code></pre><table><thead><tr><th></th><th>rank</th><th>keyword</th></tr></thead><tbody><tr><td>0</td><td>1</td><td>중국 샤먼</td></tr><tr><td>1</td><td>2</td><td>양희은</td></tr><tr><td>2</td><td>3</td><td>826회 로또 당첨 번호</td></tr><tr><td>3</td><td>4</td><td>김민정</td></tr><tr><td>4</td><td>5</td><td>플레이어</td></tr><tr><td>5</td><td>6</td><td>경리</td></tr><tr><td>6</td><td>7</td><td>여자배구</td></tr><tr><td>7</td><td>8</td><td>일본 태풍</td></tr><tr><td>8</td><td>9</td><td>주이</td></tr><tr><td>9</td><td>10</td><td>송병준</td></tr></tbody></table><h4 id="네이버-실시간-검색어와-중복되는-키워드-추출하기"><a href="#네이버-실시간-검색어와-중복되는-키워드-추출하기" class="headerlink" title="네이버 실시간 검색어와 중복되는 키워드 추출하기"></a>네이버 실시간 검색어와 중복되는 키워드 추출하기</h4><ul><li>여러가지 방법이 있음</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">df_naver = df</span><br><span class="line"></span><br><span class="line">result = [keyword <span class="keyword">for</span> keyword <span class="keyword">in</span> df_daum[<span class="string">"keyword"</span>] </span><br><span class="line">          <span class="keyword">if</span> keyword <span class="keyword">in</span> df_naver[<span class="string">"keyword"</span>].tolist()]</span><br><span class="line">result</span><br></pre></td></tr></table></figure><pre><code>[&apos;중국 샤먼&apos;, &apos;플레이어&apos;]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">result = [keyword <span class="keyword">for</span> keyword <span class="keyword">in</span> df_daum[<span class="string">"keyword"</span>] </span><br><span class="line">          <span class="keyword">if</span> df_naver[<span class="string">"keyword"</span>].str.contains(keyword).any()]</span><br><span class="line">result</span><br></pre></td></tr></table></figure><pre><code>[&apos;중국 샤먼&apos;, &apos;플레이어&apos;]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">list(set(df_daum[<span class="string">"keyword"</span>]) &amp; set(df_naver[<span class="string">"keyword"</span>]))</span><br></pre></td></tr></table></figure><pre><code>[&apos;중국 샤먼&apos;, &apos;플레이어&apos;]</code></pre><h2 id="4-url-링크로-파일-다운로드-받는-방법"><a href="#4-url-링크로-파일-다운로드-받는-방법" class="headerlink" title="4. url 링크로 파일 다운로드 받는 방법"></a>4. url 링크로 파일 다운로드 받는 방법</h2><ul><li>이미지 파일이나 영상 파일을 다운로드 받고 싶으면 이 방법 사용</li><li>용량이 큰 파일을 받을 때는 chunk를 이용해서 파일을 쪼개서 다운로드 <ul><li>쪼개서 받지 않으면 에러가 나거나 하는 경우 처음부터 다시 받아야 함</li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">download</span><span class="params">(title, download_url)</span>:</span></span><br><span class="line">    response = requests.get(download_url, stream=<span class="keyword">True</span>)</span><br><span class="line">    size = <span class="number">0</span></span><br><span class="line">    <span class="keyword">with</span> open(title, <span class="string">'wb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">        <span class="keyword">for</span> chunk <span class="keyword">in</span> response.iter_content(chunk_size=<span class="number">1024</span>): <span class="comment">#1024 byte 단위로 쪼개서 받음</span></span><br><span class="line">            <span class="keyword">if</span> chunk:</span><br><span class="line">                size += <span class="number">1024</span></span><br><span class="line">                f.write(chunk)</span><br><span class="line">    <span class="keyword">return</span> size</span><br></pre></td></tr></table></figure><p>Youtube 영상은 영상 링크에서 “www.”를 빼고 “ss”를 붙이면 다운로드 받을 수 있으므로, 여기서 다운로드 링크를 가져오기</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">title = <span class="string">"Tiffany_TeachYou.mp4"</span></span><br><span class="line">download_url = <span class="string">"https://bit.ly/2P1YDPT"</span></span><br><span class="line">size = download(title, download_url)</span><br><span class="line">round(size/<span class="number">1024</span>/<span class="number">1024</span>, <span class="number">2</span>)    <span class="comment"># byte 단위를 megabyte 단위로 만들어 줌</span></span><br></pre></td></tr></table></figure><pre><code>22.06</code></pre><h4 id="결론-크롤링을-많이-연습해보자"><a href="#결론-크롤링을-많이-연습해보자" class="headerlink" title="결론: 크롤링을 많이 연습해보자!!"></a>결론: 크롤링을 많이 연습해보자!!</h4><h4 id="참고자료"><a href="#참고자료" class="headerlink" title="참고자료"></a>참고자료</h4><ul><li>패스트캠퍼스, ⟪데이터사이언스스쿨 8기⟫ 수업자료</li></ul>]]></content>
      
      
      <categories>
          
          <category> DataScience </category>
          
          <category> Web 웹 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> programming </tag>
            
            <tag> web </tag>
            
            <tag> crawling </tag>
            
            <tag> web_crawling </tag>
            
            <tag> 웹크롤링 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Web crawling 기초</title>
      <link href="/2018/09/29/web_07_crawling/"/>
      <url>/2018/09/29/web_07_crawling/</url>
      
        <content type="html"><![CDATA[<h1 id="1-Python을-사용한-crawling의-방법"><a href="#1-Python을-사용한-crawling의-방법" class="headerlink" title="1. Python을 사용한 crawling의 방법"></a>1. Python을 사용한 crawling의 방법</h1><p>아래의 네 가지 방법이 사용되는데, 가능한 한 간단한 앞 번호의 방법을 사용하는 것이 효율적</p><ol><li>requests</li><li>requests + bs4(BeautifulSoup)</li><li>selenium</li><li>scrapy</li></ol><a id="more"></a> <h1 id="2-Requests-패키지를-이용한-crawling"><a href="#2-Requests-패키지를-이용한-crawling" class="headerlink" title="2. Requests 패키지를 이용한 crawling"></a>2. Requests 패키지를 이용한 crawling</h1><p>python의 requests 패키지를 이용해서 코드상으로 request를 보내고 reponse를 받을 수 있음</p><h2 id="2-1-API가-제공되는-경우"><a href="#2-1-API가-제공되는-경우" class="headerlink" title="2.1 API가 제공되는 경우"></a>2.1 API가 제공되는 경우</h2><ul><li>API로 request를 던지고 JSON format으로 데이터를 받아 pandas/csv로 저장</li></ul><h2 id="2-2-API가-제공되지-않는-경우"><a href="#2-2-API가-제공되지-않는-경우" class="headerlink" title="2.2 API가 제공되지 않는 경우"></a>2.2 API가 제공되지 않는 경우</h2><ul><li>request를 던지고 response로 받은 HTML 코드(문자열 형태)를 CSS selector를 이용해 특정 element의 정보만 가져와서 pandas/csv로 데이터 저장</li><li>BeautifulSoup: str을 CSS selector로 크롤링할 수 있게 만들어주는 패키지<ul><li>HTML 문자열을 parsing해서 변환해주면 CSS selector로 데이터를 가져올 수 있음</li></ul></li></ul><h1 id="3-Selenium-패키지를-이용한-crawling"><a href="#3-Selenium-패키지를-이용한-crawling" class="headerlink" title="3. Selenium 패키지를 이용한 crawling"></a>3. Selenium 패키지를 이용한 crawling</h1><ul><li>request로 crawling이 불가능한 동적웹페이지에 사용<ul><li>버튼을 클릭했을 때 나타난 페이지의 특정 element 가져오기 가능</li></ul></li><li>CSS selector나 xpath를 사용<br>(강사님은 CSS selector가 더 쉽고 자주 이용)</li></ul><h1 id="4-Scrapy를-이용한-crawling"><a href="#4-Scrapy를-이용한-crawling" class="headerlink" title="4. Scrapy를 이용한 crawling"></a>4. Scrapy를 이용한 crawling</h1><ul><li>scrapy: python library for web crawling, 사용이 좀 더 복잡</li><li>CSS selector, xpath를 사용함</li><li>requests와 selenium을 모아서 전략적으로 사용하는 라이브러리</li></ul><h4 id="참고자료"><a href="#참고자료" class="headerlink" title="참고자료"></a>참고자료</h4><ul><li>패스트캠퍼스, ⟪데이터사이언스스쿨 8기⟫ 수업자료</li></ul>]]></content>
      
      
      <categories>
          
          <category> DataScience </category>
          
          <category> Web 웹 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> programming </tag>
            
            <tag> web </tag>
            
            <tag> crawling </tag>
            
            <tag> web_crawling </tag>
            
            <tag> 웹크롤링 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Send Email - Python으로 email 보내기</title>
      <link href="/2018/09/29/web_06_Send_Email/"/>
      <url>/2018/09/29/web_06_Send_Email/</url>
      
        <content type="html"><![CDATA[<p>자동화에 유용하게 사용할 수 있는 파이썬 라이브러리를 배워보자.<br>python으로 이메일 보내기!</p><ul><li>e.g. 광고메일 등을 보낼 수 있음</li><li>e.g. 머신러닝 모델을 학습시켜놓고 결과 데이터를 csv 파일로 메일을 받아볼 수 있음</li></ul><a id="more"></a> <h1 id="1-Preparation"><a href="#1-Preparation" class="headerlink" title="1. Preparation"></a>1. Preparation</h1><p>파이썬으로 이메일을 보내기 위한 준비를 해준다.</p><h2 id="1-1-Importing-necessary-libraries"><a href="#1-1-Importing-necessary-libraries" class="headerlink" title="1.1 Importing necessary libraries"></a>1.1 Importing necessary libraries</h2><p>필요한 패키지들을 import해준다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> smtplib, os, pickle  <span class="comment"># smtplib: 메일 전송을 위한 패키지</span></span><br><span class="line"><span class="keyword">from</span> email <span class="keyword">import</span> encoders  <span class="comment"># 파일전송을 할 때 이미지나 문서 동영상 등의 파일을 문자열로 변환할 때 사용할 패키지</span></span><br><span class="line"><span class="keyword">from</span> email.mime.text <span class="keyword">import</span> MIMEText   <span class="comment"># 본문내용을 전송할 때 사용되는 모듈</span></span><br><span class="line"><span class="keyword">from</span> email.mime.multipart <span class="keyword">import</span> MIMEMultipart   <span class="comment"># 메시지를 보낼 때 메시지에 대한 모듈</span></span><br><span class="line"><span class="keyword">from</span> email.mime.base <span class="keyword">import</span> MIMEBase     <span class="comment"># 파일을 전송할 때 사용되는 모듈</span></span><br></pre></td></tr></table></figure><p>메일을 보낼 주소들을 미리 저장해준다.<br>테스트를 위해 여러가지 주소로 보내고 싶은데, 나는 계정을 여러 개 갖고 있지 않으므로,<br>내 이메일 주소인 <a href="mailto:hyeshinoh@gmail.com" target="_blank" rel="noopener">hyeshinoh@gmail.com</a>에서 hyeshinoh 뒤에 ‘+’와 아무 글자를 넣어주면 마치 여러 개의 이메일 주소인 것처럼 사용할 수 있다. 이렇게 쓰면 메일은 모두 <a href="mailto:hyeshinoh@gmail.com" target="_blank" rel="noopener">hyeshinoh@gmail.com</a>로 전송된다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">toAddr = [<span class="string">"panda706@naver.com"</span>, <span class="string">"hyeshinoh+11@gmail.com"</span>, <span class="string">"hyeshinoh+h@gmail.com"</span>]</span><br></pre></td></tr></table></figure><h2 id="1-2-Setting-login-information-email-amp-password"><a href="#1-2-Setting-login-information-email-amp-password" class="headerlink" title="1.2 Setting login information: email &amp; password"></a>1.2 Setting login information: email &amp; password</h2><p>password는 직접 노출하면 유출의 위험이 있으므로 아래와 같이 pickle 파일로 저장해서 이용하는 것이 좋다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># pw = "본인의 pw"    </span></span><br><span class="line"><span class="comment"># pickle.dump(pw, open("pw.pickle", 'wb'))</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">email = <span class="string">"hyeshinoh@gmail.com"</span></span><br><span class="line">pw = pickle.load(open(<span class="string">'pw.pickle'</span>, <span class="string">'rb'</span>))</span><br></pre></td></tr></table></figure><h1 id="2-Send-text"><a href="#2-Send-text" class="headerlink" title="2. Send text"></a>2. Send text</h1><h2 id="2-1-Access-smtp-server"><a href="#2-1-Access-smtp-server" class="headerlink" title="2.1 Access smtp server"></a>2.1 Access smtp server</h2><p>smtp object를 생성한다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">smtp = smtplib.SMTP(<span class="string">'smtp.gmail.com'</span>, <span class="number">587</span>)   <span class="comment"># 587: 서버의 포트번호</span></span><br><span class="line">smtp.ehlo()</span><br><span class="line">smtp.starttls()   <span class="comment"># tls방식으로 접속, 그 포트번호가 587</span></span><br><span class="line"><span class="comment"># smtp.login('hyeshinoh@gmail.com', pickle.load( open('../pw.pickle', 'rb') ))</span></span><br><span class="line">smtp.login(<span class="string">'hyeshinoh@gmail.com'</span>, pw)</span><br></pre></td></tr></table></figure><pre><code>(235, b&apos;2.7.0 Accepted&apos;)</code></pre><h2 id="2-2-Make-message"><a href="#2-2-Make-message" class="headerlink" title="2.2 Make message"></a>2.2 Make message</h2><p>msg object를 생성하고 제목을 넣어준다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">msg = MIMEMultipart()    <span class="comment">#msg obj.</span></span><br><span class="line">msg[<span class="string">'Subject'</span>] = <span class="string">'hyeshin의 SMTP Send Text 테스트'</span></span><br></pre></td></tr></table></figure><p>msg object에 본문(text msg)을 추가해준다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># text msg</span></span><br><span class="line">part = MIMEText(<span class="string">'SMTP로 메일 보내기 본문 메시지입니다.'</span>)</span><br><span class="line">msg.attach(part)   <span class="comment">#msg에 part obj.를 추가해줌</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msg</span><br></pre></td></tr></table></figure><pre><code>&lt;email.mime.multipart.MIMEMultipart at 0x10d55d5f8&gt;</code></pre><h2 id="2-3-email-전송하기"><a href="#2-3-email-전송하기" class="headerlink" title="2.3 email 전송하기"></a>2.3 email 전송하기</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> addr <span class="keyword">in</span> toAddr:</span><br><span class="line">    msg[<span class="string">"To"</span>] = addr</span><br><span class="line">    smtp.sendmail(<span class="string">"hyeshinoh@gmail.com"</span>, addr, msg.as_string())</span><br><span class="line">        <span class="comment">#msg는 object이기 때문에 전송을 위해 .as_string()으로 문자열로 바꿔야함(parsing)</span></span><br><span class="line">    print(addr)</span><br></pre></td></tr></table></figure><pre><code>panda706@naver.comhyeshinoh+11@gmail.comhyeshinoh+h@gmail.com</code></pre><p>메일이 다음과 같이 잘 도착했다!</p><ul><li>naver메일<br><img src="https://github.com/hyeshinoh/Study_Web/blob/master/web_06_Send_Email_naver_mail_001.png?raw=true" alt></li><li>gmail<br><img src="https://github.com/hyeshinoh/Study_Web/blob/master/web_06_Send_Email_gmail_001.png?raw=true" alt></li></ul><h2 id="2-4-HTML-code-추가하기"><a href="#2-4-HTML-code-추가하기" class="headerlink" title="2.4 HTML code 추가하기"></a>2.4 HTML code 추가하기</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">part_html = MIMEText(<span class="string">'&lt;br&gt;&lt;a href="https://github.com/hyeshinoh/"&gt;hyeshin github&lt;/a&gt;'</span>, <span class="string">'html'</span>)</span><br><span class="line">msg.attach(part_html)</span><br><span class="line">msg  <span class="comment">#msg 상태: 제목, 본문(text), html 코드</span></span><br></pre></td></tr></table></figure><pre><code>&lt;email.mime.multipart.MIMEMultipart at 0x10d55d5f8&gt;</code></pre><h2 id="2-5-email-전송하기"><a href="#2-5-email-전송하기" class="headerlink" title="2.5 email 전송하기"></a>2.5 email 전송하기</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># email 전송</span></span><br><span class="line"><span class="keyword">for</span> addr <span class="keyword">in</span> toAddr:</span><br><span class="line">    msg[<span class="string">"To"</span>] = addr</span><br><span class="line">    smtp.sendmail(<span class="string">"hyeshinoh@gmail.com"</span>, addr, msg.as_string())</span><br><span class="line">    print(addr)</span><br></pre></td></tr></table></figure><pre><code>panda706@naver.comhyeshinoh+11@gmail.comhyeshinoh+h@gmail.com</code></pre><h1 id="3-Send-File"><a href="#3-Send-File" class="headerlink" title="3. Send File"></a>3. Send File</h1><p>이제 파일을 첨부해서 이메일을 보내보자</p><h2 id="3-1-Access-smtp-server"><a href="#3-1-Access-smtp-server" class="headerlink" title="3.1 Access smtp server"></a>3.1 Access smtp server</h2><p>smtp object를 다시 생성해보자.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># smtp close</span></span><br><span class="line">smtp.quit()</span><br></pre></td></tr></table></figure><pre><code>(221, b&apos;2.0.0 closing connection o68-v6sm26409410pfi.180 - gsmtp&apos;)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Access smtp server</span></span><br><span class="line">smtp = smtplib.SMTP(<span class="string">'smtp.gmail.com'</span>, <span class="number">587</span>)   <span class="comment"># 587: 서버의 포트번호</span></span><br><span class="line">smtp.ehlo()</span><br><span class="line">smtp.starttls()   </span><br><span class="line">smtp.login(<span class="string">'hyeshinoh@gmail.com'</span>, pw)</span><br></pre></td></tr></table></figure><pre><code>(235, b&apos;2.7.0 Accepted&apos;)</code></pre><h2 id="3-2-Make-message"><a href="#3-2-Make-message" class="headerlink" title="3.2 Make message"></a>3.2 Make message</h2><p>msg object를 생성하고 제목을 넣어준다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">msg = MIMEMultipart()</span><br><span class="line">msg[<span class="string">'Subject'</span>] = <span class="string">'SMTP send file 테스트'</span></span><br></pre></td></tr></table></figure><p>msg object에 본문(text msg)을 추가해준다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">part = MIMEText(<span class="string">'SMTP로 send file 본문 메시지'</span>)</span><br><span class="line">msg.attach(part)</span><br></pre></td></tr></table></figure><p>파일을 첨부해보자. 단, javascript file은 보안 상 이유로 보낼 수 없게 되어 있음</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Attach FILE</span></span><br><span class="line">path = <span class="string">'apple.mp4'</span></span><br><span class="line"><span class="comment"># ctype = 'application/octet-stream'</span></span><br><span class="line"><span class="comment"># maintype, subtype = ctype.split('/', 1)</span></span><br><span class="line"><span class="keyword">with</span> open(path, <span class="string">'rb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    part = MIMEBase(<span class="string">"application"</span>, <span class="string">"octet-stream"</span>)</span><br><span class="line">    part.set_payload(f.read())    <span class="comment">#payload: osi 7-layers</span></span><br><span class="line">    encoders.encode_base64(part)  <span class="comment">#base64 encoding: 영상, 이미지 파일을 문자열 형태로 변환</span></span><br><span class="line">    part.add_header(<span class="string">'Content-Disposition'</span>, <span class="string">'attachment'</span>, filename=path)</span><br><span class="line">    msg.attach(part)</span><br><span class="line">msg  <span class="comment"># 제목, 본문, 파일</span></span><br></pre></td></tr></table></figure><pre><code>&lt;email.mime.multipart.MIMEMultipart at 0x1159127f0&gt;</code></pre><h2 id="3-3-email-전송하기"><a href="#3-3-email-전송하기" class="headerlink" title="3.3 email 전송하기"></a>3.3 email 전송하기</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> addr <span class="keyword">in</span> toAddr:</span><br><span class="line">    msg[<span class="string">"To"</span>] = addr</span><br><span class="line">    smtp.sendmail(<span class="string">"hyeshinoh@gmail.com"</span>, addr, msg.as_string())</span><br><span class="line">    print(addr)</span><br></pre></td></tr></table></figure><pre><code>panda706@naver.comhyeshinoh+11@gmail.comhyeshinoh+h@gmail.com</code></pre><p>메일이 다음과 같이 잘 도착했다!</p><ul><li>naver메일<br><img src="https://github.com/hyeshinoh/Study_Web/blob/master/web_06_Send_Email_naver_mail_002.png?raw=true" alt></li><li>gmail<br><img src="https://github.com/hyeshinoh/Study_Web/blob/master/web_06_Send_Email_gmail_002.png?raw=true" alt></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># smtp close</span></span><br><span class="line">smtp.quit()</span><br></pre></td></tr></table></figure><pre><code>(221, b&apos;2.0.0 closing connection d22-v6sm9509327pfk.69 - gsmtp&apos;)</code></pre><h4 id="참고자료"><a href="#참고자료" class="headerlink" title="참고자료"></a>참고자료</h4><ul><li>패스트캠퍼스, ⟪데이터사이언스스쿨 8기⟫ 수업자료</li></ul>]]></content>
      
      
      <categories>
          
          <category> DataScience </category>
          
          <category> Web 웹 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> programming </tag>
            
            <tag> web </tag>
            
            <tag> email </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018-09-28-TIL</title>
      <link href="/2018/09/28/2018-09-28-TIL/"/>
      <url>/2018/09/28/2018-09-28-TIL/</url>
      
        <content type="html"><![CDATA[<h4 id="공부한-것-amp-리뷰"><a href="#공부한-것-amp-리뷰" class="headerlink" title="공부한 것 &amp; 리뷰"></a>공부한 것 &amp; 리뷰</h4><ul><li>javascript 복습 &amp; 포스팅<ul><li>함수 부분이 역시 어렵다. 콜백함수는 언제쯤 잘 이해할 수 있을까?!</li></ul></li></ul><h4 id="내일-공부할-것"><a href="#내일-공부할-것" class="headerlink" title="내일 공부할 것"></a>내일 공부할 것</h4><ul><li>web crawling 복습</li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript - Intermediate</title>
      <link href="/2018/09/28/web_05_javascript_intermediate/"/>
      <url>/2018/09/28/web_05_javascript_intermediate/</url>
      
        <content type="html"><![CDATA[<h1 id="1-Object-객체"><a href="#1-Object-객체" class="headerlink" title="1. Object(객체)"></a>1. Object(객체)</h1><ul><li>python에서 class로 만드는 객체와 같은 의미</li><li>python에서 dict type과도 같은 의미</li></ul><a id="more"></a> <h2 id="1-1-객체-생성"><a href="#1-1-객체-생성" class="headerlink" title="1.1 객체 생성"></a>1.1 객체 생성</h2><ul><li>가장 많이 쓰는 방법 (obj를 만들고 나서 값들을 하나씩 넣어줌)  </li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123;&#125;;   <span class="comment">// 다음과 동일: var obj = new Object();</span></span><br><span class="line">obj.name = <span class="string">"hyeshin"</span>;</span><br><span class="line">    <span class="comment">// obj['addr'] = "seoul" 이런식으로도 가능하긴 함(더 좋진 x)</span></span><br><span class="line">obj.math = <span class="number">92</span>;</span><br><span class="line">obj.english = <span class="number">97</span>;</span><br><span class="line">obj.science = <span class="number">85</span>;</span><br><span class="line"><span class="built_in">console</span>.log(obj);</span><br><span class="line"><span class="built_in">console</span>.log(obj.english);</span><br></pre></td></tr></table></figure><pre><code>{ name: &apos;hyeshin&apos;, math: 92, english: 97, science: 85 }97</code></pre><ul><li>다른 방법: 객체를 리터럴로 선언한다<ul><li>리터럴: 변수에 대입해주는 값  </li></ul></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj2 = &#123;</span><br><span class="line">    name: <span class="string">"Jin"</span>,      <span class="comment">// key는 ""없어도 자동으로 문자열로 들어감</span></span><br><span class="line">    addr: <span class="string">"seoul"</span>,    <span class="comment">// js는 마지막 ',' 쓰면 낮은 ie에서 오류 가능성</span></span><br><span class="line">    skill: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"coding"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;   <span class="comment">// key값은 문자열만 가능</span></span><br></pre></td></tr></table></figure><h2 id="1-2-객체-출력"><a href="#1-2-객체-출력" class="headerlink" title="1.2 객체 출력"></a>1.2 객체 출력</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> key <span class="keyword">in</span> obj2)&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(key, obj2[key]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><pre><code>name Jinaddr seoulskill function(){        console.log(&quot;coding&quot;);    }</code></pre><h2 id="1-3-객체에-함수-담기"><a href="#1-3-객체에-함수-담기" class="headerlink" title="1.3 객체에 함수 담기"></a>1.3 객체에 함수 담기</h2><ul><li>Object.keys : 객체의 키값 리스트로 가져오기</li><li>toFixed(number) : 반올림해서 number 자리수까지 출력</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> pointsObj = &#123;</span><br><span class="line">    <span class="string">'points'</span>:&#123;<span class="string">'math'</span>: <span class="number">91</span>, <span class="string">'science'</span>: <span class="number">98</span>, <span class="string">'english'</span>: <span class="number">86</span>&#125;,</span><br><span class="line">    <span class="string">'total'</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> total = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> key <span class="keyword">in</span> <span class="keyword">this</span>.points)&#123;</span><br><span class="line">            total += <span class="keyword">this</span>.points[key];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> total;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">'avg'</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>.total() / <span class="built_in">Object</span>.keys(<span class="keyword">this</span>.points).length;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(pointsObj);</span><br><span class="line"><span class="built_in">console</span>.log(pointsObj.total());</span><br><span class="line"><span class="built_in">console</span>.log(pointsObj.avg());</span><br><span class="line"><span class="built_in">console</span>.log(pointsObj.avg().toFixed(<span class="number">2</span>));</span><br></pre></td></tr></table></figure><pre><code>{ points: { math: 91, science: 98, english: 86 },      total: [Function: total],  avg: [Function: avg] }27591.6666666666666791.67</code></pre><h1 id="2-function-함수"><a href="#2-function-함수" class="headerlink" title="2. function - 함수"></a>2. function - 함수</h1><h2 id="2-1-선언-및-호출"><a href="#2-1-선언-및-호출" class="headerlink" title="2.1 선언 및 호출"></a>2.1 선언 및 호출</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sum</span>(<span class="params">a, b</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">return</span> a + b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> result = sum(<span class="number">3</span>, <span class="number">5</span>);</span><br><span class="line"><span class="built_in">console</span>.log(result);</span><br></pre></td></tr></table></figure><pre><code>8</code></pre><h2 id="2-2-함수를-변수에-담아서-선언"><a href="#2-2-함수를-변수에-담아서-선언" class="headerlink" title="2.2 함수를 변수에 담아서 선언"></a>2.2 함수를 변수에 담아서 선언</h2><ul><li>hoisting: 변수를 선언하면 해당 scope의 최상단으로 올라감  </li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> minus = <span class="function"><span class="keyword">function</span>(<span class="params">a, b</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">return</span> a - b;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> result = minus(<span class="number">3</span>, <span class="number">5</span>);</span><br><span class="line"><span class="built_in">console</span>.log(result);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> minus);</span><br></pre></td></tr></table></figure><pre><code>-2function</code></pre><h1 id="3-Scope"><a href="#3-Scope" class="headerlink" title="3. Scope"></a>3. Scope</h1><ul><li>python의 scope와 같은 개념</li><li>함수 안에서 local 변수를 var를 사용해서 선언  </li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="string">'hello'</span>;    <span class="comment">// global 변수 선언</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">disp</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> a = <span class="string">"world"</span>;  <span class="comment">// local 변수 선언</span></span><br><span class="line">  <span class="built_in">console</span>.log(a);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">disp();</span><br><span class="line"><span class="built_in">console</span>.log(a);</span><br></pre></td></tr></table></figure><pre><code>worldhello</code></pre><ul><li>var를 안 써주면 global 변수에 접근  </li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="string">'hello'</span>;    <span class="comment">// global 변수 선언</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">disp</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  a = <span class="string">"world"</span>;      <span class="comment">// global 변수에 접근</span></span><br><span class="line">  <span class="built_in">console</span>.log(a);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">disp();</span><br><span class="line"><span class="built_in">console</span>.log(a);</span><br></pre></td></tr></table></figure><pre><code>worldworld</code></pre><h1 id="4-즉시실행함수-익명함수"><a href="#4-즉시실행함수-익명함수" class="headerlink" title="4. 즉시실행함수, 익명함수"></a>4. 즉시실행함수, 익명함수</h1><ul><li>즉시실행함수: 함수를 선언함과 동시에 실행함</li><li>사용하는 이유<ul><li>javascript는 frontend 언어로 코드가 browser에 공개됨</li><li>서비스에 접속한 이용자가 전역 함수를 실행할 수 있음</li><li>이로 인해 보안에 문제가 생길 수 있으므로 모든 함수나 변수를 지역 함수/변수로 선언  </li></ul></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 아무 것도 실행되지 않음</span></span><br><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 함수를 선언하는 동시에 function 안의 코드를 실행시킴</span></span><br><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">"data"</span>);</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><pre><code>data</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">// disp함수를 즉시실행</span><br><span class="line">// disp는 지역함수가 되어 글로벌 영역에서 맘대로 쓸 수 없게 됨</span><br><span class="line">(function()&#123;</span><br><span class="line">  var name = &quot;hyeshin&quot;;</span><br><span class="line">  function disp()&#123;</span><br><span class="line">    console.log(name);</span><br><span class="line">  &#125;</span><br><span class="line">  disp();</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><pre><code>hyeshin</code></pre><p><img src="https://github.com/hyeshinoh/Study_Web/blob/master/web_05_javascript_intermediate_001.JPG?raw=true" alt></p><h1 id="5-Module-pattern"><a href="#5-Module-pattern" class="headerlink" title="5. Module pattern"></a>5. Module pattern</h1><ul><li>실제로 JavaScript에서 module을 사용하는 방법 중 하나</li><li>JavaScript는 class가 없는데 OOP로 코딩해야 함<br>(캡슐화, 추상화, 은닉화 개념 사용)</li><li>getter, setter 구현</li></ul><h2 id="5-1-모듈-객체-변수-선언"><a href="#5-1-모듈-객체-변수-선언" class="headerlink" title="5.1 모듈 객체 변수 선언"></a>5.1 모듈 객체 변수 선언</h2><ul><li>Module이라는 변수가 있으면 Module이 Module에 대입, 없으면 빈 객체를 만듦  </li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> Module = Module || &#123;&#125;;</span><br></pre></td></tr></table></figure><ul><li><p>즉시실행함수 argument로 module을 던지고 parameter로 <code>_module</code>을 받음</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params">_Module</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> _name = <span class="string">"hyeshin"</span>;   <span class="comment">// private이므로 _를 붙임</span></span><br><span class="line"></span><br><span class="line">  _Module.getName = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> _name;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  _Module.setName = <span class="function"><span class="keyword">function</span>(<span class="params">name</span>)</span>&#123;</span><br><span class="line">    _name = name;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">&#125;)(Module);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(Module.getName());</span><br><span class="line"><span class="built_in">console</span>.log(Module._name);    <span class="comment">// 접근 불가</span></span><br></pre></td></tr></table></figure><p>  hyeshin<br>  undefined</p></li></ul><p>JavaScript를 더 깊이 공부하고 싶다면(중급 수준)</p><ul><li>closure 클로져, prototype 개념을 추가적으로 공부</li><li>웹서비스 개발은 jquery를 공부하여 구현 가능할 것</li></ul><h1 id="6-callback-콜백함수"><a href="#6-callback-콜백함수" class="headerlink" title="6. callback - 콜백함수"></a>6. callback - 콜백함수</h1><ul><li>callback은 모든 언어에서 사용되는 용어</li><li>함수에서 argument로 함수를 받아서 함수 안의 코드가 다 수행된 후에 argument로 받은 함수를 수행</li><li>여기서 argument로 받은 함수를 콜백함수라고 함</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">add</span>(<span class="params">a, b, callback</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> result = a + b;</span><br><span class="line">    callback(result);<span class="comment">//callback으로 받은 함수를 마지막에 실행</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">disp</span>(<span class="params">result</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(result);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sq</span>(<span class="params">result</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(result*result);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> result = add(<span class="number">2</span>, <span class="number">3</span>, disp); </span><br><span class="line"><span class="built_in">console</span>.log(result);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> result = add(<span class="number">2</span>, <span class="number">3</span>, sq);</span><br><span class="line"><span class="built_in">console</span>.log(result);</span><br></pre></td></tr></table></figure><pre><code>5undefined25undefined</code></pre><ul><li>웹에서 비동기 통신을 할때 많이 사용됨  </li><li>api를 주고 받을 때 주로 사용<ul><li>api: request, response → 마지막으로 callback 함수를 수행<br><img src="https://github.com/hyeshinoh/Study_Web/blob/master/web_05_javascript_intermediate_002.JPG?raw=true" alt></li></ul></li></ul><h4 id="참고자료"><a href="#참고자료" class="headerlink" title="참고자료"></a>참고자료</h4><ul><li>패스트캠퍼스, ⟪데이터사이언스스쿨 8기⟫ 수업자료</li></ul>]]></content>
      
      
      <categories>
          
          <category> DataScience </category>
          
          <category> Web 웹 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> programming </tag>
            
            <tag> web </tag>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript - Basic</title>
      <link href="/2018/09/28/web_04_javascript_basic/"/>
      <url>/2018/09/28/web_04_javascript_basic/</url>
      
        <content type="html"><![CDATA[<h1 id="1-JavaScript"><a href="#1-JavaScript" class="headerlink" title="1. JavaScript"></a>1. JavaScript</h1><h2 id="1-1-JavaScript란"><a href="#1-1-JavaScript란" class="headerlink" title="1.1 JavaScript란"></a>1.1 JavaScript란</h2><ul><li>JavaScript란 객체 기반의 스크립트 프로그래밍 언어로, 웹 브라우저 내에서 주로 사용</li><li>HTML, CSS와 함께 웹을 지탱하는 계층 구조에서 많은 역할을 차지<ul><li>HTML 은 웹 페이지상에서 문단, 제목, 표, 이미지, 동영상등을 정의하고 그 구조와 의미를 부여하는 마크업 언어</li><li>CSS 는 배경색, 폰트, 컨텐츠의 레이아웃등을 지정하여, HTML 컨텐츠를 꾸며주는 스타일 규칙 언어</li><li>JavaScript 는 동적으로 컨텐츠를 바꾸고, 멀티미디어를 다루고, 움직이는 이미지등 웹 페이지를 꾸며주도록 하는 프로그래밍 언어</li><li>출처: <a href="https://developer.mozilla.org/ko/docs/Learn/JavaScript/First_steps/What_is_JavaScript" target="_blank" rel="noopener">MDN web docs</a></li></ul></li><li>JavaScript는 자유도가 높은 언어로 규칙에 조금 어긋나는 코드도 실행이됨 (error가 생길수는 있음)</li><li>javascript package 관리 매니져(npm)인 nodejs를 설치할 것</li></ul><a id="more"></a> <h1 id="2-JavaScript-Basic-Syntax"><a href="#2-JavaScript-Basic-Syntax" class="headerlink" title="2. JavaScript Basic Syntax"></a>2. JavaScript Basic Syntax</h1><ul><li>JavaScript 주석처리<ul><li>한줄 주석: <code>// code</code></li><li>여러줄 주석: <code>/* code ... */</code></li></ul></li></ul><h2 id="2-1-출력"><a href="#2-1-출력" class="headerlink" title="2.1 출력"></a>2.1 출력</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="string">"print"</span>)</span><br></pre></td></tr></table></figure><pre><code>print</code></pre><ul><li>이 외에도 여러가지 방법이 있음</li></ul><h2 id="2-2-식별자-규칙-사용하는-곳마다-차이-존재"><a href="#2-2-식별자-규칙-사용하는-곳마다-차이-존재" class="headerlink" title="2.2 식별자 규칙 (사용하는 곳마다 차이 존재)"></a>2.2 식별자 규칙 (사용하는 곳마다 차이 존재)</h2><ul><li>상수명: snake_case(대문자)</li><li>변수명: camelCase 많이 사용</li><li>모듈: PascalCase</li><li>많이 쓰이는 convention: google js style, airbnb js style 등<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> TOTAL_COUNT = <span class="number">50</span>;</span><br><span class="line"><span class="keyword">var</span> firstName = <span class="string">"Doojin"</span>,</span><br><span class="line">lastName = <span class="string">"Park"</span>;</span><br></pre></td></tr></table></figure></li></ul><h2 id="2-3-변수-선언"><a href="#2-3-변수-선언" class="headerlink" title="2.3 변수 선언"></a>2.3 변수 선언</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">var</span> b =<span class="number">2</span>;</span><br><span class="line"><span class="built_in">console</span>.log(a + b);</span><br></pre></td></tr></table></figure><pre><code>3</code></pre><h2 id="2-4-연산자"><a href="#2-4-연산자" class="headerlink" title="2.4 연산자"></a>2.4 연산자</h2><ul><li><code>+</code>, <code>-</code>, <code>*</code>, <code>/</code>, <code>%</code>, <code>++</code>, <code>--</code> (제곱이 없음)</li><li><code>++</code> &amp; <code>--</code>: 다른 언어에서도 사용되는 연산자</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">5</span>;</span><br><span class="line"><span class="keyword">var</span> result = a++;   <span class="comment">// a 가 result로 대입되고 1 증가</span></span><br><span class="line"><span class="built_in">console</span>.log(a, result);  </span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> a = <span class="number">5</span>;</span><br><span class="line"><span class="keyword">var</span> result = ++a;   <span class="comment">// a를 1 증가시키고 result에 대입</span></span><br><span class="line"><span class="built_in">console</span>.log(a, result);</span><br></pre></td></tr></table></figure><pre><code>6 5   6 6</code></pre><h2 id="2-5-데이터-타입"><a href="#2-5-데이터-타입" class="headerlink" title="2.5 데이터 타입"></a>2.5 데이터 타입</h2><ul><li>동적타이핑: 변수를 선언할 때 값에 따라 데이터 타입이 나중에 설정</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">1</span>,           <span class="comment">// number</span></span><br><span class="line">b = <span class="number">1.9</span>,             <span class="comment">// number</span></span><br><span class="line">c = <span class="string">"data"</span>,          <span class="comment">// string</span></span><br><span class="line">d = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>],         <span class="comment">// object</span></span><br><span class="line">e = &#123;<span class="string">"a"</span>:<span class="number">1</span>, <span class="string">"b"</span>:<span class="number">2</span>&#125;,  <span class="comment">// object</span></span><br><span class="line">f = <span class="literal">true</span>,            <span class="comment">// boolean</span></span><br><span class="line">g = <span class="literal">false</span>;           <span class="comment">// boolean</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> a, <span class="keyword">typeof</span> b, <span class="keyword">typeof</span> c, <span class="keyword">typeof</span> d,</span><br><span class="line">    <span class="keyword">typeof</span> e , <span class="keyword">typeof</span> f, <span class="keyword">typeof</span> g);</span><br></pre></td></tr></table></figure><pre><code>number number string object object boolean boolean</code></pre><h2 id="2-6-null-undefined-NaN"><a href="#2-6-null-undefined-NaN" class="headerlink" title="2.6 null, undefined, NaN"></a>2.6 null, undefined, NaN</h2><ul><li>null: 변수에 값이 없음을 정의</li><li>undefined: 값이 지정되지 않음</li><li>NaN: 존재하지 않는 데이터</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="literal">null</span>;</span><br><span class="line"><span class="built_in">console</span>.log(a); <span class="comment">// 값이 없음을 지정</span></span><br><span class="line"><span class="keyword">var</span> b;</span><br><span class="line"><span class="built_in">console</span>.log(b); <span class="comment">// 값이 지정되지 않음</span></span><br><span class="line"><span class="keyword">var</span> c = <span class="number">0</span>/<span class="number">0</span>;</span><br><span class="line"><span class="built_in">console</span>.log(c); <span class="comment">// 존재하지 않는 데이터 형태</span></span><br></pre></td></tr></table></figure><pre><code>nullundefinedNaN</code></pre><h3 id="※-null의-활용-GC-garbage-collector"><a href="#※-null의-활용-GC-garbage-collector" class="headerlink" title="※ null의 활용: GC(garbage collector)"></a>※ null의 활용: GC(garbage collector)</h3><p><img src="https://github.com/hyeshinoh/Study_Web/blob/master/web_04_javascript_basic_001.JPG?raw=true" alt></p><h2 id="2-7-비교-연산자-lt-gt-gt-lt"><a href="#2-7-비교-연산자-lt-gt-gt-lt" class="headerlink" title="2.7 비교 연산자: &lt;, &gt;, &gt;=, &lt;=, ==, !=, ===, !=="></a>2.7 비교 연산자: <code>&lt;</code>, <code>&gt;</code>, <code>&gt;=</code>, <code>&lt;=</code>, <code>==</code>, <code>!=</code>, <code>===</code>, <code>!==</code></h2><h3 id="1-amp-값을-비교"><a href="#1-amp-값을-비교" class="headerlink" title="1) == &amp; ===: 값을 비교"></a>1) <code>==</code> &amp; <code>===</code>: 값을 비교</h3><ul><li><code>==</code>와 <code>===</code>의 차이: <code>===</code>는 데이터타입까지 비교</li><li><code>===</code> 사용 권장</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="number">1</span>==<span class="number">1</span>); <span class="comment">// true</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="number">1</span>==<span class="string">'1'</span>); <span class="comment">// true</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="number">1</span>===<span class="number">1</span>); <span class="comment">// true</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="number">1</span>===<span class="string">'1'</span>); <span class="comment">// false</span></span><br></pre></td></tr></table></figure><pre><code>truetruetruefalse</code></pre><h3 id="2-lt-gt-lt-gt-값을-비교"><a href="#2-lt-gt-lt-gt-값을-비교" class="headerlink" title="2) !=, &lt;, &gt;, &lt;=, &gt;=: 값을 비교"></a>2) <code>!=</code>, <code>&lt;</code>, <code>&gt;</code>, <code>&lt;=</code>, <code>&gt;=</code>: 값을 비교</h3><ul><li><code>&#39;==</code> 사용시 데이터타입까지 비교</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="number">1</span>!=<span class="number">1</span>); <span class="comment">// false</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="number">1</span>!=<span class="string">'1'</span>); <span class="comment">// false</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="number">1</span>!==<span class="number">1</span>); <span class="comment">// false</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="number">1</span>!==<span class="string">'1'</span>); <span class="comment">// true</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="number">1</span>&gt;<span class="number">2</span>); <span class="comment">// fasle</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="number">1</span>&lt;<span class="number">2</span>); <span class="comment">// true</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="number">1</span>&gt;=<span class="number">1</span>); <span class="comment">// true</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="number">1</span>&lt;=<span class="number">2</span>); <span class="comment">// true</span></span><br></pre></td></tr></table></figure><pre><code>falsefalsefalsetruefalsetruetruetrue</code></pre><h3 id="3-NaN은-비교연산으로-사용되지-않음"><a href="#3-NaN은-비교연산으로-사용되지-않음" class="headerlink" title="3) NaN은 비교연산으로 사용되지 않음"></a>3) NaN은 비교연산으로 사용되지 않음</h3><ul><li>비교연산에서 어느 한쪽이 NaN이면 무조건 false</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="literal">NaN</span>===<span class="literal">NaN</span>);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="literal">NaN</span>==<span class="literal">NaN</span>);</span><br></pre></td></tr></table></figure><pre><code>falsefalse</code></pre><h2 id="2-8-할당-연산자"><a href="#2-8-할당-연산자" class="headerlink" title="2.8 할당 연산자"></a>2.8 할당 연산자</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">1</span>;</span><br><span class="line">a += <span class="number">2</span>;</span><br><span class="line"><span class="built_in">console</span>.log(a);<span class="comment">// 3</span></span><br><span class="line">a -= <span class="number">1</span>;</span><br><span class="line"><span class="built_in">console</span>.log(a);<span class="comment">// 2</span></span><br><span class="line">a *= <span class="number">6</span>;</span><br><span class="line"><span class="built_in">console</span>.log(a);<span class="comment">// 12</span></span><br><span class="line">a /= <span class="number">2</span>;</span><br><span class="line"><span class="built_in">console</span>.log(a);<span class="comment">// 6</span></span><br><span class="line">a %= <span class="number">5</span>;</span><br><span class="line"><span class="built_in">console</span>.log(a);<span class="comment">// 1</span></span><br></pre></td></tr></table></figure><pre><code>321261</code></pre><h2 id="2-9-논리-연산자"><a href="#2-9-논리-연산자" class="headerlink" title="2.9 논리 연산자"></a>2.9 논리 연산자</h2><ul><li><code>&amp;&amp;</code> : 모두 참일때 참 (and)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="literal">true</span> &amp;&amp; <span class="literal">true</span>); <span class="comment">// true</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="literal">true</span> &amp;&amp; <span class="literal">false</span>); <span class="comment">// false</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="literal">false</span> &amp;&amp; <span class="literal">false</span>); <span class="comment">// false</span></span><br></pre></td></tr></table></figure><pre><code>truefalsefalse</code></pre><ul><li><code>||</code> : 하나라도 참이면 참 (or)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="literal">true</span> || <span class="literal">true</span>); <span class="comment">// true</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="literal">true</span> || <span class="literal">false</span>); <span class="comment">// true</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="literal">false</span> || <span class="literal">false</span>); <span class="comment">// false</span></span><br></pre></td></tr></table></figure><pre><code>truetruefalse</code></pre><h1 id="3-Condition-조건문"><a href="#3-Condition-조건문" class="headerlink" title="3. Condition - 조건문"></a>3. Condition - 조건문</h1><h2 id="3-1-if-else-if-else"><a href="#3-1-if-else-if-else" class="headerlink" title="3.1 if, else if, else"></a>3.1 if, else if, else</h2><ul><li>문법: <code>if(조건){code} else if(조건){code} else{code}</code></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="literal">true</span>)&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">"hello javascript"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="literal">false</span>)&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">"hello javascript"</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">"hello datascience"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="literal">false</span>)&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">"hello javascript"</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span>(<span class="literal">true</span>)&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">"hello html"</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">"hello datascience"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><pre><code>hello javascripthello datasciencehello html</code></pre><h2 id="3-2-false로-간주되는-데이터형"><a href="#3-2-false로-간주되는-데이터형" class="headerlink" title="3.2 false로 간주되는 데이터형"></a>3.2 false로 간주되는 데이터형</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="literal">null</span> || <span class="literal">undefined</span> || <span class="literal">NaN</span> || <span class="number">0</span> || <span class="string">""</span>)&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"hello true"</span>);</span><br><span class="line">&#125; <span class="keyword">else</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"hello false"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><pre><code>hello false</code></pre><h2 id="3-3-true로-간주되는-데이터형"><a href="#3-3-true로-간주되는-데이터형" class="headerlink" title="3.3 true로 간주되는 데이터형"></a>3.3 true로 간주되는 데이터형</h2><ul><li><code>[]</code>, <code>{}</code> (비어있는 object) - 객체이기 때문<ul><li>python에서는 False였음</li></ul></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>([] &amp;&amp; &#123;&#125;)&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"hello true"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><pre><code>hello true</code></pre><h2 id="Quiz-점수를-입력하면-학점이-나오는-코드를-작성하시오"><a href="#Quiz-점수를-입력하면-학점이-나오는-코드를-작성하시오" class="headerlink" title="Quiz: 점수를 입력하면 학점이 나오는 코드를 작성하시오"></a>Quiz: 점수를 입력하면 학점이 나오는 코드를 작성하시오</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> point = <span class="number">76</span>;</span><br><span class="line"><span class="keyword">var</span> result = <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(point &gt;= <span class="number">90</span>)&#123;</span><br><span class="line">  result = <span class="string">'A'</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span>(point &gt;= <span class="number">80</span>)&#123;</span><br><span class="line">  result = <span class="string">'B'</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span>(point &gt;= <span class="number">70</span>)&#123;</span><br><span class="line">  result = <span class="string">'C'</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span>(point &gt;= <span class="number">60</span>)&#123;</span><br><span class="line">  result = <span class="string">'D'</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">  result = <span class="string">'F'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(result); <span class="comment">//'C'</span></span><br></pre></td></tr></table></figure><pre><code>C</code></pre><h1 id="4-Loop-반복문-while-for-do-while-실제로-거의-사용x"><a href="#4-Loop-반복문-while-for-do-while-실제로-거의-사용x" class="headerlink" title="4. Loop - 반복문: while, for, do while(실제로 거의 사용x)"></a>4. Loop - 반복문: while, for, do while(실제로 거의 사용x)</h1><h2 id="4-1-while"><a href="#4-1-while" class="headerlink" title="4.1 while"></a>4.1 while</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(a &lt; <span class="number">5</span>)&#123;</span><br><span class="line">    a++;</span><br><span class="line">    <span class="built_in">console</span>.log(a);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><pre><code>12345</code></pre><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(<span class="literal">true</span>)&#123;</span><br><span class="line">    a++;</span><br><span class="line">    <span class="keyword">if</span>(a === <span class="number">3</span>)&#123;</span><br><span class="line">        <span class="keyword">continue</span>;   <span class="comment">// 3은 console.log가 되지 않음</span></span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (a &gt;= <span class="number">5</span>)&#123;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="built_in">console</span>.log(a);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><pre><code>124</code></pre><h2 id="4-2-for"><a href="#4-2-for" class="headerlink" title="4.2 for"></a>4.2 for</h2><ul><li>python: iterable data 갯수만큼 반복</li><li>js: for(초기값; 조건; 증감)</li><li>in: es6에서 추가됨 (es6에 class, 화살표함수(=lambda) 등 추가)<ul><li>es6를 사용할 경우 버전이 낮은 ie에서는 제대로 동작하지 않을 수 있음    </li></ul></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)&#123;</span><br><span class="line"><span class="built_in">console</span>.log(i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><pre><code>01234</code></pre><h1 id="5-Array-배열"><a href="#5-Array-배열" class="headerlink" title="5. Array - 배열"></a>5. Array - 배열</h1><h2 id="5-1-배열-선언"><a href="#5-1-배열-선언" class="headerlink" title="5.1 배열 선언"></a>5.1 배열 선언</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>,<span class="string">'d'</span>,<span class="string">'e'</span>];</span><br></pre></td></tr></table></figure><h2 id="5-2-특정-위치-데이터-가져오기"><a href="#5-2-특정-위치-데이터-가져오기" class="headerlink" title="5.2 특정 위치 데이터 가져오기"></a>5.2 특정 위치 데이터 가져오기</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(arr[<span class="number">2</span>]);</span><br></pre></td></tr></table></figure><pre><code>c</code></pre><h2 id="5-3-배열의-크기-length"><a href="#5-3-배열의-크기-length" class="headerlink" title="5.3 배열의 크기 (length)"></a>5.3 배열의 크기 (length)</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(arr.length);</span><br></pre></td></tr></table></figure><pre><code>5</code></pre><h2 id="5-4-배열-추가"><a href="#5-4-배열-추가" class="headerlink" title="5.4 배열 추가"></a>5.4 배열 추가</h2><ul><li><code>unshift()</code>: 맨 앞에 추가 </li><li><code>push()</code>: 맨 뒤에 추가  </li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">arr.push(<span class="string">'f'</span>); </span><br><span class="line"><span class="built_in">console</span>.log(arr);</span><br><span class="line">arr.unshift(<span class="string">'z'</span>); </span><br><span class="line"><span class="built_in">console</span>.log(arr);</span><br></pre></td></tr></table></figure><pre><code>[ &apos;a&apos;, &apos;b&apos;, &apos;c&apos;, &apos;d&apos;, &apos;e&apos;, &apos;f&apos; ][ &apos;z&apos;, &apos;a&apos;, &apos;b&apos;, &apos;c&apos;, &apos;d&apos;, &apos;e&apos;, &apos;f&apos; ]</code></pre><h2 id="5-5-제거"><a href="#5-5-제거" class="headerlink" title="5.5 제거"></a>5.5 제거</h2><ul><li><code>shift()</code>: 첫번째 배열 제거</li><li><code>pop()</code>: 마지막 배열 제거   </li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">arr.shift(); </span><br><span class="line"><span class="built_in">console</span>.log(arr);</span><br><span class="line">arr.pop();</span><br><span class="line"><span class="built_in">console</span>.log(arr);</span><br></pre></td></tr></table></figure><pre><code>[ &apos;a&apos;, &apos;b&apos;, &apos;c&apos;, &apos;d&apos;, &apos;e&apos;, &apos;f&apos; ][ &apos;a&apos;, &apos;b&apos;, &apos;c&apos;, &apos;d&apos;, &apos;e&apos; ]</code></pre><h2 id="5-6-정렬"><a href="#5-6-정렬" class="headerlink" title="5.6 정렬"></a>5.6 정렬</h2><ul><li><code>reverse()</code>: 역순으로 정렬</li><li><code>sort()</code>: 오름차순으로 정렬  </li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">arr.reverse(); </span><br><span class="line"><span class="built_in">console</span>.log(arr);</span><br><span class="line">arr.sort(); </span><br><span class="line"><span class="built_in">console</span>.log(arr);</span><br></pre></td></tr></table></figure><pre><code>[ &apos;e&apos;, &apos;d&apos;, &apos;c&apos;, &apos;b&apos;, &apos;a&apos; ][ &apos;a&apos;, &apos;b&apos;, &apos;c&apos;, &apos;d&apos;, &apos;e&apos; ]</code></pre><h2 id="5-7-배열-자르기"><a href="#5-7-배열-자르기" class="headerlink" title="5.7 배열 자르기"></a>5.7 배열 자르기</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr2 = arr.splice(<span class="number">2</span>,<span class="number">3</span>); <span class="comment">// 2번에서 3개 자름</span></span><br><span class="line"><span class="built_in">console</span>.log(arr, arr.length);</span><br><span class="line"></span><br><span class="line"><span class="keyword">delete</span> arr[<span class="number">2</span>]; <span class="comment">// 2번이 삭제 하지만 데이터만 삭제, 공간은 남아있음</span></span><br><span class="line"><span class="built_in">console</span>.log(arr, arr.length);</span><br></pre></td></tr></table></figure><pre><code>[ &apos;a&apos;, &apos;b&apos; ] 2[ &apos;a&apos;, &apos;b&apos; ] 2</code></pre><h2 id="5-8-배열-데이터-하나씩-사용하기"><a href="#5-8-배열-데이터-하나씩-사용하기" class="headerlink" title="5.8 배열 데이터 하나씩 사용하기"></a>5.8 배열 데이터 하나씩 사용하기</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arr.length; i++)&#123;</span><br><span class="line"><span class="built_in">console</span>.log(arr[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><pre><code>ab</code></pre><h4 id="참고자료"><a href="#참고자료" class="headerlink" title="참고자료"></a>참고자료</h4><ul><li>패스트캠퍼스, ⟪데이터사이언스스쿨 8기⟫ 수업자료</li></ul>]]></content>
      
      
      <categories>
          
          <category> DataScience </category>
          
          <category> Web 웹 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> programming </tag>
            
            <tag> web </tag>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018-09-27-TIL (9/19 ~ 9/27)</title>
      <link href="/2018/09/27/2018-09-27-TIL/"/>
      <url>/2018/09/27/2018-09-27-TIL/</url>
      
        <content type="html"><![CDATA[<p>추석 연휴를 끼면서 그 동안 또 밀렸던 TIL ㅎㅎ</p><h4 id="공부한-것-amp-리뷰"><a href="#공부한-것-amp-리뷰" class="headerlink" title="공부한 것 &amp; 리뷰"></a>공부한 것 &amp; 리뷰</h4><ul><li>첫번째 기술면접!<ul><li>면접관들이 나의 맥북 화면을 tv 중계처럼 지켜보는 가운데 실시한 나의 첫번째 기술면접. 공부와 연습을 많이 해야겠다고 느끼게 되었다 ㅜ </li></ul></li><li>패스트캠퍼스 모의면접3<ul><li>첫 모의면접보다는 나아졌다는 평가를 들었지만 역시 ‘왜 이 회사인가’, ‘데이터사이언티스트가 되어 뭘 하고 싶은가’와 같은 질문에 대해 더 어필을 하고 열정을 보여줘야한다는 피드백을 들었다. 특히 데이터 사이언티스트로서 그리는 나의 미래 같은 질문은 나에겐 너무 어려운 것 ㅜ </li></ul></li><li>web 복습<ul><li>html과 css selector 복습은 해도 해도 헷갈리는 것 같다 ㅎㅎㅎ </li></ul></li></ul><h4 id="내일-공부할-것"><a href="#내일-공부할-것" class="headerlink" title="내일 공부할 것"></a>내일 공부할 것</h4><ul><li>java script 복습</li><li>web crawling 복습</li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS Selector</title>
      <link href="/2018/09/27/web_03_CSS_selector/"/>
      <url>/2018/09/27/web_03_CSS_selector/</url>
      
        <content type="html"><![CDATA[<h2 id="1-CSS"><a href="#1-CSS" class="headerlink" title="1. CSS"></a>1. CSS</h2><h3 id="1-1-CSS란"><a href="#1-1-CSS란" class="headerlink" title="1.1 CSS란"></a>1.1 CSS란</h3><ul><li>CSS는 Cascading Style Sheets의 약자로, HTML, XHTML, XML 같은 문서의 스타일을 꾸밀 때 사용하는 스타일 시트 언어</li><li>글꼴이나 배경색, 너비와 높이, 위치 등을 지정할 수 있음</li><li>웹브라우저, 스크린 크기, 장치에 따라서 화면을 다르게 표시될 수 있도록 지정할 수 있음</li><li>문서의 내용과 표현을 분리하며 CSS 파일만 수정하면 스타일에 해당하는 HTML 문서가 한 번에 수정되는 장점이 있음</li></ul><a id="more"></a> <h3 id="1-2-CSS-작성법"><a href="#1-2-CSS-작성법" class="headerlink" title="1.2 CSS 작성법"></a>1.2 CSS 작성법</h3><ul><li>html 문서의 <code>&lt;head&gt;&lt;style&gt;</code> <code>&lt;/style&gt;&lt;/head&gt;</code> 안에 작성 </li><li><code>선택자 {속성:속성값; 속성:속성값;}</code></li><li>web crawling을 위해서는 CSS selector(선택자)를 이해해야 함</li></ul><h3 id="1-3-Selector"><a href="#1-3-Selector" class="headerlink" title="1.3 Selector"></a>1.3 Selector</h3><ul><li><code>#id</code>, <code>.class</code>, <code>tag-name</code> 세 가지를 주로 이용해서 select, 속성값으로도 select 가능</li><li>css 속성을 추가하기 위해 특정 element를 선택할 때 사용</li><li><p>div element를 select하기</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">div&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>p element의 ds1 클래스를 select하기</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">p.ds1&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>한칸 띄우면 하위 element, 붙여쓰면 둘다 해당 element</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">p.ds1.ds&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="2-id-Selector"><a href="#2-id-Selector" class="headerlink" title="2. id Selector"></a>2. id Selector</h2><ul><li>id를 select하기 위해서 <code>#아이디이름</code>을 사용</li><li>id로 ds1, ds2를 select하여 style 적용하기<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">    #ds1&#123;</span></span><br><span class="line"><span class="undefined">    font-size: 32px;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">    #ds1, #ds2&#123;</span></span><br><span class="line"><span class="undefined">    color: red;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- emmet: p#ds$&#123;ds$&#125;*2 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"ds1"</span>&gt;</span>ds1<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"ds2"</span>&gt;</span>ds2<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="3-Class-Selector"><a href="#3-Class-Selector" class="headerlink" title="3. Class Selector"></a>3. Class Selector</h2><ul><li>class select 위해 <code>.클래스이름</code>을 사용</li><li><code>.class</code>로 select하여 style 적용하기<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">    .ds&#123;</span></span><br><span class="line"><span class="undefined">    font-size: 15px;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">    .ds3, .ds4&#123;</span></span><br><span class="line"><span class="undefined">    font-weight: bold;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">    .science&#123;</span></span><br><span class="line"><span class="undefined">    color: blue;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- span.ds.ds$&#123;a$&#125;*5 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"ds ds1"</span>&gt;</span>a1<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"ds ds2"</span>&gt;</span>a2<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"ds ds3"</span>&gt;</span>a3<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"ds ds4"</span>&gt;</span>a4<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"ds ds5"</span>&gt;</span>a5<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"ds ds1 data"</span>&gt;</span>b1<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"ds ds2 data"</span>&gt;</span>b2<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"ds ds3 science"</span>&gt;</span>b3<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"ds ds4 science"</span>&gt;</span>b4<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"ds ds5 science"</span>&gt;</span>b5<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="4-not"><a href="#4-not" class="headerlink" title="4. not"></a>4. not</h2><ul><li>특정 element를 빼고 싶을 때 사용<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">    .d:not(.ds2)&#123;</span></span><br><span class="line"><span class="undefined">    background-color: yellow;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- span.ds.ds$&#123;a$&#125;*5 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"d ds1"</span>&gt;</span>a1<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"d ds2"</span>&gt;</span>a2<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"d ds3"</span>&gt;</span>a3<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"d ds4"</span>&gt;</span>a4<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"d ds5"</span>&gt;</span>a5<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"d ds1 data"</span>&gt;</span>b1<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"d ds2 data"</span>&gt;</span>b2<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"d ds3 science"</span>&gt;</span>b3<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"d ds4 science"</span>&gt;</span>b4<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"d ds5 science"</span>&gt;</span>b5<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="5-first-child-last-child-nth-child"><a href="#5-first-child-last-child-nth-child" class="headerlink" title="5. first-child, last-child, nth-child"></a>5. first-child, last-child, nth-child</h2><ul><li>body, div, p 등등의 element로 감싸져있는 element의 n번째 element가 설정한 css selector와 맞으면 css가 적용</li><li>아래의 본문에 스타일을 적용한다고 가정<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"sc"</span> <span class="attr">id</span>=<span class="string">"ds1"</span>&gt;</span>class: sc | id: ds1<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"sc"</span> <span class="attr">id</span>=<span class="string">"ds2"</span>&gt;</span>class: sc | id: ds2<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"dsc"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"ds ds1"</span>&gt;</span>ds1<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"ds ds2"</span>&gt;</span>ds2<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"ds ds3"</span>&gt;</span>ds3<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"ds ds4"</span>&gt;</span>ds4<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"ds ds5"</span>&gt;</span>ds5<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"contents"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>inner1<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"txt"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h1</span>&gt;</span>inner2<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h1</span>&gt;</span>inner3<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>inner4<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"ts"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>Span1<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>Span2<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="5-1-first-child"><a href="#5-1-first-child" class="headerlink" title="5.1 first-child"></a>5.1 first-child</h3><ul><li><p>가장 앞에 있는 element를 선택할 때 사용</p><h4 id="example-1"><a href="#example-1" class="headerlink" title="example 1"></a>example 1</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.ds:first-child &#123;</span><br><span class="line">color: blue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>body의 first element는 <code>.sc</code> 이기 때문에 <code>.ds</code>와 같지 않으므로 css가 적용되지 않음</p></li><li>ds 클래스 element를 div로 묶어준 부분은 div의 첫번째 엘리먼트가 <code>.ds</code>가 맞으므로 css가 적용됨</li></ul><h4 id="example-2"><a href="#example-2" class="headerlink" title="example 2"></a>example 2</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.sc:first-child &#123;</span><br><span class="line">color: green;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>body의 first elememt로 <code>.sc</code>가 있으므로 green이 적용</li></ul><h4 id="example-3"><a href="#example-3" class="headerlink" title="example 3"></a>example 3</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">h1:first-child &#123;</span><br><span class="line">color: brown;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>div의 first element로 tag가 h1인 엘리먼트가 inner1, inner2, inner4이므로 3개의 element에 css가 적용</li></ul><h4 id="example-4"><a href="#example-4" class="headerlink" title="example 4"></a>example 4</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">span:first-child&#123;</span><br><span class="line">color: purple;</span><br><span class="line">font-weight: bold;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>p안에 first element로 span element가 있으므로 css 적용</li></ul><h3 id="5-2-last-child"><a href="#5-2-last-child" class="headerlink" title="5.2 last-child"></a>5.2 last-child</h3><ul><li>가장 마지막에 있는 element를 선택할 때 사용</li></ul><h4 id="example"><a href="#example" class="headerlink" title="example"></a>example</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.ds:last-child &#123;</span><br><span class="line">color: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>body의 last element로 <code>.ds</code>가 없고, div의 last element로 <code>.ds</code>가 없으므로 css가 적용되지 않음</li><li>div의 last element에는 <code>.ds</code>가 있으므로 css가 적용</li></ul><h3 id="5-3-nth-child"><a href="#5-3-nth-child" class="headerlink" title="5.3 nth-child"></a>5.3 nth-child</h3><ul><li>n번째에 있는 element를 선택할 때 사용</li></ul><h4 id="example-1"><a href="#example-1" class="headerlink" title="example"></a>example</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.ds:nth-child(3), .ds:nth-child(4)&#123;</span><br><span class="line">color: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>div의 3rd, 4th element로 <code>.ds</code>가 있으므로 “ds3”, “ds4”에 css가 적용</li></ul><h2 id="6-depth"><a href="#6-depth" class="headerlink" title="6. depth"></a>6. depth</h2><ul><li>element의 level, 깊이를 선택</li><li>공백문자: 하위 element를 모두 select</li><li><code>&gt;</code>: 바로 아래 depth에 대한 element만 select</li><li>tagname은 아무것도 붙이지 않고 쓰면 select할 수 있음</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">    .contents h1&#123;</span></span><br><span class="line"><span class="undefined">    color: red;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">    .contents &gt; h1&#123;</span></span><br><span class="line"><span class="undefined">    font-size: 16px;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">    /*body &gt; div &gt; h1&#123;</span></span><br><span class="line"><span class="undefined">    color: yellow;</span></span><br><span class="line"><span class="undefined">    &#125;*/</span></span><br><span class="line"><span class="undefined">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"contents"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>inner1<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"txt"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>inner2<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="참고자료"><a href="#참고자료" class="headerlink" title="참고자료"></a>참고자료</h4><ul><li>패스트캠퍼스, ⟪데이터사이언스스쿨 8기⟫ 수업자료</li></ul>]]></content>
      
      
      <categories>
          
          <category> DataScience </category>
          
          <category> Web 웹 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> programming </tag>
            
            <tag> web </tag>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML Layout</title>
      <link href="/2018/09/26/web_02_html_02_layout/"/>
      <url>/2018/09/26/web_02_html_02_layout/</url>
      
        <content type="html"><![CDATA[<h2 id="1-div"><a href="#1-div" class="headerlink" title="1. div"></a>1. div</h2><ul><li>레이아웃을 잡아줄 때 사용, 가장 많이 쓰이는 element</li></ul><a id="more"></a> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--emmet: div&#123;div$&#125;*3 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"width:500px; height:200px; background-color: grey;"</span>&gt;</span>div1</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>div1<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>div2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>div3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>적용시 아래와 같이 나타납니다.</p><blockquote><div style="width:500px; height:200px; background-color: grey;">div1<br>   <p>div1</p><br></div><br><div>div2</div><br><div>div3</div></blockquote><h2 id="2-table"><a href="#2-table" class="headerlink" title="2. table"></a>2. table</h2><ul><li>row &amp; column이 있는 table 모양을 나타낼 때 사용하는 element</li><li><p>사용하는 태그</p><ul><li>table: 표 생성</li><li>caption: 표 제목 생성</li><li>tr: row 생성</li><li>th: column 이름이 들어가는 셀 생성</li><li>td: 내용이 들어가는 셀 생성</li><li>각 열의 의미에 따라 thead, tbody, tfoot 태그로 구분</li><li>colspan 속성: 가로로 셀을 합칠 때 사용 (e.g.<code>colspan=&quot;2&quot;</code>)</li><li>rowspan 속성: 세로로 셀을 합칠 때 사용 (e.g.<code>rowspan=&quot;2&quot;</code>)</li></ul></li><li><p>emmet 문법</p><ul><li><code>+</code>: 동일한 레벨로 element 생성</li><li><code>&gt;</code>: 하위 레벨에 생성</li><li><code>^</code>: 상위 depth로 한 단계 올라감</li><li><code>@</code>: $ 쓸 때 초기값 설정</li></ul></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">table&gt;caption&#123;table title&#125;+thead&gt;tr&gt;th&#123;col$&#125;*4^^tbody&gt;tr&gt;td&#123;value$@3&#125;*4 --&gt;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">caption</span>&gt;</span>table title<span class="tag">&lt;/<span class="name">caption</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">th</span>&gt;</span>col1<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">th</span>&gt;</span>col2<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">th</span>&gt;</span>col3<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">th</span>&gt;</span>col4<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>value3<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>value4<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>value5<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>value6<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><p>적용시 아래와 같이 나타납니다.</p><table><br>  <caption>table title</caption><br>  <thead><br>    <tr><br>      <th>col1</th><br>      <th>col2</th><br>      <th>col3</th><br>      <th>col4</th><br>    </tr><br>  </thead><br>  <tbody><br>    <tr><br>      <td>value3</td><br>      <td>value4</td><br>      <td>value5</td><br>      <td>value6</td><br>    </tr><br>  </tbody><br></table><h2 id="3-ul-li"><a href="#3-ul-li" class="headerlink" title="3. ul, li"></a>3. ul, li</h2><ul><li>list element</li><li>크롤링할 때 많이 보게 될 태그</li><li>emmet 문법: <code>ul&gt;li{ul_li_$}*3</code><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>ul_li_1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>ul_li_2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>ul_li_3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><p>적용시 아래와 같이 나타납니다.</p><ul><br>    <li>ul_li_1</li><br>    <li>ul_li_2</li><br>    <li>ul_li_3</li><br></ul><h2 id="4-a"><a href="#4-a" class="headerlink" title="4. a"></a>4. a</h2><ul><li>link element</li><li>href 속성에 url을 넣습니다</li><li>link도 크롤링의 대상으로 많이 사용됨</li><li><p>상대경로도 사용 가능</p><ul><li>e.g. <code>&lt;a href=&quot;01_html_basic.html&quot;&gt;html_basic&lt;/a&gt;&lt;br&gt;</code></li></ul></li><li><p><code>target=&quot;_blank&quot;</code> 속성을 넣어주면 새 탭을 띄워서 이동</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://google.com"</span>&gt;</span>Google<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://naver.com"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>Naver<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br></pre></td></tr></table></figure><p>적용시 아래와 같이 나타납니다.<br><a href="http://google.com" target="_blank" rel="noopener">Google</a><br><a href="http://naver.com" target="_blank">Naver</a></p><h2 id="5-image"><a href="#5-image" class="headerlink" title="5. image"></a>5. image</h2><ul><li>src 속성: url을 넣음</li><li>style 속성: size를 지정해줄 수 있음 (e.g. <code>style=&quot;width:200px;&quot;</code>)</li><li>alt 속성: 이미지가 없을 경우 뜨는 문자 (어떤 이미지인지 알려줄 수 있음) (alt 속성은 꼭 넣어야 함)</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">style</span>=<span class="string">"width:200px;"</span> <span class="attr">src</span>=<span class="string">"http://cdn.www.fastcampus.co.kr/wp-content/uploads/2017/11/fastcampus_logo_positive-1.png"</span> <span class="attr">alt</span>=<span class="string">"패스트캠퍼스"</span>&gt;</span></span><br></pre></td></tr></table></figure><p>적용시 아래와 같이 나타납니다.<br><img style="width:200px;" src="http://cdn.www.fastcampus.co.kr/wp-content/uploads/2017/11/fastcampus_logo_positive-1.png" alt="패스트캠퍼스"></p><h2 id="6-iframe"><a href="#6-iframe" class="headerlink" title="6. iframe"></a>6. iframe</h2><ul><li>외부 url 링크 페이지를 보여주기 위한 element</li><li>중고나라 네이버 카페 등에서 크롤링할 경우 필요<ul><li>iframe 안으로 들어가서 element를 선택해서 데이터를 가져와야 함<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">"https://hyeshinoh.github.io/"</span> <span class="attr">width</span>=<span class="string">"600"</span> <span class="attr">height</span>=<span class="string">"400"</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><p>적용시 아래와 같이 나타납니다.</p><iframe src="https://hyeshinoh.github.io/" width="600" height="400"></iframe><h2 id="7-입력-input-text-password-radio-checkbox"><a href="#7-입력-input-text-password-radio-checkbox" class="headerlink" title="7. 입력(input) : text, password, radio, checkbox"></a>7. 입력(input) : text, password, radio, checkbox</h2><ul><li>크롤링할 때, 로그인을 하고 나서 이동한 페이지를 크롤링할 시 이용 가능</li></ul><h3 id="7-1-text-password"><a href="#7-1-text-password" class="headerlink" title="7.1 text, password"></a>7.1 text, password</h3><ul><li>placeholder 속성: 어떤 정보를 넣는지 알려줌<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">value</span>=<span class="string">""</span> <span class="attr">placeholder</span>=<span class="string">"이메일"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">value</span>=<span class="string">""</span> <span class="attr">placeholder</span>=<span class="string">"패스워드"</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><p>적용시 아래와 같이 나타납니다.</p><input type="text" name value placeholder="이메일"><br><input type="password" name value placeholder="패스워드"><br><br><br><span><h3>7.2 radio: 여러개 중에 선택하는 박스</h3></span><br><ul><br>  <span><li>버튼은 name 속성의 값으로 그룹핑 (그룹핑되면 그 중에 택1하게 만들어짐)</li></span><br>  <span><li>요즘에 웹 개발에선 많이 사용되지는 않음</li></span><br></ul><br><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"radio_1"</span> <span class="attr">value</span>=<span class="string">"b1"</span>&gt;</span>버튼1<span class="tag">&lt;/<span class="name">input</span>&gt;</span>    </span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"radio_1"</span> <span class="attr">value</span>=<span class="string">"b2"</span>&gt;</span>버튼2<span class="tag">&lt;/<span class="name">input</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"radio_2"</span> <span class="attr">value</span>=<span class="string">"b3"</span>&gt;</span>버튼3<span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"radio_2"</span> <span class="attr">value</span>=<span class="string">"b3"</span>&gt;</span>버튼4<span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"radio_2"</span> <span class="attr">value</span>=<span class="string">"b5"</span>&gt;</span>버튼5<span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br></pre></td></tr></table></figure><br><br>적용시 아래와 같이 나타납니다.<br><input type="radio" name="radio_1" value="b1">버튼1<br><input type="radio" name="radio_1" value="b2">버튼2<br><br><br><input type="radio" name="radio_2" value="b3">버튼3<br><input type="radio" name="radio_2" value="b3">버튼4<br><input type="radio" name="radio_2" value="b5">버튼5<h3 id="7-3-checkbox-해당사항을-체크하는-박스"><a href="#7-3-checkbox-해당사항을-체크하는-박스" class="headerlink" title="7.3 checkbox: 해당사항을 체크하는 박스"></a>7.3 checkbox: 해당사항을 체크하는 박스</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">value</span>=<span class="string">"c1"</span>&gt;</span> 체크박스1<span class="tag">&lt;/<span class="name">input</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">value</span>=<span class="string">"c2"</span>&gt;</span> 체크박스2<span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br></pre></td></tr></table></figure><p>적용시 아래와 같이 나타납니다.</p><input type="checkbox" name value="c1"> 체크박스1<br><input type="checkbox" name value="c2"> 체크박스2<h2 id="8-textarea"><a href="#8-textarea" class="headerlink" title="8. textarea"></a>8. textarea</h2><ul><li>여러줄을 입력받는 element</li><li>inputtext와 달리 여러줄을 입력할 수 있음</li><li><code>style=&quot;resize:none;&quot;</code>을 넣어주면 크기가 고정됨<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">"name"</span> <span class="attr">cols</span>=<span class="string">"30"</span> <span class="attr">rows</span>=<span class="string">"10"</span> <span class="attr">style</span>=<span class="string">"resize:none;"</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><p>적용시 아래와 같이 나타납니다.</p><textarea name="name" cols="30" rows="10" style="resize:none;"></textarea><h2 id="9-select-option"><a href="#9-select-option" class="headerlink" title="9. select, option"></a>9. select, option</h2><ul><li>option 선택할 수 있는 dropdown element<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"1"</span>&gt;</span>option 1<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"2"</span>&gt;</span>option 2<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"3"</span>&gt;</span>option 3<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- select&gt;option[value=$][style=color:red]&#123;option $&#125;*3 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">id</span>=<span class="string">""</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"1"</span> <span class="attr">style</span>=<span class="string">"color:red"</span>&gt;</span>option 1<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"2"</span> <span class="attr">style</span>=<span class="string">"color:red"</span>&gt;</span>option 2<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"3"</span> <span class="attr">style</span>=<span class="string">"color:red"</span>&gt;</span>option 3<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><p>적용시 아래와 같이 나타납니다.</p><select><br>    <option value="1">option 1</option><br>    <option value="2">option 2</option><br>    <option value="3">option 3</option><br></select><br><br><!-- select>option[value=$][style=color:red]{option $}*3 --><br><select name id><br>    <option value="1" style="color:red">option 1</option><br>    <option value="2" style="color:red">option 2</option><br>    <option value="3" style="color:red">option 3</option><br></select><h2 id="10-button"><a href="#10-button" class="headerlink" title="10. button"></a>10. button</h2><ul><li>onclick 속성: 클릭했을 때 event. javascript 코드를 넣어줄 수 있음<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">name</span>=<span class="string">"button"</span> <span class="attr">onclick</span>=<span class="string">"javascript:(alert('alert msg'))"</span>&gt;</span>Click<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">name</span>=<span class="string">"button"</span> <span class="attr">onclick</span>=<span class="string">"javascript:(location.href = 'http://naver.com')"</span>&gt;</span>네이버로 이동<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><p>적용시 아래와 같이 나타납니다.</p><button type="button" name="button" onclick="javascript:(alert('alert msg'))">Click</button><br><button type="button" name="button" onclick="javascript:(location.href='http://naver.com')">네이버로 이동</button><h4 id="참고자료"><a href="#참고자료" class="headerlink" title="참고자료"></a>참고자료</h4><ul><li>패스트캠퍼스, ⟪데이터사이언스스쿨 8기⟫ 수업자료</li></ul>]]></content>
      
      
      <categories>
          
          <category> DataScience </category>
          
          <category> Web 웹 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> programming </tag>
            
            <tag> web </tag>
            
            <tag> html </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML Basic</title>
      <link href="/2018/09/26/web_01_html_01_basic/"/>
      <url>/2018/09/26/web_01_html_01_basic/</url>
      
        <content type="html"><![CDATA[<h2 id="1-HTML이란"><a href="#1-HTML이란" class="headerlink" title="1. HTML이란"></a>1. HTML이란</h2><h3 id="1-1-HTML의-개념"><a href="#1-1-HTML의-개념" class="headerlink" title="1.1 HTML의 개념"></a>1.1 HTML의 개념</h3><ul><li>HTML은 Hyper text Markup Language의 약자로, 월드와이드웹 문서를 작성하는 Markup Language</li><li>Markup Language: 시작과 종료태그가 있는 language (대표적 예: XML)</li><li>HTML은 여러 태그들로 구성되어 있으며 각 태그들을 사용하여 원하는 형태의 문서를 만들어갈 수 있음</li></ul><a id="more"></a> <h3 id="1-2-HTML의-구성요소"><a href="#1-2-HTML의-구성요소" class="headerlink" title="1.2 HTML의 구성요소"></a>1.2 HTML의 구성요소</h3><p>(1) elements(요소): 시작태그와 종료태그로 이루어진 코드<br>(2) Tag(태그): 요소의 일부로 <code>&lt;div&gt;</code>, <code>&lt;p&gt;</code> 등, 시작태그와 종료태그가 있음<br>(3) Attribute(속성): 태그 안에 키와 값으로 이루어진 코드</p><h2 id="2-HTML-elements"><a href="#2-HTML-elements" class="headerlink" title="2. HTML elements"></a>2. HTML elements</h2><h3 id="2-1-Head-타이틀을-표현하기-위한-element"><a href="#2-1-Head-타이틀을-표현하기-위한-element" class="headerlink" title="2.1 Head: 타이틀을 표현하기 위한 element"></a>2.1 Head: 타이틀을 표현하기 위한 element</h3><ul><li>h1~h6로 여섯단계가 표현 가능</li><li>emmet 문법: <code>h${$단계 제목}*6</code></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>1단계 제목<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>2단계 제목<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>3단계 제목<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h4</span>&gt;</span>4단계 제목<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h5</span>&gt;</span>5단계 제목<span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h6</span>&gt;</span>6단계 제목<span class="tag">&lt;/<span class="name">h6</span>&gt;</span></span><br></pre></td></tr></table></figure><p>적용시 아래와 같이 나타납니다.</p><blockquote><p></p><h1>1단계 제목</h1><p></p><p></p><h2>2단계 제목</h2><p></p><p></p><h3>3단계 제목</h3><p></p><p></p><h4>4단계 제목</h4><p></p><p></p><h5>5단계 제목</h5><p></p><h6>6단계 제목</h6></blockquote><h3 id="2-2-p"><a href="#2-2-p" class="headerlink" title="2.2 p"></a>2.2 p</h3><ul><li>paragraph의 약자로 문단을 분리하기 위한 태그</li><li>emmet 문법: <code>p{p_tag_$}*3</code></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>p_tag_1<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>p_tag_2<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>p_tag_3<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>적용시 아래와 같이 나타납니다.</p><blockquote><p>p_tag_1</p><br><p>p_tag_2</p><br><p>p_tag_3</p></blockquote><h3 id="2-3-span"><a href="#2-3-span" class="headerlink" title="2.3 span"></a>2.3 span</h3><ul><li>영역을 설정하는 태그로 div 태그처럼 주로 CSS와 함께 쓰임</li><li>div와 달리 줄바꿈이 되지 않고, 문장 단위로 지정(inline 속성)</li><li>emmet 문법: <code>span{span_tag_$}*3</code></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>span_tag_1<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>span_tag_2<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>span_tag_3<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><p>적용시 아래와 같이 나타납니다.</p><blockquote><p><span>span_tag_1</span><br><span>span_tag_2</span><br><span>span_tag_3</span></p></blockquote><h3 id="2-4-pre"><a href="#2-4-pre" class="headerlink" title="2.4. pre"></a>2.4. pre</h3><ul><li>preformatted text의 약자로, 입력한 그대로 화면 출력하는 태그</li><li>줄바꿈이나 띄어쓰기가 그대로 적용되는 element</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">    python</span><br><span class="line">    data</span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">pre</span>&gt;</span></span><br><span class="line">    python</span><br><span class="line">    data</span><br><span class="line"><span class="tag">&lt;/<span class="name">pre</span>&gt;</span></span><br></pre></td></tr></table></figure><p>적용시 아래와 같이 나타납니다. </p><blockquote><p></p><p><br>   python<br>   data<br></p><p></p><pre>   python   data</pre></blockquote><h3 id="2-5-글씨체"><a href="#2-5-글씨체" class="headerlink" title="2.5 글씨체"></a>2.5 글씨체</h3><ul><li>b, strong(굵은글씨)</li><li>i,em(이탤릭체)</li><li>sup,sub(윗첨자, 아래첨자)</li><li>small(작은 글씨)</li><li>mark(배경이 노랑색)</li><li>del(삭제문자열 - 가로줄)</li><li>ins(언더라인 문자열)</li><li>code(코드 문자열)</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>굵은글씨: <span class="tag">&lt;<span class="name">b</span>&gt;</span>굵은글씨<span class="tag">&lt;/<span class="name">b</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>굵은글씨: <span class="tag">&lt;<span class="name">strong</span>&gt;</span>굵은글씨<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>이탤릭체: <span class="tag">&lt;<span class="name">i</span>&gt;</span>이탤릭체<span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>이탤릭체: <span class="tag">&lt;<span class="name">em</span>&gt;</span>이탤릭체<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>윗첨자: <span class="tag">&lt;<span class="name">sup</span>&gt;</span>윗첨자<span class="tag">&lt;/<span class="name">sup</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>아래첨자: <span class="tag">&lt;<span class="name">sub</span>&gt;</span>아래첨자<span class="tag">&lt;/<span class="name">sub</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>작은글씨: <span class="tag">&lt;<span class="name">small</span>&gt;</span>작은글씨<span class="tag">&lt;/<span class="name">small</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>글자배경이 <span class="tag">&lt;<span class="name">mark</span>&gt;</span>노란색<span class="tag">&lt;/<span class="name">mark</span>&gt;</span> 입니다<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>문자열 <span class="tag">&lt;<span class="name">del</span>&gt;</span>삭제<span class="tag">&lt;/<span class="name">del</span>&gt;</span>입니다<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>문자열 <span class="tag">&lt;<span class="name">ins</span>&gt;</span>언더라인<span class="tag">&lt;/<span class="name">ins</span>&gt;</span>입니다<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>코드: <span class="tag">&lt;<span class="name">code</span>&gt;</span>code<span class="tag">&lt;/<span class="name">code</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><p>적용시 아래와 같이 나타납니다.</p><blockquote><p><span>굵은글씨: <b>굵은글씨</b></span><br><span>굵은글씨: <strong>굵은글씨</strong></span></p><p><span>이탤릭체: <i>이탤릭체</i></span><br><span>이탤릭체: <em>이탤릭체</em></span></p><p><span>윗첨자: <sup>윗첨자</sup></span><br><span>아래첨자: <sub>아래첨자</sub></span><br><span>작은글씨: <small>작은글씨</small></span></p><p><span>글자배경이 <mark>노란색</mark> 입니다</span><br><span>문자열 <del>삭제</del>입니다</span><br><span>문자열 <ins>언더라인</ins>입니다</span></p><p><span>코드: <code>code</code></span></p></blockquote><h4 id="참고자료"><a href="#참고자료" class="headerlink" title="참고자료"></a>참고자료</h4><ul><li>패스트캠퍼스, ⟪데이터사이언스스쿨 8기⟫ 수업자료</li></ul>]]></content>
      
      
      <categories>
          
          <category> DataScience </category>
          
          <category> Web 웹 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> programming </tag>
            
            <tag> web </tag>
            
            <tag> html </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018-09-18-TIL (9/7 ~ 9/18)</title>
      <link href="/2018/09/18/2018-09-18-TIL/"/>
      <url>/2018/09/18/2018-09-18-TIL/</url>
      
        <content type="html"><![CDATA[<p>지난 주 프로젝트 마무리와 블라디보스톡 여행 등으로 밀렸던 TIL 다시 시작!</p><h4 id="공부한-것-amp-리뷰"><a href="#공부한-것-amp-리뷰" class="headerlink" title="공부한 것 &amp; 리뷰"></a>공부한 것 &amp; 리뷰</h4><ul><li>팀 프로젝트: 블레이드앤소울 유저 이탈 예측 (빅콘테스트2018)<ul><li>열흘 정도 기간 동안 시간 맞는 팀원들이 계속 모여 feature engineering, EDA, model을 정리하고 결과 보고서 자료 등을 만들어 14일에 드디어 결과 제출!</li><li>분류 성능은 f1-score 73% 정도가 예상되는데 살짝 아쉬운 수준이지만, 결과를 제대로 끝까지 만들어 낸 첫 프로젝트로 좋은 경험을 한 것 같다. </li></ul></li><li>패스트 캠퍼스 하이어링 데이를 출발로 job seeking 프로세스 시작<ul><li>인터뷰가 조금씩 잡히고 있는데, 빅콘테스트 프로젝트 결과도 잘 정리해두고, 데이터사이언스스쿨에서 배운 내용도 잘 복습해야겠다.  </li></ul></li></ul><h4 id="내일-공부할-것"><a href="#내일-공부할-것" class="headerlink" title="내일 공부할 것"></a>내일 공부할 것</h4><ul><li>기술 면접 예정</li><li>패스트캠퍼스 모의 면접 준비</li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018-09-06-TIL</title>
      <link href="/2018/09/06/2018-09-06-TIL/"/>
      <url>/2018/09/06/2018-09-06-TIL/</url>
      
        <content type="html"><![CDATA[<h4 id="공부한-것-amp-리뷰"><a href="#공부한-것-amp-리뷰" class="headerlink" title="공부한 것 &amp; 리뷰"></a>공부한 것 &amp; 리뷰</h4><ul><li>팀 프로젝트: 블레이드앤소울 유저 이탈 예측 (빅콘테스트2018)<ul><li>party data feature engineering</li></ul></li><li>이력서 정리: 검토 후 내일 하이어링데이 용 하드카피 출력, wanted 업데이트</li><li>CNN 강의 복습</li></ul><h4 id="내일-공부할-것"><a href="#내일-공부할-것" class="headerlink" title="내일 공부할 것"></a>내일 공부할 것</h4><ul><li>팀 프로젝트: 블레이드앤소울 유저 이탈 예측 (빅콘테스트2018)<ul><li>party network 분석, feature engineering</li><li>keras 신경망 모델링</li></ul></li><li>이력서 정리</li><li>개인 프로젝트: image augmentation 후 CNN 모델링</li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018-09-05-TIL</title>
      <link href="/2018/09/06/2018-09-05-TIL/"/>
      <url>/2018/09/06/2018-09-05-TIL/</url>
      
        <content type="html"><![CDATA[<h4 id="공부한-것-amp-리뷰"><a href="#공부한-것-amp-리뷰" class="headerlink" title="공부한 것 &amp; 리뷰"></a>공부한 것 &amp; 리뷰</h4><ul><li>팀 프로젝트: 블레이드앤소울 유저 이탈 예측 (빅콘테스트2018)<ul><li>party로 구성한 network 데이터가 너무 커서 로컬 컴퓨터에서는 다룰 수가 없다. 이래서 분산처리 환경이 필요한가보다. 다른 방법으로 처리할 수 있게 코드를 새로 짜는 중. 프로젝트에 관한 자세한 얘기는 공모전 제출 기간이 지난 후에 포스팅 해볼 수 있을 듯!</li></ul></li></ul><h4 id="내일-공부할-것"><a href="#내일-공부할-것" class="headerlink" title="내일 공부할 것"></a>내일 공부할 것</h4><ul><li>팀 프로젝트: 블레이드앤소울 유저 이탈 예측 (빅콘테스트2018)<ul><li>keras 신경망 모델링</li></ul></li><li>이력서 정리</li><li>개인 프로젝트: image augmentation 후 CNN 모델링</li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018-09-04-TIL</title>
      <link href="/2018/09/05/2018-09-04-TIL/"/>
      <url>/2018/09/05/2018-09-04-TIL/</url>
      
        <content type="html"><![CDATA[<h4 id="공부한-것-amp-리뷰"><a href="#공부한-것-amp-리뷰" class="headerlink" title="공부한 것 &amp; 리뷰"></a>공부한 것 &amp; 리뷰</h4><ul><li>팀 프로젝트: 블레이드앤소울 유저 이탈 예측 (빅콘테스트2018)<ul><li>train party network의 relation을 받기까지 성공</li><li>test party network의 relation 받는 중</li></ul></li><li>신경망 모델 성능 향상 강의 복습</li><li>CNN 강의 복습</li></ul><h4 id="내일-공부할-것"><a href="#내일-공부할-것" class="headerlink" title="내일 공부할 것"></a>내일 공부할 것</h4><ul><li>팀 프로젝트: 블레이드앤소울 유저 이탈 예측 (빅콘테스트2018)<ul><li>party network 분석, feature engineering</li><li>keras 신경망 모델링</li></ul></li><li>이력서 정리</li><li>개인 프로젝트: image augmentation 후 CNN 모델링</li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018-09-03-TIL</title>
      <link href="/2018/09/04/2018-09-03-TIL/"/>
      <url>/2018/09/04/2018-09-03-TIL/</url>
      
        <content type="html"><![CDATA[<h4 id="공부한-것-amp-리뷰"><a href="#공부한-것-amp-리뷰" class="headerlink" title="공부한 것 &amp; 리뷰"></a>공부한 것 &amp; 리뷰</h4><ul><li>팀 프로젝트: 블레이드앤소울 유저 이탈 예측 (빅콘테스트2018)<ul><li>하.. network 작업하는 data를 수정하게 되어 1/3 정도는 진행되었던 network relation 만들기를 처음부터 다시 시작 ㅜ 내일 노트북 여러 대로 돌려야겠다 ㅜㅜㅜ</li></ul></li></ul><h4 id="내일-공부할-것"><a href="#내일-공부할-것" class="headerlink" title="내일 공부할 것"></a>내일 공부할 것</h4><ul><li>개인 프로젝트: 여자아이돌 분류 모델링<ul><li>시도해볼것: 여자아이돌 image augmentation, grey scaling</li></ul></li><li>팀 프로젝트: 블레이드앤소울 유저 이탈 예측 (빅콘테스트2018)<ul><li>party network relation list 만들기</li></ul></li><li>이력서 정리</li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018-09-01-TIL</title>
      <link href="/2018/09/03/2018-09-01-TIL/"/>
      <url>/2018/09/03/2018-09-01-TIL/</url>
      
        <content type="html"><![CDATA[<h4 id="공부한-것-amp-리뷰"><a href="#공부한-것-amp-리뷰" class="headerlink" title="공부한 것 &amp; 리뷰"></a>공부한 것 &amp; 리뷰</h4><ul><li>팀 프로젝트: 블레이드앤소울 유저 이탈 예측 (빅콘테스트2018)<ul><li>party data network graph는 여전히 애를 먹고 있다. 10000개씩 나눠서 돌리고 pickle로 저장하고를 반복 중</li></ul></li><li>개인 프로젝트: 3대 기획사 아이돌 얼굴 분류<ul><li>사진에서 얼굴 비율을 90%로 높이고 다시 모델링. train 점수는 조금만 만져봐도 꽤 쉽게 올라가는데, validation 점수는 50% 언저리에서 잘 올라가질 않는다. 아무래도 data가 적긴한 것 같으니 내일은 image augmentation을 해봐야겠다</li></ul></li></ul><h4 id="내일-공부할-것"><a href="#내일-공부할-것" class="headerlink" title="내일 공부할 것"></a>내일 공부할 것</h4><ul><li>개인 프로젝트: 여자아이돌 분류 모델링<ul><li>시도해볼것: 여자아이돌 image augmentation, grey scaling</li></ul></li><li>팀 프로젝트: 블레이드앤소울 유저 이탈 예측 (빅콘테스트2018)<ul><li>팀플 모임</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018-08-31-TIL</title>
      <link href="/2018/09/01/2018-08-31-TIL/"/>
      <url>/2018/09/01/2018-08-31-TIL/</url>
      
        <content type="html"><![CDATA[<h4 id="공부한-것-amp-리뷰"><a href="#공부한-것-amp-리뷰" class="headerlink" title="공부한 것 &amp; 리뷰"></a>공부한 것 &amp; 리뷰</h4><ul><li>팀 프로젝트: 블레이드앤소울 유저 이탈 예측 (빅콘테스트2018)<ul><li>party data network grpah를 구성하는데 50시간까지 단축. 이 정도면 그냥 로컬로 돌려볼까보다</li><li>trade data는 형태가 편하게 되어있어 network graph에 거의 시간이 걸리지 않는다. 새로운 변수들을 만들어봐야겠다</li></ul></li></ul><h4 id="내일-공부할-것"><a href="#내일-공부할-것" class="headerlink" title="내일 공부할 것"></a>내일 공부할 것</h4><ul><li>개인 프로젝트: 여자아이돌 분류 모델링, 남자아이돌 사진 전처리<ul><li>시도해볼것: 여자아이돌 image augmentation, grey scaling</li></ul></li></ul><h4 id="이번-주에-공부할-것"><a href="#이번-주에-공부할-것" class="headerlink" title="이번 주에 공부할 것"></a>이번 주에 공부할 것</h4><ul><li style="list-style: none"><input type="checkbox"> 개인 프로젝트: <ul><li style="list-style: none"><input type="checkbox"> 아이돌 사진 이미지 전처리 → 진행중</li><li style="list-style: none"><input type="checkbox"> 이미지 분류 모델링</li></ul></li><li style="list-style: none"><input type="checkbox"> 팀 프로젝트:<ul><li style="list-style: none"><input type="checkbox"> activity에서 feature engineering 새롭게 하기</li><li style="list-style: none"><input type="checkbox"> 20위권으로 자율평가 성적 올리기</li></ul></li><li style="list-style: none"><input type="checkbox"> 관심기업 자료조사<ul><li style="list-style: none"><input type="checkbox"> 관심 기업 리스트 정리하기</li><li style="list-style: none"><input type="checkbox"> 5개 이상 관심 기업 정보 스크랩   </li></ul></li><li style="list-style: none"><input type="checkbox"> github repository 정리 및 업데이트 → 진행중</li><li style="list-style: none"><input type="checkbox"> python 복습: 데이터사이언스스쿨 파이썬 파트 → 진행중</li><li style="list-style: none"><input type="checkbox"> 수학(통계)&amp;데이터분석 복습</li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018-08-30-TIL</title>
      <link href="/2018/08/31/2018-08-30-TIL/"/>
      <url>/2018/08/31/2018-08-30-TIL/</url>
      
        <content type="html"><![CDATA[<h4 id="공부한-것-amp-리뷰"><a href="#공부한-것-amp-리뷰" class="headerlink" title="공부한 것 &amp; 리뷰"></a>공부한 것 &amp; 리뷰</h4><ul><li>팀 프로젝트: 블레이드앤소울 유저 이탈 예측 (빅콘테스트2018)<ul><li>party data로 network를 구성하는데 500시간이 걸리던 코드를 100시간 정도까지로 줄였다. 더 줄일 수 있는지는 미지수. 애초부터 로컬 컴퓨터로 돌리기엔 영 무리였던 걸까?</li></ul></li><li>알고리즘 책 읽기</li></ul><h4 id="내일-공부할-것"><a href="#내일-공부할-것" class="headerlink" title="내일 공부할 것"></a>내일 공부할 것</h4><ul><li>개인 프로젝트: 여자아이돌 분류 모델링, 남자아이돌 사진 전처리<ul><li>시도해볼것: 여자아이돌 image augmentation, grey scaling</li></ul></li><li>팀 프로젝트: 블레이드앤소울 유저 이탈 예측 (빅콘테스트2018)<ul><li>팀플 모임. 네트워크 분석의 해결책을 찾을 수 있기를</li></ul></li></ul><h4 id="이번-주에-공부할-것"><a href="#이번-주에-공부할-것" class="headerlink" title="이번 주에 공부할 것"></a>이번 주에 공부할 것</h4><ul><li style="list-style: none"><input type="checkbox"> 개인 프로젝트: <ul><li style="list-style: none"><input type="checkbox"> 아이돌 사진 이미지 전처리 → 진행중</li><li style="list-style: none"><input type="checkbox"> 이미지 분류 모델링</li></ul></li><li style="list-style: none"><input type="checkbox"> 팀 프로젝트:<ul><li style="list-style: none"><input type="checkbox"> activity에서 feature engineering 새롭게 하기</li><li style="list-style: none"><input type="checkbox"> 20위권으로 자율평가 성적 올리기</li></ul></li><li style="list-style: none"><input type="checkbox"> 관심기업 자료조사<ul><li style="list-style: none"><input type="checkbox"> 관심 기업 리스트 정리하기</li><li style="list-style: none"><input type="checkbox"> 5개 이상 관심 기업 정보 스크랩   </li></ul></li><li style="list-style: none"><input type="checkbox"> github repository 정리 및 업데이트 → 진행중</li><li style="list-style: none"><input type="checkbox"> python 복습: 데이터사이언스스쿨 파이썬 파트 → 진행중</li><li style="list-style: none"><input type="checkbox"> 수학(통계)&amp;데이터분석 복습</li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018-08-29-TIL</title>
      <link href="/2018/08/30/2018-08-29-TIL/"/>
      <url>/2018/08/30/2018-08-29-TIL/</url>
      
        <content type="html"><![CDATA[<h4 id="공부한-것-amp-리뷰"><a href="#공부한-것-amp-리뷰" class="headerlink" title="공부한 것 &amp; 리뷰"></a>공부한 것 &amp; 리뷰</h4><ul><li>팀 프로젝트: 블레이드앤소울 유저 이탈 예측 (빅콘테스트2018)<ul><li>오랜만에 빅콘테스트 팀플을 재개했다. party data를 network로 분석하려고 했는데 네트워크를 구성하는 코드가 말도 안되게 오래 걸리는 것으로 나와서(500..시간???? ㅜ) 절망.. 더 빨리 계산할 수 있도록 알고리즘을 개선해야겠다.</li></ul></li></ul><h4 id="내일-공부할-것"><a href="#내일-공부할-것" class="headerlink" title="내일 공부할 것"></a>내일 공부할 것</h4><ul><li>개인 프로젝트: 여자아이돌 분류 모델링, 남자아이돌 사진 전처리<ul><li>시도해볼것: 여자아이돌 image augmentation, grey scaling</li></ul></li><li>팀 프로젝트: 블레이드앤소울 유저 이탈 예측 (빅콘테스트2018)<ul><li>party 데이터 네트워크 분석하기</li></ul></li></ul><h4 id="이번-주에-공부할-것"><a href="#이번-주에-공부할-것" class="headerlink" title="이번 주에 공부할 것"></a>이번 주에 공부할 것</h4><ul><li style="list-style: none"><input type="checkbox"> 개인 프로젝트: <ul><li style="list-style: none"><input type="checkbox"> 아이돌 사진 이미지 전처리 → 진행중</li><li style="list-style: none"><input type="checkbox"> 이미지 분류 모델링</li></ul></li><li style="list-style: none"><input type="checkbox"> 팀 프로젝트:<ul><li style="list-style: none"><input type="checkbox"> activity에서 feature engineering 새롭게 하기</li><li style="list-style: none"><input type="checkbox"> 20위권으로 자율평가 성적 올리기</li></ul></li><li style="list-style: none"><input type="checkbox"> 관심기업 자료조사<ul><li style="list-style: none"><input type="checkbox"> 관심 기업 리스트 정리하기</li><li style="list-style: none"><input type="checkbox"> 5개 이상 관심 기업 정보 스크랩   </li></ul></li><li style="list-style: none"><input type="checkbox"> github repository 정리 및 업데이트 → 진행중</li><li style="list-style: none"><input type="checkbox"> python 복습: 데이터사이언스스쿨 파이썬 파트 → 진행중</li><li style="list-style: none"><input type="checkbox"> 수학(통계)&amp;데이터분석 복습</li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018-08-28-TIL</title>
      <link href="/2018/08/28/2018-08-28-TIL/"/>
      <url>/2018/08/28/2018-08-28-TIL/</url>
      
        <content type="html"><![CDATA[<h4 id="공부한-것-amp-리뷰"><a href="#공부한-것-amp-리뷰" class="headerlink" title="공부한 것 &amp; 리뷰"></a>공부한 것 &amp; 리뷰</h4><ul><li>개인 프로젝트: 3대 기획사 아이돌 얼굴 분류<ul><li>여자 아이돌 사진 preprocessing을 완료하고 CNN 모델링에 들어갔다. hyper parameter는 거의 건드리지 않고 2개 정도 모델을 돌려봤는데 현재 정확도는 50%에 못미치는 수준이다. 많이 높일 수 있을까?!!</li></ul></li></ul><h4 id="내일-공부할-것"><a href="#내일-공부할-것" class="headerlink" title="내일 공부할 것"></a>내일 공부할 것</h4><ul><li>팀 프로젝트: 블레이드앤소울 유저 이탈 예측<ul><li>오랜만에 팀플 재개! 새로운 변수를 좀 만들어서 가야겠다! </li></ul></li><li>개인 프로젝트: 여자아이돌 분류 모델링, 남자아이돌 사진 전처리<ul><li>시도해볼것: 여자아이돌 image augmentation, grey scaling</li></ul></li></ul><h4 id="이번-주에-공부할-것"><a href="#이번-주에-공부할-것" class="headerlink" title="이번 주에 공부할 것"></a>이번 주에 공부할 것</h4><ul><li style="list-style: none"><input type="checkbox"> 개인 프로젝트: <ul><li style="list-style: none"><input type="checkbox"> 아이돌 사진 이미지 전처리 → 진행중</li><li style="list-style: none"><input type="checkbox"> 이미지 분류 모델링</li></ul></li><li style="list-style: none"><input type="checkbox"> 팀 프로젝트:<ul><li style="list-style: none"><input type="checkbox"> activity에서 feature engineering 새롭게 하기</li><li style="list-style: none"><input type="checkbox"> 20위권으로 자율평가 성적 올리기</li></ul></li><li style="list-style: none"><input type="checkbox"> 관심기업 자료조사<ul><li style="list-style: none"><input type="checkbox"> 관심 기업 리스트 정리하기</li><li style="list-style: none"><input type="checkbox"> 5개 이상 관심 기업 정보 스크랩   </li></ul></li><li style="list-style: none"><input type="checkbox"> github repository 정리 및 업데이트 → 진행중</li><li style="list-style: none"><input type="checkbox"> python 복습: 데이터사이언스스쿨 파이썬 파트 → 진행중</li><li style="list-style: none"><input type="checkbox"> 수학(통계)&amp;데이터분석 복습</li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018-08-23-TIL</title>
      <link href="/2018/08/23/2018-08-23-TIL/"/>
      <url>/2018/08/23/2018-08-23-TIL/</url>
      
        <content type="html"><![CDATA[<h4 id="공부한-것-amp-리뷰"><a href="#공부한-것-amp-리뷰" class="headerlink" title="공부한 것 &amp; 리뷰"></a>공부한 것 &amp; 리뷰</h4><ul><li>패스트캠퍼스 데이터사이언스스쿨 종강<ul><li>4개월 간의 데이터사이언스스쿨 과정이 공식적으로 끝이 났다. 4개월동안 너무 빨리 많은 것을 배워서 복습해서 내것으로 만들어야될 것이 잔뜩 쌓였다. 페이스를 잃지 말고 계속 공부를 해나가야지. </li></ul></li><li>개인 프로젝트: 사진 데이터 전처리 작업<ul><li>데이터 전처리 시간이 길어서 남자 아이돌은 잠시 미뤄두고 여자 아이돌만으로 먼저 진행해보려고 한다. </li><li>여자 아이돌들의 사진에서 얼굴 부분을 crop하는 작업 완료.<br>autocrop이라는 라이브러리를 이용했는데, 얼굴이 인식이 안되는 경우도 많고 해서 검수와 수정 작업이 꽤나 필요하다. 100장씩 검색 후에 train data로 못 쓰는 사진을 지우다보니 가수마다 사진 개수도 다른 상태인데, 일단은 가지고 있는 사진으로만 전처리를 해본 후 모델링을 시도해봐야겠다.</li></ul></li></ul><h4 id="내일-공부할-것"><a href="#내일-공부할-것" class="headerlink" title="내일 공부할 것"></a>내일 공부할 것</h4><ul><li>개인 프로젝트: 여자아이돌 분류 모델링</li></ul><h4 id="이번-주에-공부할-것"><a href="#이번-주에-공부할-것" class="headerlink" title="이번 주에 공부할 것"></a>이번 주에 공부할 것</h4><ul><li style="list-style: none"><input type="checkbox"> 개인 프로젝트: <ul><li style="list-style: none"><input type="checkbox"> 아이돌 사진 이미지 전처리</li><li style="list-style: none"><input type="checkbox"> 이미지 분류 모델링</li></ul></li><li style="list-style: none"><input type="checkbox"> DSS: 수학 <code>&lt;54절. 신경망 성능 개선&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 수학 <code>&lt;55절. CNN&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 수학 <code>&lt;57절. GAN&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> 인성면접 답안 대비 (개인 신상, 취미, 특기 관련 질문)</li><li style="list-style: none"><input type="checkbox"> 관심 기업 조사</li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018-08-20-TIL</title>
      <link href="/2018/08/21/2018-08-20-TIL/"/>
      <url>/2018/08/21/2018-08-20-TIL/</url>
      
        <content type="html"><![CDATA[<h4 id="공부한-것-amp-리뷰"><a href="#공부한-것-amp-리뷰" class="headerlink" title="공부한 것 &amp; 리뷰"></a>공부한 것 &amp; 리뷰</h4><ul><li>9/3 정도에나 픽업이 가능하다던 맥북이 갑자기 오늘 왔단다!!<br>케이스나 보호 장비 준비도 아직 못했는데!!!!!! 왜 이렇게 빨리??ㅋㅋ<br>조금 당황스럽지만 애플스토어로 달려가 픽업을 해왔다. 계속 세팅하고 이전 노트북 데이터 정리하고 하느라 정신이 없다 ㅎㅎ</li><li>개인 프로젝트: 사진 데이터 전처리 작업<ul><li>사진을 보면서 여러 사람이 찍힌 사진, 정면이 아닌 사진, 선글라스 등으로 얼굴이 가려진 사진 등을 걸러내고 있는데 확실하긴 하지만 자동으로 하는 방법이 분명 있을 것 같다 ㅎㅎㅎ google vision API로 얼굴 각도가 돌아가 있는 사진은 걸러낼 수 있는 것 같던데 찾아봐야겠다. 빨리 모델링을 해보고 싶다 ㅜ </li></ul></li></ul><h4 id="내일-공부할-것"><a href="#내일-공부할-것" class="headerlink" title="내일 공부할 것"></a>내일 공부할 것</h4><ul><li>개인 프로젝트: 사진 데이터 전처리 작업</li></ul><h4 id="이번-주에-공부할-것"><a href="#이번-주에-공부할-것" class="headerlink" title="이번 주에 공부할 것"></a>이번 주에 공부할 것</h4><ul><li style="list-style: none"><input type="checkbox"> 분류 팀 프로젝트 <code>&lt;블레이드앤소울 유저 이탈 예측&gt;</code><ul><li style="list-style: none"><input type="checkbox"> feature engineering 발전시키기</li></ul></li><li style="list-style: none"><input type="checkbox"> 개인 프로젝트: <ul><li style="list-style: none"><input type="checkbox"> 아이돌 사진 이미지 전처리</li><li style="list-style: none"><input type="checkbox"> 이미지 분류 모델링</li></ul></li><li style="list-style: none"><input type="checkbox"> DSS: 프로그래밍 <code>&lt;Database - SQL&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 프로그래밍 <code>&lt;Database - noSQL&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 프로그래밍 <code>&lt;웹 크롤링&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 수학 <code>&lt;54절. 신경망 성능 개선&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 수학 <code>&lt;55절. CNN&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 수학 <code>&lt;57절. GAN&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> 인성면접 답안 대비 (개인 신상, 취미, 특기 관련 질문)</li><li style="list-style: none"><input type="checkbox"> 관심 기업 조사</li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018-08-19-TIL</title>
      <link href="/2018/08/19/2018-08-19-TIL/"/>
      <url>/2018/08/19/2018-08-19-TIL/</url>
      
        <content type="html"><![CDATA[<h4 id="공부한-것-amp-리뷰"><a href="#공부한-것-amp-리뷰" class="headerlink" title="공부한 것 &amp; 리뷰"></a>공부한 것 &amp; 리뷰</h4><ul><li>파이콘2018 컨퍼런스<ul><li>오늘까지 3일동안 파이콘 2018에 참가했는데 재미있는 발표도 많았고 분위기도 즐겁고 좋은 경험이었던 것 같다. 궁금했던 네트워크 분석에 관한 발표도 있어서 흥미로웠고, 다양한 분야에 있는 사람들이 파이썬을 이용해서 문제를 해결한 이야기들이 재미있었던 것 같다 (self 사생활 침해, 뉴스 댓글은 정말 사람들의 목소리일까? 등)</li></ul></li><li>파이콘 2018을 즐기느라 집에 오면 너무 피곤해서 개인프로젝트 진도를 못 나가고 있다 ㅜ 내일부터 달려야지</li></ul><h4 id="내일-공부할-것"><a href="#내일-공부할-것" class="headerlink" title="내일 공부할 것"></a>내일 공부할 것</h4><ul><li>개인 프로젝트: 사진 데이터 전처리 작업</li></ul><h4 id="이번-주에-공부할-것"><a href="#이번-주에-공부할-것" class="headerlink" title="이번 주에 공부할 것"></a>이번 주에 공부할 것</h4><ul><li style="list-style: none"><input type="checkbox" checked> <strong>파이콘 2018에 참여해서 여러가지 배워오기!!</strong> </li><li style="list-style: none"><input type="checkbox" checked> 분류 팀 프로젝트 <code>&lt;블레이드앤소울 유저 이탈 예측&gt;</code><ul><li style="list-style: none"><input type="checkbox" checked> 트러블슈팅까지의 내용으로 포트폴리오 만들기</li></ul></li><li style="list-style: none"><input type="checkbox"> 개인 프로젝트: <ul><li style="list-style: none"><input type="checkbox" checked> 아이돌 사진 크롤링</li><li style="list-style: none"><input type="checkbox"> 이미지 전처리</li></ul></li><li style="list-style: none"><input type="checkbox"> DSS: 프로그래밍 <code>&lt;Database - SQL&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 프로그래밍 <code>&lt;Database - noSQL&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 프로그래밍 <code>&lt;웹 크롤링&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 수학 <code>&lt;54절. 신경망 성능 개선&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 수학 <code>&lt;55절. CNN&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 수학 <code>&lt;57절. GAN&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> 인성면접 답안 대비 (개인 신상, 취미, 특기 관련 질문)</li><li style="list-style: none"><input type="checkbox"> 관심 기업 조사</li><li style="list-style: none"><input type="checkbox" checked> 이력서 정리</li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018-08-18-TIL</title>
      <link href="/2018/08/18/2018-08-18-TIL/"/>
      <url>/2018/08/18/2018-08-18-TIL/</url>
      
        <content type="html"><![CDATA[<h4 id="공부한-것-amp-리뷰"><a href="#공부한-것-amp-리뷰" class="headerlink" title="공부한 것 &amp; 리뷰"></a>공부한 것 &amp; 리뷰</h4><ul><li>파이콘2018 컨퍼런스<ul><li>생각보다 규모가 굉장히 컸다. 파이썬 커뮤니티라는 것을 처음으로 체감할 수 있었던 것 같다. 발표들도 재미있었고, 후원기업들이 부스를 차려놓고 채용 정보를 알리는 경우도 많았는데, 준비가 부족하게 느껴져 적극적으로 물어보지 못해서 아쉽다.      </li></ul></li></ul><h4 id="내일-공부할-것"><a href="#내일-공부할-것" class="headerlink" title="내일 공부할 것"></a>내일 공부할 것</h4><ul><li>개인 프로젝트: 사진 데이터 전처리 작업</li><li>파이콘2018 참가</li></ul><h4 id="이번-주에-공부할-것"><a href="#이번-주에-공부할-것" class="headerlink" title="이번 주에 공부할 것"></a>이번 주에 공부할 것</h4><ul><li style="list-style: none"><input type="checkbox"> <strong>파이콘 2018에 참여해서 여러가지 배워오기!!</strong> </li><li style="list-style: none"><input type="checkbox" checked> 분류 팀 프로젝트 <code>&lt;블레이드앤소울 유저 이탈 예측&gt;</code><ul><li style="list-style: none"><input type="checkbox" checked> 트러블슈팅까지의 내용으로 포트폴리오 만들기</li></ul></li><li style="list-style: none"><input type="checkbox"> 개인 프로젝트: <ul><li style="list-style: none"><input type="checkbox" checked> 아이돌 사진 크롤링</li><li style="list-style: none"><input type="checkbox"> 이미지 전처리</li></ul></li><li style="list-style: none"><input type="checkbox"> DSS: 프로그래밍 <code>&lt;Database - SQL&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 프로그래밍 <code>&lt;Database - noSQL&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 프로그래밍 <code>&lt;웹 크롤링&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 수학 <code>&lt;54절. 신경망 성능 개선&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 수학 <code>&lt;55절. CNN&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 수학 <code>&lt;57절. GAN&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> 인성면접 답안 대비 (개인 신상, 취미, 특기 관련 질문)</li><li style="list-style: none"><input type="checkbox"> 관심 기업 조사</li><li style="list-style: none"><input type="checkbox" checked> 이력서 정리</li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018-08-17-TIL</title>
      <link href="/2018/08/18/2018-08-17-TIL/"/>
      <url>/2018/08/18/2018-08-17-TIL/</url>
      
        <content type="html"><![CDATA[<h4 id="공부한-것-amp-리뷰"><a href="#공부한-것-amp-리뷰" class="headerlink" title="공부한 것 &amp; 리뷰"></a>공부한 것 &amp; 리뷰</h4><ul><li>개인 프로젝트: 사진 데이터 웹크롤링<ul><li>크롤링 후에 걸러야할 사진들, 수작업으로 확인하면서 처리할 부분들이 많군</li></ul></li><li>파이콘2018 튜토리얼: 미운 우리 kaggle 참가<ul><li>유용한 정보들을 건진 것 같다. Feature engineering에도 데이터 타입과 알고리즘에 따라 다양한 방법이 있다는 것을 알게 되었다. 새로 알게된 개념과 정보들에 대해 추가 학습이 필수! 빅콘테스트 팀프로젝트에 적용할 수 있는 부분도 꽤 있을 것 같다.      </li></ul></li></ul><h4 id="내일-공부할-것"><a href="#내일-공부할-것" class="headerlink" title="내일 공부할 것"></a>내일 공부할 것</h4><ul><li>개인 프로젝트: 사진 데이터 전처리 작업</li><li>파이콘2018 참가</li></ul><h4 id="이번-주에-공부할-것"><a href="#이번-주에-공부할-것" class="headerlink" title="이번 주에 공부할 것"></a>이번 주에 공부할 것</h4><ul><li style="list-style: none"><input type="checkbox"> <strong>파이콘 2018에 참여해서 여러가지 배워오기!!</strong> </li><li style="list-style: none"><input type="checkbox" checked> 분류 팀 프로젝트 <code>&lt;블레이드앤소울 유저 이탈 예측&gt;</code><ul><li style="list-style: none"><input type="checkbox" checked> 트러블슈팅까지의 내용으로 포트폴리오 만들기</li></ul></li><li style="list-style: none"><input type="checkbox"> 개인 프로젝트: <ul><li style="list-style: none"><input type="checkbox" checked> 아이돌 사진 크롤링</li><li style="list-style: none"><input type="checkbox"> 이미지 전처리</li></ul></li><li style="list-style: none"><input type="checkbox"> DSS: 프로그래밍 <code>&lt;Database - SQL&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 프로그래밍 <code>&lt;Database - noSQL&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 프로그래밍 <code>&lt;웹 크롤링&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 수학 <code>&lt;54절. 신경망 성능 개선&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 수학 <code>&lt;55절. CNN&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 수학 <code>&lt;57절. GAN&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> 인성면접 답안 대비 (개인 신상, 취미, 특기 관련 질문)</li><li style="list-style: none"><input type="checkbox"> 관심 기업 조사</li><li style="list-style: none"><input type="checkbox" checked> 이력서 정리</li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018-08-16-TIL</title>
      <link href="/2018/08/17/2018-08-16-TIL/"/>
      <url>/2018/08/17/2018-08-16-TIL/</url>
      
        <content type="html"><![CDATA[<h4 id="공부한-것-amp-리뷰"><a href="#공부한-것-amp-리뷰" class="headerlink" title="공부한 것 &amp; 리뷰"></a>공부한 것 &amp; 리뷰</h4><ul><li>개인 프로젝트: 사진 데이터 웹크롤링</li><li>모의 기술 면접<ul><li>알고리즘 문제와 개념 질문으로 이루어진 모의 면접. 알고리즘은 쉬운 문제를 선택했는데 꼼꼼하게 챙기지 못한 부분이 있었고, 개념 문제는 대참사 ㅜ ㅋㅋ. 말로 설명할 수 있도록 프로그래밍과 데이터 분석 수업 내용들을 복습해야겠다.    </li></ul></li></ul><h4 id="내일-공부할-것"><a href="#내일-공부할-것" class="headerlink" title="내일 공부할 것"></a>내일 공부할 것</h4><ul><li>개인 프로젝트: 사진 데이터 웹크롤링 계속</li><li>파이콘2018 튜토리얼: 미운 우리 kaggle 참가</li></ul><h4 id="이번-주에-공부할-것"><a href="#이번-주에-공부할-것" class="headerlink" title="이번 주에 공부할 것"></a>이번 주에 공부할 것</h4><ul><li style="list-style: none"><input type="checkbox"> <strong>파이콘 2018에 참여해서 여러가지 배워오기!!</strong> </li><li style="list-style: none"><input type="checkbox" checked> 분류 팀 프로젝트 <code>&lt;블레이드앤소울 유저 이탈 예측&gt;</code><ul><li style="list-style: none"><input type="checkbox" checked> 트러블슈팅까지의 내용으로 포트폴리오 만들기</li></ul></li><li style="list-style: none"><input type="checkbox"> 개인 프로젝트: 아이돌 사진 크롤링 &amp; 이미지 전처리</li><li style="list-style: none"><input type="checkbox"> DSS: 프로그래밍 <code>&lt;Database - SQL&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 프로그래밍 <code>&lt;Database - noSQL&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 프로그래밍 <code>&lt;웹 크롤링&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 수학 <code>&lt;54절. 신경망 성능 개선&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 수학 <code>&lt;55절. CNN&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 수학 <code>&lt;57절. GAN&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> 인성면접 답안 대비 (개인 신상, 취미, 특기 관련 질문)</li><li style="list-style: none"><input type="checkbox"> 관심 기업 조사</li><li style="list-style: none"><input type="checkbox" checked> 이력서 정리</li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018-08-15-TIL</title>
      <link href="/2018/08/16/2018-08-15-TIL/"/>
      <url>/2018/08/16/2018-08-15-TIL/</url>
      
        <content type="html"><![CDATA[<h4 id="공부한-것-amp-리뷰"><a href="#공부한-것-amp-리뷰" class="headerlink" title="공부한 것 &amp; 리뷰"></a>공부한 것 &amp; 리뷰</h4><ul><li>분류 팀프로젝트의 포트폴리오 정리</li><li>이력서 정리</li></ul><h4 id="내일-공부할-것"><a href="#내일-공부할-것" class="headerlink" title="내일 공부할 것"></a>내일 공부할 것</h4><ul><li>개인 프로젝트: 사진 데이터 웹크롤링</li><li>알고리즘 공부</li><li>모의 기술 면접</li></ul><h4 id="이번-주에-공부할-것"><a href="#이번-주에-공부할-것" class="headerlink" title="이번 주에 공부할 것"></a>이번 주에 공부할 것</h4><ul><li style="list-style: none"><input type="checkbox"> <strong>파이콘 2018에 참여해서 여러가지 배워오기!!</strong> </li><li style="list-style: none"><input type="checkbox"> 분류 팀 프로젝트 <code>&lt;블레이드앤소울 유저 이탈 예측&gt;</code><ul><li style="list-style: none"><input type="checkbox"> activity에서 새로운 변수 만들어 분석하기</li><li style="list-style: none"><input type="checkbox" checked> 트러블슈팅까지의 내용으로 포트폴리오 만들기</li></ul></li><li style="list-style: none"><input type="checkbox"> DSS: 프로그래밍 <code>&lt;Database - SQL&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 프로그래밍 <code>&lt;Database - noSQL&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 프로그래밍 <code>&lt;웹 크롤링&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 수학 <code>&lt;54절. 신경망 성능 개선&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 수학 <code>&lt;55절. CNN&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 수학 <code>&lt;57절. GAN&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> 인성면접 답안 대비 (개인 신상, 취미, 특기 관련 질문)</li><li style="list-style: none"><input type="checkbox"> 관심 기업 조사</li><li style="list-style: none"><input type="checkbox" checked> 이력서 정리</li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018-08-14-TIL</title>
      <link href="/2018/08/14/2018-08-14-TIL/"/>
      <url>/2018/08/14/2018-08-14-TIL/</url>
      
        <content type="html"><![CDATA[<h4 id="공부한-것-amp-리뷰"><a href="#공부한-것-amp-리뷰" class="headerlink" title="공부한 것 &amp; 리뷰"></a>공부한 것 &amp; 리뷰</h4><ul><li>nbextension과 rise를 설치해서 jupyter notebook을 presentation에 적합하도록 slideshow를 만드는 방법을 실습했다. <ul><li>손이 많이 가는 작업인 것 같긴 하지만 확실히 jupyter notebook 상에서 바로 presentation에 필요한 부분만 골라서 slide로 만들 수 있는 점은 좋은 것 같다. </li><li>다만 나는 몇 가지 더 편리한 점들이 있어서 주로 jupyter lab을 사용하고 있는데, 아직 jupyter lab에서는 rise를 이용한 live slideshow를 쓸 수 없는 것 같아 아쉽다!</li></ul></li><li>분류 팀프로젝트의 포트폴리오 정리 작업 중<ul><li>일단은 ppt로 documentation을 하고 작업 코드는 jupyter notebook 파일로 보충하는 식으로 포트폴리오를 작업하고 있다. </li><li>google colab로 ipynb 파일을 열어 링크를 ppt에 걸어주면 ppt와 jupyter notebook 파일을 연결할 수 있어 유용할 것 같다! </li></ul></li></ul><h4 id="내일-공부할-것"><a href="#내일-공부할-것" class="headerlink" title="내일 공부할 것"></a>내일 공부할 것</h4><ul><li>분류 팀프로젝트 포트폴리오 정리</li><li>이력서 정리 - 프로젝트 부분 등</li><li>개인 프로젝트: 사진 데이터 웹크롤링</li><li>알고리즘 공부</li></ul><h4 id="이번-주에-공부할-것"><a href="#이번-주에-공부할-것" class="headerlink" title="이번 주에 공부할 것"></a>이번 주에 공부할 것</h4><ul><li style="list-style: none"><input type="checkbox"> 분류 팀 프로젝트 <code>&lt;블레이드앤소울 유저 이탈 예측&gt;</code><ul><li style="list-style: none"><input type="checkbox"> activity에서 새로운 변수 만들어 분석하기</li></ul></li><li style="list-style: none"><input type="checkbox"> DSS: 프로그래밍 <code>&lt;Database - SQL&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 프로그래밍 <code>&lt;Database - noSQL&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 프로그래밍 <code>&lt;웹 크롤링&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 수학 <code>&lt;54절. 신경망 성능 개선&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 수학 <code>&lt;55절. CNN&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 수학 <code>&lt;57절. GAN&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> 인성면접 답안 대비 (개인 신상, 취미, 특기 관련 질문)</li><li style="list-style: none"><input type="checkbox"> 관심 기업 조사</li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018-08-13-TIL</title>
      <link href="/2018/08/14/2018-08-13-TIL/"/>
      <url>/2018/08/14/2018-08-13-TIL/</url>
      
        <content type="html"><![CDATA[<h4 id="공부한-것-amp-리뷰"><a href="#공부한-것-amp-리뷰" class="headerlink" title="공부한 것 &amp; 리뷰"></a>공부한 것 &amp; 리뷰</h4><ul><li>DSS 수업: 수학 <code>시계열분석</code><ul><li>시계열 분석은 일단은 우선시 관심을 두고 있는 분야는 아니지만 종강 전에 마지막으로 수업을 들을 수 있는 부분은 좋은 것 같다. </li></ul></li><li>SQL syntax 복습</li><li>블로그 관리<ul><li>포스팅을 정리해나가면서 markdown 사용법에 좀 더 익숙해짐</li></ul></li></ul><h4 id="내일-공부할-것"><a href="#내일-공부할-것" class="headerlink" title="내일 공부할 것"></a>내일 공부할 것</h4><ul><li>개인 프로젝트: 사진 데이터 웹크롤링</li><li>알고리즘 공부</li></ul><h4 id="이번-주에-공부할-것"><a href="#이번-주에-공부할-것" class="headerlink" title="이번 주에 공부할 것"></a>이번 주에 공부할 것</h4><ul><li style="list-style: none"><input type="checkbox"> 분류 팀 프로젝트 <code>&lt;블레이드앤소울 유저 이탈 예측&gt;</code><ul><li style="list-style: none"><input type="checkbox"> activity에서 새로운 변수 만들어 분석하기</li></ul></li><li style="list-style: none"><input type="checkbox"> DSS: 프로그래밍 <code>&lt;Database - SQL&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 프로그래밍 <code>&lt;Database - noSQL&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 프로그래밍 <code>&lt;웹 크롤링&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 수학 <code>&lt;54절. 신경망 성능 개선&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 수학 <code>&lt;55절. CNN&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 수학 <code>&lt;57절. GAN&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> 인성면접 답안 대비 (개인 신상, 취미, 특기 관련 질문)</li><li style="list-style: none"><input type="checkbox"> 관심 기업 조사</li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Jupyter Notebook Tip - 여러 개 output을 한번에 보는 방법</title>
      <link href="/2018/08/13/Jupyter_tip_001/"/>
      <url>/2018/08/13/Jupyter_tip_001/</url>
      
        <content type="html"><![CDATA[<p>Jupyter notebook 파일을 hexo 블로그에 올리는 방법을 계속 googling 하던 중 괜찮은 팁을 발견하게 되었다.</p><p>그것은 바로 jupyter notebook의 한 cell안에서 여러 개의 output을 확인할 수 있는 방법이다.</p><a id="more"></a> <h3 id="1-jupyter-notebook의-기본-setting"><a href="#1-jupyter-notebook의-기본-setting" class="headerlink" title="1. jupyter notebook의 기본 setting"></a>1. jupyter notebook의 기본 setting</h3><p>jupyter notebook에서는 한 cell 안에서 결과값이 여러 번 나오게 될 경우 맨 마지막에 있는 output만 출력이 되게 된다.</p><p>여러 개의 output을 함께 출력해서 비교하고 싶다거나 하는 경우에도 별도의 cell로 써주어야 하기 때문에 이게 은근히 성가신 부분이다.</p><p>지금까지는 jupyter notebook에서 한 셀에서 여러 가지 결과값을 보고 싶다면 아래와 같이 두 가지 방법 중 하나를 취해야 했다.</p><h4 id="1-위쪽의-output은-print문을-이용해-출력"><a href="#1-위쪽의-output은-print문을-이용해-출력" class="headerlink" title="1) 위쪽의 output은 print문을 이용해 출력"></a>1) 위쪽의 output은 print문을 이용해 출력</h4><img src="/2018/08/13/Jupyter_tip_001/001.png"><h4 id="2-마지막-줄에-한꺼번에-명령을-실행"><a href="#2-마지막-줄에-한꺼번에-명령을-실행" class="headerlink" title="2) 마지막 줄에 한꺼번에 명령을 실행"></a>2) 마지막 줄에 한꺼번에 명령을 실행</h4><img src="/2018/08/13/Jupyter_tip_001/002.png"><h3 id="2-jupyter-notebook에서-여러-output을-한-번에-출력하기"><a href="#2-jupyter-notebook에서-여러-output을-한-번에-출력하기" class="headerlink" title="2. jupyter notebook에서 여러 output을 한 번에 출력하기"></a>2. jupyter notebook에서 여러 output을 한 번에 출력하기</h3><p>아래의 코드를 실행하면 이제 여러 줄의 output을 한 번에 출력할 수 있게 된다.<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> IPython.core.interactiveshell <span class="keyword">import</span> InteractiveShell</span><br><span class="line">InteractiveShell.ast_node_interactivity = <span class="string">"all"</span></span><br></pre></td></tr></table></figure></p><p>짠! 아래와 같이 여러 개의 output을 한 번에 볼 수 있게 되었다.<br><img src="/2018/08/13/Jupyter_tip_001/003.png"></p><h3 id="요약"><a href="#요약" class="headerlink" title="요약"></a>요약</h3><ul><li>jupyter notebook에서는 한 cell에서 output을 마지막 하나만 출력할 수 있어 불편했다.</li><li>아래 코드로 패키지를 불러와 설정을 해주면 한 cell 내에서 여러 개의 결과값을 모두 출력할 수 있게 된다.<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> IPython.core.interactiveshell <span class="keyword">import</span> InteractiveShell</span><br><span class="line">InteractiveShell.ast_node_interactivity = <span class="string">"all"</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> DataScience </category>
          
          <category> Python 파이썬 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 파이썬 </tag>
            
            <tag> jupyter notebook </tag>
            
            <tag> 주피터노트북 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018-08-11-TIL</title>
      <link href="/2018/08/12/2018-08-11-TIL/"/>
      <url>/2018/08/12/2018-08-11-TIL/</url>
      
        <content type="html"><![CDATA[<p>공부한 것 &amp; 리뷰</p><ul><li>분류 팀 프로젝트 <code>&lt;블레이드앤소울 유저 이탈 예측&gt;</code> 트러블 슈팅<ul><li>공모전은 아직 한달 이상 남았지만 트러블 슈팅 하고 나니 한 단계 넘은 듯한 느낌</li><li>지금 상태에서 performance를 끌어올리기 위해서는 역시 더 의미있는 변수를 찾아내는 것이 중요할 것 같다!</li></ul></li></ul><p>내일 공부할 것</p><p>이번 주에 공부할 것</p><ul><li style="list-style: none"><input type="checkbox"> 분류 팀 프로젝트 <code>&lt;블레이드앤소울 유저 이탈 예측&gt;</code><ul><li style="list-style: none"><input type="checkbox" checked> 전체 변수 사용 random forest model, 신경망 모델</li><li style="list-style: none"><input type="checkbox" checked> hierarchical model</li><li style="list-style: none"><input type="checkbox"> 자율평가 f1-score 0.80 찍기 - 0.70 찍음</li><li style="list-style: none"><input type="checkbox" checked> 발표 자료</li><li style="list-style: none"><input type="checkbox" checked> 트러블 슈팅</li></ul></li><li style="list-style: none"><input type="checkbox"> DSS: 프로그래밍 <code>&lt;Database - SQL&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 프로그래밍 <code>&lt;Database - noSQL&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 프로그래밍 <code>&lt;웹 크롤링&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox" checked> DSS: 수학 <code>&lt;53절. 신경망 모형 기초&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 수학 <code>&lt;54절. 신경망 성능 개선&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 수학 <code>&lt;55절. CNN&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 수학 <code>&lt;55절. 확률론적 언어모형과 RNN&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 수학 <code>&lt;57절. GAN&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> 인성면접 답안 대비 (개인 신상, 취미, 특기 관련 질문)</li><li style="list-style: none"><input type="checkbox"> 관심 기업 조사</li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018-08-10-TIL</title>
      <link href="/2018/08/11/2018-08-10-TIL/"/>
      <url>/2018/08/11/2018-08-10-TIL/</url>
      
        <content type="html"><![CDATA[<p>공부한 것 &amp; 리뷰</p><ul><li>분류 팀 프로젝트 <code>&lt;블레이드앤소울 유저 이탈 예측&gt;</code><ul><li>트러블 슈팅 발표자료 정리</li></ul></li></ul><p>내일 공부할 것</p><ul><li>분류 팀 프로젝트 <code>&lt;블레이드앤소울 유저 이탈 예측&gt;</code><ul><li>트러블 슈팅</li></ul></li></ul><p>이번 주에 공부할 것</p><ul><li style="list-style: none"><input type="checkbox"> 분류 팀 프로젝트 <code>&lt;블레이드앤소울 유저 이탈 예측&gt;</code><ul><li style="list-style: none"><input type="checkbox" checked> 전체 변수 사용 random forest model, 신경망 모델</li><li style="list-style: none"><input type="checkbox" checked> hierarchical model</li><li style="list-style: none"><input type="checkbox"> 자율평가 f1-score 0.80 찍기 - 0.70 찍음</li><li style="list-style: none"><input type="checkbox" checked> 발표 자료</li><li style="list-style: none"><input type="checkbox"> 트러블 슈팅</li></ul></li><li style="list-style: none"><input type="checkbox"> DSS: 프로그래밍 <code>&lt;Database - SQL&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 프로그래밍 <code>&lt;Database - noSQL&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 프로그래밍 <code>&lt;웹 크롤링&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox" checked> DSS: 수학 <code>&lt;53절. 신경망 모형 기초&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 수학 <code>&lt;54절. 신경망 성능 개선&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 수학 <code>&lt;55절. CNN&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 수학 <code>&lt;55절. 확률론적 언어모형과 RNN&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 수학 <code>&lt;57절. GAN&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> 인성면접 답안 대비 (개인 신상, 취미, 특기 관련 질문)</li><li style="list-style: none"><input type="checkbox"> 관심 기업 조사</li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018-08-09-TIL</title>
      <link href="/2018/08/10/2018-08-09-TIL/"/>
      <url>/2018/08/10/2018-08-09-TIL/</url>
      
        <content type="html"><![CDATA[<p>공부한 것 &amp; 리뷰</p><ul><li>DSS 복습: 수학 <code>&lt;53절. 신경망 모형 기초&gt;</code></li><li>분류 팀 프로젝트 <code>&lt;블레이드앤소울 유저 이탈 예측&gt;</code><ul><li>신경망 분류 모형 정리</li></ul></li><li>DSS: 프로그래밍 마지막 수업<ul><li>아직 익혀야 할 것이 많은데 벌써 마지막 수업이라니! 시간은 어찌 이리 빠른 것인가. 이제 점점 데이터 사이언스 스쿨 대장정의 끝이 보이는 것 같다. 개인 프로젝트도 서둘러야겠다. </li></ul></li></ul><p>내일 공부할 것</p><ul><li>분류 팀 프로젝트 <code>&lt;블레이드앤소울 유저 이탈 예측&gt;</code><ul><li>트러블슈팅 준비</li></ul></li></ul><p>이번 주에 공부할 것</p><ul><li style="list-style: none"><input type="checkbox"> 분류 팀 프로젝트 <code>&lt;블레이드앤소울 유저 이탈 예측&gt;</code><ul><li style="list-style: none"><input type="checkbox" checked> 전체 변수 사용 random forest model</li><li style="list-style: none"><input type="checkbox" checked> hierarchical model</li><li style="list-style: none"><input type="checkbox"> 자율평가 f1-score 0.80 찍기</li><li style="list-style: none"><input type="checkbox"> 발표 자료</li><li style="list-style: none"><input type="checkbox"> 트러블 슈팅</li></ul></li><li style="list-style: none"><input type="checkbox"> DSS: 프로그래밍 <code>&lt;Database - SQL&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 프로그래밍 <code>&lt;Database - noSQL&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 프로그래밍 <code>&lt;웹 크롤링&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox" checked> DSS: 수학 <code>&lt;53절. 신경망 모형 기초&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 수학 <code>&lt;54절. 신경망 성능 개선&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 수학 <code>&lt;55절. CNN&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 수학 <code>&lt;55절. 확률론적 언어모형과 RNN&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 수학 <code>&lt;57절. GAN&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> 인성면접 답안 대비 (개인 신상, 취미, 특기 관련 질문)</li><li style="list-style: none"><input type="checkbox"> 관심 기업 조사</li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018-08-08-TIL</title>
      <link href="/2018/08/09/2018-08-08-TIL/"/>
      <url>/2018/08/09/2018-08-08-TIL/</url>
      
        <content type="html"><![CDATA[<p>공부한 것 &amp; 리뷰</p><ul><li>분류 팀 프로젝트 <code>&lt;블레이드앤소울 유저 이탈 예측&gt;</code><ul><li>자율 평가 점수가 생각처럼 올라가지 않는다 ㅜ </li></ul></li><li>DSS: <code>&lt;53절. 신경망 모형 기초&gt;</code> 복습 중<ul><li>신경망 기초 이론과 Theano 패키지 복습 </li></ul></li></ul><p>내일 공부할 것</p><ul><li>분류 팀 프로젝트 <code>&lt;블레이드앤소울 유저 이탈 예측&gt;</code><ul><li>트러블슈팅 준비</li></ul></li></ul><p>이번 주에 공부할 것</p><ul><li style="list-style: none"><input type="checkbox"> 분류 팀 프로젝트 <code>&lt;블레이드앤소울 유저 이탈 예측&gt;</code><ul><li style="list-style: none"><input type="checkbox" checked> 전체 변수 사용 random forest model</li><li style="list-style: none"><input type="checkbox"> hierarchical model</li><li style="list-style: none"><input type="checkbox"> 자율평가 f1-score 0.80 찍기</li><li style="list-style: none"><input type="checkbox"> 발표 자료</li><li style="list-style: none"><input type="checkbox"> 트러블 슈팅</li></ul></li><li style="list-style: none"><input type="checkbox"> DSS: 프로그래밍 <code>&lt;Database - SQL&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 프로그래밍 <code>&lt;Database - noSQL&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 프로그래밍 <code>&lt;웹 크롤링&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 수학 <code>&lt;53절. 신경망 모형 기초&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 수학 <code>&lt;54절. 신경망 성능 개선&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 수학 <code>&lt;55절. CNN&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 수학 <code>&lt;55절. 확률론적 언어모형과 RNN&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 수학 <code>&lt;57절. GAN&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> 인성면접 답안 대비 (개인 신상, 취미, 특기 관련 질문)</li><li style="list-style: none"><input type="checkbox"> 관심 기업 조사</li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018-08-07-TIL</title>
      <link href="/2018/08/07/2018-08-07-TIL/"/>
      <url>/2018/08/07/2018-08-07-TIL/</url>
      
        <content type="html"><![CDATA[<p>공부한 것 &amp; 리뷰</p><ul><li>어제부터 계속 블로그에 jupyter notebook 파일 올리기를 시도하는 중인데 정체를 알 수 없는 error에 막혀있다. 에러를 해결하고 싶다!!!</li><li>분류 팀 프로젝트 <code>&lt;블레이드앤소울 유저 이탈 예측&gt;</code><ul><li>EDA 정리</li></ul></li><li>DSS 수업: <code>&lt;56절. 확률론적 언어모형과 RNN&gt;</code>, <code>&lt;57절. GAN&gt;</code><ul><li>딥러닝까지의 진도가 끝나버렸다. 맙소사! </li></ul></li></ul><p>내일 공부할 것</p><ul><li>분류 팀 프로젝트 <code>&lt;블레이드앤소울 유저 이탈 예측&gt;</code><ul><li>class별 예측력 향상! </li></ul></li></ul><p>이번 주에 공부할 것</p><ul><li style="list-style: none"><input type="checkbox"> 분류 팀 프로젝트 <code>&lt;블레이드앤소울 유저 이탈 예측&gt;</code><ul><li style="list-style: none"><input type="checkbox" checked> 전체 변수 사용 random forest model</li><li style="list-style: none"><input type="checkbox"> hierarchical model</li><li style="list-style: none"><input type="checkbox"> 자율평가 f1-score 0.80 찍기</li><li style="list-style: none"><input type="checkbox"> 발표 자료</li><li style="list-style: none"><input type="checkbox"> 트러블 슈팅</li></ul></li><li style="list-style: none"><input type="checkbox"> DSS: 프로그래밍 <code>&lt;Database - SQL&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 프로그래밍 <code>&lt;Database - noSQL&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 프로그래밍 <code>&lt;웹 크롤링&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 수학 <code>&lt;53절. 신경망 모형 기초&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 수학 <code>&lt;54절. 신경망 성능 개선&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 수학 <code>&lt;55절. CNN&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 수학 <code>&lt;55절. 확률론적 언어모형과 RNN&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 수학 <code>&lt;57절. GAN&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> 인성면접 답안 대비 (개인 신상, 취미, 특기 관련 질문)</li><li style="list-style: none"><input type="checkbox"> 관심 기업 조사</li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018-08-06-TIL</title>
      <link href="/2018/08/05/2018-08-06-TIL/"/>
      <url>/2018/08/05/2018-08-06-TIL/</url>
      
        <content type="html"><![CDATA[<p>공부한 것 &amp; 리뷰</p><ul><li>분류 팀 프로젝트 <code>&lt;블레이드앤소울 유저 이탈 예측&gt;</code><ul><li>랜덤포레스트 모델링</li></ul></li><li>python 기초 문법 복습, 정리해서 블로그에 포스팅<ul><li>hexo-jupyter나 hexo-ipython이 잘 되지 않아 그냥 md파일로 변환해서 올렸다ㅜ  </li></ul></li></ul><p>내일 공부할 것</p><ul><li>DSS 수업: <code>&lt;56절. 확률론적 언어모형과 RNN&gt;</code></li><li>분류 팀 프로젝트 <code>&lt;블레이드앤소울 유저 이탈 예측&gt;</code><ul><li>class별 예측력 향상! </li></ul></li></ul><p>이번 주에 공부할 것</p><ul><li style="list-style: none"><input type="checkbox"> 분류 팀 프로젝트 <code>&lt;블레이드앤소울 유저 이탈 예측&gt;</code><ul><li style="list-style: none"><input type="checkbox" checked> 전체 변수 사용 random forest model</li><li style="list-style: none"><input type="checkbox"> hierarchical model</li><li style="list-style: none"><input type="checkbox"> 자율평가 f1-score 0.80 찍기</li><li style="list-style: none"><input type="checkbox"> 발표 자료</li><li style="list-style: none"><input type="checkbox"> 트러블 슈팅</li></ul></li><li style="list-style: none"><input type="checkbox"> DSS: 프로그래밍 <code>&lt;Database - SQL&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 프로그래밍 <code>&lt;Database - noSQL&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 프로그래밍 <code>&lt;웹 크롤링&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 수학 <code>&lt;53절. 신경망 모형 기초&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 수학 <code>&lt;54절. 신경망 성능 개선&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 수학 <code>&lt;55절. CNN&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> 인성면접 답안 대비 (개인 신상, 취미, 특기 관련 질문)</li><li style="list-style: none"><input type="checkbox"> 관심 기업 조사</li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018-08-04-TIL</title>
      <link href="/2018/08/05/2018-08-04-TIL/"/>
      <url>/2018/08/05/2018-08-04-TIL/</url>
      
        <content type="html"><![CDATA[<p>공부한 것 &amp; 리뷰</p><ul><li>DSS 수업: <ul><li>CNN</li><li>RNN 소개</li></ul></li><li>분류 팀 프로젝트 &lt;블레이드앤소울 유저 이탈 예측&gt;<ul><li>랜덤포레스트 모델링</li></ul></li></ul><p>내일 공부할 것</p><ul><li>분류 팀 프로젝트 &lt;블레이드앤소울 유저 이탈 예측&gt;<ul><li>나이브 베이즈 모형 모델링</li></ul></li><li>개인 프로젝트<ul><li>3대 기획사 아이돌 사진 크롤링</li></ul></li></ul><p>이번 주에 공부할 것</p><ul><li style="list-style: none"><input type="checkbox"> 분류 팀 프로젝트: 랜덤포레스트, XGBoost, LightGBM 돌려보기</li><li style="list-style: none"><input type="checkbox"> DSS: 프로그래밍 <code>&lt;Database - SQL&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 프로그래밍 <code>&lt;Database - noSQL&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 프로그래밍 <code>&lt;웹 크롤링&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox" checked> DSS: 수학 <code>&lt;45절. 로지스틱 회귀분석&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox" checked> DSS: 수학 <code>&lt;46절. QDA와 나이브 베이즈 모형&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox" checked> DSS: 수학 <code>&lt;50절. 커널 서포트 벡터 머신&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox" checked> DSS: 수학 <code>&lt;51절. 모형 최적화&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox" checked> DSS: 수학 <code>&lt;52절. 비대칭 데이터 문제&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 수학 <code>&lt;53절. 신경망 모형 기초&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 수학 <code>&lt;54절. 신경망 성능 개선&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> 인성면접 답안 대비 (개인 신상, 취미, 특기 관련 질문)</li><li style="list-style: none"><input type="checkbox"> 관심 기업 조사</li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018-08-03-TIL</title>
      <link href="/2018/08/04/2018-08-03-TIL/"/>
      <url>/2018/08/04/2018-08-03-TIL/</url>
      
        <content type="html"><![CDATA[<p>공부한 것 &amp; 리뷰</p><ul><li>DSS 수업: 프로그래밍 - 네이버 기사 카테고리 분류 모형 flask로 서비스하기</li><li>분류 팀 프로젝트 &lt;블레이드앤소울 유저 이탈 예측&gt;<ul><li>party data에 대한 새로운 변수 생성 및 모델링</li></ul></li></ul><p>내일 공부할 것</p><ul><li>DSS 수업</li><li>분류 팀 프로젝트 &lt;블레이드앤소울 유저 이탈 예측&gt;<ul><li>나이브 베이즈 모형 모델링     </li></ul></li></ul><p>이번 주에 공부할 것</p><ul><li style="list-style: none"><input type="checkbox"> 분류 팀 프로젝트: 랜덤포레스트, XGBoost, LightGBM 돌려보기</li><li style="list-style: none"><input type="checkbox"> DSS: 프로그래밍 <code>&lt;Database - SQL&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 프로그래밍 <code>&lt;Database - noSQL&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 프로그래밍 <code>&lt;웹 크롤링&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox" checked> DSS: 수학 <code>&lt;45절. 로지스틱 회귀분석&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox" checked> DSS: 수학 <code>&lt;46절. QDA와 나이브 베이즈 모형&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox" checked> DSS: 수학 <code>&lt;50절. 커널 서포트 벡터 머신&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox" checked> DSS: 수학 <code>&lt;51절. 모형 최적화&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox" checked> DSS: 수학 <code>&lt;52절. 비대칭 데이터 문제&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 수학 <code>&lt;53절. 신경망 모형 기초&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 수학 <code>&lt;54절. 신경망 성능 개선&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> 인성면접 답안 대비 (개인 신상, 취미, 특기 관련 질문)</li><li style="list-style: none"><input type="checkbox"> 관심 기업 조사</li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018-08-02-TIL</title>
      <link href="/2018/08/03/2018-08-02-TIL/"/>
      <url>/2018/08/03/2018-08-02-TIL/</url>
      
        <content type="html"><![CDATA[<p>공부한 것 &amp; 리뷰</p><ul><li>DSS 수업: 프로그래밍 ‘&lt;추천시스템&gt;’</li><li>DSS 졸업생 특강</li><li>분류 팀 프로젝트 &lt;블레이드앤소울 유저 이탈 예측&gt;<ul><li>party data에 대한 새로운 변수 생성에 대해 논의</li></ul></li><li>DSS: <code>&lt;46절&gt;</code> - 나이브 베이즈 모형 복습</li><li>DSS: 졸업생 특강 - 현업 케이스 발표</li></ul><p>내일 공부할 것</p><ul><li>DSS 수업</li><li>분류 팀 프로젝트 &lt;블레이드앤소울 유저 이탈 예측&gt;<ul><li>party 관련 새로운 변수 생성하고 다시 모델링</li><li>복습을 하면서 보니 나이브 베이즈 모형을 써도 좋지 않을까 싶다!     </li></ul></li></ul><p>이번 주에 공부할 것</p><ul><li style="list-style: none"><input type="checkbox"> 분류 팀 프로젝트: 랜덤포레스트, XGBoost, LightGBM 돌려보기</li><li style="list-style: none"><input type="checkbox"> DSS: 프로그래밍 <code>&lt;Database - SQL&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 프로그래밍 <code>&lt;Database - noSQL&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 프로그래밍 <code>&lt;웹 크롤링&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox" checked> DSS: 수학 <code>&lt;45절. 로지스틱 회귀분석&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox" checked> DSS: 수학 <code>&lt;46절. QDA와 나이브 베이즈 모형&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox" checked> DSS: 수학 <code>&lt;50절. 커널 서포트 벡터 머신&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox" checked> DSS: 수학 <code>&lt;51절. 모형 최적화&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox" checked> DSS: 수학 <code>&lt;52절. 비대칭 데이터 문제&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 수학 <code>&lt;53절. 신경망 모형 기초&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 수학 <code>&lt;54절. 신경망 성능 개선&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> 인성면접 답안 대비 (개인 신상, 취미, 특기 관련 질문)</li><li style="list-style: none"><input type="checkbox"> 관심 기업 조사</li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018-08-01-TIL</title>
      <link href="/2018/08/02/2018-08-01-TIL/"/>
      <url>/2018/08/02/2018-08-01-TIL/</url>
      
        <content type="html"><![CDATA[<p>공부한 것 &amp; 리뷰</p><ul><li>분류 팀 프로젝트 <ul><li>중간 크로스 체크: 다른 모든 팀들의 프로젝트 진행 상황에 대해서 들을 수 있었다. 우리 팀은 모델링 진도가 늦어 조급해지는 느낌!</li><li>빅콘테스트 측에서 자율평가를 위한 leader board를 오픈했다. 몇몇 팀이 제출해서 랭킹이 올라오기 시작했는데 f1 score 0.70 정도가 1등인 상황</li></ul></li><li>DSS: <code>&lt;46절&gt;</code> - QDA &amp; LDA 복습</li><li>벌써 8월이 시작되었다. 날짜가 믿을 수 없이 빨리 흘러간다! 복습도 속도를 붙여야하고 개인 프로젝트도 빨리 결정을 해서 조금씩 시작해나가야겠다 </li></ul><p>내일 공부할 것</p><ul><li>DSS 수업: 프로그래밍 ‘&lt;추천시스템&gt;’</li><li>DSS 졸업생 특강</li></ul><p>이번 주에 공부할 것</p><ul><li style="list-style: none"><input type="checkbox"> 분류 팀 프로젝트: 랜덤포레스트, XGBoost, LightGBM 돌려보기</li><li style="list-style: none"><input type="checkbox"> DSS: 프로그래밍 <code>&lt;Database - SQL&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 프로그래밍 <code>&lt;Database - noSQL&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 프로그래밍 <code>&lt;웹 크롤링&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox" checked> DSS: 수학 <code>&lt;45절. 로지스틱 회귀분석&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 수학 <code>&lt;46절. QDA와 나이브 베이즈 모형&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox" checked> DSS: 수학 <code>&lt;50절. 커널 서포트 벡터 머신&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox" checked> DSS: 수학 <code>&lt;51절. 모형 최적화&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox" checked> DSS: 수학 <code>&lt;52절. 비대칭 데이터 문제&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 수학 <code>&lt;53절. 신경망 모형 기초&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 수학 <code>&lt;54절. 신경망 성능 개선&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> 인성면접 답안 대비 (개인 신상, 취미, 특기 관련 질문)</li><li style="list-style: none"><input type="checkbox"> 관심 기업 조사</li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018-07-31-TIL</title>
      <link href="/2018/07/31/2018-07-31-TIL/"/>
      <url>/2018/07/31/2018-07-31-TIL/</url>
      
        <content type="html"><![CDATA[<p>공부한 것 &amp; 리뷰</p><ul><li>분류 팀 프로젝트 중간 크로스 체크 발표 자료 정리</li><li>DSS: 수학 <code>&lt;50절. 커널 서포트 벡터 머신&gt;</code> 복습</li><li>DSS: 수학 <code>&lt;51절. 모형 최적화&gt;</code> 복습</li><li>DSS: 수학 <code>&lt;52절. 비대칭 데이터 문제&gt;</code> 복습</li><li>DSS: 수학 <code>&lt;45절. 로지스틱 회귀분석&gt;</code> 복습</li></ul><p>내일 공부할 것</p><ul><li>DSS: 팀 프로젝트 중간 크로스 체크</li><li>DSS: 프로그래밍 <code>&lt;Database - SQL&gt;</code> 복습하기</li><li>DSS: 프로그래밍 <code>&lt;웹 크롤링&gt;</code> 복습하기</li></ul><p>이번 주에 공부할 것</p><ul><li style="list-style: none"><input type="checkbox"> 분류 팀 프로젝트: 랜덤포레스트, XGBoost, LightGBM 돌려보기</li><li style="list-style: none"><input type="checkbox"> DSS: 프로그래밍 <code>&lt;Database - SQL&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 프로그래밍 <code>&lt;Database - noSQL&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 프로그래밍 <code>&lt;웹 크롤링&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox" checked> DSS: 수학 <code>&lt;45절. 로지스틱 회귀분석&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 수학 <code>&lt;46절. QDA와 나이브 베이즈 모형&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox" checked> DSS: 수학 <code>&lt;50절. 커널 서포트 벡터 머신&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox" checked> DSS: 수학 <code>&lt;51절. 모형 최적화&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox" checked> DSS: 수학 <code>&lt;52절. 비대칭 데이터 문제&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 수학 <code>&lt;53절. 신경망 모형 기초&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 수학 <code>&lt;54절. 신경망 성능 개선&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> 인성면접 답안 대비 (개인 신상, 취미, 특기 관련 질문)</li><li style="list-style: none"><input type="checkbox"> 관심 기업 조사</li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018-07-30-TIL</title>
      <link href="/2018/07/31/2018-07-30-TIL/"/>
      <url>/2018/07/31/2018-07-30-TIL/</url>
      
        <content type="html"><![CDATA[<p>공부한 것 &amp; 리뷰</p><ul><li>DSS: 수학 &lt;53절&gt; - 신경망 기초 이론 복습</li><li>노트북 Anaconda 환경이 이유는 모르지만 꼬여버렸다. 난데없이 python 2.7로 모든 환경이 바뀌어버렸는데, 방법을 찾다가 결국에는 따로 깔려있던 python과 anaconda를 다 uninstall하고 새로 설치하느라 저녁 수업이 시작하기도 전에 진이 다 빠져버렸다.</li><li>DSS 수업: 수학 &lt;53절&gt; - TensorFlow, Keras, &lt;54절&gt; - 신경망 성능 개선<ul><li>Keras가 확실히 무척 간결하고 편한 것 같다. documentation도 더 보고 팀프로젝트에도 적용해보면서 연습을 더 해봐야겠다. </li></ul></li></ul><p>내일 공부할 것</p><ul><li>분류 팀 프로젝트: 랜덤포레스트 돌려보기, 수요일 중간 발표 자료 정리</li><li>DSS: 수학 <code>&lt;53절. 신경망 모형 기초&gt;</code> 복습하기</li><li>DSS: 프로그래밍 <code>&lt;Database - SQL&gt;</code> 복습하기</li></ul><p>이번 주에 공부할 것</p><ul><li style="list-style: none"><input type="checkbox"> 분류 팀 프로젝트: 랜덤포레스트, XGBoost, LightGBM 돌려보기</li><li style="list-style: none"><input type="checkbox"> DSS: 프로그래밍 <code>&lt;Database - SQL&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 프로그래밍 <code>&lt;Database - noSQL&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 프로그래밍 <code>&lt;웹 크롤링&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 수학 <code>&lt;45절. 로지스틱 회귀분석&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 수학 <code>&lt;46절. QDA와 나이브 베이즈 모형&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 수학 <code>&lt;50절. 커널 서포트 벡터 머신&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 수학 <code>&lt;51절. 모형 최적화&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 수학 <code>&lt;52절. 비대칭 데이터 문제&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 수학 <code>&lt;53절. 신경망 모형 기초&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 수학 <code>&lt;54절. 신경망 성능 개선&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> 인성면접 답안 대비 (개인 신상, 취미, 특기 관련 질문)</li><li style="list-style: none"><input type="checkbox"> 관심 기업 조사</li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL Intermediate Syntax</title>
      <link href="/2018/07/30/Database_05_mysql%20intermediate%20syntax/"/>
      <url>/2018/07/30/Database_05_mysql%20intermediate%20syntax/</url>
      
        <content type="html"><![CDATA[<h2 id="1-숫자-올림-반올림-내림"><a href="#1-숫자-올림-반올림-내림" class="headerlink" title="1. 숫자 올림, 반올림, 내림"></a>1. 숫자 올림, 반올림, 내림</h2><h3 id="1-올림"><a href="#1-올림" class="headerlink" title="1) 올림"></a>1) 올림</h3><ul><li>syntax: <code>ceil(숫자)</code></li><li>자릿수를 지정할 수 없기 때문에 아래와 같은 trick이 필요 </li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">ceil</span>(<span class="number">12.345</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 올림 자릿수 지정</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">ceil</span>(<span class="number">12.345</span>*<span class="number">10</span>)*<span class="number">0.1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 올림 활용</span></span><br><span class="line"><span class="keyword">use</span> world</span><br><span class="line"><span class="keyword">select</span> percentage, <span class="keyword">ceil</span>(percentage)</span><br><span class="line"><span class="keyword">from</span> countrylanguage</span><br></pre></td></tr></table></figure><h3 id="2-반올림"><a href="#2-반올림" class="headerlink" title="2) 반올림"></a>2) 반올림</h3><ul><li>syntax: <code>round(숫자, 결과 소수점 자릿수)</code></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">select round(12.345, 2)</span><br><span class="line"></span><br><span class="line">select percentage, round(percentage,0)</span><br><span class="line">from countrylanguage</span><br></pre></td></tr></table></figure><h3 id="3-내림"><a href="#3-내림" class="headerlink" title="3) 내림"></a>3) 내림</h3><ul><li>syntax: <code>truncate(숫자, 결과 소수점 자릿수)</code></li><li>참고: truncate은 table을 삭제할 때도 사용하는데, delete table과 달리 truncate table은 아예 테이블을 초기화시킴</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">select truncate(12.345, 1)</span><br><span class="line"></span><br><span class="line">select percentage, truncate(percentage,1)</span><br><span class="line">from countrylanguage</span><br></pre></td></tr></table></figure><h2 id="2-조건문"><a href="#2-조건문" class="headerlink" title="2. 조건문"></a>2. 조건문</h2><h3 id="1-if"><a href="#1-if" class="headerlink" title="1) if"></a>1) if</h3><ul><li>syntax: <code>if(조건, 참인 경우, 거짓인 경우)</code> </li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 도시의 인구가 100만이 넘으면 big city, 그렇지 않으면 small city를 scale 컬럼에 출력</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">name</span>, population, <span class="keyword">if</span>(population &gt;= <span class="number">1000000</span>, <span class="string">"big city"</span>, <span class="string">"small city"</span>) <span class="keyword">as</span> scale</span><br><span class="line"><span class="keyword">from</span> city</span><br><span class="line"><span class="keyword">having</span> scale = <span class="string">"small city"</span></span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> population <span class="keyword">desc</span></span><br></pre></td></tr></table></figure><h3 id="2-ifnull"><a href="#2-ifnull" class="headerlink" title="2) ifnull"></a>2) ifnull</h3><ul><li>syntax: <code>ifnull(컬럼이름, 디폴트 데이터)</code> </li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 독립연도가 없는 데이터를 0으로 출력</span></span><br><span class="line"><span class="keyword">select</span> indepyear, <span class="keyword">ifnull</span>(indepyear, <span class="number">0</span>)</span><br><span class="line"><span class="keyword">from</span> country</span><br></pre></td></tr></table></figure><h3 id="3-case-when-then-else-end"><a href="#3-case-when-then-else-end" class="headerlink" title="3) case when then else end"></a>3) case when then else end</h3><ul><li>python의 if문과 비슷하게 사용 </li><li>syntax: <code>case when 조건 then 결과 else 결과 end</code><ul><li><code>when, then</code>은 반복 가능     </li></ul></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 나라별로 인구 10억 이상/1억~10억/1억 이하를 "big, medium, small"로 표시</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">name</span>, population,</span><br><span class="line">  <span class="keyword">case</span> </span><br><span class="line">    <span class="keyword">when</span> population &gt; <span class="number">1000000000</span> <span class="keyword">then</span> <span class="string">"big"</span></span><br><span class="line">    <span class="keyword">when</span> population &gt; <span class="number">100000000</span> <span class="keyword">then</span> <span class="string">"medium"</span></span><br><span class="line">    <span class="keyword">else</span> <span class="string">"small"</span></span><br><span class="line">  <span class="keyword">end</span> <span class="keyword">as</span> scale</span><br><span class="line"><span class="keyword">from</span> country</span><br><span class="line"><span class="keyword">having</span> scale = <span class="string">"medium"</span></span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> population <span class="keyword">desc</span></span><br></pre></td></tr></table></figure><h2 id="3-Date-Format"><a href="#3-Date-Format" class="headerlink" title="3. Date Format"></a>3. Date Format</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> sakila</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">date_format</span>(payment_date, <span class="string">"%Y-%m"</span>) <span class="keyword">as</span> monthly, <span class="keyword">sum</span>(amount)</span><br><span class="line"><span class="keyword">from</span> payment</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> monthly</span><br></pre></td></tr></table></figure><h2 id="4-Join"><a href="#4-Join" class="headerlink" title="4. Join"></a>4. Join</h2><ul><li>join실습에 쓸 test1 database와 user table, addr table 생성</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> test1</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">user</span> (</span><br><span class="line">  user_id <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">unsigned</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  <span class="keyword">name</span> <span class="built_in">varchar</span>(<span class="number">30</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (user_id)</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> addr (</span><br><span class="line">  <span class="keyword">id</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">unsigned</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  addr <span class="built_in">varchar</span>(<span class="number">30</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  user_id <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="keyword">id</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8;</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">user</span>(<span class="keyword">name</span>)</span><br><span class="line"><span class="keyword">VALUES</span> (<span class="string">"jane"</span>),</span><br><span class="line">(<span class="string">"po"</span>),</span><br><span class="line">(<span class="string">"alice"</span>),</span><br><span class="line">(<span class="string">"peter"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> addr(addr, user_id)</span><br><span class="line"><span class="keyword">VALUES</span> (<span class="string">"seoul"</span>, <span class="number">1</span>),</span><br><span class="line">(<span class="string">"pusan"</span>, <span class="number">2</span>),</span><br><span class="line">(<span class="string">"deajeon"</span>, <span class="number">3</span>),</span><br><span class="line">(<span class="string">"deagu"</span>, <span class="number">5</span>),</span><br><span class="line">(<span class="string">"seoul"</span>, <span class="number">6</span>);</span><br></pre></td></tr></table></figure><h3 id="1-Inner-Join"><a href="#1-Inner-Join" class="headerlink" title="1) Inner Join"></a>1) Inner Join</h3><ul><li>그냥 inner join을 사용할 경우 <ul><li>user의 5개 데이터에 addr의 4개 데이터를 각각 mapping해 20 row의 데이터 생성</li></ul></li><li><code>on</code>에 매칭시킬 컬럼을 지정할 경우 <ul><li>일치하는 데이터만 찾아서 join (두 테이블에 다 있는 데이터만 join)</li></ul></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">select *</span><br><span class="line">from user</span><br><span class="line">inner join addr</span><br><span class="line"></span><br><span class="line">select * </span><br><span class="line">from user</span><br><span class="line">inner join addr</span><br><span class="line">on user.user_id = addr.user_id</span><br></pre></td></tr></table></figure><h3 id="2-Left-Join"><a href="#2-Left-Join" class="headerlink" title="2) Left Join"></a>2) Left Join</h3><ul><li>user에 있는 user_id에만 주소를 join함 </li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">select user.user_id, user.name, addr.addr </span><br><span class="line">from user</span><br><span class="line">left join addr</span><br><span class="line">on user.user_id = addr.user_id</span><br></pre></td></tr></table></figure><h3 id="3-Right-Join"><a href="#3-Right-Join" class="headerlink" title="3) Right Join"></a>3) Right Join</h3><ul><li>주소만 있고 user_id, user.name이 null값인 row 생성</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">select user.user_id, user.name, addr.addr </span><br><span class="line">from user</span><br><span class="line">right join addr</span><br><span class="line">on user.user_id = addr.user_id</span><br></pre></td></tr></table></figure><h2 id="5-Union"><a href="#5-Union" class="headerlink" title="5. Union"></a>5. Union</h2><ul><li>union</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">name</span></span><br><span class="line"><span class="keyword">from</span> <span class="keyword">user</span></span><br><span class="line"><span class="keyword">union</span></span><br><span class="line"><span class="keyword">select</span> addr</span><br><span class="line"><span class="keyword">from</span> addr</span><br></pre></td></tr></table></figure><ul><li>union all: 중복이 제거되지 않음</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">name</span></span><br><span class="line"><span class="keyword">from</span> <span class="keyword">user</span></span><br><span class="line"><span class="keyword">union</span> all</span><br><span class="line"><span class="keyword">select</span> addr</span><br><span class="line"><span class="keyword">from</span> addr</span><br></pre></td></tr></table></figure><ul><li>union을 이용한 full outer join<ul><li>syntax: <code>left join 결과 union right join 결과</code></li></ul></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span>  user.name, addr.addr </span><br><span class="line"><span class="keyword">from</span> <span class="keyword">user</span></span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> addr</span><br><span class="line"><span class="keyword">on</span> user.user_id = addr.user_id</span><br><span class="line"><span class="keyword">union</span></span><br><span class="line"><span class="keyword">select</span> user.name, addr.addr </span><br><span class="line"><span class="keyword">from</span> <span class="keyword">user</span></span><br><span class="line"><span class="keyword">right</span> <span class="keyword">join</span> addr</span><br><span class="line"><span class="keyword">on</span> user.user_id = addr.user_id</span><br></pre></td></tr></table></figure><h2 id="6-Sub-query"><a href="#6-Sub-query" class="headerlink" title="6. Sub-query"></a>6. Sub-query</h2><ul><li>sub-query는 query문 안에 사용하는 query</li><li>select절, from절, where절 등에서 사용이 가능</li></ul><h3 id="1-select절에-사용"><a href="#1-select절에-사용" class="headerlink" title="1) select절에 사용"></a>1) select절에 사용</h3><p>전체 나라수, 도시수, 언어수를 하나의 row로 출력하기</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> world</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span></span><br><span class="line">    (<span class="keyword">select</span> <span class="keyword">count</span>(*) <span class="keyword">from</span> country) <span class="keyword">as</span> country_count,</span><br><span class="line">    (<span class="keyword">select</span> <span class="keyword">count</span>(*) <span class="keyword">from</span> city) <span class="keyword">as</span> city_count,</span><br><span class="line">    (<span class="keyword">select</span> <span class="keyword">count</span>(<span class="keyword">distinct</span>(<span class="keyword">language</span>)) <span class="keyword">from</span> countrylanguage) <span class="keyword">as</span> language_count</span><br><span class="line"><span class="keyword">from</span> dual    <span class="comment">-- from dual은 안 써줘도 ok</span></span><br></pre></td></tr></table></figure><h3 id="2-from절에-사용"><a href="#2-from절에-사용" class="headerlink" title="2) from절에 사용"></a>2) from절에 사용</h3><p>800만 이상이 되는 도시의 국가코드 이름, 도시인구수를 출력하기</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 사용할 sub-query</span></span><br><span class="line"><span class="keyword">select</span> countrycode, <span class="keyword">name</span>, population</span><br><span class="line"><span class="keyword">from</span> city</span><br><span class="line"><span class="keyword">where</span> population &gt; <span class="number">8000000</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- filtering을 먼저 한 후에 join </span></span><br><span class="line"><span class="comment">-- join할 때는 최대한 적은 데이터끼리 하는 것이 쿼리 성능 향상에 도움</span></span><br><span class="line"><span class="keyword">select</span> city.countrycode, city.name, country.name, city.population</span><br><span class="line"><span class="keyword">from</span> </span><br><span class="line">    (<span class="keyword">select</span> countrycode, <span class="keyword">name</span>, population</span><br><span class="line">    <span class="keyword">from</span> city</span><br><span class="line">    <span class="keyword">where</span> population &gt; <span class="number">8000000</span>) <span class="keyword">as</span> city</span><br><span class="line"><span class="keyword">join</span> country</span><br><span class="line"><span class="keyword">on</span> city.countrycode = coutry.code</span><br><span class="line"></span><br><span class="line"><span class="comment">-- join을 한 후에 filtering</span></span><br><span class="line"><span class="keyword">select</span> city.countrycode, city.name, country.name, city.population</span><br><span class="line"><span class="keyword">from</span> city</span><br><span class="line"><span class="keyword">join</span> country</span><br><span class="line"><span class="keyword">on</span> city.countrycode = coutry.code</span><br><span class="line"><span class="keyword">having</span> city.population &gt; <span class="number">8000000</span></span><br></pre></td></tr></table></figure><h3 id="3-where절에-사용"><a href="#3-where절에-사용" class="headerlink" title="3) where절에 사용"></a>3) where절에 사용</h3><p>인구 800만 이상 도시의 국가코드, 국가이름, 대통령 이름을 출력<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> code, <span class="keyword">name</span>, headofstate </span><br><span class="line"><span class="keyword">from</span> country</span><br><span class="line"><span class="keyword">where</span> code <span class="keyword">in</span> (</span><br><span class="line"><span class="keyword">select</span> countrycode <span class="keyword">from</span> city <span class="keyword">where</span> population &gt; <span class="number">8000000</span> </span><br><span class="line">)</span><br></pre></td></tr></table></figure></p><h2 id="7-Index"><a href="#7-Index" class="headerlink" title="7. Index"></a>7. Index</h2><ul><li>테이블에서 데이터를 검색할 때 빠르게 찾을 수 있도록 해주는 기능</li><li>where절에 들어가는 컬럼을 index로 설정해 놓으면 설정한 컬럼을 조건으로 검색할 때 빠르게 검색할 수 있음</li><li>너무 많은 index가 설정되면 데이터가 입력될 때마다 index에 데이터를 넣어야하므로 데이터 입력시 속도가 느려질 수 있음</li><li>그러므로 검색조건으로 자주 사용하는 컬럼에 설정하는 것이 좋음</li></ul><h3 id="1-syntax"><a href="#1-syntax" class="headerlink" title="1) syntax"></a>1) syntax</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">INDEX</span> 인덱스이름</span><br><span class="line"><span class="keyword">ON</span> 테이블이름 (컬럼이름<span class="number">1</span>, 컬럼이름<span class="number">2</span>)</span><br></pre></td></tr></table></figure><h3 id="2-example"><a href="#2-example" class="headerlink" title="2) example"></a>2) example</h3><p>city 테이블에 population 컬럼을 index로 추가<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">index</span> Population</span><br><span class="line"><span class="keyword">on</span> city (population)</span><br></pre></td></tr></table></figure></p><h3 id="3-explain"><a href="#3-explain" class="headerlink" title="3) explain"></a>3) explain</h3><p>query를 실행하기 전에 index로 검색을 하는지 확인 가능<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 100만이 넘는 도시의 데이터의 출력 실행계획을 확인</span><br><span class="line"><span class="keyword">explain</span></span><br><span class="line"><span class="keyword">select</span> *</span><br><span class="line"><span class="keyword">from</span> city</span><br><span class="line"><span class="keyword">where</span> population &gt;= <span class="number">1000000</span></span><br></pre></td></tr></table></figure></p><h3 id="4-employees-db로-테스트"><a href="#4-employees-db로-테스트" class="headerlink" title="4) employees db로 테스트"></a>4) employees db로 테스트</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> employees</span><br><span class="line"></span><br><span class="line"><span class="keyword">explain</span></span><br><span class="line"><span class="keyword">select</span> *</span><br><span class="line"><span class="keyword">from</span> salaries</span><br><span class="line"><span class="keyword">where</span> salary &gt; <span class="number">60000</span> <span class="keyword">and</span> <span class="keyword">to_date</span> &gt; <span class="string">"2000-01-01"</span></span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> salary</span><br><span class="line"><span class="keyword">limit</span> <span class="number">1000</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">index</span> salaries</span><br><span class="line"><span class="keyword">on</span> salaries (salary)</span><br></pre></td></tr></table></figure><h2 id="8-View"><a href="#8-View" class="headerlink" title="8. View"></a>8. View</h2><ul><li>가상의 테이블로 특정 데이터만 보고자할 때 사용 (특정 컬럼의 데이터를 보여주는 역할만 수행)</li><li>view를 사용함으로써 query를 더 간단하게 만들 수 있음</li><li>컬럼의 수정이나 인덱스 설정 같은 명령을 할 수 없음</li></ul><h3 id="1-syntax-1"><a href="#1-syntax-1" class="headerlink" title="1) syntax"></a>1) syntax</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> &lt;<span class="keyword">view</span> 이름&gt; <span class="keyword">AS</span></span><br><span class="line">(<span class="keyword">QUERY</span>)</span><br></pre></td></tr></table></figure><h3 id="2-example-1"><a href="#2-example-1" class="headerlink" title="2) example"></a>2) example</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> world</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> *</span><br><span class="line"><span class="keyword">from</span> countrylanguage</span><br><span class="line"><span class="keyword">join</span>(</span><br><span class="line">    <span class="keyword">select</span> country.code, country.name <span class="keyword">as</span> country_name, city.name <span class="keyword">as</span> city_name</span><br><span class="line">    <span class="keyword">from</span> country</span><br><span class="line">    <span class="keyword">join</span> city</span><br><span class="line">    <span class="keyword">on</span> country.code = city.countrycode</span><br><span class="line">) <span class="keyword">as</span> s1</span><br><span class="line"><span class="keyword">on</span> s1.code = countrylanguage.countrycode</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">view</span> code_name <span class="keyword">as</span> </span><br><span class="line"><span class="keyword">select</span> country.code, country.name <span class="keyword">as</span> country_name, city.name <span class="keyword">as</span> city_name</span><br><span class="line"><span class="keyword">from</span> country</span><br><span class="line"><span class="keyword">join</span> city</span><br><span class="line"><span class="keyword">on</span> country.code = city.countrycode</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> *</span><br><span class="line"><span class="keyword">from</span> countrylanguage</span><br><span class="line"><span class="keyword">join</span> code_name</span><br><span class="line"><span class="keyword">on</span> code_name.code = countrylanguage.countrycode</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> DataScience </category>
          
          <category> Database 데이터베이스 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Database </tag>
            
            <tag> MySQL </tag>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018-07-28-TIL</title>
      <link href="/2018/07/29/2018-07-28-TIL/"/>
      <url>/2018/07/29/2018-07-28-TIL/</url>
      
        <content type="html"><![CDATA[<p>공부한 것 &amp; 리뷰</p><ul><li>DSS: 수학 딥러닝 기초에 들어감. Theano를 배움 </li><li>DSS: 수학 &lt;49절&gt; - 서포트벡터 머신 복습</li></ul><p>내일 공부할 것</p><ul><li>DSS: 수학 머신러닝 파트 복습</li><li>DSS: 53절 복습</li><li>DSS: 프로그래밍 <code>&lt;웹 크롤링&gt;</code> 복습하기</li></ul><p>이번 주에 공부할 것</p><ul><li style="list-style: none"><input type="checkbox" checked> 분류 팀 프로젝트: 데이터 형태 정리</li><li style="list-style: none"><input type="checkbox" checked> DSS: 프로그래밍 <code>&lt;Database 개념 및 기초&gt;</code> 공부 </li><li style="list-style: none"><input type="checkbox"> DSS: 프로그래밍 <code>&lt;Database - SQL&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 프로그래밍 <code>&lt;Database - noSQL&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 프로그래밍 <code>&lt;웹 크롤링&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 수학 <code>&lt;45절. 로지스틱 회귀분석&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 수학 <code>&lt;46절. QDA와 나이브 베이즈 모형&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox" checked> DSS: 수학 <code>&lt;47절. 의사 결정 나무&gt;</code> 복습하기 </li><li style="list-style: none"><input type="checkbox" checked> DSS: 수학 <code>&lt;48절. 앙상블 기법&gt;</code> 복습하기 </li><li style="list-style: none"><input type="checkbox" checked> DSS: 수학 <code>&lt;49절. 퍼셉트론과 서포트벡터 머신&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 수학 <code>&lt;50절. 커널 서포트 벡터 머신&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 수학 <code>&lt;51절. 모형 최적화&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 수학 <code>&lt;52절. 비대칭 데이터 문제&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> 인성면접 답안 대비 (개인 신상, 취미, 특기 관련 질문)</li><li style="list-style: none"><input type="checkbox"> 관심 기업 조사</li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018-07-27-TIL</title>
      <link href="/2018/07/28/2018-07-27-TIL/"/>
      <url>/2018/07/28/2018-07-27-TIL/</url>
      
        <content type="html"><![CDATA[<p>공부한 것 &amp; 리뷰</p><ul><li>팀 프로젝트: 2018 빅콘테스트 블레이드앤소울 이탈자 예측 문제<ul><li>드디어 trade까지 변수 만드는 작업이 일단 완료되었는가 했더니 갑자기 다음주 월요일에 새롭게 수정된 데이터를 배포한다는 공지가 떠버렸다. 이게 무슨 일이람 ㄷㄷ</li></ul></li><li>DSS 수업: python ORM(SQLAlchemy), 추천시스템<ul><li>오늘로써 데이터베이스 수업이 끝났다. SQL은 깔끔함이 마음에 들었고 mongodb는 아직 잘 모르겠지만 확실히 데이터베이스는 현업에서 필수적이고 중요한 기술이니 착실히 복습해두어야겠다.</li></ul></li><li>DSS: 수학 &lt;49절. 퍼셉트론과 서포트벡터 머신&gt; 복습<ul><li>퍼셉트론 부분을 복습함  </li></ul></li></ul><p>내일 공부할 것</p><ul><li>DSS 수업: 내일부터 딥러닝에 들어간다! </li></ul><p>이번 주에 공부할 것</p><ul><li style="list-style: none"><input type="checkbox" checked> 분류 팀 프로젝트: 데이터 형태 정리</li><li style="list-style: none"><input type="checkbox" checked> DSS: 프로그래밍 <code>&lt;Database 개념 및 기초&gt;</code> 공부 </li><li style="list-style: none"><input type="checkbox"> DSS: 프로그래밍 <code>&lt;Database - SQL&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 프로그래밍 <code>&lt;Database - noSQL&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 프로그래밍 <code>&lt;웹 크롤링&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 수학 <code>&lt;45절. 로지스틱 회귀분석&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 수학 <code>&lt;46절. QDA와 나이브 베이즈 모형&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox" checked> DSS: 수학 <code>&lt;47절. 의사 결정 나무&gt;</code> 복습하기 </li><li style="list-style: none"><input type="checkbox" checked> DSS: 수학 <code>&lt;48절. 앙상블 기법&gt;</code> 복습하기 </li><li style="list-style: none"><input type="checkbox"> DSS: 수학 <code>&lt;49절. 퍼셉트론과 서포트벡터 머신&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 수학 <code>&lt;50절. 커널 서포트 벡터 머신&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 수학 <code>&lt;51절. 모형 최적화&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 수학 <code>&lt;52절. 비대칭 데이터 문제&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> 인성면접 답안 대비 (개인 신상, 취미, 특기 관련 질문)</li><li style="list-style: none"><input type="checkbox"> 관심 기업 조사</li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL Basic Syntax</title>
      <link href="/2018/07/28/Database_04_mysql%20basic%20syntax/"/>
      <url>/2018/07/28/Database_04_mysql%20basic%20syntax/</url>
      
        <content type="html"><![CDATA[<p>본격적으로 RDBMS(나의 경우는 workbench)를 사용하여 MySQL 문법을 익혀보자</p><ul><li>명령어는 대문자로 쓰는 것이 컨벤션이나 소문자로 써도 실행에는 문제가 없음</li><li>마지막에 세미콜론(;) 또한 쓰지 않아도 실행에는 문제가 없음</li></ul><a id="more"></a> <h2 id="1-Create"><a href="#1-Create" class="headerlink" title="1. Create"></a>1. Create</h2><h3 id="1-Create-Database"><a href="#1-Create-Database" class="headerlink" title="1) Create Database"></a>1) Create Database</h3><ul><li><p>Database 생성</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> &lt;db_name&gt;;</span><br></pre></td></tr></table></figure></li><li><p>Database 선택</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">USE</span> &lt;db_name&gt;;</span><br></pre></td></tr></table></figure></li><li><p>현재 database 확인</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DATABASE</span>();</span><br></pre></td></tr></table></figure></li></ul><h3 id="2-Create-Table"><a href="#2-Create-Table" class="headerlink" title="2) Create Table"></a>2) Create Table</h3><p>Table을 생성할 때에는 컬럼이름, 데이터타입, 제약조건에 대한 내용이 들어감</p><ul><li><p>Table 생성</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> &lt;table_name&gt;(</span><br><span class="line">    column_name_1 column_datatype_1 column_constraint_1,</span><br><span class="line">    column_name_2 column_datatype_2 column_constraint_2,</span><br><span class="line">    ...</span><br><span class="line">)</span><br></pre></td></tr></table></figure></li><li><p>제약조건이 없는 user1 Table 생성</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> user1(</span><br><span class="line">    user_id <span class="built_in">INT</span>,</span><br><span class="line">    <span class="keyword">name</span> <span class="built_in">Varchar</span>(<span class="number">20</span>),</span><br><span class="line">    email <span class="built_in">Varchar</span>(<span class="number">30</span>),</span><br><span class="line">    age <span class="built_in">INT</span>(<span class="number">3</span>),</span><br><span class="line">    rdate <span class="built_in">DATE</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure></li><li><p>제약조건이 있는 user2 Table 생성</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> user2(</span><br><span class="line">    user_id <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span> AUTO_INCREMENT,</span><br><span class="line">    <span class="keyword">name</span> <span class="built_in">Varchar</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">    email <span class="built_in">Varchar</span>(<span class="number">30</span>) <span class="keyword">UNIQUE</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">    age <span class="built_in">INT</span>(<span class="number">3</span>) <span class="keyword">DEFAULT</span> <span class="string">'30'</span>,</span><br><span class="line">    rdate <span class="keyword">TIMESTAMP</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure></li><li><p>Database 선택</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">USE</span> &lt;db_name&gt;;</span><br></pre></td></tr></table></figure></li><li><p>현재 database 확인</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DATABASE</span>();</span><br></pre></td></tr></table></figure></li></ul><h2 id="2-Alter"><a href="#2-Alter" class="headerlink" title="2. Alter"></a>2. Alter</h2><h3 id="1-Database"><a href="#1-Database" class="headerlink" title="1) Database"></a>1) Database</h3><p>ALTER를 이용하여 database encoding 변경</p><ul><li><p>현재 문자열 인코딩 확인</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">variables</span> <span class="keyword">like</span> <span class="string">"character_set_database"</span>;</span><br></pre></td></tr></table></figure></li><li><p>test 데이터베이스의 문자열 인코딩을 utf8로 변경</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">DATABASE</span> <span class="keyword">test</span> <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> = utf8;</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">DATABASE</span> <span class="keyword">test</span> <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> = <span class="keyword">ascii</span>;</span><br></pre></td></tr></table></figure></li><li><p>문자열 encoding 변경 결과 확인</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">variables</span> <span class="keyword">like</span> <span class="string">"character_set_database"</span>;</span><br></pre></td></tr></table></figure></li></ul><h3 id="2-Table"><a href="#2-Table" class="headerlink" title="2) Table"></a>2) Table</h3><p>ALTER를 이용하여 table의 column 추가, 삭제, 수정</p><ul><li><p>ADD</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- user2 테이블에 TEXT 데이터 타입을 갖는 tmp column 추가</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> user2 <span class="keyword">ADD</span> tmp <span class="built_in">TEXT</span>;</span><br></pre></td></tr></table></figure></li><li><p>MODIFY</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- user2 테이블에 tmp column을 INT(3) 데이터 타입으로 수정</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> user2 <span class="keyword">MODIFY</span> <span class="keyword">COLUMN</span> tmp <span class="built_in">INT</span>(<span class="number">3</span>);</span><br></pre></td></tr></table></figure></li><li><p>DROP</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- user2 테이블의 tmp column을 삭제</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> user2 <span class="keyword">DROP</span> tmp;</span><br></pre></td></tr></table></figure></li></ul><h2 id="3-DROP"><a href="#3-DROP" class="headerlink" title="3. DROP"></a>3. DROP</h2><h3 id="1-Database-1"><a href="#1-Database-1" class="headerlink" title="1) Database"></a>1) Database</h3><ul><li>Database 삭제<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">DATABASE</span> &lt;db_name&gt;;</span><br></pre></td></tr></table></figure></li></ul><h3 id="2-Table-1"><a href="#2-Table-1" class="headerlink" title="2) Table"></a>2) Table</h3><ul><li>Table 삭제<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> &lt;table_name&gt;;</span><br></pre></td></tr></table></figure></li></ul><h2 id="4-INSERT"><a href="#4-INSERT" class="headerlink" title="4. INSERT"></a>4. INSERT</h2><h3 id="1-Syntax"><a href="#1-Syntax" class="headerlink" title="1) Syntax"></a>1) Syntax</h3><ul><li><p>Table 뒤에 오는 column이름은 생략 가능, 대신 VALUES 뒤에 value값이 순서대로 와야 함</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> &lt;table_name&gt;(&lt;column_name_1&gt;, &lt;column_name_1&gt;, ...)</span><br><span class="line"><span class="keyword">VALUES</span>(&lt;value_1&gt;, &lt;value_2&gt; ...)</span><br></pre></td></tr></table></figure></li><li><p>여러 row를 한번에 insert하기</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> &lt;table_name&gt;(&lt;column_name_1&gt;, &lt;column_name_1&gt;, ...)</span><br><span class="line"><span class="keyword">VALUES</span>(&lt;value_1&gt;, &lt;value_2&gt; ...),</span><br><span class="line">(&lt;value_1&gt;, &lt;value_2&gt; ...),</span><br><span class="line">...</span><br><span class="line">(&lt;value_1&gt;, &lt;value_2&gt; ...);</span><br></pre></td></tr></table></figure></li></ul><h3 id="2-Example"><a href="#2-Example" class="headerlink" title="2) Example"></a>2) Example</h3><ul><li>user1 테이블에 user_id, name, email, age, rdate를 입력<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> user1(user_id, <span class="keyword">name</span>, email, age, rdate)</span><br><span class="line"><span class="keyword">VALUES</span>(<span class="number">1</span>, <span class="string">"jane"</span>, <span class="string">"jane@gmail.com"</span>, <span class="number">30</span>, <span class="keyword">now</span>()),</span><br><span class="line">(<span class="number">2</span>, <span class="string">"peter"</span>, <span class="string">"peter@gmail.com"</span>, <span class="number">33</span>, <span class="string">'2017-02-20'</span>),</span><br><span class="line">(<span class="number">3</span>, <span class="string">"alice"</span>, <span class="string">"alice@gmail.com"</span>, <span class="number">23</span>, <span class="string">'2018-01-15'</span>),</span><br><span class="line">(<span class="number">4</span>, <span class="string">"po"</span>, <span class="string">"po@gmail.com"</span>, <span class="number">43</span>, <span class="string">'2002-09-16'</span>),</span><br><span class="line">(<span class="number">5</span>, <span class="string">"andy"</span>, <span class="string">"andy@gmail.com"</span>, <span class="number">17</span>, <span class="string">'2016-04-28'</span>),</span><br><span class="line">(<span class="number">6</span>, <span class="string">"jane"</span>, <span class="string">"jane1234@gmail.com"</span>, <span class="number">33</span>, <span class="string">'2013-09-02'</span>);</span><br></pre></td></tr></table></figure></li></ul><h2 id="4-SELECT"><a href="#4-SELECT" class="headerlink" title="4. SELECT"></a>4. SELECT</h2><h3 id="1-Basic"><a href="#1-Basic" class="headerlink" title="1) Basic"></a>1) Basic</h3><ul><li><p>basic syntax</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> &lt;column_name_1&gt;, &lt;<span class="keyword">column</span>)name_2&gt;, ...</span><br><span class="line"><span class="keyword">FROM</span> &lt;table_name&gt;</span><br></pre></td></tr></table></figure></li><li><p>전체 컬럼 데이터 조회하기 (table 전체)</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> user1</span><br></pre></td></tr></table></figure></li><li><p>일부 컬럼 조회하기</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> user_id, <span class="keyword">name</span>, rdate</span><br><span class="line"><span class="keyword">FROM</span> user1</span><br></pre></td></tr></table></figure></li></ul><h3 id="2-ALIAS"><a href="#2-ALIAS" class="headerlink" title="2) ALIAS"></a>2) ALIAS</h3><p>alias(as)를 이용하여 컬럼명을 변경할 수 있음<br>as는 생략 가능<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> user_id <span class="keyword">as</span> <span class="string">"아이디"</span>, <span class="keyword">name</span> <span class="keyword">as</span> <span class="string">"이름"</span>, rdate <span class="keyword">as</span> <span class="string">"등록일"</span></span><br><span class="line"><span class="keyword">FROM</span> user1</span><br></pre></td></tr></table></figure></p><h3 id="3-DISTINCT"><a href="#3-DISTINCT" class="headerlink" title="3) DISTINCT"></a>3) DISTINCT</h3><p>DISTINCT를 이용하여 특정 컬럼의 중복 데이터를 제거 가능</p><ul><li>name 컬럼을 중복 제거하여 조회<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span>(<span class="keyword">name</span>)</span><br><span class="line"><span class="keyword">FROM</span> user1</span><br></pre></td></tr></table></figure></li></ul><h3 id="4-WHERE"><a href="#4-WHERE" class="headerlink" title="4) WHERE"></a>4) WHERE</h3><p>WHERE절을 이용해서 검색 조건을 추가<br>AND, OR, 연산자 등의 기능을 사용</p><ul><li><p>나이가 30살 이상인 user를 조회</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> user1</span><br><span class="line"><span class="keyword">WHERE</span> age &gt;= <span class="number">30</span></span><br></pre></td></tr></table></figure></li><li><p>등록일이 2016-01-01일 이후의 user를 조회</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> user1</span><br><span class="line"><span class="keyword">WHERE</span> rdate &gt;= <span class="string">"2016-01-01"</span></span><br></pre></td></tr></table></figure></li><li><p>등록일이 2010-01-01에서 2017-12-31 사이인 user를 조회 (AND는 둘다 true이면 true, OR도 사용가능)</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> user1</span><br><span class="line"><span class="keyword">WHERE</span> rdate &gt;= <span class="string">"2010-01-01"</span> <span class="keyword">AND</span> rdate &lt;= <span class="string">"2017-12-13"</span></span><br></pre></td></tr></table></figure></li><li><p>BETWEEN을 사용하여 기간 조회 (숫자데이터도 사용 가능)</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> user1</span><br><span class="line"><span class="keyword">WHERE</span> rdate <span class="keyword">BETWEEN</span> <span class="string">"2010-01-01"</span> <span class="keyword">AND</span> <span class="string">"2017-12-13"</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="5-ORDER-BY"><a href="#5-ORDER-BY" class="headerlink" title="5) ORDER BY"></a>5) ORDER BY</h3><p>ORDER BY를 이용하여 특정 컬럼으로 데이터 정렬 가능</p><ul><li><p>age로 오름차순 정렬 (ASC는 생략이 가능)</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> user1</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> age <span class="keyword">ASC</span></span><br></pre></td></tr></table></figure></li><li><p>age로 내림차순 정렬</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> user1</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> age <span class="keyword">DESC</span></span><br></pre></td></tr></table></figure></li><li><p>age로 내림차순 정렬하고 rdate를 오름차순 정렬</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> user1</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> age <span class="keyword">DESC</span>, rdate</span><br></pre></td></tr></table></figure></li></ul><h3 id="6-CONCAT"><a href="#6-CONCAT" class="headerlink" title="6) CONCAT"></a>6) CONCAT</h3><p>CONCAT을 사용하여 select한 데이터를 합쳐서 새로운 컬럼으로 보여줄 수 있음</p><ul><li>name과 age를 같이 보여주도록 조회<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> email, <span class="keyword">CONCAT</span>(<span class="keyword">name</span>, <span class="string">"("</span>, age, <span class="string">")"</span>) <span class="keyword">AS</span> <span class="string">"name_age"</span></span><br><span class="line"><span class="keyword">FROM</span> user1</span><br></pre></td></tr></table></figure></li></ul><h3 id="7-LIKE"><a href="#7-LIKE" class="headerlink" title="7) LIKE"></a>7) LIKE</h3><p>LIKE를 이용하여 특정 문자열이 들어간 데이터 조회 가능<br>%는 ‘어떤 문자나’와 같은 의미로 “%gmail” 은 gmail 문자열 앞에 아무 문자나 올수 있음을 의미<br>NOT LIKE를 사용하여 특정 문자가 들어가지 않는 데이터 조회 가능</p><ul><li><p>email에 gmail이 들어간 데이터 조회</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> user1</span><br><span class="line"><span class="keyword">WHERE</span> email <span class="keyword">LIKE</span> <span class="string">"%@gmail%"</span></span><br></pre></td></tr></table></figure></li><li><p>email에 gmail이 들어가지 않는 데이터 조회</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> user1</span><br><span class="line"><span class="keyword">WHERE</span> email <span class="keyword">NOT</span> <span class="keyword">LIKE</span> <span class="string">"%@gmail%"</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="8-IN"><a href="#8-IN" class="headerlink" title="8) IN"></a>8) IN</h3><p>여러개의 조건을 만족하는 데이터를 조회하고 싶을때 사용<br>WHERE 절의 조건을 여러개 사용하는것을 간단하게 만들 수 있음</p><ul><li><p>name이 peter와 alice인 데이터 조회</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> user1</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">name</span>=<span class="string">"peter"</span> <span class="keyword">OR</span> <span class="keyword">name</span>=<span class="string">"alice"</span></span><br></pre></td></tr></table></figure></li><li><p>name이 peter와 alice인 데이터 조회</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> user1</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">name</span> <span class="keyword">IN</span> (<span class="string">"peter"</span>, <span class="string">"alice"</span>)</span><br></pre></td></tr></table></figure></li></ul><h3 id="9-LIMIT"><a href="#9-LIMIT" class="headerlink" title="9) LIMIT"></a>9) LIMIT</h3><p>LIMIT은 조회하는 데이터의 수를 제한할 때 사용<br><em>데이터가 너무 많은 경우에는 항상 limit을 사용하여 적은 데이터를 조회해야 조회 시간이나 업데이트시의 실수를 줄일수 있음</em></p><ul><li><p>user1 테이블에서 3개의 데이터 조회</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> user1</span><br><span class="line"><span class="keyword">LIMIT</span> <span class="number">3</span></span><br></pre></td></tr></table></figure></li><li><p>user1 테이블에서 두번째에서 네번째까지의 3개의 데이터 조회</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> user1</span><br><span class="line"><span class="keyword">LIMIT</span> <span class="number">1</span>,<span class="number">3</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="6-UPDATE"><a href="#6-UPDATE" class="headerlink" title="6. UPDATE"></a>6. UPDATE</h2><p>업데이트시에는 항상 select-where로 변경할 데이터를 확인하고 update 해줘야 실수를 줄일 수 있음<br>limit도 함께 사용해주는 것이 좋음</p><h3 id="1-syntax"><a href="#1-syntax" class="headerlink" title="1) syntax"></a>1) syntax</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">UPDATE &lt;table_name&gt;</span><br><span class="line">SET &lt;column_name_1&gt; = &lt;value_1&gt;, &lt;column_name_2&gt; = &lt;value_2&gt;,</span><br><span class="line">WHERE &lt;condition&gt;</span><br></pre></td></tr></table></figure><h3 id="2-example"><a href="#2-example" class="headerlink" title="2) example"></a>2) example</h3><ul><li>jane 이름을 가지고 있는 사람의 나이를 20, 이메일을 <a href="mailto:jane000@daum.net" target="_blank" rel="noopener">jane000@daum.net</a>으로 변경<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> user1</span><br><span class="line"><span class="keyword">SET</span> age=<span class="number">20</span>, email=<span class="string">"jane000@daum.net"</span></span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">name</span>=<span class="string">"jane"</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="7-DELETE"><a href="#7-DELETE" class="headerlink" title="7. DELETE"></a>7. DELETE</h2><h3 id="1-syntax-1"><a href="#1-syntax-1" class="headerlink" title="1) syntax"></a>1) syntax</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> &lt;table_name&gt;</span><br><span class="line"><span class="keyword">WHERE</span> &lt;condition&gt;</span><br></pre></td></tr></table></figure><h3 id="2-example-1"><a href="#2-example-1" class="headerlink" title="2) example"></a>2) example</h3><ul><li>2016-01-01 이전 데이터 삭제<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> user1</span><br><span class="line"><span class="keyword">WHERE</span> rdate &lt; <span class="string">"2016-01-01"</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="8-GROUP-BY"><a href="#8-GROUP-BY" class="headerlink" title="8. GROUP BY"></a>8. GROUP BY</h2><p>GROUP BY는 여러개의 동일한 데이터를 가지는 특정 컬럼을 합쳐주는 역할을 하는 명령<br>sql의 그룹함수: count, min, max, sum, avg</p><ul><li>world 데이터 베이스로 이동<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- world 데이터 베이스는 city, country, countrylanguage 테이블이 있는 데이터 베이스 </span></span><br><span class="line"><span class="keyword">use</span> world</span><br></pre></td></tr></table></figure></li></ul><h3 id="1-GROUP-BY-함수"><a href="#1-GROUP-BY-함수" class="headerlink" title="1) GROUP BY 함수"></a>1) GROUP BY 함수</h3><h4 id="1-COUNT"><a href="#1-COUNT" class="headerlink" title="(1) COUNT"></a>(1) COUNT</h4><ul><li><p>city 테이블의 CountryCode를 묶고 각 코드마다 몇개의 데이터가 있는지 확인</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> CountryCode, <span class="keyword">COUNT</span>(CountryCode)</span><br><span class="line"><span class="keyword">FROM</span> city</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> CountryCode</span><br></pre></td></tr></table></figure></li><li><p>countrylanguage 테이블에서 전체 언어가 몇개 있는지 구하시오.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">COUNT</span>(<span class="keyword">DISTINCT</span>(<span class="keyword">Language</span>)) <span class="keyword">as</span> language_count</span><br><span class="line"><span class="keyword">FROM</span> countrylanguage</span><br></pre></td></tr></table></figure></li></ul><h4 id="2-MAX"><a href="#2-MAX" class="headerlink" title="(2) MAX"></a>(2) MAX</h4><ul><li>대륙별 인구수와 GNP 최대 값을 조회<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> continent, <span class="keyword">MAX</span>(Population) <span class="keyword">as</span> Population, <span class="keyword">MAX</span>(GNP) <span class="keyword">as</span> GNP</span><br><span class="line"><span class="keyword">FROM</span> country</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> continent</span><br></pre></td></tr></table></figure></li></ul><h4 id="3-MIN"><a href="#3-MIN" class="headerlink" title="(3) MIN"></a>(3) MIN</h4><ul><li>대륙별 인구수와 GNP 최소 값을 조회 (GNP와 인구수가 0이 아닌 데이터 중에서)<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> continent, <span class="keyword">MIN</span>(Population) <span class="keyword">as</span> Population, <span class="keyword">MIN</span>(GNP) <span class="keyword">as</span> GNP</span><br><span class="line"><span class="keyword">FROM</span> country</span><br><span class="line"><span class="keyword">WHERE</span> GNP != <span class="number">0</span> <span class="keyword">AND</span> Population != <span class="number">0</span></span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> continent</span><br></pre></td></tr></table></figure></li></ul><h4 id="4-SUM"><a href="#4-SUM" class="headerlink" title="(4) SUM"></a>(4) SUM</h4><ul><li>대륙별 총 인구수와 총 GNP<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> continent, <span class="keyword">SUM</span>(Population) <span class="keyword">as</span> Population, <span class="keyword">SUM</span>(GNP) <span class="keyword">as</span> GNP</span><br><span class="line"><span class="keyword">FROM</span> country</span><br><span class="line"><span class="keyword">WHERE</span> GNP != <span class="number">0</span> <span class="keyword">AND</span> Population != <span class="number">0</span></span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> continent</span><br></pre></td></tr></table></figure></li></ul><h4 id="5-AVG"><a href="#5-AVG" class="headerlink" title="(5) AVG"></a>(5) AVG</h4><ul><li>대륙별 평균 인구수와 평균 GNP 결과를 인구수로 내림차순 정렬<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> continent, <span class="keyword">AVG</span>(Population) <span class="keyword">as</span> Population, <span class="keyword">AVG</span>(GNP) <span class="keyword">as</span> GNP</span><br><span class="line"><span class="keyword">FROM</span> country</span><br><span class="line"><span class="keyword">WHERE</span> GNP != <span class="number">0</span> <span class="keyword">AND</span> Population != <span class="number">0</span></span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> continent</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> Population DESCs</span><br></pre></td></tr></table></figure></li></ul><h3 id="2-HAVING"><a href="#2-HAVING" class="headerlink" title="2) HAVING"></a>2) HAVING</h3><p>GROUP BY에서 반환되는 결과에 조건을 줄 수 있음</p><ul><li><p>대륙별 전체인구를 구하고 5억이상인 대륙만 조회</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> continent, <span class="keyword">SUM</span>(Population) <span class="keyword">as</span> Population</span><br><span class="line"><span class="keyword">FROM</span> country</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> continent</span><br><span class="line"><span class="keyword">HAVING</span> Population &gt; <span class="number">500000000</span></span><br></pre></td></tr></table></figure></li><li><p>대륙별 평균 인구수, 평균 GNP, 1인당 GNP한 결과를 1인당 GNP가 0.01 이상인 데이터를 조회하고 1인당 GNP를 내림차순으로 정렬</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> continent, <span class="keyword">AVG</span>(Population) <span class="keyword">as</span> Population, <span class="keyword">AVG</span>(GNP) <span class="keyword">as</span> GNP,</span><br><span class="line"><span class="keyword">AVG</span>(GNP) / <span class="keyword">AVG</span>(Population) * <span class="number">1000</span> <span class="keyword">as</span> <span class="keyword">AVG</span></span><br><span class="line"><span class="keyword">FROM</span> country</span><br><span class="line"><span class="keyword">WHERE</span> GNP != <span class="number">0</span> <span class="keyword">AND</span> Population != <span class="number">0</span></span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> continent</span><br><span class="line"><span class="keyword">HAVING</span> <span class="keyword">AVG</span> &gt; <span class="number">0.01</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="keyword">AVG</span> <span class="keyword">DESC</span></span><br></pre></td></tr></table></figure></li></ul><hr><h4 id="※-참고-자료"><a href="#※-참고-자료" class="headerlink" title="※ 참고 자료"></a>※ 참고 자료</h4><ul><li>패스트캠퍼스 ‘데이터 사이언스 스쿨 Python 8기’ 수업자료</li></ul>]]></content>
      
      
      <categories>
          
          <category> DataScience </category>
          
          <category> Database 데이터베이스 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Database </tag>
            
            <tag> MySQL </tag>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018-07-26-TIL</title>
      <link href="/2018/07/27/2018-07-26-TIL/"/>
      <url>/2018/07/27/2018-07-26-TIL/</url>
      
        <content type="html"><![CDATA[<p>공부한 것 &amp; 리뷰</p><ul><li>팀 프로젝트: 2018 빅콘테스트 블레이드앤소울 이탈자 예측 문제<ul><li>드디어 제각각 형태이던 train 데이터셋을 예측 대상인 10만개 id에 맞게 변수로 만드는 작업이 어느 정도 완료. 내일부터는 merge해서 정리해보고 진도를 좀 나갈 수 있을 것 같다 </li></ul></li><li>DSS 수업: 데이터베이스 - NoSQL, mongodb with python<ul><li>jupyter notebook을 이용해서 MySQL과 mongoDB사이에서 데이터를 migration하는 내용은 익히면 현업에서도 유용할 것 같다. </li><li>python dataframe에서 MySQL로 데이터를 보낼 때 한글 str을 보내는데 인코딩 관련해서 에러가 계속 발생했는데 내일 해결 방법을 찾아봐야겠다.</li></ul></li><li>DSS: 수학 &lt;48절. 앙상블 기법&gt; 복습<ul><li>random forest와 XGBoost!</li><li>팀프로젝트에 lightGBM도 함께 사용해봐야겠다  </li></ul></li><li>DSS 현업자 특강: 우아한 형제들 데이터 서비스팀 직원 분의 커리어 특강</li></ul><p>내일 공부할 것</p><ul><li>DSS 수업: ORM</li></ul><p>이번 주에 공부할 것</p><ul><li style="list-style: none"><input type="checkbox"> 분류 팀 프로젝트: 데이터 형태 정리, EDA</li><li style="list-style: none"><input type="checkbox" checked> DSS: 프로그래밍 <code>&lt;Database 개념 및 기초&gt;</code> 공부 </li><li style="list-style: none"><input type="checkbox"> DSS: 프로그래밍 <code>&lt;Database - SQL&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 프로그래밍 <code>&lt;Database - noSQL&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 프로그래밍 <code>&lt;웹 크롤링&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 수학 <code>&lt;45절. 로지스틱 회귀분석&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 수학 <code>&lt;46절. QDA와 나이브 베이즈 모형&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox" checked> DSS: 수학 <code>&lt;47절. 의사 결정 나무&gt;</code> 복습하기 </li><li style="list-style: none"><input type="checkbox" checked> DSS: 수학 <code>&lt;48절. 앙상블 기법&gt;</code> 복습하기 </li><li style="list-style: none"><input type="checkbox"> DSS: 수학 <code>&lt;49절. 퍼셉트론과 서포트벡터 머신&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 수학 <code>&lt;50절. 커널 서포트 벡터 머신&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 수학 <code>&lt;51절. 모형 최적화&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 수학 <code>&lt;52절. 비대칭 데이터 문제&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> 인성면접 답안 대비 (개인 신상, 취미, 특기 관련 질문)</li><li style="list-style: none"><input type="checkbox"> 관심 기업 조사</li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL Basic - Data Type &amp; Constraint</title>
      <link href="/2018/07/27/Database_03_mysql_basic/"/>
      <url>/2018/07/27/Database_03_mysql_basic/</url>
      
        <content type="html"><![CDATA[<p>MySQL 문법을 익히기 전에 데이터베이스에서 테이블을 생성할 때 알아야하는 데이터 타입과 제약조건에 대해 알아보자</p><a id="more"></a> <h2 id="1-Data-Type"><a href="#1-Data-Type" class="headerlink" title="1. Data Type"></a>1. Data Type</h2><p><a href="https://dev.mysql.com/doc/refman/5.7/en/data-types.html" target="_blank" rel="noopener">reference</a></p><h3 id="1-Numberic"><a href="#1-Numberic" class="headerlink" title="1) Numberic"></a>1) Numberic</h3><p><a href="https://dev.mysql.com/doc/refman/5.7/en/numeric-types.html" target="_blank" rel="noopener">reference</a></p><h4 id="1-정수-타입-integer-types"><a href="#1-정수-타입-integer-types" class="headerlink" title="(1) 정수 타입(integer types)"></a>(1) 정수 타입(integer types)</h4><table><thead><tr><th><center>Type</center></th><th style="text-align:center"><center>Storage  (Bytes)</center></th><th style="text-align:right"><center>Minimum Value Signed</center></th><th style="text-align:center"><center>Minimum Value Unsigned</center></th><th style="text-align:right"><center>Maximum Value Signed</center></th><th style="text-align:right"><center>Maximum Value Unsigned</center></th></tr></thead><tbody><tr><td>TINYINT</td><td style="text-align:center">1</td><td style="text-align:right">-128</td><td style="text-align:center">0</td><td style="text-align:right">127</td><td style="text-align:right">255</td></tr><tr><td>SMALLINT</td><td style="text-align:center">2</td><td style="text-align:right">-32,768</td><td style="text-align:center">0</td><td style="text-align:right">32,767</td><td style="text-align:right">65,535</td></tr><tr><td>MEDIUMINT</td><td style="text-align:center">3</td><td style="text-align:right">-8,388,608</td><td style="text-align:center">0</td><td style="text-align:right">8,388,607</td><td style="text-align:right">16,777,215</td></tr><tr><td>INT</td><td style="text-align:center">4</td><td style="text-align:right">-2,147,483,648</td><td style="text-align:center">0</td><td style="text-align:right">2,147,483,647</td><td style="text-align:right">4,294,967,295</td></tr><tr><td>BIGINT</td><td style="text-align:center">8</td><td style="text-align:right">-2<sup>63</sup></td><td style="text-align:center">0</td><td style="text-align:right">2<sup>63</sup>-1</td><td style="text-align:right">2<sup>64</sup>-1</td></tr></tbody></table><h4 id="2-고정-소수점-타입-fixed-point-types"><a href="#2-고정-소수점-타입-fixed-point-types" class="headerlink" title="(2) 고정 소수점 타입(fixed-point types)"></a>(2) 고정 소수점 타입(fixed-point types)</h4><ul><li><p>DECIMAL(M, D)</p><ul><li>M : 소수점을 포함한 전체 자리수</li><li>D : 소수 부분 자리수<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> user1</span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">COLUMN</span> deci <span class="built_in">DECIMAL</span>(<span class="number">5</span>,<span class="number">2</span>)</span><br></pre></td></tr></table></figure></li></ul></li><li><p>NUMERIC(M, D)</p></li></ul><h4 id="3-실수-floating-point-types"><a href="#3-실수-floating-point-types" class="headerlink" title="(3) 실수 (floating-point types)"></a>(3) 실수 (floating-point types)</h4><p>소수점을 나타내기 위한 데이터 타입으로 아래의 두 타입이 있음(데이터 저장공간의 차이가 있음)</p><ul><li>FLOAT (4byte)</li><li>DOUBLE (8byte)  </li></ul><p>아래와 같이 고정 소수점 타입으로도 사용 가능</p><ul><li>FLOAT(M,D)</li><li>DOUBLE(M,D)</li></ul><h4 id="4-비트-값-타입-bit-value-type"><a href="#4-비트-값-타입-bit-value-type" class="headerlink" title="(4) 비트 값 타입 ( bit value type )"></a>(4) 비트 값 타입 ( bit value type )</h4><p>0과 1로 구성이 되는 2진수(binary) 데이터</p><ul><li>BIT(M)<ul><li>M: 비트의 범위</li><li>예) M을 5로 작성하면 00000(2) ~ 11111(2) 까지 표현 가능</li></ul></li></ul><h2 id="2-Date-amp-Time"><a href="#2-Date-amp-Time" class="headerlink" title="2 Date &amp; Time"></a>2 Date &amp; Time</h2><p><a href="https://dev.mysql.com/doc/refman/5.7/en/date-and-time-types.html" target="_blank" rel="noopener">reference</a></p><h3 id="1-DATE"><a href="#1-DATE" class="headerlink" title="1) DATE"></a>1) DATE</h3><p>DATE는 날짜를 저장하는 데이터 타입</p><ul><li>기본 포맷: “년-월-일”</li></ul><h3 id="2-DATETIME"><a href="#2-DATETIME" class="headerlink" title="2) DATETIME"></a>2) DATETIME</h3><p>DATETIME은 날짜와 시간을 저장하는 데이터 타입</p><ul><li>기본 포맷: “년-월-일 시:분:초”</li></ul><h3 id="3-TIMESTAME"><a href="#3-TIMESTAME" class="headerlink" title="3) TIMESTAME"></a>3) TIMESTAME</h3><p>TIMESTAME는 날짜와 시간을 저장하는 데이터 타입<br>DATETIME과 다르게 날짜를 입력하지 않으면 현재 날짜와 시간을 자동으로 저장</p><h3 id="4-TIME"><a href="#4-TIME" class="headerlink" title="4) TIME"></a>4) TIME</h3><p>TIME은 시간을 저장하는 데이터 타입</p><ul><li>기본 포맷: “시:분:초” </li></ul><h3 id="5-YEAR"><a href="#5-YEAR" class="headerlink" title="5) YEAR"></a>5) YEAR</h3><p>YEAR는 연도를 저장할수 있는 데이터 타입</p><ul><li>YEAR(2)는 2자리의 연도를 저장</li><li>YEAR(4)는 4자리의 연도를 저장</li></ul><h2 id="3-String"><a href="#3-String" class="headerlink" title="3. String"></a>3. String</h2><p><a href="https://dev.mysql.com/doc/refman/5.7/en/string-types.html" target="_blank" rel="noopener">reference</a></p><h3 id="1-CHAR-amp-VARCHAR"><a href="#1-CHAR-amp-VARCHAR" class="headerlink" title="1) CHAR &amp; VARCHAR"></a>1) CHAR &amp; VARCHAR</h3><ol><li>CHAR: 고정형 문자열</li><li>VARCHAR: 가변형 문자열</li></ol><ul><li>CHAR &amp; VARCHAR의 저장형식과 저장용량 비교</li></ul><table><thead><tr><th style="text-align:left">Value</th><th style="text-align:center">CHAR(4)</th><th style="text-align:center">Storage Required</th><th style="text-align:left">VARCHAR(4)</th><th style="text-align:center">Storage Required</th></tr></thead><tbody><tr><td style="text-align:left">‘’</td><td style="text-align:center">‘　　‘</td><td style="text-align:center">4 bytes</td><td style="text-align:left">‘’</td><td style="text-align:center">1 byte</td></tr><tr><td style="text-align:left">‘ab’</td><td style="text-align:center">‘ab　‘</td><td style="text-align:center">4 bytes</td><td style="text-align:left">‘ab’</td><td style="text-align:center">3 bytes</td></tr><tr><td style="text-align:left">‘abcd’</td><td style="text-align:center">‘abcd’</td><td style="text-align:center">4 bytes</td><td style="text-align:left">‘abcd’</td><td style="text-align:center">5 bytes</td></tr><tr><td style="text-align:left">‘abcdefgh’</td><td style="text-align:center">‘abcd’</td><td style="text-align:center">4 bytes</td><td style="text-align:left">‘abcd’</td><td style="text-align:center">5 bytes</td></tr></tbody></table><h3 id="2-TEXT"><a href="#2-TEXT" class="headerlink" title="2) TEXT"></a>2) TEXT</h3><p>CHAR와 VARCHAR는 대체로 크기가 작은 문자열을 저장할때 사용<br>크기가 큰 문자열을 저장할 때는 TEXT를 사용</p><ul><li>TEXT의 타입에 따른 데이터 크기</li></ul><table><thead><tr><th style="text-align:left">Type</th><th style="text-align:right">Maximum Length</th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:left">TINYTEXT</td><td style="text-align:right">255(2<sup>8</sup>-1) bytes</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">TEXT</td><td style="text-align:right">65,535(2<sup>16</sup>-1) bytes</td><td style="text-align:left">= 64KB</td></tr><tr><td style="text-align:left">MEDIUMTEXT</td><td style="text-align:right">16,777,215 (2<sup>24</sup>-1) bytes</td><td style="text-align:left">= 16MB</td></tr><tr><td style="text-align:left">LONGTEXT</td><td style="text-align:right">4,294,967,295 (2<sup>32</sup>-1) bytes</td><td style="text-align:left">= 4GB</td></tr></tbody></table><h2 id="2-Constraint"><a href="#2-Constraint" class="headerlink" title="2. Constraint"></a>2. Constraint</h2><p>데이터 베이스의 테이블을 생성할때 각 컬럼은 각각의 제약조건을 가짐</p><h3 id="1-NOT-NULL"><a href="#1-NOT-NULL" class="headerlink" title="1) NOT NULL"></a>1) NOT NULL</h3><p>NOT NULL 제약조건이 있는 컬럼에 NULL 값(비어있는 값)을 저장할수 없음</p><h3 id="2-UNIQUE"><a href="#2-UNIQUE" class="headerlink" title="2) UNIQUE"></a>2) UNIQUE</h3><p>UNIQUE 제약조건이 있는 컬럼에 같은 값을 저장할 수 없음</p><h3 id="3-PRIMARY-KEY"><a href="#3-PRIMARY-KEY" class="headerlink" title="3) PRIMARY KEY"></a>3) PRIMARY KEY</h3><p>컬럼을 기본키로 설정하기 위해서는 NOT NULL과 UNIQUE 제약조건을 동시에 만족해야 함<br>즉, 컬럼에 비어 있는 값, 중복되는 값을 저장할수 없음<br><strong><em>하나의 테이블에 하나의 컬럼에만 이 조건을 설정 가능</em></strong></p><h3 id="4-FOREIGN-KEY"><a href="#4-FOREIGN-KEY" class="headerlink" title="4) FOREIGN KEY"></a>4) FOREIGN KEY</h3><p>다른 테이블과 연결되는 값이 저장됩니다.</p><h3 id="5-DEFAULT"><a href="#5-DEFAULT" class="headerlink" title="5) DEFAULT"></a>5) DEFAULT</h3><p>데이터를 저장할때 해당 컬럼에 별도의 저장값이 없으면 DEFAULT로 설정된 값이 저장</p><h3 id="6-AUTO-INCREMENT"><a href="#6-AUTO-INCREMENT" class="headerlink" title="6) AUTO_INCREMENT"></a>6) AUTO_INCREMENT</h3><p>주로 테이블의 PRIMARY KEY 데이터를 저장할때 자동으로 숫자를 1씩 증가시켜 주는 기능으로 사용</p><hr><h4 id="※-참고-자료"><a href="#※-참고-자료" class="headerlink" title="※ 참고 자료"></a>※ 참고 자료</h4><ul><li>패스트캠퍼스 ‘데이터 사이언스 스쿨 Python 8기’ 수업자료</li><li>이동명, 권오현, 고정국, 「컴퓨터 사이언스 개정판」</li></ul>]]></content>
      
      
      <categories>
          
          <category> DataScience </category>
          
          <category> Database 데이터베이스 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Database </tag>
            
            <tag> MySQL </tag>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL</title>
      <link href="/2018/07/25/Database_02/"/>
      <url>/2018/07/25/Database_02/</url>
      
        <content type="html"><![CDATA[<h2 id="1-SQL-소개"><a href="#1-SQL-소개" class="headerlink" title="1. SQL 소개"></a>1. SQL 소개</h2><p>SQL(Structured Query Language)</p><ul><li>관계형 데이터베이스를 조작하고 관리할 때 사용하는 데이터베이스 질의용 언어</li><li>1970년대 IBM에서 개발하여 IBM의 관계형 DBMS에 처음으로 사용</li><li>1986년 미국표준협회(ANSI)가 SQL 표준으로 채택하면서 현재까지 다양한 DBMS의 구조화 질의어로 널리 사용되고 있음</li><li>비절차적 언어이기 때문에 절차적언어에 비해 배우기 쉬움</li><li>자연어에 가까운 구문을 사용해 query를 표현하며 관계형 대수나 관계형 해석에 비해 표현력이 우수함</li></ul><a id="more"></a> <p>SQL의 기능</p><ol><li>데이터 정의 기능<ul><li>데이터 정의어(DDL)를 이용하여 테이블 생성 및 제거, 속성의 추가 및 삭제, view의 생성 및 제거, index의 생성 및 제거 등의 작업 수행</li><li>테이블을 생성하면서 여러 가지 무결성 제약 조건 기술</li></ul></li><li>데이터 조작 기능<ul><li>데이터 조작어(DML)를 이용하여 데이터의 검색, 삽입, 삭제, 수정 등의 연산을 수행</li></ul></li><li>데이터 제어 기능<ul><li>데이터 제어어(DCL)를 이용하여 transaction의 시작, 철회, 완료 등을 명시하고 table에 대해 권한을 부여하거나 취소</li></ul></li></ol><h2 id="2-MySQL-Basic-Command"><a href="#2-MySQL-Basic-Command" class="headerlink" title="2. MySQL Basic Command"></a>2. MySQL Basic Command</h2><p>MySQL shell을 이용한 기본 명령</p><h3 id="1-Dabatase"><a href="#1-Dabatase" class="headerlink" title="1) Dabatase"></a>1) Dabatase</h3><ul><li><p>DB 목록 보기</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show databases;</span><br></pre></td></tr></table></figure></li><li><p>DB 만들기</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; create databases db_name;</span><br></pre></td></tr></table></figure></li><li><p>DB 접속</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; use databases db_name;</span><br></pre></td></tr></table></figure></li><li><p>현재 접속 중인 DB 확인</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select database();</span><br></pre></td></tr></table></figure></li><li><p>DB 삭제</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; drop databases db_name;</span><br></pre></td></tr></table></figure></li></ul><h3 id="2-Table"><a href="#2-Table" class="headerlink" title="2) Table"></a>2) Table</h3><ul><li><p>Table 만들기</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- name(문자열 20자), age (숫자 3자) column이 있는 user 테이블 생성 </span></span><br><span class="line">mysql&gt; create table user(name char(20), age int(3));</span><br></pre></td></tr></table></figure></li><li><p>Table 목록 확인 </p><ul><li>테이블 추가나 삭제 후 table 목록 확인<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show tables;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>Table 구조 확인</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- table name: user</span></span><br><span class="line">mysql&gt; desc table user;</span><br><span class="line">mysql&gt; describe table user;</span><br><span class="line">mysql&gt; explain table user;</span><br></pre></td></tr></table></figure></li><li><p>Table 이름 바꾸기</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- user에서 user1로 이름 변경</span></span><br><span class="line">mysql&gt; rename table user to user1;</span><br></pre></td></tr></table></figure></li><li><p>Table에 데이터 추가</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; insert into user1(name, age) values("alice", 23);</span><br><span class="line">mysql&gt; insert into user1(name, age) values("peter", 30);</span><br></pre></td></tr></table></figure></li><li><p>추가된 데이터 확인</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select * from user1;</span><br></pre></td></tr></table></figure></li><li><p>Table 삭제</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; drop table user1;</span><br></pre></td></tr></table></figure></li></ul><hr><h4 id="※-참고-자료"><a href="#※-참고-자료" class="headerlink" title="※ 참고 자료"></a>※ 참고 자료</h4><ul><li>패스트캠퍼스 ‘데이터 사이언스 스쿨 Python 8기’ 수업자료</li><li>이동명, 권오현, 고정국, 「컴퓨터 사이언스 개정판」</li></ul>]]></content>
      
      
      <categories>
          
          <category> DataScience </category>
          
          <category> Database 데이터베이스 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Database </tag>
            
            <tag> MySQL </tag>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Database 개념 및 기초</title>
      <link href="/2018/07/25/Database_01/"/>
      <url>/2018/07/25/Database_01/</url>
      
        <content type="html"><![CDATA[<h2 id="1-Database-개요"><a href="#1-Database-개요" class="headerlink" title="1. Database 개요"></a>1. Database 개요</h2><h3 id="1-1-데이터베이스의-개념"><a href="#1-1-데이터베이스의-개념" class="headerlink" title="1.1 데이터베이스의 개념"></a>1.1 데이터베이스의 개념</h3><h4 id="DB-Database"><a href="#DB-Database" class="headerlink" title="DB(Database)"></a>DB(Database)</h4><ul><li>방대한 데이터를 효율적으로 관리하기 위해 컴퓨터에 통합·저장한 것</li><li>통합하여 관리되는 데이터들의 집합</li></ul><h4 id="DBMS-Database-Management-System"><a href="#DBMS-Database-Management-System" class="headerlink" title="DBMS(Database Management System)"></a>DBMS(Database Management System)</h4><ul><li>데이터베이스를 관리하는 미들웨어 시스템</li><li>데이터베이스에 데이터를 저장하고, 효율적으로 검색하고 수정할 수 있는 환경을 제공</li><li>권한이 없는 사용자가 접근하거나 시스템에 장애가 생겼을 때에도 데이터를 안전하게 보호하며, 여러 사용자가 데이터베이스에 동시에 접근할 수 있도록 제어</li><li>대표적인 DBMS: Oracle, MySQL 등</li></ul><h3 id="1-2-데이터베이스의-특징"><a href="#1-2-데이터베이스의-특징" class="headerlink" title="1.2 데이터베이스의 특징"></a>1.2 데이터베이스의 특징</h3><ul><li>한 조직의 여러 응용 프로그램이 저장된 데이터를 공유할 수 있도록 데이터를 통합하여 관리</li><li>데이터베이스에 저장된 데이터의 특징<ul><li>통합되어 저장됨</li><li>물리적인 기억장치에 보관됨</li><li>필요에 따라 삽입, 삭제, 변경됨</li><li>여러 사람이 사용함</li></ul></li><li>데이터베이스의 특징<ul><li>실시간으로 접근 가능</li><li>계속 변화함</li><li>동시 공유가 가능</li><li>내용에 따라 참조</li></ul></li></ul><h3 id="1-3-데이터베이스-언어"><a href="#1-3-데이터베이스-언어" class="headerlink" title="1.3 데이터베이스 언어"></a>1.3 데이터베이스 언어</h3><ol><li><p>데이터 정의어(DDL, Data Definition Language)</p><ul><li>데이터 저장 구조, 데이터 접근 방법, 데이터 형식 등 데이터베이스를 구축하거나 수정할 때 사용하는 언어</li></ul></li><li><p>데이터 조직어(DML, Data Manipulation Language)</p><ul><li>데이터 베이스에 저장된 데이터를 검색, 수정, 삽입, 삭제할 때 사용하는 언어로, 사용자와 DBMS 사이의 인터페이스를 제공</li><li>대표적 데이터 조직어: query</li><li>절차적언어 &amp; 비절차적 언어로 구분<ul><li>절차적 언어(procedural language): 필요한 데이터와 검색 방법까지 명시</li><li>비절차적 언어(non-procedural language): 필요한 데이터만 명시하고 검색 방법은 명시하지 않음 (SQL이 대표적 비절차적 언어)  </li></ul></li></ul></li><li><p>데이터 제어어(DCL, Data Control Language)</p><ul><li>데이터를 보호하고 관리할 때 사용하는 언어</li><li>데이터의 무결성 유지, 보안 및 접근 제어, 시스템 장애로부터의 복구, 병행 수행 제어 기능 등을 담당 </li></ul></li></ol><h3 id="1-4-데이터베이스-사용자"><a href="#1-4-데이터베이스-사용자" class="headerlink" title="1.4 데이터베이스 사용자"></a>1.4 데이터베이스 사용자</h3><p>DBMS 활용 형태에 따라 세 가지 유형으로 구분</p><ul><li>응용프로그래머<ul><li>일반 프로그래밍언어와 데이터조작어를 이용하여 프로그램을 만듦</li></ul></li><li>최종 사용자<ul><li>데이터의 검색, 삽입, 삭제, 갱신 등을 위해 DBMS를 사용하는 사람</li><li>데이터베이스 질의어를 사용하여 데이터베이스 시스템에 접근한 후 원하는 정보를 찾음   </li></ul></li><li>데이터베이스 관리자<ul><li>데이터 정의어와 데이터 제어어를 사용하여 데이터베이스 스키마를 생성하고 관리</li><li>주요 업무: 데이터베이스 스키마의 생성과 변경, 무결성 제약 조건 명시, 보안 정책 수립(사용자의 권한 설정 및 역할 관리), 저장 구조 및 접근 방법 정의, 백업과 복구 절차 수립, 표준화 시행 등 </li></ul></li></ul><h3 id="1-5-데이터베이스의-구분"><a href="#1-5-데이터베이스의-구분" class="headerlink" title="1.5 데이터베이스의 구분"></a>1.5 데이터베이스의 구분</h3><ol><li>관계형 데이터베이스(RDBMS, Relational Database Management System)<ul><li>관계형 데이터 모델을 기반으로 하며 가장 널리 사용되는 데이터베이스</li><li>Oracle, <strong>MySQL</strong>, Postgresql, Sqlite 등</li><li>데이터 테이블 사이에 키값으로 관계를 가지고 있는 데이터베이스</li><li>데이터 사이의 관계 설정으로 최적화된 스키마를 설계 가능</li></ul></li><li>NoSQL<ul><li><strong>Mongodb</strong>, Hvase, Cassandra 등</li><li>데이터 테이블 사이에 관계가 없이 저장하는 데이터베이스</li><li>데이터 사이의 관계가 없으므로 복잡성이 줄고 많은 데이터를 저장가능하고 데이터 수정도 용이</li><li>RDBMS와 달리 data가 중복되어 저장되므로 row수가 늘어나지만 insert 속도가 빨라 big data 처리와 관련해 최근 주목 받게 됨    </li></ul></li></ol><h2 id="2-RDBMS-관계형-데이터베이스"><a href="#2-RDBMS-관계형-데이터베이스" class="headerlink" title="2. RDBMS(관계형 데이터베이스)"></a>2. RDBMS(관계형 데이터베이스)</h2><h3 id="2-1-RDBMS의-개요"><a href="#2-1-RDBMS의-개요" class="headerlink" title="2.1 RDBMS의 개요"></a>2.1 RDBMS의 개요</h3><p>특징</p><ul><li>구조가 단순하고 데이터 분류, 정렬, 탐색속도가 빠름</li><li>오래 사용된 만큼 신뢰성이 높음</li><li>스키마 수정이 어려움  </li></ul><p>구조</p><ul><li>Server &gt; Database &gt; Table &gt; Row &gt; Value</li></ul><h3 id="2-2-RDBMS의-구조"><a href="#2-2-RDBMS의-구조" class="headerlink" title="2.2 RDBMS의 구조"></a>2.2 RDBMS의 구조</h3><ol><li><p>Table</p><ul><li>row와 column으로 이루어진 데이터베이스를 구성하는 기본 단위</li><li>python pandas의 DataFrame에 해당</li><li>Storage Engine<ul><li>어떤 data를 쓸지에 따라 결정 (보통 InnoDB 많이 사용)</li></ul><ol><li>MyISAM: full text index 지원, table 단위 lock(단점), select가 빠름, 구조 단순</li><li>InnoDB: transaction 지원, row 단위 lock(장점), 자원을 만이 사용, 구조 복잡 </li></ol></li></ul></li><li><p>Row</p><ul><li>테이블의 각 행, tuple 또는 record라고도 함</li><li>cardinality: row(tuple)의 개수</li></ul></li><li><p>Column</p><ul><li>데이터의 각 열, field 또는 attribute라고도 함</li><li>degree(차수): tuple을 구성하는 attribute의 개수 (column수)</li><li>domain: attirube 하나가 가질 수 있는 <strong>값</strong>의 집합</li></ul></li><li><p>Value</p><ul><li>row와 column에 포함되어 있는 데이터</li></ul></li><li><p>Key</p><ul><li>row에서 unique한 값으로, row의 식별자로 사용</li><li>key의 종류<ol><li>후보키(candidate key):<ul><li>각 row를 구별할 수 있는 최소한의 속성으로 구성된 키</li><li>두 개 column의 조합이 후보 키가 될 수도 있음 (이 경우 어떤 한 속성을 제거하면 구별 능력을 상실)</li></ul></li><li>기본키(primary key): 후보키 중 대표로 선정한 key </li><li>대체키(alternate key): 기본키가 아닌 후보키</li><li>외래키(foreign key): 다른 테이블의 기본키를 참조하며, 테이블 사이의 관계를 나타내는 키</li></ol></li></ul></li><li><p>Relation</p><ul><li>두 개의 table은 일대일(1:1, one-to-one), 일대다(1:n, one-to-many), 다대다(n:n, many-to-many)의 관계를 가질 수 있음</li></ul></li></ol><h3 id="2-3-Schema"><a href="#2-3-Schema" class="headerlink" title="2.3 Schema"></a>2.3 Schema</h3><ol><li><p>Schema</p><ul><li>Schema: 데이터베이스의 구조에 대한 디자인</li></ul></li><li><p>무결성 제약 조건(integrity constraint)</p><ul><li>데이터베이스 상태가 만족해야 하는 조건으로, 사용자가 데이터베이스를 갱신할 때 데이터베이스의 일관성을 손상하지 않도록 보장하는 수단</li><li>schema를 정의할 때 한 번만 명시하면 데이터베이스가 갱신될 때 DBMS가 자동으로 검사</li><li>무결성 제약조건의 구분<ul><li>도메인 무결성 제약 조건<ul><li>각 속성값은 반드시 도메인에 속한 값을 가져야 함</li><li>속성의 default, 가능한 값의 범위, null값 허용 여부 등을 지정</li></ul></li><li>개체 무결성 제약 조건<ul><li>기본키를 구성하는 속성은 null값을 가질 수 없음</li></ul></li><li>참조 무결성 제약 조건<ul><li>외래키 값은 참조된 테이블의 기본키와 도메인이 동일해야 함 </li></ul></li></ul></li></ul></li></ol><h2 id="3-NoSQL"><a href="#3-NoSQL" class="headerlink" title="3. NoSQL"></a>3. NoSQL</h2><h3 id="3-1-NoSQL의-개요"><a href="#3-1-NoSQL의-개요" class="headerlink" title="3.1 NoSQL의 개요"></a>3.1 NoSQL의 개요</h3><p>NoSQL의 개념</p><ul><li>NoSQL: Not Only SQL</li><li>RDBMS의 한계(확장성이 낮음)를 극복하기 위해 만들어진 데이터베이스</li></ul><p>NoSQL의 특징</p><ul><li>확장성이 좋음 → 데이터의 분산처리 용이</li><li>데이터 저장이 유연: RDBMS와 다르게 구조의 변경이 불필요</li><li>Schema 및 join이 없음</li><li>collection 별로 관계가 없기 때문에 모든 데이터가 들어있어야 함</li><li>저장되는 데이터는 key-value 형태의 JSON 포맷 사용</li><li>select는 RDBMS보다 느리지만 Insert는 빨라 대용량 데이터베이스에 많이 사용됨</li><li>Transaction이 지원되지 않음(동시수정에 대한 신뢰성이 지원되지 않음)<ul><li>금융권 같은 곳에서는 사용할 수 없음</li></ul></li></ul><h3 id="3-2-Mongodb"><a href="#3-2-Mongodb" class="headerlink" title="3.2 Mongodb"></a>3.2 Mongodb</h3><p>Mongodb</p><ul><li>C++로 작성된 오픈소스 데이터 베이스</li><li>뛰어난 확장성과 성능을 가짐</li><li>NoSQL에서는 인지도가 가장 높음</li></ul><p>Mongodb의 구조</p><ul><li>Server &gt; Database &gt; Collection &gt; Document &gt; key:value</li><li>Collection: RDBMS의 Table과 같은 개념</li><li>Document: RDBMS의 Row와 같은 개념</li><li>Key: RDBMS의 Column과 같은 개념</li></ul><hr><h4 id="※-참고-자료"><a href="#※-참고-자료" class="headerlink" title="※ 참고 자료"></a>※ 참고 자료</h4><ul><li>패스트캠퍼스 ‘데이터 사이언스 스쿨 Python 8기’ 수업자료</li><li>이동명, 권오현, 고정국, 「컴퓨터 사이언스 개정판」</li></ul>]]></content>
      
      
      <categories>
          
          <category> DataScience </category>
          
          <category> Database 데이터베이스 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Database </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018-07-25-TIL</title>
      <link href="/2018/07/25/2018-07-25-TIL/"/>
      <url>/2018/07/25/2018-07-25-TIL/</url>
      
        <content type="html"><![CDATA[<p>공부한 것 &amp; 리뷰</p><ul><li>팀 프로젝트: 2018 빅콘테스트 블레이드앤소울 이탈자 예측 문제<ul><li>train data 중 guild, party, activity, payment를 train id에 맞는 형태로 정리</li><li>각각 데이터마다 형태도 다르고 변수의 의미 파악도 어려웠지만 조금씩 길이 보이는 것 같다. 내일 trade 데이터를 정리하고 나면 어느 정도 틀이 나올 것 같다</li></ul></li><li>데이터베이스 개념 및 기초 복습 &amp; 블로그 포스팅<ul><li>처음으로 공부 내용을 정리해서 블로그에 올렸다. 앞으로 python과 알고리즘 공부도 계속하면서 포스팅을 해봐야겠다</li></ul></li></ul><p>내일 공부할 것</p><ul><li>팀 프로젝트: 2018 빅콘테스트 블레이드앤소울 이탈자 예측 문제</li><li>DSS 수업: 데이터베이스 - ORM</li><li>DSS 현업자 특강</li></ul><p>이번 주에 공부할 것</p><ul><li style="list-style: none"><input type="checkbox"> 분류 팀 프로젝트: 데이터 형태 정리, EDA</li><li style="list-style: none"><input type="checkbox" checked> DSS: 프로그래밍 <code>&lt;Database 개념 및 기초&gt;</code> 공부 </li><li style="list-style: none"><input type="checkbox"> DSS: 프로그래밍 <code>&lt;Database - SQL&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 프로그래밍 <code>&lt;Database - noSQL&gt;</code> 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 프로그래밍 &lt;웹 크롤링&gt; 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 수학 &lt;45절. 로지스틱 회귀분석&gt; 복습하기</li><li style="list-style: none"><input type="checkbox"> DSS: 수학 &lt;46절. QDA와 나이브 베이즈 모형&gt; 복습하기</li><li style="list-style: none"><input type="checkbox" checked> DSS: 수학 &lt;47절. 의사 결정 나무&gt; 복습하기 </li><li style="list-style: none"><input type="checkbox"> DSS: 수학 &lt;48절. 앙상블 기법&gt; 복습하기 </li><li style="list-style: none"><input type="checkbox"> 인성면접 답안 대비 (개인 신상, 취미, 특기 관련 질문)</li><li style="list-style: none"><input type="checkbox"> 관심 기업 조사</li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018-07-24-TIL</title>
      <link href="/2018/07/24/2018-07-24-TIL/"/>
      <url>/2018/07/24/2018-07-24-TIL/</url>
      
        <content type="html"><![CDATA[<p>공부한 것 &amp; 리뷰</p><ul><li>DSS 복습: 엔트로피, 의사 결정 나무 복습</li><li>DSS 수업: 퍼셉트론과 서포트벡터 머신, 커널 서포트벡터 머신 등</li></ul><p>내일 공부할 것</p><ul><li>팀 프로젝트</li></ul><p>이번 주에 공부할 것</p><ul><li>DSS: 프로그래밍 <database - sql> 복습하기</database></li><li>DSS: 프로그래밍 <database - nosql> 복습하기</database></li><li>DSS: 프로그래밍 &lt;웹 크롤링&gt; 복습하기</li><li>DSS: 수학 &lt;45절. 로지스틱 회귀분석&gt; 복습하기</li><li>DSS: 수학 &lt;46절. QDA와 나이브 베이즈 모형&gt; 복습하기</li><li><del>DSS: 수학 &lt;47절. 의사 결정 나무&gt; 복습하기</del> </li><li>DSS: 수학 &lt;48절. 앙상블 기법&gt; 복습하기 </li><li>인성면접 답안 대비 (개인 신상, 취미, 특기 관련 질문)</li><li>관심 기업 조사</li><li>DSS: 수학 &lt;11장. 검정과 추정&gt; 복습하기</li><li>DSS: 수학 &lt;34절. 선형회귀분석의 기초&gt; 복습하기</li><li>DSS: 수학 &lt;35절. 입력변수가 카테고리값인 경우&gt; 복습하기</li><li>DSS: 수학 &lt;36절. 예측성능의 진단과 비교&gt; 복습하기</li><li>DSS: 수학 &lt;37절. 과최적화와 교차 검증&gt; 복습하기</li><li>DSS: 수학 &lt;38절. 추천시스템&gt; 복습하기</li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018-07-23-TIL</title>
      <link href="/2018/07/24/2018-07-23-TIL/"/>
      <url>/2018/07/24/2018-07-23-TIL/</url>
      
        <content type="html"><![CDATA[<p>공부한 것 &amp; 리뷰</p><ul><li>자소서 특강 3: 피드백 받고 수정한 부분과 궁금한 점 질문</li><li>DSS: Database 복습 및 quiz 3 풀기</li><li>팀프로젝트: payment data 정리 작업</li></ul><p>내일 공부할 것</p><ul><li>DSS 복습: 의사 결정 나무 복습</li><li>DSS 수업: 퍼셉트론과 서포트벡터 머신, 커널 서포트벡터 머신 등</li><li>팀 프로젝트: party data 로컬 mysql에 올리기, party data 정리 작업</li></ul><p>이번 주에 공부할 것</p><ul><li>DSS: 프로그래밍 <database - sql> 복습하기</database></li><li>DSS: 프로그래밍 &lt;웹 크롤링&gt; 복습하기</li><li>DSS: 수학 &lt;45절. 로지스틱 회귀분석&gt; 복습하기</li><li>DSS: 수학 &lt;46절. QDA와 나이브 베이즈 모형&gt; 복습하기</li><li>DSS: 수학 &lt;47절. 의사 결정 나무&gt; 복습하기 </li><li>DSS: 수학 &lt;48절. 앙상블 기법&gt; 복습하기 </li><li>인성면접 답안 대비 (개인 신상, 취미, 특기 관련 질문)</li><li>관심 기업 조사</li><li>DSS: 수학 &lt;11장. 검정과 추정&gt; 복습하기</li><li>DSS: 수학 &lt;34절. 선형회귀분석의 기초&gt; 복습하기</li><li>DSS: 수학 &lt;35절. 입력변수가 카테고리값인 경우&gt; 복습하기</li><li>DSS: 수학 &lt;36절. 예측성능의 진단과 비교&gt; 복습하기</li><li>DSS: 수학 &lt;37절. 과최적화와 교차 검증&gt; 복습하기</li><li>DSS: 수학 &lt;38절. 추천시스템&gt; 복습하기</li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018-07-22-TIL</title>
      <link href="/2018/07/23/2018-07-22-TIL/"/>
      <url>/2018/07/23/2018-07-22-TIL/</url>
      
        <content type="html"><![CDATA[<p>공부한 것 &amp; 리뷰</p><ul><li>자소서 피드백 받은 부분 수정</li></ul><p>내일 공부할 것</p><ul><li>DSS 복습: Classification</li><li>DSS: 자소서 특강3 (개인 피드백)</li></ul><p>이번 주에 공부할 것</p><ul><li>DSS: 통계 &lt;11장. 검정과 추정&gt; 복습하기</li><li>DSS: 통계 &lt;34절. 선형회귀분석의 기초&gt; 복습하기</li><li>DSS: 통계 &lt;35절. 입력변수가 카테고리값인 경우&gt; 복습하기</li><li>DSS: 통계 &lt;36절. 예측성능의 진단과 비교&gt; 복습하기</li><li>DSS: 통계 &lt;37절. 과최적화와 교차 검증&gt; 복습하기</li><li>DSS: 통계 &lt;38절. 추천시스템&gt; 복습하기</li><li><del>DSS: 통계 &lt;43절. 클러스터링&gt; 복습하기</del></li><li><del>DSS: 통계 &lt;44절. 분류의 기초&gt; 복습하기</del></li><li>DSS: 통계 &lt;45절. 로지스틱 회귀분석&gt; 복습하기</li><li>DSS: 통계 &lt;46절. QDA와 나이브 베이즈 모형&gt; 복습하기</li><li><del>자소서 다듬기</del></li><li>인성면접 답안 대비 (개인 신상, 취미, 특기 관련 질문)</li><li>관심 기업 조사</li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018-07-21-TIL</title>
      <link href="/2018/07/21/2018-07-21-TIL/"/>
      <url>/2018/07/21/2018-07-21-TIL/</url>
      
        <content type="html"><![CDATA[<p>공부한 것 &amp; 리뷰</p><ul><li>DSS: 통계 &lt;45절. 로지스틱 회귀분석&gt; 복습 (진행)</li><li>DSS 수업: 의사결정나무, 앙상블기법</li><li>분류 팀 프로젝트<ul><li>아이디당 주별로 여러 row의 데이터가 존재하는 데이터셋들을 pivot과 groupby 등의 방법으로 아이디 당 한 줄로 정리하는 작업 진행     </li></ul></li></ul><p>내일 공부할 것</p><ul><li>DSS 복습: Classification</li><li>월요일 자소서 피드백에 대비해 자소서 다듬기</li></ul><p>이번 주에 공부할 것</p><ul><li>DSS: 통계 &lt;11장. 검정과 추정&gt; 복습하기</li><li>DSS: 통계 &lt;34절. 선형회귀분석의 기초&gt; 복습하기</li><li>DSS: 통계 &lt;35절. 입력변수가 카테고리값인 경우&gt; 복습하기</li><li>DSS: 통계 &lt;36절. 예측성능의 진단과 비교&gt; 복습하기</li><li>DSS: 통계 &lt;37절. 과최적화와 교차 검증&gt; 복습하기</li><li>DSS: 통계 &lt;38절. 추천시스템&gt; 복습하기</li><li><del>DSS: 통계 &lt;43절. 클러스터링&gt; 복습하기</del></li><li><del>DSS: 통계 &lt;44절. 분류의 기초&gt; 복습하기</del></li><li>DSS: 통계 &lt;45절. 로지스틱 회귀분석&gt; 복습하기</li><li>DSS: 통계 &lt;46절. QDA와 나이브 베이즈 모형&gt; 복습하기</li><li>자소서 다듬기</li><li>인성면접 답안 대비 (개인 신상, 취미, 특기 관련 질문)</li><li>관심 기업 조사</li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018-07-20-TIL</title>
      <link href="/2018/07/21/2018-07-20-TIL/"/>
      <url>/2018/07/21/2018-07-20-TIL/</url>
      
        <content type="html"><![CDATA[<p>공부한 것 &amp; 리뷰</p><ul><li>DSS: 통계 &lt;44절. 분류의 기초&gt; 복습 (완료)</li><li>DSS 수업: sql w/ python, mongoDB</li><li>분류 팀 프로젝트<ul><li>크기가 큰 csv를 다루기 위해 로컬에 mysql을 설치하고 train data들을 살펴봄     </li></ul></li></ul><p>내일 공부할 것</p><ul><li>DSS 수업: 의사결정나무</li><li>분류 팀 프로젝트</li></ul><p>이번 주에 공부할 것</p><ul><li>DSS: 통계 &lt;11장. 검정과 추정&gt; 복습하기</li><li>DSS: 통계 &lt;34절. 선형회귀분석의 기초&gt; 복습하기</li><li>DSS: 통계 &lt;35절. 입력변수가 카테고리값인 경우&gt; 복습하기</li><li>DSS: 통계 &lt;36절. 예측성능의 진단과 비교&gt; 복습하기</li><li>DSS: 통계 &lt;37절. 과최적화와 교차 검증&gt; 복습하기</li><li>DSS: 통계 &lt;38절. 추천시스템&gt; 복습하기</li><li><del>DSS: 통계 &lt;43절. 클러스터링&gt; 복습하기</del></li><li><del>DSS: 통계 &lt;44절. 분류의 기초&gt; 복습하기</del></li><li>DSS: 통계 &lt;45절. 로지스틱 회귀분석&gt; 복습하기</li><li>DSS: 통계 &lt;46절. QDA와 나이브 베이즈 모형&gt; 복습하기</li><li>DSS: 인성면접 답안 대비 (개인 신상, 취미, 특기 관련 질문)</li><li>관심 기업 조사</li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018-07-19-TIL</title>
      <link href="/2018/07/19/2018-07-19-TIL/"/>
      <url>/2018/07/19/2018-07-19-TIL/</url>
      
        <content type="html"><![CDATA[<p>공부한 것 &amp; 리뷰</p><ul><li>DSS 통계: &lt;43절. 클러스터링&gt; 복습 (완료)</li><li>DSS: 통계 &lt;44절. 분류의 기초&gt; 복습 (진행)</li><li>DSS 수업: SQL syntax intermediate</li><li>DSS: 졸업생 특강</li></ul><p>내일 공부할 것</p><ul><li>DSS 수업: noSQL</li><li>분류 팀 프로젝트</li></ul><p>이번 주에 공부할 것</p><ul><li>DSS: 통계 &lt;11장. 검정과 추정&gt; 복습하기</li><li>DSS: 통계 &lt;34절. 선형회귀분석의 기초&gt; 복습하기</li><li>DSS: 통계 &lt;35절. 입력변수가 카테고리값인 경우&gt; 복습하기</li><li>DSS: 통계 &lt;36절. 예측성능의 진단과 비교&gt; 복습하기</li><li>DSS: 통계 &lt;37절. 과최적화와 교차 검증&gt; 복습하기</li><li>DSS: 통계 &lt;38절. 추천시스템&gt; 복습하기</li><li><del>DSS: 통계 &lt;43절. 클러스터링&gt; 복습하기</del></li><li>DSS: 통계 &lt;44절. 분류의 기초&gt; 복습하기</li><li>DSS: 통계 &lt;45절. 로지스틱 회귀분석&gt; 복습하기</li><li>DSS: 통계 &lt;46절. QDA와 나이브 베이즈 모형&gt; 복습하기</li><li>DSS: 인성면접 답안 대비 (개인 신상, 취미, 특기 관련 질문)</li><li>관심 기업 조사</li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018-07-18-TIL</title>
      <link href="/2018/07/19/2018-07-18-TIL/"/>
      <url>/2018/07/19/2018-07-18-TIL/</url>
      
        <content type="html"><![CDATA[<p>공부한 것 &amp; 리뷰</p><ul><li>빅콘테스트 2018 <ul><li>게임 이탈 유저 예측 문제의 도메인 지식을 쌓기 위해 게임을 체험해보았다. 일단 나같은 게임 초보자들에겐 너무 어려운걸ㅜ?</li><li>데이터셋의 크기도 엄청나다. 압축파일이 약 3기가에 압축을 푸니 7기가가 넘는 듯하다. 내 노트북으로 과연 이 과제를 할 수는 있는 걸까?! ㅋㅋ 내일 mmap을 활용해서 csv를 여는 것을 시도해봐야겠다.</li></ul></li><li>데이터베이스 퀴즈 과제<ul><li>SQL의 기초 문법은 수월한 편이다. 내일 join을 배우는 것 같은데 기대가 됨</li></ul></li></ul><p>내일 공부할 것</p><ul><li>DSS 수업: SQL</li><li>DSS 통계 복습</li><li>DSS: 졸업생 특강</li></ul><p>이번 주에 공부할 것</p><ul><li>DSS: 통계 &lt;11장. 검정과 추정&gt; 복습하기</li><li>DSS: 통계 &lt;34절. 선형회귀분석의 기초&gt; 복습하기</li><li>DSS: 통계 &lt;35절. 입력변수가 카테고리값인 경우&gt; 복습하기</li><li>DSS: 통계 &lt;36절. 예측성능의 진단과 비교&gt; 복습하기</li><li>DSS: 통계 &lt;37절. 과최적화와 교차 검증&gt; 복습하기</li><li>DSS: 통계 &lt;38절. 추천시스템&gt; 복습하기</li><li>DSS: 통계 &lt;43절. 클러스터링&gt; 복습하기</li><li>DSS: 통계 &lt;44절. 분류의 기초&gt; 복습하기</li><li>DSS: 통계 &lt;45절. 로지스틱 회귀분석&gt; 복습하기</li><li>DSS: 통계 &lt;46절. QDA와 나이브 베이즈 모형&gt; 복습하기</li><li>DSS: 인성면접 답안 대비 (개인 신상, 취미, 특기 관련 질문)</li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018-07-17-TIL</title>
      <link href="/2018/07/18/2018-07-17-TIL/"/>
      <url>/2018/07/18/2018-07-17-TIL/</url>
      
        <content type="html"><![CDATA[<h4 id="공부한-것-amp-리뷰"><a href="#공부한-것-amp-리뷰" class="headerlink" title="공부한 것 &amp; 리뷰"></a>공부한 것 &amp; 리뷰</h4><ul><li>빅콘테스트 2018 설명회 참가<ul><li>게임 이탈 유저 예측 문제는 생각보다 데이터 양도 크고 challenging한 프로젝트가 될 것 같다. 데이터사이언스에서 좋은 팀프로젝트 결과를 낼 수 있는 마지막 기회고, 포트폴리오를 구성하기에도 좋은 과제일 것 같으니 열심히 해봐야겠다.</li></ul></li><li>데이터베이스 개념 복습</li></ul><h4 id="내일-공부할-것"><a href="#내일-공부할-것" class="headerlink" title="내일 공부할 것"></a>내일 공부할 것</h4><ul><li>게임 이탈 유저 예측 문제 데이터 살펴보기, 게임 해보기 ㅎㅎ</li><li>DSS: 데이터 베이스 과제</li><li>인성 면접 답안 3개 이상 작성해보기</li></ul><h4 id="이번-주에-공부할-것"><a href="#이번-주에-공부할-것" class="headerlink" title="이번 주에 공부할 것"></a>이번 주에 공부할 것</h4><ul><li>DSS: 통계 &lt;11장. 검정과 추정&gt; 복습하기</li><li>DSS: 통계 &lt;34절. 선형회귀분석의 기초&gt; 복습하기</li><li>DSS: 통계 &lt;35절. 입력변수가 카테고리값인 경우&gt; 복습하기</li><li>DSS: 통계 &lt;36절. 예측성능의 진단과 비교&gt; 복습하기</li><li>DSS: 통계 &lt;37절. 과최적화와 교차 검증&gt; 복습하기</li><li>DSS: 통계 &lt;38절. 추천시스템&gt; 복습하기</li><li>DSS: 통계 &lt;43절. 클러스터링&gt; 복습하기</li><li>DSS: 통계 &lt;44절. 분류의 기초&gt; 복습하기</li><li>DSS: 통계 &lt;45절. 로지스틱 회귀분석&gt; 복습하기</li><li>DSS: 통계 &lt;46절. QDA와 나이브 베이즈 모형 복습하기</li><li>DSS: 인성면접 답안 대비 (개인 신상, 취미, 특기 관련 질문)</li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018-07-16-TIL</title>
      <link href="/2018/07/17/2018-07-16-TIL/"/>
      <url>/2018/07/17/2018-07-16-TIL/</url>
      
        <content type="html"><![CDATA[<h4 id="공부한-것-amp-리뷰"><a href="#공부한-것-amp-리뷰" class="headerlink" title="공부한 것 &amp; 리뷰"></a>공부한 것 &amp; 리뷰</h4><ul><li>DSS 모의 인성면접<ul><li>역시 준비가 부족해서 깊이 있는 답변을 하지 못했다. 조금씩 면접 답변에 대한 준비를 해봐야겠다. 말하기의 연습도 필요하겠다.</li></ul></li><li>DSS 수업: 나이브 베이즈 분류 모형</li></ul><h4 id="내일-공부할-것"><a href="#내일-공부할-것" class="headerlink" title="내일 공부할 것"></a>내일 공부할 것</h4><ul><li>DSS: 데이터베이스 복습</li><li>빅콘테스트 2018 설명회 참가하기</li></ul><h4 id="이번-주에-공부할-것"><a href="#이번-주에-공부할-것" class="headerlink" title="이번 주에 공부할 것"></a>이번 주에 공부할 것</h4><ul><li>DSS: 통계 &lt;11장. 검정과 추정&gt; 복습하기</li><li>DSS: 통계 &lt;34절. 선형회귀분석의 기초&gt; 복습하기</li><li>DSS: 통계 &lt;35절. 입력변수가 카테고리값인 경우&gt; 복습하기</li><li>DSS: 통계 &lt;36절. 예측성능의 진단과 비교&gt; 복습하기</li><li>DSS: 통계 &lt;37절. 과최적화와 교차 검증&gt; 복습하기</li><li>DSS: 통계 &lt;38절. 추천시스템&gt; 복습하기</li><li>DSS: 통계 &lt;43절. 클러스터링&gt; 복습하기</li><li>DSS: 통계 &lt;44절. 분류의 기초&gt; 복습하기</li><li>DSS: 통계 &lt;45절. 로지스틱 회귀분석&gt; 복습하기</li><li>DSS: 통계 &lt;46절. QDA와 나이브 베이즈 모형 복습하기</li><li>DSS: 인성면접 답안 대비 (개인 신상, 취미, 특기 관련 질문)</li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018-07-15-TIL</title>
      <link href="/2018/07/16/2018-07-15-TIL/"/>
      <url>/2018/07/16/2018-07-15-TIL/</url>
      
        <content type="html"><![CDATA[<h4 id="공부한-것-amp-리뷰"><a href="#공부한-것-amp-리뷰" class="headerlink" title="공부한 것 &amp; 리뷰"></a>공부한 것 &amp; 리뷰</h4><ul><li>DSS 분류 팀프로젝트 주제 선정<ul><li>2018빅콘테스트의 게임 이탈자 예측 문제에 도전하기로 일단 의견을 모았다. 학원 매니저님들이 검토해보고 괜찮다고 하시면 재미있게 도전해볼 수 있을 것 같다. 화요일에 있을 공모전 설명회에 참가 신청도 해두었다.</li></ul></li><li>내일 모의 인성면접을 별로 준비하지 못했다. 1분 자기소개만이라도 조금 다듬어 보았는데, 다른 문제를 물어보면 어버버할 것 같아 걱정이다.    </li></ul><h4 id="내일-공부할-것"><a href="#내일-공부할-것" class="headerlink" title="내일 공부할 것"></a>내일 공부할 것</h4><ul><li>DSS 모의 인성면접</li><li>DSS 수업: 분류</li></ul><h4 id="이번-주에-공부할-것"><a href="#이번-주에-공부할-것" class="headerlink" title="이번 주에 공부할 것"></a>이번 주에 공부할 것</h4><ul><li>DSS: 통계 &lt;11장. 검정과 추정&gt; 복습하기</li><li>DSS: 통계 &lt;34절. 선형회귀분석의 기초&gt; 복습하기</li><li>DSS: 통계 &lt;35절. 입력변수가 카테고리값인 경우&gt; 복습하기</li><li>DSS: 통계 &lt;36절. 예측성능의 진단과 비교&gt; 복습하기</li><li>DSS: 통계 &lt;37절. 과최적화와 교차 검증&gt; 복습하기</li><li>DSS: 통계 &lt;38절. 추천시스템&gt; 복습하기</li><li>DSS: 통계 &lt;43절. 클러스터링&gt; 복습하기</li><li>DSS: 통계 &lt;44절. 분류의 기초&gt; 복습하기</li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python 05. Python Class - Basic</title>
      <link href="/2018/07/16/python_05_class_basic/"/>
      <url>/2018/07/16/python_05_class_basic/</url>
      
        <content type="html"><![CDATA[<p><a href="https://nbviewer.jupyter.org/github/hyeshinoh/Study_Python/blob/master/python_05_class_basic.ipynb" target="_blank" rel="noopener">jupyter notebook으로 보기</a></p><p>여럿이 함께 프로그램을 개발하려면 필요한 부분을 나눠서 작성한 후 합쳐야 한다. 이 때 프로그램을 기능별로 나누는 방법은 (1)함수 (2)객체 (3)모듈이 있는데, 이번에는 객체에 대해서 살펴보도록 하자</p><h3 id="다룰-내용"><a href="#다룰-내용" class="headerlink" title="다룰 내용"></a>다룰 내용</h3><p>python class - basic</p><ul><li>OOP 개념</li><li>클래스의 구조</li><li>생성자</li><li>상속</li><li>다중상속</li><li>super</li></ul><a id="more"></a> <ul><li>다음 파트인 intermediate에서는 아래와 같은 내용을 다룬다<ul><li>getter &amp; setter</li><li>private</li><li>is a / has a</li><li>magic method</li></ul></li></ul><h2 id="1-OOP-Object-Oriented-Programming-객체-지향-프로그래밍"><a href="#1-OOP-Object-Oriented-Programming-객체-지향-프로그래밍" class="headerlink" title="1. OOP(Object-Oriented Programming, 객체 지향 프로그래밍)"></a>1. OOP(Object-Oriented Programming, 객체 지향 프로그래밍)</h2><p>개념</p><ul><li>객체: 실생활에서 일종의 물건<ul><li>속성(Attribute)와 행동(Action)을 가짐</li></ul></li><li>OOP는 이러한 객체 개념을 프로그램으로 표현<ul><li>속성은 variable, 행동은 function으로 표현됨</li></ul></li><li>클래스(class) &amp; 객체(object, instance)<ul><li>클래스: 설계도, 도면, 청사진<ul><li>변수와 함수들을 묶은 ‘사용자 정의 데이터 타입’이라고 생각하면 됨(custom data type)</li><li>객체지향을 구현하기 위해 만들어진 개념: 다형성, 캡슐화, 추상화, 상속 등의 특징을 가짐</li></ul></li><li>객체: 실제 구현체<ul><li>클래스를 이용해서 실제 객체를 만들어야 클래스에 정의된 함수나 변수를 사용할 수 있음    </li></ul></li></ul></li><li>클래스를 잘 정의해서 프로그래밍을 쉽게하고 반복적으로 사용할 수 있게 하는 것이 OOP</li></ul><p>클래스와 객체 선언</p><ul><li>함수를 선언한 뒤에 ‘호출’을 해야 함수를 사용하는 것처럼, 클래스도 ‘객체’를 만들어야 클래스에 정의된 함수나 변수를 사용할 수 있음</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 함수를 선언한 뒤에 '호출'해서 함수 사용</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dss</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">"data"</span>)</span><br><span class="line">    </span><br><span class="line">dss()</span><br><span class="line"></span><br><span class="line"><span class="comment"># class도 '객체'를 만들어야 클래스에 정의된 함수나 변수를 사용</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span>:</span></span><br><span class="line">    method - a, b, c</span><br><span class="line">    </span><br><span class="line">obj = A() - 객체</span><br><span class="line">obj.a(), obj.b()</span><br></pre></td></tr></table></figure><pre><code>data</code></pre><h3 id="1-1-객체-지향-프로그램의-예시"><a href="#1-1-객체-지향-프로그램의-예시" class="headerlink" title="1.1 객체 지향 프로그램의 예시"></a>1.1 객체 지향 프로그램의 예시</h3><p>인공지능 축구 프로그램을 작성한다고 가정</p><ul><li>객체 종류: 팀, 선수, 심판, 공</li><li>Action(function으로 표현)<ul><li>선수: 공을 차다, 패스하다</li><li>심판: 휘슬을 불다, 경고를 주다</li></ul></li><li>Attribute(variable로 표현)<ul><li>선수: 선수 이름, 포지션, 소속팀</li><li>팀: 팀 이름, 팀 연고지, 팀 소속 선수</li></ul></li></ul><h2 id="2-Structure-클래스의-구조"><a href="#2-Structure-클래스의-구조" class="headerlink" title="2. Structure - 클래스의 구조"></a>2. Structure - 클래스의 구조</h2><h3 id="2-1-Class-선언"><a href="#2-1-Class-선언" class="headerlink" title="2.1 Class 선언"></a>2.1 Class 선언</h3><ul><li>문법: <code>class ClassName(object):</code><ul><li>object: 상속받는 개체명으로, 생략해도 괜찮음</li></ul></li><li>class naming<ul><li>class는 camelCase, CamelCase, PascalCase 사용</li><li>함수는 snake_case 사용</li></ul></li><li>Attribute 추가: <code>__init__</code>, <code>self</code> 사용하여 변수 할당<ul><li><code>__init__</code>: 객체 초기화 예약 함수</li></ul></li><li>Function 추가:<ul><li>def를 이용하여 기존 함수처럼 함수를 선언 </li><li>반드시 self를 넣어주어야 class 함수로 인정</li><li>self는 객체 자신을 의미</li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SoccerPlayer</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, position, back_number)</span>:</span></span><br><span class="line">        self.name = name</span><br><span class="line">        self.position = position</span><br><span class="line">        self.back_number = back_number</span><br><span class="line">        </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">change_back_number</span><span class="params">(self, new_number)</span>:</span></span><br><span class="line">        print(<span class="string">"선수의 등번호를 변경합니다: from %d to %d"</span> % (</span><br><span class="line">            self.back_number, new_number))</span><br><span class="line">        self.back_number = new_number</span><br><span class="line">        </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Hello, My name is %s. I play in %s in center"</span> % (</span><br><span class="line">            self.name, self.position)</span><br></pre></td></tr></table></figure><h3 id="2-2-객체화-Object-Instance-사용하기"><a href="#2-2-객체화-Object-Instance-사용하기" class="headerlink" title="2.2 객체화: Object(Instance) 사용하기"></a>2.2 객체화: Object(Instance) 사용하기</h3><ul><li>클래스를 사용하려면 개체화를 시켜줘야 함</li><li>object 이름 선언과 함께 초기값 입력하기</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">jinhyun = SoccerPlayer(<span class="string">"Jinhyun"</span>, <span class="string">"MF"</span>, <span class="number">10</span>)</span><br><span class="line">print(jinhyun)</span><br><span class="line"></span><br><span class="line">print(<span class="string">"현재 선수의 등번호는:"</span>, jinhyun.back_number)</span><br><span class="line">jinhyun.change_back_number(<span class="number">5</span>)</span><br><span class="line">print(<span class="string">"현재 선수의 등번호는:"</span>, jinhyun.back_number)</span><br></pre></td></tr></table></figure><pre><code>Hello, My name is Jinhyun. I play in MF in center현재 선수의 등번호는: 10선수의 등번호를 변경합니다: from 10 to 5현재 선수의 등번호는: 5</code></pre><h3 id="2-3-예시-계산기-클래스와-객체-만들기"><a href="#2-3-예시-계산기-클래스와-객체-만들기" class="headerlink" title="2.3 예시: 계산기 클래스와 객체 만들기"></a>2.3 예시: 계산기 클래스와 객체 만들기</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 계산기 클래스</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Calculator</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">setdata</span><span class="params">(self, num1, num2)</span>:</span></span><br><span class="line">        self.num1 = num1</span><br><span class="line">        self.num2 = num2</span><br><span class="line">        self.result = <span class="number">0</span>     <span class="comment"># 클래스 안에서 사용되는 변수</span></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.num1 + self.num2</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sub</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.result = self.num1 - self.num2</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">mul</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.num1 * self.num2</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">div</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.num1 / self.num2</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 객체화: 객체를 생성</span></span><br><span class="line">cal = Calculator()</span><br><span class="line"><span class="comment"># 객체의 함수에 접근</span></span><br><span class="line">cal.setdata(<span class="number">3</span>, <span class="number">2</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cal.add()</span><br></pre></td></tr></table></figure><pre><code>5</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cal.sub()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cal.num1, cal.num2, cal.result</span><br></pre></td></tr></table></figure><pre><code>(3, 2, 1)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cal2 = Calculator()</span><br></pre></td></tr></table></figure><p>cal과 cal2는 Calculator 타입으로 서로 다른 메모리 주소에 저장되어 있음</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%whos</span><br></pre></td></tr></table></figure><pre><code>Variable       Type            Data/Info----------------------------------------Calculator     type            &lt;class &apos;__main__.Calculator&apos;&gt;SoccerPlayer   type            &lt;class &apos;__main__.SoccerPlayer&apos;&gt;cal            Calculator      &lt;__main__.Calculator object at 0x10c3f1128&gt;cal2           Calculator      &lt;__main__.Calculator object at 0x10c3f1a20&gt;dss            function        &lt;function dss at 0x10c3ea0d0&gt;jinhyun        SoccerPlayer    Hello, My name is Jinhyun. I play in MF in center</code></pre><h3 id="2-4-Class의-효율성"><a href="#2-4-Class의-효율성" class="headerlink" title="2.4 Class의 효율성"></a>2.4 Class의 효율성</h3><p>다섯명의 축구선수 정보를 저장하는 방법</p><ul><li>2차원 리스트로 구현할 수도 있음</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">names = [<span class="string">"Jin"</span>, <span class="string">"Sungchul"</span>, <span class="string">"Ronaldo"</span>, <span class="string">"Hong"</span>, <span class="string">"Seo"</span>]</span><br><span class="line">positions = [<span class="string">"MF"</span>, <span class="string">"DF"</span>, <span class="string">"CF"</span>, <span class="string">"WF"</span>, <span class="string">"GK"</span>]</span><br><span class="line">numbers = [<span class="number">10</span>, <span class="number">15</span>, <span class="number">20</span>, <span class="number">3</span>, <span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">players = [[name, position, number] <span class="keyword">for</span> name, position, number <span class="keyword">in</span> zip(names, positions, numbers)]</span><br><span class="line">print(players)</span><br><span class="line">print(players[<span class="number">0</span>])</span><br></pre></td></tr></table></figure><pre><code>[[&apos;Jin&apos;, &apos;MF&apos;, 10], [&apos;Sungchul&apos;, &apos;DF&apos;, 15], [&apos;Ronaldo&apos;, &apos;CF&apos;, 20], [&apos;Hong&apos;, &apos;WF&apos;, 3], [&apos;Seo&apos;, &apos;GK&apos;, 1]][&apos;Jin&apos;, &apos;MF&apos;, 10]</code></pre><ul><li>그러나 class로 선언하는 편이 더 효율적</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">player_objects = [SoccerPlayer(name, position, number) <span class="keyword">for</span> name, position, number <span class="keyword">in</span> zip(names, positions, numbers)]</span><br><span class="line">print(player_objects[<span class="number">0</span>]), print(player_objects[<span class="number">3</span>])</span><br></pre></td></tr></table></figure><pre><code>Hello, My name is Jin. I play in MF in center.Hello, My name is Hong. I play in WF in center.(None, None)</code></pre><h2 id="3-Constructor-생성자"><a href="#3-Constructor-생성자" class="headerlink" title="3. Constructor - 생성자"></a>3. Constructor - 생성자</h2><ul><li>클래스가 객체가 될때 변수의 초기값을 설정해주는 역할</li><li><code>__init__</code>으로 함수명을 작성하여 초기 변수값을 넣어주면 됨</li><li>클래스가 객체가 될 때, <code>__init__</code> 함수를 먼저 실행해줌 (객체를 만들 때 자동으로 실행)</li><li><p>사용 이유: 생성자에서 설정된 변수가 없으면 객체를 만들수 없도록 함으로써 객체가 만들어진 상태에서 객체의 함수가 실행되지 않는 것보다 메모리를 절약</p></li><li><p>생성자를 만들고 객체를 선언할때 초기 데이터가 없으면 에러가 발생하여 객체가 생성되지 않음</p><ul><li>cf) 생성자가 없는 class에 초기값이 없이 객체를 만들면 함수를 실행할 때 에러</li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 이 순간에 메모리가 할당됨 but 재료는 없어</span></span><br><span class="line">cal = Calculator()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 재료없이 기능을 사용하려고 함</span></span><br><span class="line">cal.add()</span><br></pre></td></tr></table></figure><pre><code>---------------------------------------------------------------------------AttributeError                            Traceback (most recent call last)&lt;ipython-input-9-583691e85c87&gt; in &lt;module&gt;()      3       4 # 재료없이 기능을 사용하려고 함----&gt; 5 cal.add()&lt;ipython-input-1-91d638666bfd&gt; in add(self)      8       9     def add(self):---&gt; 10         return self.num1 + self.num2     11      12     def sub(self):AttributeError: &apos;Calculator&apos; object has no attribute &apos;num1&apos;</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Calculator2</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, num1, num2)</span>:</span></span><br><span class="line">        self.num1 = num1</span><br><span class="line">        self.num2 = num2</span><br><span class="line">        self.result = <span class="number">0</span></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">setData</span><span class="params">(self, num1, num2)</span>:</span></span><br><span class="line">        self.num1 = num1</span><br><span class="line">        self.num2 = num2</span><br><span class="line">        self.result = <span class="number">0</span></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.num1 + self.num2</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sub</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.num1 - self.num2</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">mul</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.num1 * self.num2</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">div</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.num1 / self.num</span><br></pre></td></tr></table></figure><p>생성자가 선언되어 있는 클래스에 필요한 변수가 초기에 선언이 되지 않으면 아예 객체가 만들어지지 않음</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cal2 = Calculator2()</span><br></pre></td></tr></table></figure><pre><code>---------------------------------------------------------------------------TypeError                                 Traceback (most recent call last)&lt;ipython-input-11-465182928460&gt; in &lt;module&gt;()      1 # 생성자가 선언되어 있는 클래스에 필요한 변수가 초기에 선언이 되지 않으면 아예 객체가 만들어지지 않음----&gt; 2 cal2 = Calculator2()TypeError: __init__() missing 2 required positional arguments: &apos;num1&apos; and &apos;num2&apos;</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cal2 = Calculator2(<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line">cal2.add()</span><br></pre></td></tr></table></figure><pre><code>3</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># __init__에 default parameter를 둘 수도 있음</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Calculator2</span>:</span></span><br><span class="line">        </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, num1, num2=<span class="number">5</span>)</span>:</span></span><br><span class="line">        self.num1 = num1</span><br><span class="line">        self.num2 = num2</span><br><span class="line">        self.result = <span class="number">0</span></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">setdata</span><span class="params">(self, num1, num2)</span>:</span></span><br><span class="line">        self.num1 = num1</span><br><span class="line">        self.num2 = num2</span><br><span class="line">        self.result = <span class="number">0</span></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">plus</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.num1 + self.num2</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">minus</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.result = self.num1 - self.num2</span><br><span class="line">        </span><br><span class="line">cal3 = Calculator2(<span class="number">1</span>)</span><br><span class="line">cal3.plus()</span><br></pre></td></tr></table></figure><pre><code>6</code></pre><h3 id="3-1-self"><a href="#3-1-self" class="headerlink" title="3.1 self"></a>3.1 self</h3><p>함수를 사용하는 방법 1: self</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cal.setdata(<span class="number">5</span>, <span class="number">6</span>)</span><br><span class="line">cal.num1, cal.num2</span><br></pre></td></tr></table></figure><pre><code>(5, 6)</code></pre><p>함수를 사용하는 방법 2: class함수에 direct로 접근</p><ul><li><code>&lt;클래스명&gt;.&lt;함수명&gt;(&lt;obj.&gt;, parameter1, parameter2)</code></li><li>이런식으로는 잘 사용하지 않음</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Calculator.setdata(cal, <span class="number">7</span>, <span class="number">8</span>)</span><br><span class="line">cal.num1, cal.num2</span><br></pre></td></tr></table></figure><pre><code>(7, 8)</code></pre><h3 id="3-2-예시-야구선수-정보를-가지고-선수별-클래스-만들기"><a href="#3-2-예시-야구선수-정보를-가지고-선수별-클래스-만들기" class="headerlink" title="3.2 예시: 야구선수 정보를 가지고 선수별 클래스 만들기"></a>3.2 예시: 야구선수 정보를 가지고 선수별 클래스 만들기</h3><ul><li>클래스에는 타율을 구하는 함수를 추가</li><li>김선민(ksm) - 타석: 476, 안타:176</li><li>박건우(pkw) - 타석: 483, 안타:177</li><li>박민우(pmw) - 타석: 386, 안타:141</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Player</span>:</span></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, ab, hit)</span>:</span></span><br><span class="line">        self.ab = ab</span><br><span class="line">        self.hit = hit</span><br><span class="line">        </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">avg</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> round(self.hit / self.ab, <span class="number">3</span>)     </span><br><span class="line">        <span class="comment"># 소수점 셋째자리까지 반올림</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ksm = Player(<span class="number">476</span>, <span class="number">176</span>)</span><br><span class="line">pkw = Player(<span class="number">483</span>, <span class="number">177</span>)</span><br><span class="line">pmw = Player(<span class="number">386</span>, <span class="number">141</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ksm.avg(), pkw.avg(), pmw.avg()</span><br></pre></td></tr></table></figure><pre><code>(0.37, 0.366, 0.365)</code></pre><h2 id="4-Inheritance-상속"><a href="#4-Inheritance-상속" class="headerlink" title="4. Inheritance - 상속"></a>4. Inheritance - 상속</h2><ul><li>부모클래스로부터 속성과 method를 물려받은 자식 클래스를 생성하는 것<ul><li>기존 클래스의 기능을 새로운 클래스에서 사용하고 싶을 때 이용</li></ul></li><li>기존의 클래스에 새로운 변수나 함수를 추가하거나 변경할수 있도록 해주는 기능</li><li><p>파이썬에서는 단일상속과 다중상속 모두 사용 가능</p></li><li><p>핸드폰 클래스 예시로 상속의 개념 보기 </p></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">iphone1</span><span class="params">()</span>:</span></span><br><span class="line">    method - call, send_sms</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">iphone2</span><span class="params">(iphone1)</span>:</span></span><br><span class="line">    method - wifi</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">iphone3</span><span class="params">(iphone2)</span>:</span>           <span class="comment"># 보통은 이렇게 3단계까지 정도만 사용</span></span><br><span class="line">    method - touch_id</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">galaxy</span><span class="params">()</span>:</span></span><br><span class="line">    method - game</span><br><span class="line">    </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">galaxy2</span><span class="params">(iphone1, galaxy)</span>:</span>   <span class="comment"># 다중상속</span></span><br><span class="line">    method - show_image</span><br></pre></td></tr></table></figure><p>이 경우 각 클래스는 다음과 같은 기능을 갖게 됨</p><ul><li>iphone1 - call, send_sms</li><li>iphone2 - call, send_sms, wifi</li><li>iphone3 - call, send_sms, wifi, touch_id</li><li>galaxy - game</li><li>galaxy2 - call, send_sms, game, show_image</li></ul><h4 id="Person을-상속받은-Korean-클래스-만들기"><a href="#Person을-상속받은-Korean-클래스-만들기" class="headerlink" title="Person을 상속받은 Korean 클래스 만들기"></a>Person을 상속받은 Korean 클래스 만들기</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, age)</span>:</span></span><br><span class="line">        self.name = name</span><br><span class="line">        self.age = age</span><br><span class="line">        </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Korean</span><span class="params">(Person)</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">first_korean = Korean(<span class="string">"Sungchul"</span>, <span class="number">35</span>)</span><br><span class="line">print(first_korean.name)</span><br></pre></td></tr></table></figure><pre><code>Sungchul</code></pre><h4 id="Overriding-amp-overloading"><a href="#Overriding-amp-overloading" class="headerlink" title="Overriding &amp; overloading"></a>Overriding &amp; overloading</h4><ul><li>overriding과 overloading의 차이점은 다형성의 특징<ul><li>overriding : 상위 클래스가 가지고 있는 함수를 하위 클래스가 함수를 재정의 해서 사용 (기존 기능을 덮어 씌워 새로운 기능으로 만드는 것)</li><li>overloading : 함수 이름은 같으나 argument 갯수 차이로 함수를 구분해서 실행해주는 방법<ul><li>python 에서는 지원x, default argument로 조건문을 사용하여 구현</li></ul></li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># java에서는 overloading이 구현됨. 아래 두 개가 달리 실행됨</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">10</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test</span><span class="params">(num)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> num</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 파이썬에서는 default parameter 사용해서 구현 가능 (꼼수ㅎㅎ)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test</span><span class="params">(num=None)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> num <span class="keyword">is</span> <span class="keyword">None</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">10</span></span><br><span class="line">    <span class="keyword">return</span> num</span><br><span class="line"></span><br><span class="line"><span class="comment"># 함수는 return을 만나면 그 아래가 실행되지 않음</span></span><br></pre></td></tr></table></figure><h3 id="4-1-예시-스타크래프트"><a href="#4-1-예시-스타크래프트" class="headerlink" title="4.1 예시: 스타크래프트"></a>4.1 예시: 스타크래프트</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Human</span>:</span></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.health = <span class="number">40</span></span><br><span class="line">        </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">set_health</span><span class="params">(self, value)</span>:</span></span><br><span class="line">        self.health += value</span><br><span class="line">        <span class="keyword">if</span> self.health &gt; <span class="number">40</span>:</span><br><span class="line">            self.health = <span class="number">40</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Marin</span><span class="params">(Human)</span>:</span></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.health = <span class="number">40</span>           <span class="comment"># Human을 상속받아왔는데 이걸 또 써야하나?</span></span><br><span class="line">        self.attack_power = <span class="number">5</span></span><br><span class="line">        self.kill_count = <span class="number">0</span></span><br><span class="line">        </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">attack</span><span class="params">(self, target)</span>:</span></span><br><span class="line">        target.set_health(-self.attack_power)</span><br><span class="line">        <span class="keyword">if</span> target.health &lt;= <span class="number">0</span>:</span><br><span class="line">            print(<span class="string">"die"</span>)</span><br><span class="line">            self.kill_count += <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">"alive [health:&#123;&#125;]"</span>.format(target.health))</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">m1, m2 = Marin(), Marin()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">m1.health, m2.health, m1.kill_count</span><br></pre></td></tr></table></figure><pre><code>(40, 40, 0)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">m1.attack(m2)</span><br></pre></td></tr></table></figure><pre><code>alive [health:35]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Medic</span><span class="params">(Human)</span>:</span></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.health = <span class="number">20</span></span><br><span class="line">        self.heal_power = <span class="number">6</span></span><br><span class="line">        </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">heal</span><span class="params">(self, target)</span>:</span></span><br><span class="line">        target.set_health(self.heal_power)</span><br><span class="line">        print(<span class="string">"health: "</span>, target.health)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">m3, medic = Marin(), Medic()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">m1.health, m3.health</span><br></pre></td></tr></table></figure><pre><code>(40, 40)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">m3.attack(m1)</span><br></pre></td></tr></table></figure><pre><code>alive [health:35]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">medic.heal(m1)</span><br></pre></td></tr></table></figure><pre><code>health:  40</code></pre><h2 id="5-Multiple-Inheritance-다중상속"><a href="#5-Multiple-Inheritance-다중상속" class="headerlink" title="5. Multiple Inheritance - 다중상속"></a>5. Multiple Inheritance - 다중상속</h2><ul><li>어떤 클래스가 하나 이상의 상위 클래스로부터 여러 가지 행동이나 특징을 상속받을 수 있음</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Human, Korea, Indian</span></span><br><span class="line"><span class="comment"># Jin(Human, Korean), Anchal(Human, Indian)</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Human</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">walk</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"walking"</span>)</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Korean</span>:</span></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">eat</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"eat kimchi"</span>)</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Indian</span>:</span></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">eat</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"eat curry"</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Jin</span><span class="params">(Human, Korean)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">skill</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"coding"</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># overriding</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">eat</span><span class="params">(self)</span>:</span>                  </span><br><span class="line">        print(<span class="string">"eat noodle"</span>)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Anchal</span><span class="params">(Human, Indian)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">skill</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"english"</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#overriding &amp; overloading</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">eat</span><span class="params">(self, place = None)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> place <span class="keyword">is</span> <span class="keyword">None</span>:</span><br><span class="line">            print(<span class="string">"eat curry"</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">"eat curry at"</span>, place)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">j = Jin()</span><br><span class="line">a = Anchal()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">j.eat(), j.walk(), j.skill()</span><br></pre></td></tr></table></figure><pre><code>eat noodlewalkingcoding(None, None, None)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a.eat(), a.walk(), a.skill()</span><br></pre></td></tr></table></figure><pre><code>eat currywalkingenglish(None, None, None)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a.eat(<span class="string">"aaa"</span>), a.walk(), a.skill()</span><br></pre></td></tr></table></figure><pre><code>eat curry at aaawalkingenglish(None, None, None)</code></pre><h2 id="6-Super"><a href="#6-Super" class="headerlink" title="6. Super"></a>6. Super</h2><ul><li>super는 상위 클래스의 생성자를 받아옴 (속성을 받아옴)</li></ul><h3 id="6-1-예시-스타크래프트-Human-Marin-Human-Medic-Human"><a href="#6-1-예시-스타크래프트-Human-Marin-Human-Medic-Human" class="headerlink" title="6.1 예시: 스타크래프트 - Human, Marin(Human), Medic(Human)"></a>6.1 예시: 스타크래프트 - Human, Marin(Human), Medic(Human)</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Human</span>:</span></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.health = <span class="number">40</span></span><br><span class="line">        </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">set_health</span><span class="params">(self, value)</span>:</span></span><br><span class="line">        self.health += value</span><br><span class="line">        <span class="keyword">if</span> self.health &gt; <span class="number">40</span>:</span><br><span class="line">            self.health = <span class="number">40</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Marin</span><span class="params">(Human)</span>:</span></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="comment"># self.health = 40</span></span><br><span class="line">        super(Marin, self).__init__()</span><br><span class="line">        <span class="comment"># super().__init__()                    # 이렇게 super()로 비워두어도 작동</span></span><br><span class="line">        self.attack_power = <span class="number">5</span></span><br><span class="line">        self.kill = <span class="number">0</span></span><br><span class="line">        </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">attack</span><span class="params">(self, target)</span>:</span></span><br><span class="line">        target.set_health(-self.attack_power)</span><br><span class="line">        <span class="keyword">if</span> target.health &lt;= <span class="number">0</span>:</span><br><span class="line">            print(<span class="string">"die"</span>)</span><br><span class="line">            self.kill += <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">"alive [health:&#123;&#125;]"</span>.format(target.health))</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">m1, m2 = Marin(), Marin()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">m1.health, m2.health, m1.kill</span><br></pre></td></tr></table></figure><pre><code>(40, 40, 0)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">m1.attack(m2)</span><br></pre></td></tr></table></figure><pre><code>alive [health:35]</code></pre><h3 id="6-2-예시-person-employee"><a href="#6-2-예시-person-employee" class="headerlink" title="6.2 예시: person-employee"></a>6.2 예시: person-employee</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span>:</span>                                   <span class="comment"># 부모 클래스 Person 선언</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, age, gender)</span>:</span>      <span class="comment"># 생성자 선언(속성값 지정) </span></span><br><span class="line">        self.name = name                        </span><br><span class="line">        self.age = age</span><br><span class="line">        self.gender = gender        </span><br><span class="line">        <span class="comment"># 해당 변수가 클래스의 attribute임을 명확히하기 위해 self를 붙임</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">about_me</span><span class="params">(self)</span>:</span>                         <span class="comment"># Method 선언</span></span><br><span class="line">        print(<span class="string">"저의 이름은 "</span>, self.name, <span class="string">"이구요, 제 나이는 "</span>, str(self.age), <span class="string">"살 입니다."</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Employee</span><span class="params">(Person)</span>:</span>                                          <span class="comment"># 부모 클래스 Person으로 부터 상속</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, age, gender, salary, hire_date)</span>:</span></span><br><span class="line">        super().__init__(name, age, gender)                      <span class="comment"># super(): 부모객체 사용</span></span><br><span class="line">        self.salary = salary                                     <span class="comment"># 속성값 추가</span></span><br><span class="line">        self.hire_date = hire_date                               <span class="comment"># 속성값 추가</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">do_work</span><span class="params">(self)</span>:</span>                                           <span class="comment"># 새로운 method 추가</span></span><br><span class="line">        print(<span class="string">"열심히 일을 합니다."</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">about_me</span><span class="params">(self)</span>:</span>                 <span class="comment"># 부모 클래스 함수 재정의(overriding)</span></span><br><span class="line">        super().about_me()              <span class="comment"># 부모 클래스 함수 사용</span></span><br><span class="line">        <span class="comment"># 부모 클래스 함수에 다음 추가</span></span><br><span class="line">        print(<span class="string">"제 급여는 "</span>, self.salary, <span class="string">"원 이구요, 제 입사일은 "</span>, self.hire_date, <span class="string">" 입니다."</span>)     </span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">myPerson = Person(<span class="string">"John"</span>, <span class="number">34</span>, <span class="string">"Male"</span>)</span><br><span class="line">myEmployee = Employee(<span class="string">"Daeho"</span>, <span class="number">34</span>, <span class="string">"Male"</span>, <span class="number">300000</span>, <span class="string">"2012/03/01"</span>)</span><br><span class="line">print(myPerson.about_me())</span><br><span class="line">print(myEmployee.about_me())</span><br></pre></td></tr></table></figure><pre><code>저의 이름은  John 이구요, 제 나이는  34 살 입니다.None저의 이름은  Daeho 이구요, 제 나이는  34 살 입니다.제 급여는  300000 원 이구요, 제 입사일은  2012/03/01  입니다.None</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># myPerson.do_work()         # 부모 클래스에서는 Error</span></span><br><span class="line">myEmployee.do_work()         <span class="comment"># 열심히 일을 합니다.</span></span><br></pre></td></tr></table></figure><pre><code>열심히 일을 합니다.</code></pre><h3 id="6-3-다이아몬드-상속과-super"><a href="#6-3-다이아몬드-상속과-super" class="headerlink" title="6.3 다이아몬드 상속과 super"></a>6.3 다이아몬드 상속과 super</h3><p>다이아몬드 상속</p><ul><li>상속 구조가 다음과 같을 경우 (A → B), (A → C), (B,C → D)</li><li>D() - A가 두 번 호출됨 (which is not necessary)</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"A.__init__"</span>)</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span><span class="params">(A)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"B.__init__"</span>)</span><br><span class="line">        A.__init__(self)       <span class="comment"># A에 있는 생성자를 받아옴</span></span><br><span class="line"></span><br><span class="line">                </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C</span><span class="params">(A)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"C.__init__"</span>)</span><br><span class="line">        A.__init__(self)       <span class="comment"># A에 있는 생성자를 받아옴</span></span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">D</span><span class="params">(B,C)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"D.__init__"</span>)</span><br><span class="line">        B.__init__(self)       <span class="comment"># B, A init</span></span><br><span class="line">        C.__init__(self)       <span class="comment"># C, A init</span></span><br><span class="line">        </span><br><span class="line">D()     <span class="comment"># 객체화</span></span><br><span class="line"><span class="comment"># D.__init__(obj)</span></span><br></pre></td></tr></table></figure><pre><code>D.__init__B.__init__A.__init__C.__init__A.__init__&lt;__main__.D at 0x1641dbcb630&gt;</code></pre><p>super를 사용하면 A가 두 번 호출되지 않음</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"A.__init__"</span>)</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span><span class="params">(A)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"B.__init__"</span>)</span><br><span class="line">        super(B, self).__init__()</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C</span><span class="params">(A)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"C.__init__"</span>)</span><br><span class="line">        super(C, self).__init__()</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">D</span><span class="params">(B,C)</span>:</span>   <span class="comment"># D &lt;- B &lt;- C 형태: 실제로 상속받는 것이 아니라 super를 호출할 때 상속이되어 가져옴</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"D.__init__"</span>)</span><br><span class="line">        super(D, self).__init__()    </span><br><span class="line">         </span><br><span class="line">D()</span><br><span class="line"><span class="comment"># D.__init__(obj)</span></span><br></pre></td></tr></table></figure><pre><code>D.__init__B.__init__C.__init__A.__init__&lt;__main__.D at 0x1641dbc5438&gt;</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"A.__init__"</span>)</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"B.__init__"</span>)</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C</span><span class="params">(A,B)</span>:</span>                        <span class="comment"># C &lt;- A &lt;- B</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"C.__init__"</span>)</span><br><span class="line">        super(C, self).__init__()    <span class="comment"># C를 적으면 A를 가져옴 </span></span><br><span class="line">                                     <span class="comment"># A를 적으면 B를 가져옴 (A가 B에서 상속 받음)</span></span><br><span class="line">        super(A, self).__init__()    <span class="comment"># B </span></span><br><span class="line">        <span class="comment"># super()                    # 안 쓰면 알아서 C가 들어감</span></span><br><span class="line"></span><br><span class="line">C()</span><br></pre></td></tr></table></figure><pre><code>C.__init__A.__init__B.__init__&lt;__main__.C at 0x1641dbe87b8&gt;</code></pre><h4 id="참고자료"><a href="#참고자료" class="headerlink" title="참고자료"></a>참고자료</h4><ul><li>패스트캠퍼스, ⟪데이터사이언스스쿨 8기⟫ 수업자료</li><li>인프런, ⟪프로그래밍, 데이터 과학을 위한 파이썬 입문⟫ 수업 자료</li></ul><p><a href="https://nbviewer.jupyter.org/github/hyeshinoh/Study_Python/blob/master/python_05_class_basic.ipynb" target="_blank" rel="noopener">jupyter notebook으로 보기</a></p>]]></content>
      
      
      <categories>
          
          <category> DataScience </category>
          
          <category> Python 파이썬 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 파이썬 </tag>
            
            <tag> programming </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018-07-14-TIL</title>
      <link href="/2018/07/14/2018-07-14-TIL/"/>
      <url>/2018/07/14/2018-07-14-TIL/</url>
      
        <content type="html"><![CDATA[<h4 id="공부한-것-amp-리뷰"><a href="#공부한-것-amp-리뷰" class="headerlink" title="공부한 것 &amp; 리뷰"></a>공부한 것 &amp; 리뷰</h4><ul><li>DSS 수업: 분류성능평가, 로지스틱회귀분석, QDA &amp; LDA<ul><li>대학원에서 방법론으로 로짓회귀를 배웠을 때는 “이해는 제대로 못해도 논문 쓸때 분석 돌려서 사용할 수만 있으면 되지 뭐”하는 생각으로 했었는데, 기초가 되는 수학부터 제대로 배우고 나서 로짓회귀를 배우니 이해도 잘 되고 좋다</li></ul></li><li>DSS 수업: 파이썬을 사용한 문서 프로세싱</li></ul><h4 id="내일-공부할-것"><a href="#내일-공부할-것" class="headerlink" title="내일 공부할 것"></a>내일 공부할 것</h4><ul><li>분류 프로젝트 주제 선정</li></ul><h4 id="이번-주에-공부할-것"><a href="#이번-주에-공부할-것" class="headerlink" title="이번 주에 공부할 것"></a>이번 주에 공부할 것</h4><ul><li><del>DSS: CSS selector 수업 내용 복습하기</del></li><li><del>DSS: javascript 수업 내용 복습하기</del></li><li><del>DSS: Server cloud(AWS), pyenv/virtualenv/autoenv 복습</del></li><li><del>DSS: crontab, rest API, flask 복습, slack 챗봇 만들기</del></li><li>DSS: 통계 &lt;11장. 검정과 추정&gt; 복습하기</li><li>DSS: 통계 &lt;34절. 선형회귀분석의 기초&gt; 복습하기</li><li>DSS: 통계 &lt;35절. 입력변수가 카테고리값인 경우&gt; 복습하기</li><li>DSS: 통계 &lt;36절. 예측성능의 진단과 비교&gt; 복습하기</li><li>DSS: 통계 &lt;37절. 과최적화와 교차 검증&gt; 복습하기</li><li>DSS: 통계 &lt;38절. 추천시스템&gt; 복습하기</li><li>DSS: 통계 &lt;43절. 클러스터링&gt; 복습하기</li><li>DSS: 통계 &lt;44절. 분류의 기초&gt; 복습하기</li><li><del>블로그에 about 페이지 만들기</del></li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018-07-13-TIL</title>
      <link href="/2018/07/13/2018-07-13-TIL/"/>
      <url>/2018/07/13/2018-07-13-TIL/</url>
      
        <content type="html"><![CDATA[<h4 id="공부한-것-amp-리뷰"><a href="#공부한-것-amp-리뷰" class="headerlink" title="공부한 것 &amp; 리뷰"></a>공부한 것 &amp; 리뷰</h4><ul><li>DSS 수업: database sql basic syntax<ul><li>workbench를 이용하여 sql의 기본 문법을 학습함</li></ul></li></ul><h4 id="내일-공부할-것"><a href="#내일-공부할-것" class="headerlink" title="내일 공부할 것"></a>내일 공부할 것</h4><ul><li>DSS 수업: classification</li><li>DSS: classification project 주제 정하기</li></ul><h4 id="이번-주에-공부할-것"><a href="#이번-주에-공부할-것" class="headerlink" title="이번 주에 공부할 것"></a>이번 주에 공부할 것</h4><ul><li><del>DSS: CSS selector 수업 내용 복습하기</del></li><li><del>DSS: javascript 수업 내용 복습하기</del></li><li><del>DSS: Server cloud(AWS), pyenv/virtualenv/autoenv 복습</del></li><li><del>DSS: crontab, rest API, flask 복습, slack 챗봇 만들기</del></li><li>DSS: 통계 &lt;11장. 검정과 추정&gt; 복습하기</li><li>DSS: 통계 &lt;34절. 선형회귀분석의 기초&gt; 복습하기</li><li>DSS: 통계 &lt;35절. 입력변수가 카테고리값인 경우&gt; 복습하기</li><li>DSS: 통계 &lt;36절. 예측성능의 진단과 비교&gt; 복습하기</li><li>DSS: 통계 &lt;37절. 과최적화와 교차 검증&gt; 복습하기</li><li>DSS: 통계 &lt;38절. 추천시스템&gt; 복습하기</li><li>DSS: 통계 &lt;43절. 클러스터링&gt; 복습하기</li><li>DSS: 통계 &lt;44절. 분류의 기초&gt; 복습하기</li><li><del>블로그에 about 페이지 만들기</del></li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018-07-12-TIL</title>
      <link href="/2018/07/12/2018-07-12-TIL/"/>
      <url>/2018/07/12/2018-07-12-TIL/</url>
      
        <content type="html"><![CDATA[<h4 id="공부한-것-amp-리뷰"><a href="#공부한-것-amp-리뷰" class="headerlink" title="공부한 것 &amp; 리뷰"></a>공부한 것 &amp; 리뷰</h4><ul><li>DSS 수업: database 기초<ul><li>데이터베이스에 대한 기초 개념을 배우고 mySQL을 깔고 실행해보았다. 새로운 내용을 배우니 흥미롭군  </li></ul></li><li>DSS: 현업자 특강 from 카카오뱅크 CRM 데이터분석<ul><li>현업의 데이터 분석 업무 환경에 대해 설명해주신 부분이 좋았다. 마침 데이터베이스 수업을 듣고 이 특강을 들으니 참으로 적절하지 아니한가. 카카오뱅크도 참 일하기 좋은 회사 같아 보였다.  </li></ul></li><li>DSS: crontab 복습하기</li><li>DSS: rest API, flask 복습, slack 챗봇 만들기</li></ul><h4 id="내일-공부할-것"><a href="#내일-공부할-것" class="headerlink" title="내일 공부할 것"></a>내일 공부할 것</h4><ul><li>DSS: 수업 &lt;데이터베이스&gt;</li><li>DSS: 통계 &lt;43절. 클러스터링&gt; 복습하기</li><li>DSS: 통계 &lt;44절. 분류의 기초&gt; 복습하기</li></ul><h4 id="이번-주에-공부할-것"><a href="#이번-주에-공부할-것" class="headerlink" title="이번 주에 공부할 것"></a>이번 주에 공부할 것</h4><ul><li><del>DSS: CSS selector 수업 내용 복습하기</del></li><li><del>DSS: javascript 수업 내용 복습하기</del></li><li><del>DSS: Server cloud(AWS), pyenv/virtualenv/autoenv 복습</del></li><li>DSS: crontab, rest API, flask 복습, slack 챗봇 만들기</li><li>DSS: 통계 &lt;11장. 검정과 추정&gt; 복습하기</li><li>DSS: 통계 &lt;34절. 선형회귀분석의 기초&gt; 복습하기</li><li>DSS: 통계 &lt;35절. 입력변수가 카테고리값인 경우&gt; 복습하기</li><li>DSS: 통계 &lt;36절. 예측성능의 진단과 비교&gt; 복습하기</li><li>DSS: 통계 &lt;37절. 과최적화와 교차 검증&gt; 복습하기</li><li>DSS: 통계 &lt;38절. 추천시스템&gt; 복습하기</li><li>DSS: 통계 &lt;43절. 클러스터링&gt; 복습하기</li><li>DSS: 통계 &lt;44절. 분류의 기초&gt; 복습하기</li><li><del>블로그에 about 페이지 만들기</del></li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>알고리즘 문제. 백준 1단계 1001번 문제 - A-B 출력하기</title>
      <link href="/2018/07/12/algorithm_prob_001/"/>
      <url>/2018/07/12/algorithm_prob_001/</url>
      
        <content type="html"><![CDATA[<p><a href="https://github.com/hyeshinoh/Study_Algorithm/blob/master/Algorithm%20Problems/bj_01_1001_A-B.ipynb" target="_blank" rel="noopener">jupyter notebook으로 보기</a></p><h4 id="BAEKJOON-1단계-1001번-문제"><a href="#BAEKJOON-1단계-1001번-문제" class="headerlink" title="BAEKJOON 1단계 1001번 문제"></a>BAEKJOON 1단계 1001번 문제</h4><p><a href="https://www.acmicpc.net/problem/1001" target="_blank" rel="noopener">https://www.acmicpc.net/problem/1001</a></p><a id="more"></a> <hr><h3 id="문제"><a href="#문제" class="headerlink" title="문제"></a>문제</h3><p>두 정수 A와 B를 입력받은 다음, A-B를 출력하는 프로그램을 작성하시오.</p><h3 id="입력"><a href="#입력" class="headerlink" title="입력"></a>입력</h3><p>첫째 줄에 A와 B가 주어진다. (0 &lt; A, B &lt; 10)</p><h3 id="출력"><a href="#출력" class="headerlink" title="출력"></a>출력</h3><p>첫째 줄에 A-B를 출력한다.</p><h3 id="예제-입력-1"><a href="#예제-입력-1" class="headerlink" title="예제 입력 1"></a>예제 입력 1</h3><p>3 2</p><h3 id="예제-출력-1"><a href="#예제-출력-1" class="headerlink" title="예제 출력 1"></a>예제 출력 1</h3><p>1</p><hr><h3 id="풀이"><a href="#풀이" class="headerlink" title="풀이"></a>풀이</h3><h4 id="1-input을-split해서-리스트로-받아-A-B를-계산"><a href="#1-input을-split해서-리스트로-받아-A-B를-계산" class="headerlink" title="(1) input을 split해서 리스트로 받아 A - B를 계산"></a>(1) input을 split해서 리스트로 받아 A - B를 계산</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ls = list(map(int, input().split(<span class="string">' '</span>)))</span><br><span class="line">print(ls[<span class="number">0</span>] - ls [<span class="number">1</span>])</span><br></pre></td></tr></table></figure><pre><code>3 21</code></pre><h4 id="2-input은-각각-한-자리-수이므로-input-문자열의-0번째와-2번째를-indexing해서-int로-형변환-후-A-B-계산"><a href="#2-input은-각각-한-자리-수이므로-input-문자열의-0번째와-2번째를-indexing해서-int로-형변환-후-A-B-계산" class="headerlink" title="(2) input은 각각 한 자리 수이므로 input 문자열의 0번째와 2번째를 indexing해서 int로 형변환 후 A - B 계산"></a>(2) input은 각각 한 자리 수이므로 input 문자열의 0번째와 2번째를 indexing해서 int로 형변환 후 A - B 계산</h4><ul><li>코드가 더 짧아진다</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a = input()</span><br><span class="line">print(int(a[<span class="number">0</span>]) - int(a[<span class="number">2</span>]))</span><br></pre></td></tr></table></figure><pre><code> 1 3-2</code></pre><h4 id="3-input을-split해서-a-b로-한-번에-받아준-후-계산"><a href="#3-input을-split해서-a-b로-한-번에-받아준-후-계산" class="headerlink" title="(3) input을 split해서 a, b로 한 번에 받아준 후 계산"></a>(3) input을 split해서 a, b로 한 번에 받아준 후 계산</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a, b = map(int, input().split(<span class="string">' '</span>))</span><br><span class="line">print(a - b)</span><br></pre></td></tr></table></figure><pre><code> 1 3-2</code></pre>]]></content>
      
      
      <categories>
          
          <category> DataScience </category>
          
          <category> Algorithm 알고리즘 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> programming </tag>
            
            <tag> 알고리즘 </tag>
            
            <tag> algorithm </tag>
            
            <tag> 알고리즘_문제 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018-07-11-TIL</title>
      <link href="/2018/07/11/2018-07-11-TIL/"/>
      <url>/2018/07/11/2018-07-11-TIL/</url>
      
        <content type="html"><![CDATA[<h4 id="공부한-것-amp-리뷰"><a href="#공부한-것-amp-리뷰" class="headerlink" title="공부한 것 &amp; 리뷰"></a>공부한 것 &amp; 리뷰</h4><ul><li>DSS: javascript 수업 내용 복습<ul><li>즉시실행함수, 익명함수와 callback 함수의 개념은 다시 보아도 좀 어려운 것 같다. javascript는 데이터사이언스스쿨 과정 중에는 쓸 일이 적기 때문에 필요시 나중에 더 공부를 해야할 것 같다. </li></ul></li><li>DSS: python으로 email 보내기 복습<ul><li>python에는 참 편리한 패키지도 많기도 하지 </li></ul></li><li>블로그에 about 페이지 만들기</li><li>DSS: Server cloud(AWS), pyenv/virtualenv/autoenv 복습 </li></ul><h4 id="내일-공부할-것"><a href="#내일-공부할-것" class="headerlink" title="내일 공부할 것"></a>내일 공부할 것</h4><h4 id="이번-주에-공부할-것"><a href="#이번-주에-공부할-것" class="headerlink" title="이번 주에 공부할 것"></a>이번 주에 공부할 것</h4><ul><li><del>DSS: CSS selector 수업 내용 복습하기</del></li><li><del>DSS: javascript 수업 내용 복습하기</del></li><li><del>DSS: Server cloud(AWS), pyenv/virtualenv/autoenv 복습</del></li><li>DSS: 통계 &lt;11장. 검정과 추정&gt; 복습하기</li><li>DSS: 통계 &lt;34절. 선형회귀분석의 기초&gt; 복습하기</li><li>DSS: 통계 &lt;35절. 입력변수가 카테고리값인 경우&gt; 복습하기</li><li>DSS: 통계 &lt;36절. 예측성능의 진단과 비교&gt; 복습하기</li><li>DSS: 통계 &lt;37절. 과최적화와 교차 검증&gt; 복습하기</li><li>DSS: 통계 &lt;38절. 추천시스템&gt; 복습하기</li><li>DSS: 통계 &lt;43절. 클러스터링&gt; 복습하기</li><li>DSS: 통계 &lt;44절. 분류의 기초&gt; 복습하기</li><li><del>블로그에 about 페이지 만들기</del></li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python 04. Python Function - Decorator</title>
      <link href="/2018/07/11/python_04_function_4_decorator/"/>
      <url>/2018/07/11/python_04_function_4_decorator/</url>
      
        <content type="html"><![CDATA[<p><a href="https://nbviewer.jupyter.org/github/hyeshinoh/Study_Python/blob/master/python_04_function_intermediate.ipynb" target="_blank" rel="noopener">jupyter notebook으로 보기</a></p><h2 id="Python-Function-Decorator"><a href="#Python-Function-Decorator" class="headerlink" title="Python Function - Decorator"></a>Python Function - Decorator</h2><ul><li>코드를 바꾸지 않고 함수의 기능을 추가하거나 수정하고 싶을때 사용</li><li>여러개의 함수를 작성하는데 공통된 코드를 뽑아서 묶어 사용할 수 있음</li><li><code>*args</code>와 <code>**kwargs</code>를 이용하여 내부함수와 내부 인자로 사용</li></ul><a id="more"></a> <p>예를 들어, 아래 A와 B함수에서 공통된 부분인 code_1과 code_3을 빼서 묶어 사용하고 싶을 때 사용</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">A</span><span class="params">()</span>:</span></span><br><span class="line">    code_1</span><br><span class="line">    code_2</span><br><span class="line">    code_3</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">B</span><span class="params">()</span>:</span></span><br><span class="line">    code_1</span><br><span class="line">    code_4</span><br><span class="line">    code_3</span><br></pre></td></tr></table></figure><h3 id="1-Decorator-사용-방법"><a href="#1-Decorator-사용-방법" class="headerlink" title="1. Decorator 사용 방법"></a>1. Decorator 사용 방법</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">C</span><span class="params">(func)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">wrapper</span><span class="params">(*args, **kwargs)</span>             # <span class="title">inner</span> <span class="title">function</span></span></span><br><span class="line"><span class="function">        <span class="title">code_1</span></span></span><br><span class="line">        result = func(*args, **kwargs)</span><br><span class="line">        code_3</span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line">    <span class="keyword">return</span> wrapper</span><br><span class="line"></span><br><span class="line"><span class="meta">@C</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">A</span><span class="params">()</span>:</span></span><br><span class="line">    code_2</span><br><span class="line"></span><br><span class="line"><span class="meta">@C</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">B</span><span class="params">()</span>:</span></span><br><span class="line">    code_4</span><br><span class="line">    </span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">결과:</span></span><br><span class="line"><span class="string">A() - code1, code2, code3</span></span><br><span class="line"><span class="string">B() - code1, code4, code3</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">decorator를 쓰지 않으면 아래 처럼 써야함</span></span><br><span class="line"><span class="string">C(A)()</span></span><br><span class="line"><span class="string">"""</span></span><br></pre></td></tr></table></figure><h3 id="2-Decorator-함수-만들어보기"><a href="#2-Decorator-함수-만들어보기" class="headerlink" title="2. Decorator 함수 만들어보기"></a>2. Decorator 함수 만들어보기</h3><h4 id="2-1-더하기와-빼기-연산을-display하기"><a href="#2-1-더하기와-빼기-연산을-display하기" class="headerlink" title="2.1 더하기와 빼기 연산을 display하기"></a>2.1 더하기와 빼기 연산을 display하기</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># A</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sum_func</span><span class="params">(a, b)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> a + b</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># B</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">minus_func</span><span class="params">(a, b)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> a - b</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># C  </span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">disp_func</span><span class="params">(func)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">wrapper</span><span class="params">(*args, **kwargs)</span>:</span></span><br><span class="line">        print(<span class="string">"running function :"</span>, func.__name__)     <span class="comment"># 공통부분</span></span><br><span class="line">        print(<span class="string">"args :"</span>, args)                          <span class="comment"># 공통부분</span></span><br><span class="line">        print(<span class="string">"kwargs :"</span>, kwargs)                      <span class="comment"># 공통부분</span></span><br><span class="line">        result = func(*args, **kwargs)                 <span class="comment"># running func</span></span><br><span class="line">        print(<span class="string">"result :"</span>, result)                      <span class="comment"># 공통부분</span></span><br><span class="line">        <span class="keyword">return</span> result                                  <span class="comment"># 공통부분</span></span><br><span class="line">    <span class="keyword">return</span> wrapper</span><br></pre></td></tr></table></figure><p>함수 그대로를 호출<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sum_func(<span class="number">1</span>, <span class="number">2</span>), minus_func(<span class="number">1</span>, <span class="number">2</span>)</span><br></pre></td></tr></table></figure></p><pre><code>(3, -1)</code></pre><p>display를 하고 싶으면 decorator를 이용</p><ul><li><p>sum_func() 함수를 호출할 때 disp_func가 추가되어 실행</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@disp_func</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sum_func</span><span class="params">(a, b)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> a + b   </span><br><span class="line"></span><br><span class="line">sum_func(<span class="number">1</span>, <span class="number">2</span>)</span><br></pre></td></tr></table></figure><p>  running function : sum_func<br>  args : (1, 2)<br>  kwargs : {}<br>  result : 3</p><p>  3</p></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@disp_func</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">minus_func</span><span class="params">(a, b)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> a - b   </span><br><span class="line"></span><br><span class="line">minus_func(<span class="number">1</span>, <span class="number">2</span>)</span><br></pre></td></tr></table></figure><pre><code>running function : minus_funcargs : (1, 2)kwargs : {}result : -1-1</code></pre><p>decorator를 안 쓰고 수동으로 선언<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sum_int</span><span class="params">(*args)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> sum(args)</span><br><span class="line"></span><br><span class="line">new_sum_int = disp_func(sum_int)</span><br><span class="line">new_sum_int(<span class="number">5</span>, <span class="number">7</span>)</span><br></pre></td></tr></table></figure></p><pre><code>running function : sum_intargs : (5, 7)kwargs : {}result : 1212</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">disp_func(sum_int)(<span class="number">5</span>, <span class="number">7</span>)</span><br></pre></td></tr></table></figure><pre><code>running function : sum_intargs : (5, 7)kwargs : {}result : 1212</code></pre><h4 id="2-2-함수의-실행-시간을-측정하는-데코레이터-함수"><a href="#2-2-함수의-실행-시간을-측정하는-데코레이터-함수" class="headerlink" title="2.2 함수의 실행 시간을 측정하는 데코레이터 함수"></a>2.2 함수의 실행 시간을 측정하는 데코레이터 함수</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">run_time</span><span class="params">(func)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">wrapper</span><span class="params">(*args, **kwargs)</span>:</span>            <span class="comment"># 함수 정의부 packing</span></span><br><span class="line">        start_time = time.time()</span><br><span class="line">        result = func(*args, **kwargs)       <span class="comment"># 함수 호출부 unpacking</span></span><br><span class="line">        end_time = time.time()</span><br><span class="line">        print(<span class="string">"time : &#123;time&#125;"</span>.format(time = end_time - start_time))</span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line">    <span class="keyword">return</span> wrapper</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@run_time</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sum_func</span><span class="params">(ls)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> sum(ls)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ls = list(range(<span class="number">10000</span>))</span><br><span class="line">sum_func(ls)</span><br></pre></td></tr></table></figure><pre><code>time : 0.000106811523437549995000</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@run_time</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">pow_func</span><span class="params">(a, b)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> a ** b</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pow_func(<span class="number">7</span>, <span class="number">100</span>)</span><br></pre></td></tr></table></figure><pre><code>time : 3.814697265625e-063234476509624757991344647769100216810857203198904625400933895331391691459636928060001</code></pre><h4 id="2-3-관리자-계정을-확인해서-관리자-계정이면-패스워드를-출력하는-함수"><a href="#2-3-관리자-계정을-확인해서-관리자-계정이면-패스워드를-출력하는-함수" class="headerlink" title="2.3 관리자 계정을 확인해서 관리자 계정이면 패스워드를 출력하는 함수"></a>2.3 관리자 계정을 확인해서 관리자 계정이면 패스워드를 출력하는 함수</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@admin - code1, func, code3</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dss</span><span class="params">()</span>:</span></span><br><span class="line">    </span><br><span class="line"><span class="meta">@admin</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test</span><span class="params">()</span>:</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">admin_ls = [<span class="string">"pdf"</span>, <span class="string">"dss"</span>]</span><br><span class="line">pw = <span class="string">"dss8"</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">admin</span><span class="params">(func)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">wrapper</span><span class="params">(*args, **kwargs)</span>:</span></span><br><span class="line">        user_id = func(*args, **kwargs)</span><br><span class="line">        <span class="keyword">if</span> user_id <span class="keyword">in</span> admin_ls:</span><br><span class="line">            print(<span class="string">"allow permission [pw:&#123;&#125;]"</span>.format(pw))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">"you are not admin."</span>)</span><br><span class="line">    <span class="keyword">return</span> wrapper</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@admin</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">input_user</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> input(<span class="string">"insert user name: "</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">input_user()</span><br></pre></td></tr></table></figure><pre><code>insert user name:  3you are not admin.</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">user_id = &#123;</span><br><span class="line">    <span class="number">1</span>:<span class="string">"dss"</span>,</span><br><span class="line">    <span class="number">2</span>:<span class="string">"data"</span>,</span><br><span class="line">    <span class="number">3</span>:<span class="string">"python"</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@admin</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">input_id</span><span class="params">()</span>:</span></span><br><span class="line">    user_num = int(input(<span class="string">"inser user id: "</span>))</span><br><span class="line">    <span class="keyword">return</span> user_id[user_num]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">input_id()</span><br></pre></td></tr></table></figure><pre><code>inser user id:  1allow permission [pw:dss8]</code></pre><h4 id="참고자료"><a href="#참고자료" class="headerlink" title="참고자료"></a>참고자료</h4><ul><li>패스트캠퍼스, ⟪데이터사이언스스쿨 8기⟫ 수업자료</li><li>인프런, ⟪프로그래밍, 데이터 과학을 위한 파이썬 입문⟫ 수업 자료</li></ul>]]></content>
      
      
      <categories>
          
          <category> DataScience </category>
          
          <category> Python 파이썬 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 파이썬 </tag>
            
            <tag> programming </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python 04. Python Function - Map, Filter, Reduce</title>
      <link href="/2018/07/11/python_04_function_3_map%20filter%20reduce/"/>
      <url>/2018/07/11/python_04_function_3_map%20filter%20reduce/</url>
      
        <content type="html"><![CDATA[<p><a href="https://nbviewer.jupyter.org/github/hyeshinoh/Study_Python/blob/master/python_04_function_intermediate.ipynb" target="_blank" rel="noopener">jupyter notebook으로 보기</a></p><h2 id="Python-Function-Map-Filter-Reduce"><a href="#Python-Function-Map-Filter-Reduce" class="headerlink" title="Python Function - Map, Filter, Reduce"></a>Python Function - Map, Filter, Reduce</h2><p>list의 element에 함수를 적용하는 세 가지 방법인 map, filter, reduce에 대하여 알아보자<br><a id="more"></a> </p><h3 id="1-Map"><a href="#1-Map" class="headerlink" title="1. Map"></a>1. Map</h3><ul><li>함수와 sequence 자료형을 받아 sequence 각 element에 함수를 적용한 결과를 리턴하는 함수</li><li>문법: <code>map(&lt;function&gt;, *&lt;list&gt;)</code> </li><li>python3은 iteration을 생성 → list 형변환 을 해주어야 함<ul><li>generator: 실행시점에 값을 생성, 메모리 효율적</li></ul></li></ul><h4 id="1-1-예시-list의-element에서-각각-1을-빼주기"><a href="#1-1-예시-list의-element에서-각각-1을-빼주기" class="headerlink" title="1.1 예시: list의 element에서 각각 1을 빼주기"></a>1.1 예시: list의 element에서 각각 1을 빼주기</h4><p>함수 정의<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ls = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">minus_one</span><span class="params">(num)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> num - <span class="number">1</span></span><br></pre></td></tr></table></figure></p><p>일반 함수로 구현</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">result = []</span><br><span class="line"><span class="keyword">for</span> value <span class="keyword">in</span> ls:</span><br><span class="line">    result.append(minus_one(value))</span><br><span class="line">    </span><br><span class="line">result</span><br></pre></td></tr></table></figure><pre><code>[0, 1, 2, 3, 4]</code></pre><p>map 함수 사용<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">result = list(map(minus_one, ls))</span><br><span class="line">result</span><br></pre></td></tr></table></figure></p><pre><code>[0, 1, 2, 3, 4]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># lambda 사용시 함수 선언해줄 필요 없음</span></span><br><span class="line">result = list(map(<span class="keyword">lambda</span> num: num - <span class="number">1</span>, ls))</span><br><span class="line">result</span><br></pre></td></tr></table></figure><pre><code>[0, 1, 2, 3, 4]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># parameter를 두 개 넣는 것도 가능</span></span><br><span class="line">ls1 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line">ls2 = [<span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>]</span><br><span class="line"></span><br><span class="line">result = list(map(<span class="keyword">lambda</span> num1, num2: num1 + num2, ls1, ls2))</span><br><span class="line">result</span><br></pre></td></tr></table></figure><pre><code>[6, 8, 10, 12]</code></pre><h4 id="1-2-Quiz"><a href="#1-2-Quiz" class="headerlink" title="1.2 Quiz"></a>1.2 Quiz</h4><h5 id="1-names에서-성만-출력하기"><a href="#1-names에서-성만-출력하기" class="headerlink" title="(1) names에서 성만 출력하기"></a>(1) names에서 성만 출력하기</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">names = [<span class="string">"Kim dss"</span>, <span class="string">"Park python"</span>, <span class="string">"Lee science"</span>, <span class="string">"Jung school"</span>]</span><br><span class="line"></span><br><span class="line">result = list(map(<span class="keyword">lambda</span> name: name.split()[<span class="number">0</span>], names))</span><br><span class="line">result</span><br></pre></td></tr></table></figure><pre><code>[&apos;Kim&apos;, &apos;Park&apos;, &apos;Lee&apos;, &apos;Jung&apos;]</code></pre><h5 id="2-1-10까지의-숫자리스트에서-홀수는-odd-짝수는-even을-dict-타입-key-value-형태-으로-출력하기"><a href="#2-1-10까지의-숫자리스트에서-홀수는-odd-짝수는-even을-dict-타입-key-value-형태-으로-출력하기" class="headerlink" title="(2) 1~10까지의 숫자리스트에서 홀수는 odd, 짝수는 even을 dict 타입(key, value 형태)으로 출력하기"></a>(2) 1~10까지의 숫자리스트에서 홀수는 odd, 짝수는 even을 dict 타입(key, value 형태)으로 출력하기</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># general function 이용</span></span><br><span class="line">num_list = list(range(<span class="number">1</span>, <span class="number">11</span>))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">odd_or_even</span><span class="params">(num)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> num % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"even"</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"odd"</span></span><br><span class="line">    </span><br><span class="line">result = dict(zip(num_list, list(map(odd_or_even, num_list))))</span><br><span class="line">result</span><br></pre></td></tr></table></figure><pre><code>{1: &apos;odd&apos;, 2: &apos;even&apos;, 3: &apos;odd&apos;, 4: &apos;even&apos;, 5: &apos;odd&apos;, 6: &apos;even&apos;, 7: &apos;odd&apos;, 8: &apos;even&apos;, 9: &apos;odd&apos;, 10: &apos;even&apos;}</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># lambda function 이용</span></span><br><span class="line">num_list = list(range(<span class="number">1</span>, <span class="number">11</span>))</span><br><span class="line"></span><br><span class="line">result = list(map(<span class="keyword">lambda</span> num: <span class="string">"even"</span> <span class="keyword">if</span> num % <span class="number">2</span> == <span class="number">0</span> <span class="keyword">else</span> <span class="string">"odd"</span>, num_list))</span><br><span class="line">result = dict(zip(num_list, result))</span><br><span class="line">result</span><br></pre></td></tr></table></figure><pre><code>{1: &apos;odd&apos;, 2: &apos;even&apos;, 3: &apos;odd&apos;, 4: &apos;even&apos;, 5: &apos;odd&apos;, 6: &apos;even&apos;, 7: &apos;odd&apos;, 8: &apos;even&apos;, 9: &apos;odd&apos;, 10: &apos;even&apos;}</code></pre><h5 id="3-map-함수를-직접-구현하기"><a href="#3-map-함수를-직접-구현하기" class="headerlink" title="(3) map 함수를 직접 구현하기"></a>(3) map 함수를 직접 구현하기</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 가장 어려운 퀴즈: 꼭 다시 풀어보면서 연습해보기</span></span><br><span class="line">ls1 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line">ls2 = [<span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>]</span><br><span class="line">ls3 = [<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sum_func1</span><span class="params">(*args)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> sum(args)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">map_func</span><span class="params">(func, *args)</span>:</span></span><br><span class="line">    result = []</span><br><span class="line">    <span class="comment"># 가장 짧은 리스트의 길이 결정</span></span><br><span class="line">    values_count = len(args[<span class="number">0</span>])             </span><br><span class="line">    <span class="keyword">for</span> idx <span class="keyword">in</span> range(len(args)):</span><br><span class="line">         values_count = values_count <span class="keyword">if</span> values_count &lt; len(args[idx]) <span class="keyword">else</span> len(args[idx])</span><br><span class="line">    <span class="comment"># 2중for문: 리스트에서 하나씩 묶어오기</span></span><br><span class="line">    params_count = len(args)                <span class="comment"># 리스트의 개수: 3</span></span><br><span class="line">    <span class="keyword">for</span> idx_1 <span class="keyword">in</span> range(values_count):</span><br><span class="line">        params = []</span><br><span class="line">        <span class="keyword">for</span> idx_2 <span class="keyword">in</span> range(params_count):</span><br><span class="line">            params.append(args[idx_2][idx_1])   </span><br><span class="line">        result.append(func(*params))</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line">        </span><br><span class="line">map_func(sum_func1, ls1, ls2, ls3)</span><br><span class="line"></span><br><span class="line"><span class="comment"># expected result: [15, 18, 21, 24]</span></span><br></pre></td></tr></table></figure><pre><code>[15, 18, 21, 24]</code></pre><h3 id="2-Filter"><a href="#2-Filter" class="headerlink" title="2 Filter"></a>2 Filter</h3><ul><li>리스트 데이터에서 조건에 맞는 value 데이터를 필터링 해주는 함수</li><li>Filter에 사용되는 함수는 bool 데이터 타입을 리턴 값으로 사용 (True / False)<ul><li>함수의 리턴 값이 True이면 값이 남아 있고 False이면 값을 제거</li></ul></li><li>문법: <code>filter(&lt;function&gt;, &lt;list(iterable)&gt;)</code></li></ul><h4 id="2-1-예시-숫자-리스트에서-짝수-홀수만-출력하기"><a href="#2-1-예시-숫자-리스트에서-짝수-홀수만-출력하기" class="headerlink" title="2.1 예시: 숫자 리스트에서 짝수/홀수만 출력하기"></a>2.1 예시: 숫자 리스트에서 짝수/홀수만 출력하기</h4><p>General function 사용해서 리스트에서 짝수만 출력하기</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_even</span><span class="params">(number_list)</span>:</span></span><br><span class="line">    result = []</span><br><span class="line">    <span class="keyword">for</span> number <span class="keyword">in</span> number_list:</span><br><span class="line">        <span class="keyword">if</span> number % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">            result.append(number)</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line">number_list = list(range(<span class="number">10</span>))</span><br><span class="line">print(number_list)</span><br><span class="line">get_even(number_list)</span><br></pre></td></tr></table></figure><pre><code>[0, 1, 2, 3, 4, 5, 6, 7, 8, 9][0, 2, 4, 6, 8]</code></pre><p>Filter function 사용해서 리스트에서 홀수만 출력하기<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ls = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br><span class="line"></span><br><span class="line">result = list(filter(<span class="keyword">lambda</span> num: <span class="keyword">True</span> <span class="keyword">if</span> num % <span class="number">2</span> == <span class="number">1</span> <span class="keyword">else</span> <span class="keyword">False</span>, ls))</span><br><span class="line">result</span><br></pre></td></tr></table></figure></p><pre><code>[1, 3, 5]</code></pre><h4 id="2-2-Quiz"><a href="#2-2-Quiz" class="headerlink" title="2.2 Quiz"></a>2.2 Quiz</h4><h5 id="1-성이-lee인-사람의-이름만-결과로-출력"><a href="#1-성이-lee인-사람의-이름만-결과로-출력" class="headerlink" title="(1) 성이 lee인 사람의 이름만 결과로 출력"></a>(1) 성이 lee인 사람의 이름만 결과로 출력</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">names = [<span class="string">"Kim dss"</span>, <span class="string">"Park python"</span>, <span class="string">"Lee science"</span>, <span class="string">"Jung school"</span>, <span class="string">"Lee java"</span>]</span><br><span class="line"></span><br><span class="line">result = list(filter(<span class="keyword">lambda</span> name: name.split()[<span class="number">0</span>] == <span class="string">"Lee"</span>, names)) </span><br><span class="line">result</span><br></pre></td></tr></table></figure><pre><code>[&apos;Lee science&apos;, &apos;Lee java&apos;]</code></pre><h5 id="2-이름-첫글자를-대문자로-바꾸고-성이-Lee인-사람의-이름만-결과로-출력"><a href="#2-이름-첫글자를-대문자로-바꾸고-성이-Lee인-사람의-이름만-결과로-출력" class="headerlink" title="(2) 이름 첫글자를 대문자로 바꾸고 성이 Lee인 사람의 이름만 결과로 출력"></a>(2) 이름 첫글자를 대문자로 바꾸고 성이 Lee인 사람의 이름만 결과로 출력</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">names = [<span class="string">"Kim dss"</span>, <span class="string">"park python"</span>, <span class="string">"lee science"</span>, <span class="string">"Jung school"</span>, <span class="string">"lee java"</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># names = list(map(lambda name: name[:1].upper() + name[1:], names))</span></span><br><span class="line">names = list(map(<span class="keyword">lambda</span> name: name.capitalize(), names))</span><br><span class="line">result = list(filter(<span class="keyword">lambda</span> name: name.split()[<span class="number">0</span>] == <span class="string">"Lee"</span>, names)) </span><br><span class="line"></span><br><span class="line">result</span><br></pre></td></tr></table></figure><pre><code>[&apos;Lee science&apos;, &apos;Lee java&apos;]</code></pre><h5 id="3-1-10에서-짝수를-필터링하는-함수-amp-홀수를-필터링하는-함수를-적용하여-filter-구현"><a href="#3-1-10에서-짝수를-필터링하는-함수-amp-홀수를-필터링하는-함수를-적용하여-filter-구현" class="headerlink" title="(3) 1-10에서 짝수를 필터링하는 함수 &amp; 홀수를 필터링하는 함수를 적용하여 filter 구현"></a>(3) 1-10에서 짝수를 필터링하는 함수 &amp; 홀수를 필터링하는 함수를 적용하여 filter 구현</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">ls = list(range(<span class="number">1</span>,<span class="number">11</span>))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">odd</span><span class="params">(number)</span>:</span>             <span class="comment"># 홀수이면 True return</span></span><br><span class="line">    <span class="keyword">return</span> number % <span class="number">2</span> == <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">even</span><span class="params">(number)</span>:</span>            <span class="comment"># 짝수이면 True return</span></span><br><span class="line">    <span class="keyword">return</span> number % <span class="number">2</span> == <span class="number">0</span></span><br><span class="line"></span><br><span class="line">is_odd_even = &#123;              <span class="comment"># 함수도 딕셔너리의 value가 될 수 있음</span></span><br><span class="line">    <span class="string">"odd"</span>:odd,</span><br><span class="line">    <span class="string">"even"</span>:even,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">filter_func</span><span class="params">(func, data_list)</span>:</span></span><br><span class="line">    result = []</span><br><span class="line">    <span class="keyword">for</span> data <span class="keyword">in</span> data_list:</span><br><span class="line">        <span class="keyword">if</span> func(data):</span><br><span class="line">            result.append(data)</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line">result_1 = list(filter_func(is_odd_even[<span class="string">"odd"</span>], ls))          <span class="comment"># 딕셔너리 key값으로 함수 호출</span></span><br><span class="line">result_2 = list(filter_func(is_odd_even[<span class="string">"even"</span>], ls))</span><br><span class="line"></span><br><span class="line">result_1, result_2</span><br></pre></td></tr></table></figure><pre><code>([1, 3, 5, 7, 9], [2, 4, 6, 8, 10])</code></pre><h3 id="3-Reduce"><a href="#3-Reduce" class="headerlink" title="3. Reduce"></a>3. Reduce</h3><ul><li>특정 함수에 리스트 데이터의 첫 element부터 넣고 실행하고 실행결과를 다시 함수의 파라미터로 넣어 함수를 실행, 결국 하나의 값으로 리턴</li><li><code>reduce(&lt;function&gt;, &lt;list&gt;)</code></li><li>function의 parameter가 두 개</li></ul><h4 id="3-1-예시"><a href="#3-1-예시" class="headerlink" title="3.1 예시"></a>3.1 예시</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> functools <span class="keyword">import</span> reduce</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ls = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br><span class="line"></span><br><span class="line">reduce(<span class="keyword">lambda</span> x, y: x + y, ls)</span><br></pre></td></tr></table></figure><pre><code>15</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ls = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">7</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 가장 큰 수를 구하기</span></span><br><span class="line">reduce(<span class="keyword">lambda</span> x, y: x <span class="keyword">if</span> x &gt; y <span class="keyword">else</span> y, ls)</span><br></pre></td></tr></table></figure><pre><code>8</code></pre><h4 id="3-2-Quiz"><a href="#3-2-Quiz" class="headerlink" title="3.2 Quiz"></a>3.2 Quiz</h4><h5 id="1-이름-길이가-가장-긴-사람을-출력하기"><a href="#1-이름-길이가-가장-긴-사람을-출력하기" class="headerlink" title="(1) 이름 길이가 가장 긴 사람을 출력하기"></a>(1) 이름 길이가 가장 긴 사람을 출력하기</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">name_list = [<span class="string">"Kim dss"</span>, <span class="string">"Park python"</span>, <span class="string">"lee science"</span>, <span class="string">"Jung fastschool"</span>, <span class="string">"Lee java"</span>]</span><br><span class="line"><span class="comment"># TODO</span></span><br><span class="line">result = reduce(<span class="keyword">lambda</span> x, y: x <span class="keyword">if</span> len(x) &gt; len(y) <span class="keyword">else</span> y, name_list)</span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure><pre><code>Jung fastschool</code></pre><h5 id="2-reduce-함수-구현하기"><a href="#2-reduce-함수-구현하기" class="headerlink" title="(2) reduce 함수 구현하기"></a>(2) reduce 함수 구현하기</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">ls = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">reduce_func</span><span class="params">(func, data_list)</span>:</span></span><br><span class="line">    result = data_list[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, len(data_list)):</span><br><span class="line">        result = func(result, data_list[i])</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line">reduce_func(<span class="keyword">lambda</span> num1, num2: num1 + num2, ls)</span><br></pre></td></tr></table></figure><pre><code>55</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">ls = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">reduce_func</span><span class="params">(func, data_list)</span>:</span></span><br><span class="line">    result = data_list[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">del</span> data_list[<span class="number">0</span>]</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> data <span class="keyword">in</span> data_list:</span><br><span class="line">        result = func(result, data)</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line">reduce_func(<span class="keyword">lambda</span> num1, num2: num1 + num2, ls)</span><br></pre></td></tr></table></figure><pre><code>55</code></pre><p><a href="https://nbviewer.jupyter.org/github/hyeshinoh/Study_Python/blob/master/python_04_function_intermediate.ipynb" target="_blank" rel="noopener">jupyter notebook으로 보기</a></p><h4 id="참고자료"><a href="#참고자료" class="headerlink" title="참고자료"></a>참고자료</h4><ul><li>패스트캠퍼스, ⟪데이터사이언스스쿨 8기⟫ 수업자료</li><li>인프런, ⟪프로그래밍, 데이터 과학을 위한 파이썬 입문⟫ 수업 자료</li></ul>]]></content>
      
      
      <categories>
          
          <category> DataScience </category>
          
          <category> Python 파이썬 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 파이썬 </tag>
            
            <tag> programming </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python 04. Python Function - Scope, inner function, lambda function</title>
      <link href="/2018/07/11/python_04_function_2_scope%20inner%20lambda/"/>
      <url>/2018/07/11/python_04_function_2_scope%20inner%20lambda/</url>
      
        <content type="html"><![CDATA[<p><a href="https://nbviewer.jupyter.org/github/hyeshinoh/Study_Python/blob/master/python_04_function_intermediate.ipynb" target="_blank" rel="noopener">jupyter notebook으로 보기</a></p><h3 id="다룰-내용"><a href="#다룰-내용" class="headerlink" title="다룰 내용"></a>다룰 내용</h3><ol><li>Scope: global &amp; local  </li><li>Inner function(익명함수): 외부로 내 함수를 노출시키고 싶지 않을 때 사용  </li><li>Lambda function  </li></ol><a id="more"></a> <h2 id="1-변수의-범위-Scoping-Rule"><a href="#1-변수의-범위-Scoping-Rule" class="headerlink" title="1. 변수의 범위(Scoping Rule)"></a>1. 변수의 범위(Scoping Rule)</h2><ul><li>변수가 사용되는 범위</li><li>global variable: 프로그램 전체에서 사용 </li><li>local variable: 함수 내에서만 사용</li></ul><h3 id="1-1-global-variable"><a href="#1-1-global-variable" class="headerlink" title="1.1 global variable"></a>1.1 global variable</h3><ul><li>전역변수는 함수 내에서 사용이 가능함</li><li>but, 함수 내에 전역 변수와 같은 이름의 변수를 선언하면 새로운 지역 변수가 생김</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">gv = <span class="number">10</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">print_gv</span><span class="params">()</span>:</span></span><br><span class="line">    print(gv)</span><br><span class="line">print_gv()</span><br></pre></td></tr></table></figure><pre><code>10</code></pre><h3 id="1-2-local-variable"><a href="#1-2-local-variable" class="headerlink" title="1.2 local variable"></a>1.2 local variable</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">gv = <span class="number">10</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">print_gv</span><span class="params">()</span>:</span></span><br><span class="line">    gv = <span class="number">100</span></span><br><span class="line">    print(gv)    <span class="comment"># local 영역의 gv</span></span><br><span class="line">print_gv(), </span><br><span class="line">print(gv)        <span class="comment"># global 영역의 gv = 10</span></span><br></pre></td></tr></table></figure><pre><code>100(None,)10</code></pre><h4 id="1-locals-로컬-영역에-선언되어-있는-변수를-호출"><a href="#1-locals-로컬-영역에-선언되어-있는-변수를-호출" class="headerlink" title="(1) locals(): 로컬 영역에 선언되어 있는 변수를 호출"></a>(1) locals(): 로컬 영역에 선언되어 있는 변수를 호출</h4><p>locals 가 실행되는 위치에서 local이므로 global영역에서 실행하면 global 변수가 나옴<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">gv = <span class="number">10</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">print_gv</span><span class="params">(gv)</span>:</span></span><br><span class="line">    gv = <span class="number">100</span></span><br><span class="line">    gv2 = <span class="number">200</span></span><br><span class="line">    print(locals())</span><br></pre></td></tr></table></figure></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print_gv(gv)</span><br></pre></td></tr></table></figure><pre><code>{&apos;gv&apos;: 100, &apos;gv2&apos;: 200}</code></pre><h4 id="2-globals-글로벌-영역에-선언되어-있는-변수를-호출"><a href="#2-globals-글로벌-영역에-선언되어-있는-변수를-호출" class="headerlink" title="(2) globals(): 글로벌 영역에 선언되어 있는 변수를 호출"></a>(2) globals(): 글로벌 영역에 선언되어 있는 변수를 호출</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(globals())</span><br></pre></td></tr></table></figure><pre><code>{&apos;__name__&apos;: &apos;__main__&apos;, &apos;__doc__&apos;: &apos;Automatically created module for IPython interactive environment&apos;, &apos;__package__&apos;: None, &apos;__loader__&apos;: None, &apos;__spec__&apos;: None, &apos;__builtin__&apos;: &lt;module &apos;builtins&apos; (built-in)&gt;, &apos;__builtins__&apos;: &lt;module &apos;builtins&apos; (built-in)&gt;, &apos;_ih&apos;: [&apos;&apos;, &apos;gv = 10\ndef print_gv():\n    print(gv)\nprint_gv()&apos;, &apos;gv = 10\ndef print_gv():\n    gv = 100\n    print(gv)    # local 영역의 gv\nprint_gv(), \nprint(gv)        # global 영역의 gv = 10&apos;, &apos;# locals(): 로컬 영역에 선언되어 있는 변수\ngv = 10\ndef print_gv(gv):\n    gv = 100\n    gv2 = 200\n    print(locals())\n    \n#locals 가 실행되는 위치에서 local이므로 global영역에서 실행하면 global 변수가 나옴&apos;, &apos;print_gv(gv)&apos;, &apos;print(globals())&apos;], &apos;_oh&apos;: {2: (None,)}, &apos;_dh&apos;: [&apos;/Users/hyeshinoh/Workspace/Study_Python&apos;], &apos;In&apos;: [&apos;&apos;, &apos;gv = 10\ndef print_gv():\n    print(gv)\nprint_gv()&apos;, &apos;gv = 10\ndef print_gv():\n    gv = 100\n    print(gv)    # local 영역의 gv\nprint_gv(), \nprint(gv)        # global 영역의 gv = 10&apos;, &apos;# locals(): 로컬 영역에 선언되어 있는 변수\ngv = 10\ndef print_gv(gv):\n    gv = 100\n    gv2 = 200\n    print(locals())\n    \n#locals 가 실행되는 위치에서 local이므로 global영역에서 실행하면 global 변수가 나옴&apos;, &apos;print_gv(gv)&apos;, &apos;print(globals())&apos;], &apos;Out&apos;: {2: (None,)}, &apos;get_ipython&apos;: &lt;bound method InteractiveShell.get_ipython of &lt;ipykernel.zmqshell.ZMQInteractiveShell object at 0x10ae9b208&gt;&gt;, &apos;exit&apos;: &lt;IPython.core.autocall.ZMQExitAutocall object at 0x10aeae978&gt;, &apos;quit&apos;: &lt;IPython.core.autocall.ZMQExitAutocall object at 0x10aeae978&gt;, &apos;_&apos;: (None,), &apos;__&apos;: &apos;&apos;, &apos;___&apos;: &apos;&apos;, &apos;InteractiveShell&apos;: &lt;class &apos;IPython.core.interactiveshell.InteractiveShell&apos;&gt;, &apos;np&apos;: &lt;module &apos;numpy&apos; from &apos;/usr/local/lib/python3.7/site-packages/numpy/__init__.py&apos;&gt;, &apos;sp&apos;: &lt;module &apos;scipy&apos; from &apos;/usr/local/lib/python3.7/site-packages/scipy/__init__.py&apos;&gt;, &apos;pd&apos;: &lt;module &apos;pandas&apos; from &apos;/usr/local/lib/python3.7/site-packages/pandas/__init__.py&apos;&gt;, &apos;sm&apos;: &lt;module &apos;statsmodels.api&apos; from &apos;/usr/local/lib/python3.7/site-packages/statsmodels/api.py&apos;&gt;, &apos;smf&apos;: &lt;module &apos;statsmodels.formula.api&apos; from &apos;/usr/local/lib/python3.7/site-packages/statsmodels/formula/api.py&apos;&gt;, &apos;sms&apos;: &lt;module &apos;statsmodels.stats.api&apos; from &apos;/usr/local/lib/python3.7/site-packages/statsmodels/stats/api.py&apos;&gt;, &apos;sk&apos;: &lt;module &apos;sklearn&apos; from &apos;/usr/local/lib/python3.7/site-packages/sklearn/__init__.py&apos;&gt;, &apos;mpl&apos;: &lt;module &apos;matplotlib&apos; from &apos;/usr/local/lib/python3.7/site-packages/matplotlib/__init__.py&apos;&gt;, &apos;plt&apos;: &lt;module &apos;matplotlib.pyplot&apos; from &apos;/usr/local/lib/python3.7/site-packages/matplotlib/pyplot.py&apos;&gt;, &apos;Axes3D&apos;: &lt;class &apos;mpl_toolkits.mplot3d.axes3d.Axes3D&apos;&gt;, &apos;sns&apos;: &lt;module &apos;seaborn&apos; from &apos;/usr/local/lib/python3.7/site-packages/seaborn/__init__.py&apos;&gt;, &apos;_i&apos;: &apos;print_gv(gv)&apos;, &apos;_ii&apos;: &apos;# locals(): 로컬 영역에 선언되어 있는 변수\ngv = 10\ndef print_gv(gv):\n    gv = 100\n    gv2 = 200\n    print(locals())\n    \n#locals 가 실행되는 위치에서 local이므로 global영역에서 실행하면 global 변수가 나옴&apos;, &apos;_iii&apos;: &apos;gv = 10\ndef print_gv():\n    gv = 100\n    print(gv)    # local 영역의 gv\nprint_gv(), \nprint(gv)        # global 영역의 gv = 10&apos;, &apos;_i1&apos;: &apos;gv = 10\ndef print_gv():\n    print(gv)\nprint_gv()&apos;, &apos;gv&apos;: 10, &apos;print_gv&apos;: &lt;function print_gv at 0x10aef50d0&gt;, &apos;_i2&apos;: &apos;gv = 10\ndef print_gv():\n    gv = 100\n    print(gv)    # local 영역의 gv\nprint_gv(), \nprint(gv)        # global 영역의 gv = 10&apos;, &apos;_2&apos;: (None,), &apos;_i3&apos;: &apos;# locals(): 로컬 영역에 선언되어 있는 변수\ngv = 10\ndef print_gv(gv):\n    gv = 100\n    gv2 = 200\n    print(locals())\n    \n#locals 가 실행되는 위치에서 local이므로 global영역에서 실행하면 global 변수가 나옴&apos;, &apos;_i4&apos;: &apos;print_gv(gv)&apos;, &apos;_i5&apos;: &apos;print(globals())&apos;}</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">type(globals()), globals()[<span class="string">'gv'</span>]</span><br></pre></td></tr></table></figure><pre><code>(dict, 10)</code></pre><h3 id="1-3-local-영역에서-global-변수의-변경"><a href="#1-3-local-영역에서-global-변수의-변경" class="headerlink" title="1.3 local 영역에서 global 변수의 변경"></a>1.3 local 영역에서 global 변수의 변경</h3><p>함수 내에서 전역변수 사용히 global 키워드를 사용</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">gv = <span class="number">10</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dss</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">global</span> gv    <span class="comment"># local영역의 gv → global영역의 gv 변수</span></span><br><span class="line">    gv = <span class="number">100</span></span><br><span class="line">    print(gv)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gv</span><br></pre></td></tr></table></figure><pre><code>10</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dss()</span><br></pre></td></tr></table></figure><pre><code>100</code></pre><p>dss() 함수 실행 후 gv는 100으로 변경됨</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gv</span><br></pre></td></tr></table></figure><pre><code>100</code></pre><h2 id="2-Inner-function"><a href="#2-Inner-function" class="headerlink" title="2. Inner function"></a>2. Inner function</h2><ul><li>global: 전역변수, 전역함수 / local: 지역변수, 지역함수</li><li>전역함수 내에 지역함수를 선언할 수 있음 (inner function)</li><li>local 영역에 함수를 숨겨서 global영역에서 사용할 수 없도록 함</li><li>local 영역에 함수를 선언하면 함수가 실행될 때 메모리상에 올라가서 실행되기 때문에 메모리 절약<ul><li>global 영역에 선언하면 그 함수가 계속 메모리에 올라간 상태(상주)로 실행이 되는 것 (호출이 되지 않더라도)</li></ul></li><li>decorator에 inner function 이해가 필수적</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">outer</span><span class="params">(a, b)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">inner</span><span class="params">(c, d)</span>:</span>      <span class="comment"># local function - 숨겨져 있음, outer 함수 내에서만 사용 가능</span></span><br><span class="line">        <span class="keyword">return</span> c + d</span><br><span class="line">    <span class="keyword">return</span> inner(a, b)    <span class="comment"># 결과를 리턴: 3</span></span><br><span class="line"></span><br><span class="line">outer(<span class="number">1</span>, <span class="number">2</span>)</span><br></pre></td></tr></table></figure><pre><code>3</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 외부에서 inner function을 사용하려면 함수를(결과값이 아니라) 호출</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">outer</span><span class="params">(a, b)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">inner</span><span class="params">(c, d)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> c + d</span><br><span class="line">    <span class="keyword">return</span> inner</span><br><span class="line"></span><br><span class="line">i = outer(<span class="number">1</span>, <span class="number">1</span>)    <span class="comment"># 왜 1과 2를 넣는가?</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">i(<span class="number">2</span>, <span class="number">4</span>)</span><br></pre></td></tr></table></figure><pre><code>6</code></pre><p>inner()를 바로 호출하면 error 메세지가 뜸</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">inner(<span class="number">1</span>, <span class="number">2</span>)</span><br></pre></td></tr></table></figure><pre><code>---------------------------------------------------------------------------NameError                                 Traceback (most recent call last)&lt;ipython-input-22-5051cd321f58&gt; in &lt;module&gt;()----&gt; 1 inner(1, 2)NameError: name &apos;inner&apos; is not defined</code></pre><h2 id="3-lambda-function"><a href="#3-lambda-function" class="headerlink" title="3. lambda function"></a>3. lambda function</h2><ul><li>함수의 이름 없이, 간단한 파라미터를 받아서 리턴해주는 함수를 만들어 줌</li><li>python3부터는 권장하지는 않으나 여전히 많이 쓰임  </li><li>문법: <code>lambda &lt;parameters&gt; : &lt;return_value&gt;</code></li></ul><h3 id="3-1-General-function과-lambda-function의-차이"><a href="#3-1-General-function과-lambda-function의-차이" class="headerlink" title="3.1 General function과 lambda function의 차이"></a>3.1 General function과 lambda function의 차이</h3><p>Lambda function을 쓰면 더 간결하게 함수 정의가 가능함</p><ul><li><p>General Function</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sum_func</span><span class="params">(a, b)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> a + b</span><br><span class="line"></span><br><span class="line">sum_func(<span class="number">1</span>, <span class="number">2</span>)</span><br></pre></td></tr></table></figure><p>  3</p></li><li><p>Lambda Function</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sum_func2 = <span class="keyword">lambda</span> a, b: a + b</span><br><span class="line">sum_func2(<span class="number">1</span>, <span class="number">2</span>)</span><br></pre></td></tr></table></figure><p>  3</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">type(sum_func2)</span><br></pre></td></tr></table></figure><p>  function</p></li></ul><h3 id="3-2-Lambda-function-예시"><a href="#3-2-Lambda-function-예시" class="headerlink" title="3.2 Lambda function 예시"></a>3.2 Lambda function 예시</h3><p>계산기 기능을 함수로 구현하는 예시로 lambda function의 활용도를 살펴보자</p><ul><li>General function을 사용하여 계산기 기능을 만들려면 다음과 같이 해야 함</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">calc</span><span class="params">(fn, a, b)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> fn(a, b)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sum_func</span><span class="params">(a, b)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> a + b</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">minus_func</span><span class="params">(a, b)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> a - b</span><br><span class="line"></span><br><span class="line">calc(sum_func, <span class="number">1</span>, <span class="number">2</span>), calc(minus_func, <span class="number">1</span>, <span class="number">2</span>)    <span class="comment"># 함수를 변수처럼 던져줄 수 있음</span></span><br></pre></td></tr></table></figure><pre><code>(3, -1)</code></pre><ul><li>Lambda function을 이용하면 lambda function을 선언하면서 함수에 넣어줌 → 한줄로 쓸 수 있음<ul><li>global 영역에 함수를 만들어주지 않아도 되어 메모리 효율 높음</li><li>하지만 간단한 함수만 가능  </li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">calc(<span class="keyword">lambda</span> a, b: a + b, <span class="number">1</span>, <span class="number">2</span>), calc(<span class="keyword">lambda</span> a, b: a - b, <span class="number">1</span>, <span class="number">2</span>)</span><br></pre></td></tr></table></figure><pre><code>(3, -1)</code></pre><h4 id="참고자료"><a href="#참고자료" class="headerlink" title="참고자료"></a>참고자료</h4><ul><li>패스트캠퍼스, ⟪데이터사이언스스쿨 8기⟫ 수업자료</li><li>인프런, ⟪프로그래밍, 데이터 과학을 위한 파이썬 입문⟫ 수업 자료</li></ul>]]></content>
      
      
      <categories>
          
          <category> DataScience </category>
          
          <category> Python 파이썬 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 파이썬 </tag>
            
            <tag> programming </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018-07-10-TIL</title>
      <link href="/2018/07/10/2018-07-10-TIL/"/>
      <url>/2018/07/10/2018-07-10-TIL/</url>
      
        <content type="html"><![CDATA[<h4 id="공부한-것-amp-리뷰"><a href="#공부한-것-amp-리뷰" class="headerlink" title="공부한 것 &amp; 리뷰"></a>공부한 것 &amp; 리뷰</h4><ul><li>DSS: CSS selector 수업 내용 복습</li></ul><h4 id="내일-공부할-것"><a href="#내일-공부할-것" class="headerlink" title="내일 공부할 것"></a>내일 공부할 것</h4><ul><li>DSS: javascript 수업 내용 복습하기</li><li>블로그에 about 페이지 만들기</li></ul><h4 id="이번-주에-공부할-것"><a href="#이번-주에-공부할-것" class="headerlink" title="이번 주에 공부할 것"></a>이번 주에 공부할 것</h4><ul><li><del>DSS: CSS selector 수업 내용 복습하기</del></li><li>DSS: javascript 수업 내용 복습하기</li><li>DSS: 통계 &lt;11장. 검정과 추정&gt; 복습하기</li><li>DSS: 통계 &lt;34절. 선형회귀분석의 기초&gt; 복습하기</li><li>DSS: 통계 &lt;35절. 입력변수가 카테고리값인 경우&gt; 복습하기</li><li>DSS: 통계 &lt;36절. 예측성능의 진단과 비교&gt; 복습하기</li><li>DSS: 통계 &lt;37절. 과최적화와 교차 검증&gt; 복습하기</li><li>DSS: 통계 &lt;38절. 추천시스템&gt; 복습하기</li><li>DSS: 통계 &lt;43절. 클러스터링&gt; 복습하기</li><li>DSS: 통계 &lt;44절. 분류의 기초&gt; 복습하기</li><li>블로그에 about 페이지 만들기</li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python 03. Python Function - Basic</title>
      <link href="/2018/07/10/python_03_function_1_basic/"/>
      <url>/2018/07/10/python_03_function_1_basic/</url>
      
        <content type="html"><![CDATA[<p><a href="https://nbviewer.jupyter.org/github/hyeshinoh/Study_Python/blob/master/python_03_function_basic.ipynb" target="_blank" rel="noopener">jupyter notebook으로 보기</a></p><h3 id="다룰-내용"><a href="#다룰-내용" class="headerlink" title="다룰 내용"></a>다룰 내용</h3><ul><li>함수의 개념</li><li>함수 선언, 호출</li><li>parameter &amp; argument 개념</li><li>return</li><li>*args, **kwargs</li><li>docstring</li></ul><p>여럿이 함께 프로그램을 개발하려면 필요한 부분을 나눠서 작성한 후 합쳐야 한다. 이 때 프로그램을 기능별로 나누는 방법은 (1)함수 (2)객체 (3)모듈이 있는데 그 중에서 먼저 함수에 대해서 살펴보도록 하자</p><a id="more"></a> <h2 id="1-함수의-기초"><a href="#1-함수의-기초" class="headerlink" title="1. 함수의 기초"></a>1. 함수의 기초</h2><ul><li>함수: 어떤 일을 수행하는 코드의 덩어리, 묶음</li><li>함수의 기능<ul><li>반복적인 수행을 1회만 작성한 후 호출해서 사용</li><li>코드를 논리적인 단위로 분리</li><li>캡슐화: 인터페이스(인풋, 아웃풋)만 알면 타인의 코드를 쉽게 사용</li></ul></li></ul><h3 id="1-1-선언"><a href="#1-1-선언" class="headerlink" title="1.1 선언"></a>1.1 선언</h3><ul><li>함수 선언 문법</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> &lt;<span class="title">function_name</span>&gt;<span class="params">(parameter)</span>:</span></span><br><span class="line">    &lt;code&gt;</span><br><span class="line">    <span class="keyword">return</span> &lt;<span class="keyword">return</span> value&gt;</span><br></pre></td></tr></table></figure><ul><li>함수 선언 예시</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sum_func</span><span class="params">(a, b)</span>:</span></span><br><span class="line">    print(a + b)</span><br></pre></td></tr></table></figure><h3 id="1-2-호출"><a href="#1-2-호출" class="headerlink" title="1.2 호출"></a>1.2 호출</h3><p><code>function_name(argument)</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sum_func(<span class="number">1</span>, <span class="number">2</span>)</span><br></pre></td></tr></table></figure><pre><code>3</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">type(sum_func)</span><br></pre></td></tr></table></figure><pre><code>function</code></pre><h4 id="함수-호출-방식"><a href="#함수-호출-방식" class="headerlink" title="함수 호출 방식"></a>함수 호출 방식</h4><p>함수 인자를 전달하는 방식에는 다음의 두 가지가 있음</p><ol><li>값에 의한 호출 (call by value)<ul><li>함수에 인자를 넘길 때 값만 넘김<ul><li>함수 내에 인자 값 변경 시, 호출자에게 영향을 주지 않음</li></ul></li></ul></li><li>참조에 의한 호출 (call by reference)<ul><li>함수에 인자를 넘길 때 메모리 주소를 넘김</li><li>함수 내에 인자 값 변경 시, 호출자의 값도 변경됨</li></ul></li></ol><ul><li>파이썬은 객체의 주소가 함수로 전달되는 방식<ul><li>전달된 객체를 참조하여 변경시 호출자에게 영향을 줌</li><li>새로운 객체를 만들 경우 호출자에게 영향을 주지 않음</li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">spam</span><span class="params">(eggs)</span>:</span></span><br><span class="line">    eggs.append(<span class="number">1</span>)</span><br><span class="line">    eggs = [<span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">ham = [<span class="number">0</span>]</span><br><span class="line">spam(ham)</span><br><span class="line">print(ham)</span><br></pre></td></tr></table></figure><pre><code>[0, 1]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test</span><span class="params">(t)</span>:</span></span><br><span class="line">    t = <span class="number">20</span></span><br><span class="line">    print(<span class="string">"In function: "</span>, t)</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">x = <span class="number">10</span></span><br><span class="line">print(<span class="string">"Before: "</span>, x)</span><br><span class="line">test(x)</span><br><span class="line">print(<span class="string">"After: "</span>, x)</span><br></pre></td></tr></table></figure><pre><code>Before:  10In function:  20After:  10</code></pre><h3 id="1-3-parameter-amp-argument"><a href="#1-3-parameter-amp-argument" class="headerlink" title="1.3 parameter &amp; argument"></a>1.3 parameter &amp; argument</h3><ul><li>parameter: 함수의 입력 값 인터페이스</li><li>argument: 실제 parameter에 대입된 값</li><li>현업에서는 혼용해서 말하는 경우도 있음</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sum_func</span><span class="params">(a, b)</span>:</span>        <span class="comment"># a, b: parameter</span></span><br><span class="line">    print(a + b)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sum_func(<span class="number">1</span>, <span class="number">2</span>)             <span class="comment"># 1, 2: argument</span></span><br></pre></td></tr></table></figure><pre><code>3</code></pre><h4 id="keyword-argument"><a href="#keyword-argument" class="headerlink" title="keyword argument"></a>keyword argument</h4><ul><li>함수에 입력되는 parameter의 변수명을 사용하여 argument를 넘김</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">div_func</span><span class="params">(a, b)</span>:</span>        </span><br><span class="line">    print(a / b)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">div_func(<span class="number">10</span>,<span class="number">2</span>), div_func(b=<span class="number">10</span>, a=<span class="number">2</span>) <span class="comment"># keyword argument</span></span><br></pre></td></tr></table></figure><pre><code>5.00.2(None, None)</code></pre><h4 id="default-parameter"><a href="#default-parameter" class="headerlink" title="default parameter"></a>default parameter</h4><ul><li>parameter의 기본 값을 사용, 입력하지 않을 경우 기본값을 출력</li><li>non-default parameter를 몰아서 써주고 나서 맨 끝에 넣어줌</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sum_func</span><span class="params">(a, b = <span class="number">0</span>)</span>:</span>  <span class="comment"># b는 default 값이 0인 parameter</span></span><br><span class="line">    print(a + b)</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">sum_func(<span class="number">2</span>), sum_func(<span class="number">2</span>, <span class="number">3</span>)</span><br></pre></td></tr></table></figure><pre><code>25(None, None)</code></pre><h3 id="1-4-return"><a href="#1-4-return" class="headerlink" title="1.4 return"></a>1.4 return</h3><ul><li>함수를 호출했을 때 결과를 반환하는 용도로 사용</li><li>return data가 있는 함수 &amp; 없는 함수가 있음</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sum_func</span><span class="params">(a, b)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> a + b</span><br><span class="line"></span><br><span class="line">result = sum_func(<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line">result</span><br></pre></td></tr></table></figure><pre><code>3</code></pre><h3 id="1-5-함수의-형태"><a href="#1-5-함수의-형태" class="headerlink" title="1.5 함수의 형태"></a>1.5 함수의 형태</h3><p>parameter의 유무, return value의 유무에 따라 함수 형태가 다름</p><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">parameter 없음</th><th style="text-align:center">parameter 존재</th></tr></thead><tbody><tr><td style="text-align:center">return value <br> 없음</td><td style="text-align:center">함수 내의 수행문만 수행</td><td style="text-align:center">인자를 사용하여 <br> 수행문 수행</td></tr><tr><td style="text-align:center">return value <br> 존재</td><td style="text-align:center">인자 없이 수행문 <br> 수행 후 결과값 반환</td><td style="text-align:center">인자를 사용하여 <br> 수행문 수행 후 결과값 반환</td></tr></tbody></table><h2 id="2-Variable-length-arguments"><a href="#2-Variable-length-arguments" class="headerlink" title="2. Variable-length arguments"></a>2. Variable-length arguments</h2><ul><li>개수가 정해지지 않은 변수를 함수의 parameter로 사용하는 방법</li><li>asterisk(*): 전부, 모두, all</li><li><code>*args</code>: keyword가 없는 argument를 parameter로 받을 때 사용</li><li><code>**kwargs</code>: keyword가 있는 argument를 parameter로 받을 때 사용</li></ul><h3 id="2-1-가변인자-args"><a href="#2-1-가변인자-args" class="headerlink" title="2.1 가변인자: *args"></a>2.1 가변인자: *args</h3><ul><li>가변인자는 일반적으로 *args를 변수명으로 사용</li><li>기존 parameter 이후에 나오는 값을 tuple로 저장함</li><li>가변인자는 마지막 parameter 위치에 사용 가능</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">varlen_test</span><span class="params">(a, b, *args)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> a + b + sum(args)</span><br><span class="line"></span><br><span class="line">varlen_test(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>)</span><br></pre></td></tr></table></figure><pre><code>15</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sum_func</span><span class="params">(*args)</span>:</span></span><br><span class="line">    print(args)</span><br><span class="line">    print(type(args))</span><br><span class="line">    print(args[<span class="number">2</span>])</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">sum_func(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>) <span class="comment"># 묶여서 tuple형태로 들어감</span></span><br></pre></td></tr></table></figure><pre><code>(1, 2, 3, 4, 5)&lt;class &apos;tuple&apos;&gt;3</code></pre><h3 id="2-2-키워드-가변인자-kwargs"><a href="#2-2-키워드-가변인자-kwargs" class="headerlink" title="2.2 키워드 가변인자: **kwargs"></a>2.2 키워드 가변인자: **kwargs</h3><ul><li>parameter의 이름을 따로 지정하지 않고 입력하는 방법</li><li>asterisk(*) 두개를 사용하여 함수의 parameter를 표시함</li><li>입력된 값은 dict type으로 사용할 수 있음</li><li>키워드 가변인자는 오직 한 개만 기존 가변인자(있을 경우) 다음에 사용함</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">kwargs_test_1</span><span class="params">(**kwargs)</span>:</span> </span><br><span class="line">    print(kwargs)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">kwargs_test_2</span><span class="params">(**kwargs)</span>:</span> </span><br><span class="line">    print(kwargs)</span><br><span class="line">    print(<span class="string">"First value is &#123;first&#125;"</span>.format(**kwargs)) </span><br><span class="line">    print(<span class="string">"Second value is &#123;second&#125;"</span>.format(**kwargs)) </span><br><span class="line">    print(<span class="string">"Third value is &#123;third&#125;"</span>.format(**kwargs))</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">kwargs_test_3</span><span class="params">(one,two, *args, **kwargs)</span>:</span> </span><br><span class="line">    print(one+two+sum(args))</span><br><span class="line">    print(kwargs)</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">kwargs_test_3(<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>, first=<span class="number">3</span>, second=<span class="number">4</span>, third=<span class="number">5</span>)</span><br></pre></td></tr></table></figure><pre><code>42{&apos;first&apos;: 3, &apos;second&apos;: 4, &apos;third&apos;: 5}</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">points</span><span class="params">(**kwargs)</span>:</span></span><br><span class="line">    print(kwargs)</span><br><span class="line">    print(type(kwargs))</span><br><span class="line">    print(kwargs[<span class="string">'math'</span>])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">points(math = <span class="number">90</span>, science = <span class="number">70</span>)</span><br></pre></td></tr></table></figure><pre><code>{&apos;math&apos;: 90, &apos;science&apos;: 70}&lt;class &apos;dict&apos;&gt;90</code></pre><p>In [14]:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dss</span><span class="params">(*args, **kwargs)</span>:</span></span><br><span class="line">    print(args)</span><br><span class="line">    print(kwargs)</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">dss(<span class="number">2</span>, <span class="number">3</span>, num1 = <span class="number">10</span>, num2 = <span class="number">20</span>)</span><br></pre></td></tr></table></figure></p><pre><code>(2, 3){&apos;num1&apos;: 10, &apos;num2&apos;: 20}</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dss</span><span class="params">(*args)</span>:</span></span><br><span class="line">    print(args)</span><br><span class="line">    </span><br><span class="line">ls = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line">dss(ls)              <span class="comment"># ls가 *args의 0번째 데이터로 들어감</span></span><br></pre></td></tr></table></figure><pre><code>([1, 2, 3, 4],)</code></pre><h4 id="argument에-가변인자-사용하기"><a href="#argument에-가변인자-사용하기" class="headerlink" title="argument에 가변인자 사용하기"></a>argument에 가변인자 사용하기</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dss</span><span class="params">(*args)</span>:</span></span><br><span class="line">    print(args)</span><br><span class="line">    print(type(args))</span><br><span class="line">    </span><br><span class="line">ls = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line">dss(*ls)   <span class="comment"># list 가 argument로 하나씩 들어가게 됨</span></span><br></pre></td></tr></table></figure><pre><code>(1, 2, 3, 4)&lt;class &apos;tuple&apos;&gt;</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 그냥 보낼 경우 args의 0번째 데이터로 보내게 됨</span></span><br><span class="line">dss(ls)</span><br></pre></td></tr></table></figure><pre><code>([1, 2, 3, 4],)&lt;class &apos;tuple&apos;&gt;</code></pre><h2 id="3-docstring"><a href="#3-docstring" class="headerlink" title="3. docstring"></a>3. docstring</h2><p>함수에 대한 설명을 넣는 것 (함수와 parameter에 관한 설명은 필수)<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dss</span><span class="params">()</span>:</span></span><br><span class="line">  <span class="string">"description"</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">or</span></span><br><span class="line"></span><br><span class="line">  <span class="string">"""</span></span><br><span class="line"><span class="string">  description</span></span><br><span class="line"><span class="string">  description</span></span><br><span class="line"><span class="string">  """</span></span><br></pre></td></tr></table></figure></p><p>참고사항</p><ul><li>PEP 20: The Zen of Python - “Readability counts”</li><li>PEP 8: Style Guide for Python Code</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># PEP 20</span></span><br><span class="line"><span class="keyword">import</span> this</span><br></pre></td></tr></table></figure><p><strong>The Zen of Python, by Tim Peters</strong></p><blockquote><p>Beautiful is better than ugly.<br>Explicit is better than implicit.<br>Simple is better than complex.<br>Complex is better than complicated.<br>Flat is better than nested.<br>Sparse is better than dense.<br>Readability counts.<br>Special cases aren’t special enough to break the rules.<br>Although practicality beats purity.<br>Errors should never pass silently.<br>Unless explicitly silenced.<br>In the face of ambiguity, refuse the temptation to guess.<br>There should be one– and preferably only one –obvious way to do it.<br>Although that way may not be obvious at first unless you’re Dutch.<br>Now is better than never.<br>Although never is often better than <em>right</em> now.<br>If the implementation is hard to explain, it’s a bad idea.<br>If the implementation is easy to explain, it may be a good idea.<br>Namespaces are one honking great idea – let’s do more of those!</p></blockquote><h4 id="naming-convention-함수의-경우는-주로-snake-case-사용"><a href="#naming-convention-함수의-경우는-주로-snake-case-사용" class="headerlink" title="naming convention - 함수의 경우는 주로 snake case 사용"></a>naming convention - 함수의 경우는 주로 snake case 사용</h4><ul><li>snake case: first_name</li><li>camel case: firstNameAddrEmail</li><li>pascal case: FirstNameAddrEmail</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">echo</span><span class="params">(anything)</span>:</span></span><br><span class="line">    <span class="string">'echo returns its input argument'</span></span><br><span class="line">    <span class="keyword">return</span> anything</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">result1 = echo(<span class="string">"data_science"</span>)</span><br></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo?</span><br></pre></td></tr></table></figure><pre><code>Signature: echo(anything)Docstring: echo returns its input argumentFile:      ~/Workspace/Python_Study/&lt;ipython-input-19-387cc7da3925&gt;Type:      function</code></pre><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo??</span><br></pre></td></tr></table></figure><pre><code>Signature: echo(anything)Source:   def echo(anything):    &apos;echo returns its input argument&apos;    return anythingFile:      ~/Workspace/Python_Study/&lt;ipython-input-19-387cc7da3925&gt;Type:      function</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">echo2</span><span class="params">(anything)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    echo returns it's input argument</span></span><br><span class="line"><span class="string">    The operation is:</span></span><br><span class="line"><span class="string">    1. print anything parameter</span></span><br><span class="line"><span class="string">    2. return anything parameter</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    print(<span class="string">"echo2 function : &#123;&#125;"</span>.format(anything))</span><br><span class="line">    <span class="keyword">return</span> anything</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">result2 = echo2(<span class="string">"data_science"</span>)</span><br></pre></td></tr></table></figure><pre><code>echo2 function : data_science</code></pre><p>3.2 help</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">help(echo)</span><br></pre></td></tr></table></figure><pre><code>Help on function echo in module __main__:echo(anything)    echo returns its input argument</code></pre><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print?</span><br></pre></td></tr></table></figure><pre><code>Docstring:print(value, ..., sep=&apos; &apos;, end=&apos;\n&apos;, file=sys.stdout, flush=False)Prints the values to a stream, or to sys.stdout by default.Optional keyword arguments:file:  a file-like object (stream); defaults to the current sys.stdout.sep:   string inserted between values, default a space.end:   string appended after the last value, default a newline.flush: whether to forcibly flush the stream.Type:      builtin_function_or_method</code></pre><h4 id="참고자료"><a href="#참고자료" class="headerlink" title="참고자료"></a>참고자료</h4><ul><li>패스트캠퍼스, ⟪데이터사이언스스쿨 8기⟫ 수업자료</li><li>인프런, ⟪프로그래밍, 데이터 과학을 위한 파이썬 입문⟫ 수업자료</li></ul>]]></content>
      
      
      <categories>
          
          <category> DataScience </category>
          
          <category> Python 파이썬 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 파이썬 </tag>
            
            <tag> programming </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>알고리즘 이론. 알고리즘이란?</title>
      <link href="/2018/07/10/algorithm_00/"/>
      <url>/2018/07/10/algorithm_00/</url>
      
        <content type="html"><![CDATA[<h2 id="1-알고리즘이란"><a href="#1-알고리즘이란" class="headerlink" title="1. 알고리즘이란"></a>1. 알고리즘이란</h2><h3 id="1-1-알고리즘은-문제-해결-과정을-묘사하는-것"><a href="#1-1-알고리즘은-문제-해결-과정을-묘사하는-것" class="headerlink" title="1.1 알고리즘은 문제 해결 과정을 묘사하는 것"></a>1.1 알고리즘은 문제 해결 과정을 묘사하는 것</h3><ul><li>알고리즘이란 <span style="background-color:yellow">어떤 작업</span>을 수행하기 위해 <span style="background-color:yellow">입력</span>을 받아 원하는 <span style="background-color:yellow">출력</span>을 만들어내는 과정을 기술한 것<a id="more"></a> </li><li>알고리즘을 설계하기 위해서는 <strong>입력</strong>과 <strong>출력</strong>으로 해야할 작업을 명확히 명시함</li><li>예시<ul><li>초보적 알고리즘을 사용해 해결할 수 있는 예<ul><li>입력: 서울시 지하철 노선도, 출발역 &amp; 도착역</li><li>출력: 출발역에서 도착역까지 가는 최단 경로</li></ul></li><li>좀 더 높은 수준의 알고리즘 문제<ul><li>입력: n개의 행렬과 각 행렬의 차원</li><li>출력: 이 행렬들을 모두 곱하기 위해 가장 빨리 끝나는 곱셉 순서</li></ul></li><li>현존하는 알고리즘으로는 현실적인 시간 내에 최적의 해를 보장할 수 없는 문제<ul><li>입력: 어떤 영업사원이 방문해야 할 고객 n명의 위치</li><li>출력: 이 고객들을 모두 방문하고 돌아오는 가장 짧은 경로            </li></ul></li></ul></li><li>알고리즘은 명확하고 효율적으로 설계해야 함<ul><li>명확하다는 것은 모호하지 않고 이해하기 쉽다는 의미 </li><li>입력의 크기가 클 때 알고리즘의 효율성에 따라 수행 시간이 크게 차이남 </li></ul></li></ul><h3 id="1-2-알고리즘은-생각하는-방법을-훈련하는-것"><a href="#1-2-알고리즘은-생각하는-방법을-훈련하는-것" class="headerlink" title="1.2 알고리즘은 생각하는 방법을 훈련하는 것"></a>1.2 알고리즘은 생각하는 방법을 훈련하는 것</h3><ul><li>알고리즘 훈련을 통해 체계적으로 효율적으로 <span style="background-color:yellow">“생각하는 방법”</span>을 익힐 수 있음</li><li>알고리즘을 공부하고 성공적으로 설계, 분석하는 경험이 누적되면 지적인 추상화 레벨이 높아져 문제를 간명하게 볼 수 있는 눈이 생기고 문제의 핵심과 해결 방안에 대한 고도의 직관을 갖게됨</li></ul><h3 id="1-3-알고리즘은-자료구조의-확장"><a href="#1-3-알고리즘은-자료구조의-확장" class="headerlink" title="1.3 알고리즘은 자료구조의 확장"></a>1.3 알고리즘은 자료구조의 확장</h3><ul><li>자료구조는 알고리즘의 선수 과목</li></ul><h2 id="2-알고리즘-설계와-분석의-기초"><a href="#2-알고리즘-설계와-분석의-기초" class="headerlink" title="2. 알고리즘 설계와 분석의 기초"></a>2. 알고리즘 설계와 분석의 기초</h2><h3 id="2-1-기초-사항"><a href="#2-1-기초-사항" class="headerlink" title="2.1 기초 사항"></a>2.1 기초 사항</h3><ul><li>알고리즘 분석의 필요성<ul><li>알고리즘 설계 후에는 해당 알고리즘이 자원을 얼마나 소모하는지 분석해야 함</li><li>대부분 소요 시간이 가장 중요한 관심의 대상</li><li>시간분석을 하면 알고리즘이 어느 정도의 입력에서 어느 정도의 시간이 필요할지 미리 짐작할 수 있음</li></ul></li><li>알고리즘의 수행 시간<ul><li>입력의 크기에 대해 시간이 어떤 비율로 소요되는지로 표현</li></ul></li><li>재귀(recursion, 자기호출)와 귀납적 사고<ul><li>재귀: 어떤 문제를 해결하는 과정에서 자신과 똑같지만 크기가 다른 문제를 발견하고 이들의 관계를 파악함으로써 문제 해결에 간명하게 접근하는 방식</li><li>귀납적 사고: 성격이 같지만 크기가 다른 문제 간의 “관계”를 파악하는 것  </li><li>재귀를 이용하는 알고리즘의 정당성은 수학적 귀납법과 관련이 깊음<ul><li>수학적 귀납법은 자신보다 작은 문제에 대해 결론이 옳음을 가정하고 자신과 이 작은 문제의 관계를 통해서 자신에게도 결론이 옳음을 보이는 것</li><li>재귀 알고리즘이 자신보다 작은 문제를 자기호출하는 것은 수학적 귀납법의 가정과 일치, 즉 자신보다 작은 문제에서는 이 알고리즘이 제대로 작동한다고 가정하는 것  </li></ul></li></ul></li></ul><h3 id="2-2-점근적-표기"><a href="#2-2-점근적-표기" class="headerlink" title="2.2 점근적 표기"></a>2.2 점근적 표기</h3><ul><li>점근적 분석: 알고리즘은 입력의 크기가 충분히 클 때 효율성이 문제가 되므로, 알고리즘의 수행시간은 입력의 크기가 충분히 클 때 분석함</li><li>점근적 증가율: 변수의 크기가 충분히 큰 경우에 변수가 커짐에 따라 함수가 증가하는 비율</li><li>점근적 표기법: 점근적 증가율의 표기법</li><li>수학의 극한 개념과 유사</li><li>변수가 커짐에 따라 함수의 계수가 미치는 영향은 미미해지므로 계수는 무시함</li></ul><h4 id="대표적-점근적-표기법"><a href="#대표적-점근적-표기법" class="headerlink" title="대표적 점근적 표기법"></a>대표적 점근적 표기법</h4><h4 id="1-𝛩-표기법"><a href="#1-𝛩-표기법" class="headerlink" title="(1) 𝛩-표기법"></a>(1) 𝛩-표기법</h4><ul><li>입력의 크기 <i>n</i>에 대해 알고리즘의 소요시간이 <i>𝛩(n<sup>2</sup>)</i>이라면 <u>대략</u> <i>n<sup>2</sup></i>에 비례하는 시간이 소요됨을 의미</li><li><i>𝛩(f(n))</i>은 최고차항의 차수(점근적 증가율)가 <i>f(n)</i>과 일치하는 함수의 집합 </li></ul><h4 id="2-O-표기법"><a href="#2-O-표기법" class="headerlink" title="(2) O-표기법"></a>(2) <i>O</i>-표기법</h4><ul><li>입력의 크기 <i>n</i>에 대해 알고리즘의 소요시간이 <i>O(n<sup>2</sup>)</i>이라면 <u>기껏해야</u> <i>n<sup>2</sup></i>에 비례하는 시간이 소요됨을 의미 </li><li><i>O(f(n))</i>은 최고차항의 차수가 <i>f(n)</i>과 같거나 작은 함수의 집합 </li><li><i>O</i>-표기는 함수의 <u>점근적 상한</u>을 나타냄</li></ul><h4 id="3-𝛺-표기법"><a href="#3-𝛺-표기법" class="headerlink" title="(3) 𝛺-표기법"></a>(3) 𝛺-표기법</h4><ul><li>입력의 크기 <i>n</i>에 대해 알고리즘의 소요시간이 <i>𝛺(n<sup>2</sup>)</i>이라면 <u>적어도</u> <i>n<sup>2</sup></i>에 비례하는 시간이 소요됨을 의미 </li><li><i>𝛺(f(n))</i>은 최고차항의 차수가 <i>f(n)</i>과 같거나 큰 함수의 집합 </li><li>𝛺-표기는 함수의 <u>점근적 하한</u>을 나타냄</li></ul>]]></content>
      
      
      <categories>
          
          <category> DataScience </category>
          
          <category> Algorithm 알고리즘 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> programming </tag>
            
            <tag> 알고리즘 </tag>
            
            <tag> algorithm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018-07-09-TIL</title>
      <link href="/2018/07/09/2018-07-09-TIL/"/>
      <url>/2018/07/09/2018-07-09-TIL/</url>
      
        <content type="html"><![CDATA[<h4 id="공부한-것-amp-리뷰"><a href="#공부한-것-amp-리뷰" class="headerlink" title="공부한 것 &amp; 리뷰"></a>공부한 것 &amp; 리뷰</h4><ul><li>DSS 수업: &lt;44절. 분류의 기초&gt;</li><li>지난주 토요일 프로젝트 트러블 슈팅 후 일요일에 휴식을 잘 취하고 다시 시작하는 기분! 다시 열심히 해보자  </li></ul><h4 id="내일-공부할-것"><a href="#내일-공부할-것" class="headerlink" title="내일 공부할 것"></a>내일 공부할 것</h4><ul><li>DSS: CSS selector 수업 내용 복습하기</li><li>DSS: javascript 수업 내용 복습하기</li><li>블로그에 about 페이지 만들기</li></ul><h4 id="이번-주에-공부할-것"><a href="#이번-주에-공부할-것" class="headerlink" title="이번 주에 공부할 것"></a>이번 주에 공부할 것</h4><ul><li>DSS: CSS selector 수업 내용 복습하기</li><li>DSS: javascript 수업 내용 복습하기</li><li>DSS: 통계 &lt;11장. 검정과 추정&gt; 복습하기</li><li>DSS: 통계 &lt;34절. 선형회귀분석의 기초&gt; 복습하기</li><li>DSS: 통계 &lt;35절. 입력변수가 카테고리값인 경우&gt; 복습하기</li><li>DSS: 통계 &lt;36절. 예측성능의 진단과 비교&gt; 복습하기</li><li>DSS: 통계 &lt;37절. 과최적화와 교차 검증&gt; 복습하기</li><li>DSS: 통계 &lt;38절. 추천시스템&gt; 복습하기</li><li>DSS: 통계 &lt;43절. 클러스터링&gt; 복습하기</li><li>DSS: 통계 &lt;44절. 분류의 기초&gt; 복습하기</li><li>블로그에 about 페이지 만들기</li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python 02. Python Condition &amp; Loop (조건문과 반복문)</title>
      <link href="/2018/07/08/python_02_condition,%20loop/"/>
      <url>/2018/07/08/python_02_condition,%20loop/</url>
      
        <content type="html"><![CDATA[<p><a href="https://nbviewer.jupyter.org/github/hyeshinoh/Study_Python/blob/master/python_02_condition%20%26%20loop.ipynb" target="_blank" rel="noopener">jupyter notebook으로 보기</a></p><a id="more"></a> <h2 id="1-입력-Input"><a href="#1-입력-Input" class="headerlink" title="1. 입력 (Input)"></a>1. 입력 (Input)</h2><h3 id="1-1-문자열-입력"><a href="#1-1-문자열-입력" class="headerlink" title="1.1 문자열 입력"></a>1.1 문자열 입력</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">value = input(<span class="string">"Insert string:"</span>)</span><br><span class="line">print(value, type(value))</span><br></pre></td></tr></table></figure><pre><code>Insert string:hellohello &lt;class &apos;str&apos;&gt;</code></pre><h3 id="1-2-숫자-입력"><a href="#1-2-숫자-입력" class="headerlink" title="1.2 숫자 입력"></a>1.2 숫자 입력</h3><p>int()와 같은 방법으로 숫자형으로 변환해주어야 함</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">n = int(input(<span class="string">"insert integer: "</span>))</span><br></pre></td></tr></table></figure><pre><code>insert integer: 3</code></pre><h3 id="1-3-여러-개의-값-입력"><a href="#1-3-여러-개의-값-입력" class="headerlink" title="1.3 여러 개의 값 입력"></a>1.3 여러 개의 값 입력</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ls = input(<span class="string">"insert list (sep=' '): "</span>)</span><br><span class="line">ls = ls.split(<span class="string">" "</span>)</span><br><span class="line">print(type(ls), ls)</span><br></pre></td></tr></table></figure><pre><code>insert list (sep=&apos; &apos;): data science&lt;class &apos;list&apos;&gt; [&apos;data&apos;, &apos;science&apos;]</code></pre><h3 id="1-4-입력-받은-숫자-활용-반복문"><a href="#1-4-입력-받은-숫자-활용-반복문" class="headerlink" title="1.4 입력 받은 숫자 활용 반복문"></a>1.4 입력 받은 숫자 활용 반복문</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">n = int(input(<span class="string">"number : "</span>))</span><br><span class="line"><span class="keyword">for</span> number <span class="keyword">in</span> range(n):</span><br><span class="line">    print(number, end = <span class="string">" "</span>)</span><br></pre></td></tr></table></figure><pre><code>number : 50 1 2 3 4 </code></pre><h1 id="2-출력-print"><a href="#2-출력-print" class="headerlink" title="2. 출력 (print)"></a>2. 출력 (print)</h1><h3 id="2-1-print"><a href="#2-1-print" class="headerlink" title="2.1 print"></a>2.1 print</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">"test"</span>, <span class="string">"page"</span>)     <span class="comment"># 한 칸 띄워 출력됨</span></span><br></pre></td></tr></table></figure><pre><code>test page</code></pre><h3 id="2-2-pprint"><a href="#2-2-pprint" class="headerlink" title="2.2 pprint"></a>2.2 pprint</h3><ul><li>딕셔너리와 같은 데이터 복잡할 때 가독성을 위해 정렬, 줄바꿈하여 출력</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pprint <span class="keyword">import</span> pprint</span><br><span class="line"></span><br><span class="line">dic = &#123;<span class="string">"A"</span>:<span class="number">90</span>, <span class="string">"B"</span>:<span class="number">70</span>, <span class="string">"C"</span>:<span class="number">100</span>, <span class="string">"D"</span>:<span class="number">90</span>, <span class="string">"E"</span>:<span class="number">70</span>, <span class="string">"F"</span>:<span class="number">100</span>, <span class="string">"G"</span>:<span class="number">90</span>, <span class="string">"H"</span>:<span class="number">70</span>, <span class="string">"I"</span>:<span class="number">100</span>&#125;</span><br><span class="line">pprint(dic)</span><br></pre></td></tr></table></figure><pre><code>{&apos;A&apos;: 90, &apos;B&apos;: 70, &apos;C&apos;: 100, &apos;D&apos;: 90, &apos;E&apos;: 70, &apos;F&apos;: 100, &apos;G&apos;: 90, &apos;H&apos;: 70, &apos;I&apos;: 100}</code></pre><h2 id="3-조건-if-elif-else"><a href="#3-조건-if-elif-else" class="headerlink" title="3. 조건 : if, elif, else"></a>3. 조건 : if, elif, else</h2><h3 id="3-1-if"><a href="#3-1-if" class="headerlink" title="3.1 if"></a>3.1 if</h3><h4 id="3-1-1-문법"><a href="#3-1-1-문법" class="headerlink" title="3.1.1 문법"></a>3.1.1 문법</h4><p>condition이 True이면 code_1이 실행<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> &lt;condition&gt;:</span><br><span class="line">&lt;code_1&gt;</span><br></pre></td></tr></table></figure></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">flag = <span class="keyword">True</span></span><br><span class="line"><span class="keyword">if</span> flag:</span><br><span class="line">    print(<span class="string">":)"</span>)</span><br></pre></td></tr></table></figure><pre><code>:)</code></pre><h3 id="3-2-else"><a href="#3-2-else" class="headerlink" title="3.2 else"></a>3.2 else</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">flag = <span class="keyword">True</span></span><br><span class="line"><span class="keyword">if</span> flag:</span><br><span class="line">    print(<span class="string">"dss"</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">"data"</span>)</span><br><span class="line">print(<span class="string">"done"</span>)</span><br></pre></td></tr></table></figure><h3 id="3-3-elif"><a href="#3-3-elif" class="headerlink" title="3.3 elif"></a>3.3 elif</h3><ul><li>조건을 여러 개 줄 때</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 10-8:A / 7-4:B / 3-0: C</span></span><br><span class="line">point = <span class="number">3</span></span><br><span class="line">result = <span class="string">""</span></span><br><span class="line"><span class="keyword">if</span> point &gt;= <span class="number">8</span>:</span><br><span class="line">    result = <span class="string">"A"</span></span><br><span class="line"><span class="keyword">elif</span> point &gt;= <span class="number">4</span>:</span><br><span class="line">    result = <span class="string">"B"</span></span><br><span class="line"><span class="keyword">else</span>: </span><br><span class="line">    result = <span class="string">"C"</span></span><br><span class="line">    </span><br><span class="line">print(result)</span><br><span class="line">print(<span class="string">"done"</span>)</span><br></pre></td></tr></table></figure><pre><code>Cdone</code></pre><h3 id="3-3-3-Quiz"><a href="#3-3-3-Quiz" class="headerlink" title="3.3.3 Quiz"></a>3.3.3 Quiz</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 숫자를 하나 입력 받아서 홀수이면 "odd", 짝수이면 "even"을 출력하는 코드 만들기</span></span><br><span class="line">user_number = int(input(<span class="string">"숫자를 입력해주세요: "</span>))</span><br><span class="line"><span class="keyword">if</span> user_number % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">    print(<span class="string">"even"</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">"odd"</span>)</span><br></pre></td></tr></table></figure><pre><code>숫자를 입력해주세요: 4even</code></pre><h3 id="3-4-삼항연산"><a href="#3-4-삼항연산" class="headerlink" title="3.4 삼항연산"></a>3.4 삼항연산</h3><p><em>간단한 조건문은 한 줄로 쓸 수 있어 편리하다.</em><br>문법: <code>(True) if (condition) else (False)</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">user_number = int(input(<span class="string">"숫자를 입력해주세요: "</span>))</span><br><span class="line">result = <span class="string">"even"</span> <span class="keyword">if</span> user_number % <span class="number">2</span> == <span class="number">0</span> <span class="keyword">else</span> <span class="string">"odd"</span></span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure><pre><code>숫자를 입력해주세요: 3odd</code></pre><h2 id="4-반복-loop"><a href="#4-반복-loop" class="headerlink" title="4. 반복 (loop)"></a>4. 반복 (loop)</h2><ul><li>while, for, list comprehension 반복문</li><li>break, continue</li></ul><h3 id="4-1-while"><a href="#4-1-while" class="headerlink" title="4.1 while"></a>4.1 while</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="number">3</span></span><br><span class="line"><span class="keyword">while</span> a &gt; <span class="number">0</span>:</span><br><span class="line">    print(a)</span><br><span class="line">    a -= <span class="number">1</span></span><br><span class="line">a</span><br></pre></td></tr></table></figure><pre><code>3210</code></pre><h4 id="4-1-3-break"><a href="#4-1-3-break" class="headerlink" title="4.1.3 break"></a>4.1.3 break</h4><ul><li>break 코드를 만나면 강제로 반복문이 종료</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="number">3</span></span><br><span class="line"><span class="keyword">while</span> a &gt; <span class="number">0</span>:</span><br><span class="line">    print(a)</span><br><span class="line">    <span class="keyword">if</span> a == <span class="number">2</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    a -= <span class="number">1</span></span><br><span class="line">a</span><br></pre></td></tr></table></figure><pre><code>322</code></pre><h4 id="4-1-4-continue"><a href="#4-1-4-continue" class="headerlink" title="4.1.4 continue"></a>4.1.4 continue</h4><ul><li>continue 코드를 만나면 바로 반복문 구문으로 이동</li><li>continue 아래 구문이 실행되지 않음</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="number">3</span></span><br><span class="line"><span class="keyword">while</span> a &gt; <span class="number">0</span>:</span><br><span class="line">    print(a)</span><br><span class="line">    <span class="keyword">if</span> a == <span class="number">2</span>:</span><br><span class="line">        a = <span class="number">0</span></span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    a -= <span class="number">1</span></span><br><span class="line">a</span><br></pre></td></tr></table></figure><pre><code>320</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">a = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="string">"q"</span>]</span><br><span class="line">idx = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">    data = a[idx]</span><br><span class="line">    idx += <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> data == <span class="string">'q'</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">elif</span> data % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    print(data)</span><br><span class="line">idx</span><br></pre></td></tr></table></figure><pre><code>135</code></pre><h3 id="4-2-for문"><a href="#4-2-for문" class="headerlink" title="4.2 for문"></a>4.2 for문</h3><ul><li>range, zip, enumerate </li></ul><h4 id="4-2-1-문법"><a href="#4-2-1-문법" class="headerlink" title="4.2.1 문법"></a>4.2.1 문법</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">for &lt;value&gt; in &lt;list&gt;:</span></span><br><span class="line"><span class="string">    &lt;code&gt;</span></span><br><span class="line"><span class="string">'''</span></span><br></pre></td></tr></table></figure><pre><code>&apos;\nfor &lt;value&gt; in &lt;list&gt;:\n    &lt;code&gt;\n&apos;</code></pre><h4 id="4-2-2-활용"><a href="#4-2-2-활용" class="headerlink" title="4.2.2 활용"></a>4.2.2 활용</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ls = [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> ls:</span><br><span class="line">    print(i)</span><br></pre></td></tr></table></figure><pre><code>01234</code></pre><h4 id="4-2-3-range"><a href="#4-2-3-range" class="headerlink" title="4.2.3 range"></a>4.2.3 range</h4><p>list를 간편하게 생성하기 위한 함수</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ls = [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br><span class="line">ls</span><br></pre></td></tr></table></figure><pre><code>[0, 1, 2, 3, 4, 5]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 0~5 리스트를 만들고 싶을 때, 범위를 리스트 형태로 만들어 줄 수 있음</span></span><br><span class="line">print(range(<span class="number">6</span>))</span><br><span class="line">print(list(range(<span class="number">6</span>)))</span><br><span class="line">print(list(range(<span class="number">2</span>, <span class="number">6</span>)))</span><br></pre></td></tr></table></figure><pre><code>range(0, 6)[0, 1, 2, 3, 4, 5][2, 3, 4, 5]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">list(range(<span class="number">0</span>,<span class="number">6</span>,<span class="number">2</span>)), list(range(<span class="number">6</span>, <span class="number">0</span>, <span class="number">-1</span>))</span><br></pre></td></tr></table></figure><pre><code>([0, 2, 4], [6, 5, 4, 3, 2, 1])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">5</span>):    </span><br><span class="line">    print(<span class="string">"dss"</span>)</span><br></pre></td></tr></table></figure><pre><code>dssdssdssdssdss</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> num <span class="keyword">in</span> range(<span class="number">5</span>):</span><br><span class="line">    print(<span class="string">"dss"</span>, num)</span><br></pre></td></tr></table></figure><pre><code>dss 0dss 1dss 2dss 3dss 4</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ls = [<span class="string">"data"</span>, <span class="string">"science"</span>, <span class="string">"school"</span>]</span><br><span class="line"><span class="keyword">for</span> idx <span class="keyword">in</span> range(len(ls)):</span><br><span class="line">    print(ls[idx])</span><br></pre></td></tr></table></figure><pre><code>datascienceschool</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ls = [<span class="string">"data"</span>, <span class="string">"science"</span>, <span class="string">"school"</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> ls:</span><br><span class="line">    print(i)</span><br></pre></td></tr></table></figure><pre><code>datascienceschool</code></pre><h4 id="4-2-4-zip"><a href="#4-2-4-zip" class="headerlink" title="4.2.4 zip"></a>4.2.4 zip</h4><p>2개의 리스트를 key, value (dictionary)형태로 묶어주는 함수</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">subs = [<span class="string">"korean"</span>, <span class="string">"english"</span>, <span class="string">"math"</span>, <span class="string">"science"</span>]</span><br><span class="line">points = [<span class="number">100</span>, <span class="number">80</span>, <span class="number">90</span>, <span class="number">60</span>]</span><br><span class="line"></span><br><span class="line">result = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> k, v <span class="keyword">in</span> zip(subs, points):</span><br><span class="line">    result[k] = v          <span class="comment"># dict type으로 저장될 수 있다</span></span><br><span class="line">result</span><br></pre></td></tr></table></figure><pre><code>{&apos;english&apos;: 80, &apos;korean&apos;: 100, &apos;math&apos;: 90, &apos;science&apos;: 60}</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># zip을 쓰지 않으면 이렇게 해야 함</span></span><br><span class="line">result = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> idx <span class="keyword">in</span> range(len(subs)):</span><br><span class="line">    result[subs[idx]] = points[idx]</span><br><span class="line">result</span><br></pre></td></tr></table></figure><pre><code>{&apos;english&apos;: 80, &apos;korean&apos;: 100, &apos;math&apos;: 90, &apos;science&apos;: 60}</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 가장 좋은 방법</span></span><br><span class="line">subs = [<span class="string">"korean"</span>, <span class="string">"english"</span>, <span class="string">"math"</span>, <span class="string">"science"</span>]</span><br><span class="line">points = [<span class="number">100</span>, <span class="number">80</span>, <span class="number">90</span>, <span class="number">60</span>]</span><br><span class="line"></span><br><span class="line">print(tuple(zip(subs, points)))</span><br><span class="line">print(dict(zip(subs, points)))</span><br></pre></td></tr></table></figure><pre><code>((&apos;korean&apos;, 100), (&apos;english&apos;, 80), (&apos;math&apos;, 90), (&apos;science&apos;, 60)){&apos;korean&apos;: 100, &apos;english&apos;: 80, &apos;math&apos;: 90, &apos;science&apos;: 60}</code></pre><h4 id="4-2-5-enumerate"><a href="#4-2-5-enumerate" class="headerlink" title="4.2.5 enumerate"></a>4.2.5 enumerate</h4><p>리스트 형태의 데이터를 index와 value 값을 동시에 사용할수 있는 함수</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ls = [<span class="string">"math"</span>, <span class="string">"science"</span>, <span class="string">"korean"</span>]</span><br><span class="line"><span class="keyword">for</span> value <span class="keyword">in</span> ls:</span><br><span class="line">    print(value)</span><br></pre></td></tr></table></figure><pre><code>mathsciencekorean</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ls = [<span class="string">"math"</span>, <span class="string">"science"</span>, <span class="string">"korean"</span>]</span><br><span class="line"></span><br><span class="line">num = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> value <span class="keyword">in</span> ls:</span><br><span class="line">    print(num, value)</span><br><span class="line">    num += <span class="number">1</span></span><br></pre></td></tr></table></figure><pre><code>0 math1 science2 korean</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ls = [<span class="string">"math"</span>, <span class="string">"science"</span>, <span class="string">"korean"</span>]</span><br><span class="line"><span class="keyword">for</span> num, value <span class="keyword">in</span> enumerate(ls):</span><br><span class="line">    print(num, value)</span><br></pre></td></tr></table></figure><pre><code>0 math1 science2 korean</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ls = [<span class="string">"math"</span>, <span class="string">"science"</span>, <span class="string">"korean"</span>]</span><br><span class="line">filtered_ls = []</span><br><span class="line"><span class="keyword">for</span> num, value <span class="keyword">in</span> enumerate(ls):</span><br><span class="line">    <span class="keyword">if</span> value ==<span class="string">"science"</span>:</span><br><span class="line">        filtered_ls.append(num)</span><br><span class="line">    print(num, value)</span><br><span class="line">filtered_ls</span><br></pre></td></tr></table></figure><pre><code>0 math1 science2 korean[1]</code></pre><h4 id="4-2-6-퀴즈-for문"><a href="#4-2-6-퀴즈-for문" class="headerlink" title="4.2.6 퀴즈: for문"></a>4.2.6 퀴즈: for문</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># numbers 안에 있는 숫자를 모두 더해서 result로 반환</span></span><br><span class="line">numbers = [<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">9</span>]</span><br><span class="line">result = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> numbers:</span><br><span class="line">    result += i</span><br><span class="line">result</span><br></pre></td></tr></table></figure><pre><code>25</code></pre><h3 id="4-3-list-comprehension"><a href="#4-3-list-comprehension" class="headerlink" title="4.3 list comprehension"></a>4.3 list comprehension</h3><ul><li>반복되어 출력되는 리스트 형태의 데이터를 만들어주는 문법</li><li>for문보다 속도가 빠름 (갈수록 굉장히 중요한 부분!)</li><li><code>ls = [&lt;vlaue&gt; for &lt;value&gt; in &lt;list&gt; (if &lt;condition&gt;)]</code></li><li><em>간단한 형태만 가능하지만 가능한 한 많이 쓰면 좋은 문법</em></li></ul><h4 id="4-3-2-활용"><a href="#4-3-2-활용" class="headerlink" title="4.3.2 활용"></a>4.3.2 활용</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ls = [i <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">6</span>)]</span><br><span class="line">ls</span><br></pre></td></tr></table></figure><pre><code>[1, 2, 3, 4, 5]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 다른방법 1</span></span><br><span class="line">ls = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br><span class="line"></span><br><span class="line">ls = []</span><br><span class="line">ls.append(<span class="number">1</span>)</span><br><span class="line">ls.append(<span class="number">2</span>)</span><br><span class="line">ls.append(<span class="number">3</span>)</span><br><span class="line">ls.append(<span class="number">4</span>)</span><br><span class="line">ls.append(<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 다른방법 2</span></span><br><span class="line">ls = []</span><br><span class="line"><span class="keyword">for</span> num <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">6</span>):</span><br><span class="line">    ls.append(num)</span><br></pre></td></tr></table></figure><pre><code>[1, 2, 3, 4, 5]</code></pre><h4 id="4-3-3-list-comprehension과-for문의-속도-비교"><a href="#4-3-3-list-comprehension과-for문의-속도-비교" class="headerlink" title="4.3.3 list comprehension과 for문의 속도 비교"></a>4.3.3 list comprehension과 for문의 속도 비교</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">%%timeit</span><br><span class="line">ls = []</span><br><span class="line"><span class="keyword">for</span> num <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">10001</span>):</span><br><span class="line">    ls.append(num)</span><br><span class="line">len(ls)</span><br></pre></td></tr></table></figure><pre><code>1.12 ms ± 40.3 µs per loop (mean ± std. dev. of 7 runs, 1000 loops each)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">%%timeit</span><br><span class="line">ls = [num <span class="keyword">for</span> num <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">10001</span>)]</span><br><span class="line">len(ls)</span><br></pre></td></tr></table></figure><pre><code>503 µs ± 29.5 µs per loop (mean ± std. dev. of 7 runs, 1000 loops each)</code></pre><h4 id="4-3-4-삼항연산과-함께-사용"><a href="#4-3-4-삼항연산과-함께-사용" class="headerlink" title="4.3.4 삼항연산과 함께 사용"></a>4.3.4 삼항연산과 함께 사용</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 0 - 10까지 숫자를 출력하고 해당 수가 짝수인지 홀수 인지를 판별해서 odd / even 문자열을 추가하는 코드</span></span><br><span class="line"></span><br><span class="line">ls = [str(num)+<span class="string">": even"</span> <span class="keyword">if</span> num % <span class="number">2</span> == <span class="number">0</span> <span class="keyword">else</span> str(num)+<span class="string">": odd"</span> <span class="keyword">for</span> num <span class="keyword">in</span> range(<span class="number">4</span>)]</span><br><span class="line">ls</span><br></pre></td></tr></table></figure><pre><code>[&apos;0: even&apos;, &apos;1: odd&apos;, &apos;2: even&apos;, &apos;3: odd&apos;]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ls = [str(num) + <span class="string">": even"</span> <span class="keyword">if</span> num % <span class="number">2</span> == <span class="number">0</span> <span class="keyword">else</span> str(num) + <span class="string">": odd"</span> <span class="keyword">for</span> num <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">11</span>)]</span><br><span class="line">ls</span><br></pre></td></tr></table></figure><pre><code>[&apos;1: odd&apos;, &apos;2: even&apos;, &apos;3: odd&apos;, &apos;4: even&apos;, &apos;5: odd&apos;, &apos;6: even&apos;, &apos;7: odd&apos;, &apos;8: even&apos;, &apos;9: odd&apos;, &apos;10: even&apos;]</code></pre><h4 id="4-3-5-조건문을-함께-사용"><a href="#4-3-5-조건문을-함께-사용" class="headerlink" title="4.3.5 조건문을 함께 사용"></a>4.3.5 조건문을 함께 사용</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 홀수만 출력되게 함</span></span><br><span class="line">ls = [num <span class="keyword">for</span> num <span class="keyword">in</span> range(<span class="number">11</span>) <span class="keyword">if</span> num % <span class="number">2</span> == <span class="number">1</span>]</span><br><span class="line">ls</span><br></pre></td></tr></table></figure><pre><code>[1, 3, 5, 7, 9]</code></pre><h4 id="4-3-6-quiz"><a href="#4-3-6-quiz" class="headerlink" title="4.3.6 quiz"></a>4.3.6 quiz</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 성이 lee인 사람의 성을 삭제하는 코드를 작성하세요</span></span><br><span class="line">names = [<span class="string">"kim dss"</span>, <span class="string">"lee python"</span>, <span class="string">"park data"</span>, <span class="string">"lee macpro"</span>]</span><br><span class="line"></span><br><span class="line">result = [name.replace(<span class="string">"lee "</span>, <span class="string">""</span>) <span class="keyword">for</span> name <span class="keyword">in</span> names]</span><br><span class="line"><span class="comment"># result = [name.split()[1] if name.split("")[0] = "lee" else name for name in names]</span></span><br><span class="line">print(result)</span><br><span class="line"></span><br><span class="line">result = [name <span class="keyword">for</span> name <span class="keyword">in</span> result <span class="keyword">if</span> <span class="string">"park "</span> <span class="keyword">not</span> <span class="keyword">in</span> name] </span><br><span class="line"><span class="comment"># result = [name for name in result if name.startswith("park ") != True] </span></span><br><span class="line"><span class="comment"># if name.split()[0] != "park"</span></span><br><span class="line">print(result)</span><br><span class="line"></span><br><span class="line"><span class="comment"># result 1: ["kim dss", "python", "park data", "macpro"]</span></span><br><span class="line"><span class="comment"># result 2: ["kim dss", "python", "macpro"]     - park 씨의 데이터 제거</span></span><br></pre></td></tr></table></figure><pre><code>[&apos;kim dss&apos;, &apos;python&apos;, &apos;park data&apos;, &apos;macpro&apos;][&apos;kim dss&apos;, &apos;python&apos;, &apos;macpro&apos;]</code></pre><h4 id="참고자료"><a href="#참고자료" class="headerlink" title="참고자료"></a>참고자료</h4><ul><li>패스트캠퍼스, 데이터사이언스스쿨 8기 수업자료</li></ul>]]></content>
      
      
      <categories>
          
          <category> DataScience </category>
          
          <category> Python 파이썬 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 파이썬 </tag>
            
            <tag> programming </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018-07-07-TIL</title>
      <link href="/2018/07/07/2018-07-07-TIL/"/>
      <url>/2018/07/07/2018-07-07-TIL/</url>
      
        <content type="html"><![CDATA[<h4 id="공부한-것-amp-리뷰"><a href="#공부한-것-amp-리뷰" class="headerlink" title="공부한 것 &amp; 리뷰"></a>공부한 것 &amp; 리뷰</h4><ul><li>Zillow 회귀분석 팀프로젝트 트러블 슈팅<ul><li>문제 자체가 y값이 아니라 잔차를 예측하는 문제였다는 점에서 선형회귀로 풀기에는 한계가 있었던 프로젝트였음</li><li>핵심부터 파악해서 다시 정리를 해야겠다, 적절한 문제로 다시 분석을 해보고 싶다</li></ul></li></ul><h4 id="내일-공부할-것"><a href="#내일-공부할-것" class="headerlink" title="내일 공부할 것"></a>내일 공부할 것</h4><ul><li>블로그에 about 페이지 만들기</li></ul><h4 id="이번-주에-공부할-것"><a href="#이번-주에-공부할-것" class="headerlink" title="이번 주에 공부할 것"></a>이번 주에 공부할 것</h4><ul><li>DSS: CSS selector 수업 내용 복습하기</li><li>DSS: javascript 수업 내용 복습하기</li><li>DSS: 수학 &lt;11장. 검정과 추정&gt; 복습하기</li><li>DSS: 수학 &lt;13장&gt; 복습하기 - 34절</li><li>DSS: Kaggle 팀프로젝트</li><li><del>커리어서비스: 1분 자기소개 피드백 받기 (~7/3)</del></li><li><del>블로그에 disqus 적용하기</del></li><li>블로그에 about 페이지 만들기</li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python 01. Python Basic Syntax</title>
      <link href="/2018/07/07/python_01/"/>
      <url>/2018/07/07/python_01/</url>
      
        <content type="html"><![CDATA[<p><a href="https://nbviewer.jupyter.org/github/hyeshinoh/Study_Python/blob/master/python_01_basic_syntax.ipynb" target="_blank" rel="noopener">jupyter notebook으로 보기</a></p><p>파이썬의 기본적인 문법을 정리해보자.</p><h4 id="다루는-내용"><a href="#다루는-내용" class="headerlink" title="다루는 내용"></a>다루는 내용</h4><ul><li>기본(comment, print)</li><li>식별자</li><li>변수</li><li>데이터 타입</li><li>데이터 형변화</li><li>연산자</li></ul><h2 id="1-Comment-amp-Print"><a href="#1-Comment-amp-Print" class="headerlink" title="1. Comment &amp; Print"></a>1. Comment &amp; Print</h2><script src="https://gist.github.com/hyeshinoh/0f6b0e691b3716b89d48f6b4bddc33a2.js"></script><h2 id="2-식별자-Identifiers"><a href="#2-식별자-Identifiers" class="headerlink" title="2. 식별자(Identifiers)"></a>2. 식별자(Identifiers)</h2><ul><li>변수, 함수, 클래스, 모듈, 패키지 등을 구분하기 위해서 사용되는 이름</li><li>규칙<ul><li>대소문자 구분</li><li>사용가능 문자: 소문자(a~z)/대문자(A~Z)/숫자/특수기호(_) </li><li>맨 앞에 <code>__</code> 사용 지양</li><li>맨 앞에 숫자 사용불가</li><li>예약어 사용불가: print, def, class, True, False…</li></ul></li></ul><script src="https://gist.github.com/hyeshinoh/d10517981a9edd8a5fa8630eb1cbbfde.js"></script><h2 id="3-변수-Variable"><a href="#3-변수-Variable" class="headerlink" title="3. 변수 - Variable"></a>3. 변수 - Variable</h2><script src="https://gist.github.com/hyeshinoh/95f9ad6609c955d0d91057d5a329dfc1.js"></script><h2 id="4-자료형-Data-type"><a href="#4-자료형-Data-type" class="headerlink" title="4. 자료형 (Data type)"></a>4. 자료형 (Data type)</h2><ul><li>number: int, float, complex(복소수)</li><li>boolean: True, False </li><li>string: str</li><li>collection<ul><li>List</li><li>Tuple</li><li>Dictionary</li><li>Set</li></ul></li></ul><h3 id="4-1-Number"><a href="#4-1-Number" class="headerlink" title="4.1 Number"></a>4.1 Number</h3><script src="https://gist.github.com/hyeshinoh/071ea2630b47d31aea3a0998bd0f995e.js"></script><h3 id="4-2-Boolean"><a href="#4-2-Boolean" class="headerlink" title="4.2 Boolean"></a>4.2 Boolean</h3><p>True &amp; False의 값을 갖는 데이터타입</p><script src="https://gist.github.com/hyeshinoh/3316546237bcb12ec7167b8c2e27c479.js"></script><h3 id="4-3-String"><a href="#4-3-String" class="headerlink" title="4.3 String"></a>4.3 String</h3><script src="https://gist.github.com/hyeshinoh/fff23e953deffc168a9f757cd952303e.js"></script><h3 id="4-4-List"><a href="#4-4-List" class="headerlink" title="4.4 List"></a>4.4 List</h3><script src="https://gist.github.com/hyeshinoh/8d62e157e4dabe992d53ca25b804206f.js"></script><h3 id="4-5-Tuple"><a href="#4-5-Tuple" class="headerlink" title="4.5 Tuple"></a>4.5 Tuple</h3><ul><li>리스트와 같이 순서가 있는 데이터 타입. 하지만 변경이 불가능</li><li>리스트보다 메모리를 적게 사용함</li></ul><script src="https://gist.github.com/hyeshinoh/136e2568adcd1db04e5debb74297fdfe.js"></script><h3 id="4-6-Dictionary"><a href="#4-6-Dictionary" class="headerlink" title="4.6 Dictionary"></a>4.6 Dictionary</h3><ul><li>데이터의 순서가 없음</li><li>여러 개의 (key: value) 쌍으로 이루어진 데이터 타입</li><li>value에 list나 dictionary가 들어갈 수도 있음</li></ul><script src="https://gist.github.com/hyeshinoh/989a7757c0c2d6bd6bee9830c01ad19f.js"></script><h3 id="4-7-Set"><a href="#4-7-Set" class="headerlink" title="4.7 Set"></a>4.7 Set</h3><ul><li>중복되는 데이터가 없는 형태의 데이터 타입</li><li>교집합, 합집합, 차집합과 같은 연산 가능</li><li>list data에서 중복을 제거할 때 많이 사용</li><li>순서가 있는 데이터 타입은 아님 </li></ul><script src="https://gist.github.com/hyeshinoh/5151b3a9bc5ba5df00d74c17c9b4d0b4.js"></script><h2 id="5-데이터-형변환"><a href="#5-데이터-형변환" class="headerlink" title="5. 데이터 형변환"></a>5. 데이터 형변환</h2><ul><li>데이터 타입을 다른 데이터 타입으로 바꾸는 것</li><li>바꾸려는 데이터 타입에 따라서 형변환 가능 여부가 다름</li></ul><script src="https://gist.github.com/hyeshinoh/c293025cd8dd546b96fbeb0528dd36fc.js"></script><h2 id="6-연산자"><a href="#6-연산자" class="headerlink" title="6. 연산자"></a>6. 연산자</h2><ul><li>산술연산자, 비교연산자, 할당연산자, 비트연산자, 논리연산자, 멤버연산자, 식별연산자</li></ul><script src="https://gist.github.com/hyeshinoh/863610f0076e6695fe4248d1d7cb0050.js"></script><h4 id="참고자료"><a href="#참고자료" class="headerlink" title="참고자료"></a>참고자료</h4><ul><li>패스트캠퍼스, ⟪데이터사이언스스쿨 8기⟫ 수업자료</li><li>인프런, ⟪프로그래밍, 데이터 과학을 위한 파이썬 입문⟫ 수업 자료</li></ul><p><a href="https://nbviewer.jupyter.org/github/hyeshinoh/Study_Python/blob/master/python_01_basic_syntax.ipynb" target="_blank" rel="noopener">jupyter notebook으로 보기</a></p>]]></content>
      
      
      <categories>
          
          <category> DataScience </category>
          
          <category> Python 파이썬 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 파이썬 </tag>
            
            <tag> programming </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018-07-06-TIL</title>
      <link href="/2018/07/06/2018-07-06-TIL/"/>
      <url>/2018/07/06/2018-07-06-TIL/</url>
      
        <content type="html"><![CDATA[<h4 id="공부한-것-amp-리뷰"><a href="#공부한-것-amp-리뷰" class="headerlink" title="공부한 것 &amp; 리뷰"></a>공부한 것 &amp; 리뷰</h4><ul><li>Zillow 회귀분석 팀프로젝트<ul><li>겨우 겨우 kaggle에 제출 한번은 하게 됨</li><li>프로젝트 결과가 너무 불만족스럽다, 트러블 슈팅 후에도 다시 부족한 부분을 보완해야겠다</li></ul></li></ul><h4 id="내일-공부할-것"><a href="#내일-공부할-것" class="headerlink" title="내일 공부할 것"></a>내일 공부할 것</h4><ul><li>Zillow 팀프로젝트 트러블 슈팅</li></ul><h4 id="이번-주에-공부할-것"><a href="#이번-주에-공부할-것" class="headerlink" title="이번 주에 공부할 것"></a>이번 주에 공부할 것</h4><ul><li>DSS: CSS selector 수업 내용 복습하기</li><li>DSS: javascript 수업 내용 복습하기</li><li>DSS: 수학 &lt;9장. 확률변수&gt; 복습하기</li><li>DSS: 수학 &lt;10장. 확률변수의 상관관계&gt; 복습하기</li><li>DSS: 수학 &lt;11장. 검정과 추정&gt; 복습하기</li><li>DSS: 수학 &lt;13장&gt; 복습하기 - 34절</li><li>DSS: Kaggle 팀프로젝트</li><li><del>커리어서비스: 1분 자기소개 피드백 받기 (~7/3)</del></li><li><del>블로그에 disqus 적용하기</del></li><li>블로그에 about 페이지 만들기</li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018-07-05-TIL</title>
      <link href="/2018/07/05/2018-07-05-TIL/"/>
      <url>/2018/07/05/2018-07-05-TIL/</url>
      
        <content type="html"><![CDATA[<h4 id="공부한-것-amp-리뷰"><a href="#공부한-것-amp-리뷰" class="headerlink" title="공부한 것 &amp; 리뷰"></a>공부한 것 &amp; 리뷰</h4><ul><li>Zillow 회귀분석 팀프로젝트<ul><li>제대로된 선형회귀 모델 만들자</li><li>EDA 부분 발표파일 정리하자</li></ul></li><li></li></ul><h4 id="내일-공부할-것"><a href="#내일-공부할-것" class="headerlink" title="내일 공부할 것"></a>내일 공부할 것</h4><ul><li>Zillow 팀프로젝트 (발표 파일 제출 ~6시)</li></ul><h4 id="이번-주에-공부할-것"><a href="#이번-주에-공부할-것" class="headerlink" title="이번 주에 공부할 것"></a>이번 주에 공부할 것</h4><ul><li>DSS: CSS selector 수업 내용 복습하기</li><li>DSS: javascript 수업 내용 복습하기</li><li>DSS: 수학 &lt;9장. 확률변수&gt; 복습하기</li><li>DSS: 수학 &lt;10장. 확률변수의 상관관계&gt; 복습하기</li><li>DSS: 수학 &lt;11장. 검정과 추정&gt; 복습하기</li><li>DSS: 수학 &lt;13장&gt; 복습하기 - 34절</li><li>DSS: Kaggle 팀프로젝트</li><li><del>커리어서비스: 1분 자기소개 피드백 받기 (~7/3)</del></li><li><del>블로그에 disqus 적용하기</del></li><li>블로그에 about 페이지 만들기</li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018-07-04-TIL</title>
      <link href="/2018/07/04/2018-07-04-TIL/"/>
      <url>/2018/07/04/2018-07-04-TIL/</url>
      
        <content type="html"><![CDATA[<h4 id="공부한-것-amp-리뷰"><a href="#공부한-것-amp-리뷰" class="headerlink" title="공부한 것 &amp; 리뷰"></a>공부한 것 &amp; 리뷰</h4><ul><li>Zillow 회귀분석 팀프로젝트<ul><li>선형회귀로는 도저히 쓸만한 모델이 만들어지지 않아서 멘붕. 선형회귀로 풀리는 문제인지부터 의문이 든다ㅜ</li></ul></li></ul><h4 id="내일-공부할-것"><a href="#내일-공부할-것" class="headerlink" title="내일 공부할 것"></a>내일 공부할 것</h4><ul><li>Zillow 팀프로젝트</li></ul><h4 id="이번-주에-공부할-것"><a href="#이번-주에-공부할-것" class="headerlink" title="이번 주에 공부할 것"></a>이번 주에 공부할 것</h4><ul><li>DSS: CSS selector 수업 내용 복습하기</li><li>DSS: javascript 수업 내용 복습하기</li><li>DSS: 수학 &lt;9장. 확률변수&gt; 복습하기</li><li>DSS: 수학 &lt;10장. 확률변수의 상관관계&gt; 복습하기</li><li>DSS: 수학 &lt;11장. 검정과 추정&gt; 복습하기</li><li>DSS: 수학 &lt;13장&gt; 복습하기 - 34절</li><li>DSS: Kaggle 팀프로젝트</li><li><del>커리어서비스: 1분 자기소개 피드백 받기 (~7/3)</del></li><li><del>블로그에 disqus 적용하기</del></li><li>블로그에 about 페이지 만들기</li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018-07-03-TIL</title>
      <link href="/2018/07/03/2018-07-03-TIL/"/>
      <url>/2018/07/03/2018-07-03-TIL/</url>
      
        <content type="html"><![CDATA[<h4 id="공부한-것-amp-리뷰"><a href="#공부한-것-amp-리뷰" class="headerlink" title="공부한 것 &amp; 리뷰"></a>공부한 것 &amp; 리뷰</h4><ul><li>Zillow 회귀분석 팀프로젝트</li><li>DSS 수업: 회귀분석 마무리와 클러스터링 약간</li><li>블로그에 disqus 적용</li><li>커리어서비스: 1분 자기소개 피드백 받기<ul><li>너무 길어서 내용을 줄이기!     </li></ul></li></ul><h4 id="내일-공부할-것"><a href="#내일-공부할-것" class="headerlink" title="내일 공부할 것"></a>내일 공부할 것</h4><ul><li>Zillow 팀프로젝트</li></ul><h4 id="이번-주에-공부할-것"><a href="#이번-주에-공부할-것" class="headerlink" title="이번 주에 공부할 것"></a>이번 주에 공부할 것</h4><ul><li>DSS: CSS selector 수업 내용 복습하기</li><li>DSS: javascript 수업 내용 복습하기</li><li>DSS: requests 수업 내용 복습하기</li><li>DSS: selenium 수업 내용 복습하기</li><li>DSS: slack 챗봇 시험해보기</li><li>DSS: 수학 &lt;9장. 확률변수&gt; 복습하기</li><li>DSS: 수학 &lt;10장. 확률변수의 상관관계&gt; 복습하기</li><li>DSS: 수학 &lt;11장. 검정과 추정&gt; 복습하기</li><li>DSS: 수학 &lt;13장&gt; 복습하기 - 34절</li><li>DSS: Kaggle 팀프로젝트</li><li><del>커리어서비스: 1분 자기소개 피드백 받기 (~7/3)</del></li><li><del>블로그에 disqus 적용하기</del></li><li>블로그에 about 페이지 만들기</li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018-07-02-TIL</title>
      <link href="/2018/07/03/2018-07-02-TIL/"/>
      <url>/2018/07/03/2018-07-02-TIL/</url>
      
        <content type="html"><![CDATA[<h4 id="공부한-것-amp-리뷰"><a href="#공부한-것-amp-리뷰" class="headerlink" title="공부한 것 &amp; 리뷰"></a>공부한 것 &amp; 리뷰</h4><ul><li>DSS: 인성 면접 특강</li><li>Zillow 회귀분석 팀프로젝트<ul><li>밤을 하얗게 불태워서 팀원들의 EDA를 모아 보충하고 정리</li><li>matplotlib과 seaborn을 이용한 그래프 그리기가 마음처럼 되지 않는다. 수업 내용과 박사님 강의 자료를 공부할 것   </li></ul></li></ul><h4 id="내일-공부할-것"><a href="#내일-공부할-것" class="headerlink" title="내일 공부할 것"></a>내일 공부할 것</h4><ul><li>Zillow 팀프로젝트</li></ul><h4 id="이번-주에-공부할-것"><a href="#이번-주에-공부할-것" class="headerlink" title="이번 주에 공부할 것"></a>이번 주에 공부할 것</h4><ul><li>DSS: CSS selector 수업 내용 복습하기</li><li>DSS: javascript 수업 내용 복습하기</li><li>DSS: 수학 &lt;9장. 확률변수&gt; 복습하기</li><li>DSS: 수학 &lt;10장. 확률변수의 상관관계&gt; 복습하기</li><li>DSS: 수학 &lt;11장. 검정과 추정&gt; 복습하기</li><li>DSS: 수학 &lt;13장&gt; 복습하기 - 34절</li><li>DSS: Kaggle 팀프로젝트</li><li>커리어서비스: 1분 자기소개 피드백 받기 (~7/3) </li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018-07-01-TIL</title>
      <link href="/2018/07/01/2018-07-01-TIL/"/>
      <url>/2018/07/01/2018-07-01-TIL/</url>
      
        <content type="html"><![CDATA[<h4 id="공부한-것-amp-리뷰"><a href="#공부한-것-amp-리뷰" class="headerlink" title="공부한 것 &amp; 리뷰"></a>공부한 것 &amp; 리뷰</h4><ul><li>DSS: 34절. 선형회귀분석의 기초<br>다시 보니 정리가 되는 것 같다 굳굳</li><li>벌써 2018년 하반기가 시작. DSS도 이제 반정도 남았는데 더 힘내서 과정도 잘 마치고 커리어 전환까지 성공해야지! </li></ul><h4 id="내일-공부할-것"><a href="#내일-공부할-것" class="headerlink" title="내일 공부할 것"></a>내일 공부할 것</h4><ul><li>DSS: 인성 면접 특강</li><li>Zillow 팀프로젝트</li></ul><h4 id="이번-주에-공부할-것"><a href="#이번-주에-공부할-것" class="headerlink" title="이번 주에 공부할 것"></a>이번 주에 공부할 것</h4><ul><li>DSS: CSS selector 수업 내용 복습하기</li><li>DSS: javascript 수업 내용 복습하기</li><li>DSS: 수학 &lt;9장. 확률변수&gt; 복습하기</li><li>DSS: 수학 &lt;10장. 확률변수의 상관관계&gt; 복습하기</li><li>DSS: 수학 &lt;11장. 검정과 추정&gt; 복습하기</li><li>DSS: 수학 &lt;13장&gt; 복습하기 - 34절</li><li>DSS: Kaggle 팀프로젝트: EDA정리하고 분석 방법 계획을 세울 것</li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python 00. Python에 대하여</title>
      <link href="/2018/07/01/python_00/"/>
      <url>/2018/07/01/python_00/</url>
      
        <content type="html"><![CDATA[<h2 id="1-Python이란"><a href="#1-Python이란" class="headerlink" title="1. Python이란?"></a>1. Python이란?</h2><ul><li>1991년 귀도 반 로섬 (Guido Van Rossum)이 발표</li><li>interpreted high-level programming language<ul><li>고급언어일수록 사람과 친화적</li></ul></li><li>플랫폼 독립적 언어</li><li>인터프리터 언어</li><li>객체 지향 언어</li><li>동적 타이핑 언어</li><li>처음엔 C언어로 구현되었음</li><li>파이썬의 종류<ul><li>Cpython: C로 만들어진 파이썬. 우리가 말하는 일반적인 파이썬</li><li>Jython: Java로 만들어진 파이썬</li><li>IronPython: C#으로 만들어진 파이썬</li><li>Pypy: Python으로 만들어진 파이썬. Cpython보다 빠르게 수행되는 것을 목표로 함 (<a href="http://pypy.org/" target="_blank" rel="noopener">http://pypy.org/</a>)</li></ul></li></ul><a id="more"></a> <h3 id="1-1-플랫폼-독립적-언어"><a href="#1-1-플랫폼-독립적-언어" class="headerlink" title="1.1 플랫폼 독립적 언어"></a>1.1 플랫폼 독립적 언어</h3><ul><li>‘플랫폼’ = OS<ul><li>윈도우, 리눅스, 안드로이드, 맥OS, iOS 등 프로그램이 실행되는 운영 체제를 플랫폼이라고 함</li></ul></li><li>‘독립적’<ul><li>OS에 상관없이 한번 프로그램을 작성하면 어디서든 사용 가능</li></ul></li></ul><h3 id="1-2-인터프리터-언어"><a href="#1-2-인터프리터-언어" class="headerlink" title="1.2 인터프리터 언어"></a>1.2 인터프리터 언어</h3><ul><li>컴퓨터 프로그래밍 언어는 크게 컴파일러 방식과 인터프리터 방식 두 가지로 나누어짐</li><li>컴파일러 언어: 모든 코드를 컴파일링 후에 컴퓨터에서 처리 -&gt; 처리속도가 빠르지만 프로그램 실행을 위해 컴파일링 시간을 기다려야 함</li><li>인터프리터 언어 = 통역기를 사용하는 언어<ul><li>소스코드를 바로 실행할 수 있게 지원하는 프로그램 실행 방법</li><li>한 줄 씩 컴파일링 하면서 코드를 수행</li><li>처리속도가 느리지만 컴파일링 시간 없이 바로바로 프로그램이 실행됨</li></ul></li><li>최근에는 컴퓨팅 파워가 발전하면서 작성이 간단한 인터프리터 언어가 발전<ul><li>코드를 (컴퓨터 자원을 효율적으로 쓸 수 있도록) 잘 만들면 컴퓨터가 효율적으로 일할 수 있다!</li></ul></li></ul><table><thead><tr><th></th><th>컴파일러 언어</th><th>인터프리터 언어</th></tr></thead><tbody><tr><td>작동방식</td><td>소스코드를 기계어로 먼저 번역 <br> 해당 플랫폼에 최적화되어 프로그램을 실행</td><td>별도의 번역과정 없이 소스코드를 실행시점에 <br> 해석하여 컴퓨터가 처리할 수 있도록 함</td></tr><tr><td>장점 &amp; 단점</td><td>실행속도가 빠름 <br> 한번에 많은 기억장소 필요</td><td>간단히 작성, 메모리가 적게 필요<br> 실행속도가 느림</td></tr><tr><td>주요 언어</td><td>C, 자바, C++, C#</td><td>파이썬, 자바스크립트, 스칼라</td></tr></tbody></table><h3 id="1-3-객체-지향적-언어"><a href="#1-3-객체-지향적-언어" class="headerlink" title="1.3 객체 지향적 언어"></a>1.3 객체 지향적 언어</h3><ul><li>실행 순서가 아닌 단위 모듈(객체) 중심으로 프로그램을 작성</li><li>실제 세계를 모델링, 공통적인 기능을 묶어서 개발하는 방식으로, 추상화/캡슐화/상속/다형성의 특징을 가짐</li><li>하나의 객체는 어떤 목적을 달성하기 위한 행동(method)와 속성(attribute)을 가지고 있음</li><li>반대 개념은 절차지향</li></ul><h3 id="1-4-동적-타이핑-언어"><a href="#1-4-동적-타이핑-언어" class="headerlink" title="1.4 동적 타이핑 언어"></a>1.4 동적 타이핑 언어</h3><ul><li>인터프리터 언어의 특징 중 하나</li><li>실행하는 시점에 프로그램이 사용해야 할 데이터에 대한 타입을 결정함</li><li>변수 선언시 데이터 타입을 지정해주지 않아도 데이터에 따라서 자동으로 타이핑</li></ul><h2 id="2-왜-python인가"><a href="#2-왜-python인가" class="headerlink" title="2. 왜 python인가?"></a>2. 왜 python인가?</h2><ul><li>쉽고 간단하며 다양한 기능을 제공</li><li><a href="https://github.com/vinta/awesome-python" target="_blank" rel="noopener">https://github.com/vinta/awesome-python</a> 파이썬으로 할 수 있는 것들</li></ul><h3 id="2-1-인간-지향적인-간단한-문법"><a href="#2-1-인간-지향적인-간단한-문법" class="headerlink" title="2.1 인간 지향적인 간단한 문법"></a>2.1 인간 지향적인 간단한 문법</h3><ul><li>얼마나 간단한가?</li><li><p>화면에 “Hello World!”를 찍기 위한 코드를 다른 언어와 비교해보자</p><ul><li><p>먼저 자바의 경우 다음과 같이 써야 한다(고 한다.)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HelloWorldApp</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        System.out.printIn(<span class="string">"Hello World!"</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>python의 경우 훨씬 간단하다</li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">"Hello World!"</span>)</span><br></pre></td></tr></table></figure></li><li><p>화면에 1부터 10까지 순서대로 출력하는 코드도 비교해보자</p><ul><li><p>먼저 자바의 경우 다음과 같이 써야 한다(고 한다.)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (i=<span class="number">1</span>; i&lt; <span class="number">11</span>; i++&#123;</span><br><span class="line">    System.out.printIn (i)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>python의 경우 훨씬 간단하다</li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">11</span>):</span><br><span class="line">    print(i)</span><br></pre></td></tr></table></figure></li></ul><h3 id="2-2-다양한-라이브러리와-넓은-활용-범위"><a href="#2-2-다양한-라이브러리와-넓은-활용-범위" class="headerlink" title="2.2 다양한 라이브러리와 넓은 활용 범위"></a>2.2 다양한 라이브러리와 넓은 활용 범위</h3><ul><li>파이썬 라이브러리의 편리함을 보여주는 재미있는 meme을 하나 보자<br><img src="https://img-9gag-fun.9cache.com/photo/a6L3Dwq_700bwp.webp" alt></li><li>파이썬은 다양한 라이브러리가 이미 다른 사용자에 의해 구현되어 있음<ul><li><em>특히 통계와 데이터분석 분야의 라이브러리가 강력</em></li></ul></li></ul><h3 id="2-3-가장-대중화된-언어"><a href="#2-3-가장-대중화된-언어" class="headerlink" title="2.3 가장 대중화된 언어"></a>2.3 가장 대중화된 언어</h3><ul><li>파이썬은 최근 가장 널리 쓰이고 있는 언어 중 하나로, 강한 커뮤니티가 구축되어 있음</li></ul><h2 id="한-줄-요약-“Life-is-short-You-need-Python-”"><a href="#한-줄-요약-“Life-is-short-You-need-Python-”" class="headerlink" title="한 줄 요약: “Life is short. You need Python!”"></a>한 줄 요약: “Life is short. You need Python!”</h2><h4 id="참고자료"><a href="#참고자료" class="headerlink" title="참고자료"></a>참고자료</h4><ul><li>인프런, ⟪프로그래밍, 데이터 과학을 위한 파이썬 입문⟫ 수업 자료</li></ul>]]></content>
      
      
      <categories>
          
          <category> DataScience </category>
          
          <category> Python 파이썬 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 파이썬 </tag>
            
            <tag> programming </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018-06-30-TIL</title>
      <link href="/2018/06/30/2018-06-30-TIL/"/>
      <url>/2018/06/30/2018-06-30-TIL/</url>
      
        <content type="html"><![CDATA[<h4 id="공부한-것-amp-리뷰"><a href="#공부한-것-amp-리뷰" class="headerlink" title="공부한 것 &amp; 리뷰"></a>공부한 것 &amp; 리뷰</h4><ul><li>수업: 회귀분석, 분산분석<ul><li>카테고리 IV 처리방법</li><li>statsmodels의 from_formula method를 사용하면 R이나 stata처럼 DV, IV 변수명만 사용해 분석을 돌릴 수 있군! 익숙하면서 편리한 방법</li><li>고등학교부터 석사 과정까지 계속 반복해서 배웠지만 끊임없이 헷갈렸던 통계가 이제는 좀 정리가 되는 느낌! </li></ul></li><li>Kaggle zillow 회귀분석 프로젝트<ul><li>EDA 어느 정도 마무리. 통계분석 수업을 복습한 후 이제 feature engineering과 회귀분석으로 들어가야겠다</li></ul></li></ul><h4 id="내일-공부할-것"><a href="#내일-공부할-것" class="headerlink" title="내일 공부할 것"></a>내일 공부할 것</h4><ul><li>CSS Selector 복습, 가능하면 javascript 복습</li><li>수학 복습 많이 많이!!!!</li><li>python folium의 기능을 좀 더 파악하면서 zillow 프로젝트 위도 경도 data exploring</li></ul><h4 id="이번-주에-공부할-것"><a href="#이번-주에-공부할-것" class="headerlink" title="이번 주에 공부할 것"></a>이번 주에 공부할 것</h4><ul><li><del>DSS: github 블로그 setup하기</del></li><li><del>DSS: html 수업 내용 복습하기</del></li><li>DSS: CSS selector 수업 내용 복습하기</li><li>DSS: javascript 수업 내용 복습하기</li><li>DSS: 수학 &lt;9장. 확률변수&gt; 복습하기</li><li>DSS: 수학 &lt;10장. 확률변수의 상관관계&gt; 복습하기</li><li>DSS: 수학 &lt;11장. 검정과 추정&gt; 복습하기</li><li><del>DSS: 수학 &lt;12장. StatsModels로 공부하는 회귀분석&gt; 복습하기</del></li><li>DSS: 수학 &lt;13장&gt; 복습하기</li><li>DSS: Kaggle 팀프로젝트: EDA정리하고 분석 방법 계획을 세울 것</li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018-06-29 TIL</title>
      <link href="/2018/06/29/2018-06-29-TIL/"/>
      <url>/2018/06/29/2018-06-29-TIL/</url>
      
        <content type="html"><![CDATA[<h4 id="공부한-것-amp-리뷰"><a href="#공부한-것-amp-리뷰" class="headerlink" title="공부한 것 &amp; 리뷰"></a>공부한 것 &amp; 리뷰</h4><ul><li>수업: Flask<ul><li>web쪽을 엄청난 속도로 나가고 있어 어지럽다ㅋㅋ</li><li>이 모든 것들을 복습할 시간이 필요하다!!     </li></ul></li><li>Kaggle zillow 회귀분석 프로젝트<ul><li>folium 패키지를 이용해 집의 위치를 지도로 찍어보는 시도 중</li><li>계속 EDA를하고 있다</li><li>data visualization을 원하는대로 구현하기가 어렵다</li></ul></li><li>왜 벌써 금요일 밤이지?!!! 하루가 너무 짧아. 일주일도 너무 짧아.</li></ul><h4 id="내일-공부할-것"><a href="#내일-공부할-것" class="headerlink" title="내일 공부할 것"></a>내일 공부할 것</h4><ul><li>수업: &lt;36절. 예측성능의 진단과 비교&gt;를 나갈 듯</li><li>팀원들의 EDA 결과를 하나로 통합하기</li><li>수학 복습 많이 많이!!!!</li></ul><h4 id="이번-주에-공부할-것"><a href="#이번-주에-공부할-것" class="headerlink" title="이번 주에 공부할 것"></a>이번 주에 공부할 것</h4><ul><li><del>DSS: github 블로그 setup하기</del></li><li><del>DSS: html 수업 내용 복습하기</del></li><li>DSS: CSS selector 수업 내용 복습하기</li><li>DSS: javascript 수업 내용 복습하기</li><li>DSS: 수학 &lt;9장. 확률변수&gt; 복습하기</li><li>DSS: 수학 &lt;10장. 확률변수의 상관관계&gt; 복습하기</li><li>DSS: 수학 &lt;11장. 검정과 추정&gt; 복습하기</li><li><del>DSS: 수학 &lt;12장. StatsModels로 공부하는 회귀분석&gt; 복습하기</del></li><li>DSS: 수학 &lt;13장&gt; 복습하기</li><li>DSS: Kaggle 팀프로젝트: EDA정리하고 분석 방법 계획을 세울 것</li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018-06-28 TIL</title>
      <link href="/2018/06/28/2018-06-28-TIL/"/>
      <url>/2018/06/28/2018-06-28-TIL/</url>
      
        <content type="html"><![CDATA[<h4 id="공부한-것-amp-리뷰"><a href="#공부한-것-amp-리뷰" class="headerlink" title="공부한 것 &amp; 리뷰"></a>공부한 것 &amp; 리뷰</h4><ul><li>html 수업 복습<ul><li>html과 css selector 복습을 제대로 하지 못해서 웹크롤링하는데 어려운 부분이 있었는데 드디어 미루던 html 수업 내용 복습을 했다. 속이 시원하다. css selector도 빨리 복습을 해야 한다.</li></ul></li><li>오늘의 수업: AWS<ul><li>새로운 내용이라 설치와 설정 과정을 따라가느라 정신없었다. 폭풍이 지나간듯하다ㅋㅋ</li><li>jupyter notebook을 서버에 띄워 사용할 수 있게 되었다!</li></ul></li><li>Kaggle zillow 회귀분석 프로젝트<ul><li>새벽까지 kaggle 팀프로젝트 EDA를 더 보다 자야할 것 같다. </li><li>집의 위도 경도를 이용한 EDA 마무리하는 것이 목표</li></ul></li><li>갈수록 학원 수업 복습에 허덕이고 있지만 드디어 생각만 하고 있던 github 블로그도 세팅했고,이번 주는 왠지 마음만은 의욕이 충전되는 느낌의 한 주랄까. 일단 복습을 빠르게 하고 싶다!!!</li></ul><h4 id="내일-공부할-것"><a href="#내일-공부할-것" class="headerlink" title="내일 공부할 것"></a>내일 공부할 것</h4><ul><li>AWS 수업이 내일도 이어짐</li><li>팀원들의 EDA 결과를 하나로 통합하기</li><li>수학 복습 많이 많이!!!!</li></ul><h4 id="이번-주에-공부할-것"><a href="#이번-주에-공부할-것" class="headerlink" title="이번 주에 공부할 것"></a>이번 주에 공부할 것</h4><ul><li><del>DSS: github 블로그 setup하기</del></li><li><del>DSS: html 수업 내용 복습하기</del></li><li>DSS: CSS selector 수업 내용 복습하기</li><li>DSS: javascript 수업 내용 복습하기</li><li>DSS: 수학 &lt;9장. 확률변수&gt; 복습하기</li><li>DSS: 수학 &lt;10장. 확률변수의 상관관계&gt; 복습하기</li><li>DSS: 수학 &lt;11장. 검정과 추정&gt; 복습하기</li><li>DSS: 수학 &lt;12장. StatsModels로 공부하는 회귀분석 복습</li><li>DSS: Kaggle 팀프로젝트: EDA정리하고 분석 방법 계획을 세울 것</li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018-06-27 TIL(Today I learned) 시작</title>
      <link href="/2018/06/28/2018-06-27-TIL/"/>
      <url>/2018/06/28/2018-06-27-TIL/</url>
      
        <content type="html"><![CDATA[<p>그날 그날 공부 내용과 느낀 점을 이제부터 블로그에 정리해보려고 한다.<br>미루지 않고 꾸준히 하는 것이 목표!</p>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
          <category> TIL(Today I Learned) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL(Today I Learned) </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
